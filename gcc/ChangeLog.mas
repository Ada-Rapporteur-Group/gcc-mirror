2014-12-15  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (capture::name): New.
	(capture::capture): New default argument.
	(parse_capture): Pass id to capture::capture.
	(print_operand): Print name of capture if available.

2014-12-08  Richard Biener  <rguenther@suse.de>

	Merge from trunk  r218262 through r218477.

2014-12-02  Richard Biener  <rguenther@suse.de>

	* match-builtin.pd: Use operator lists directly where
	appropriate.

2014-12-02  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217561 through r218261.

2014-11-14  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217546 through r217560.

	Brings back next merge piece.

2014-11-14  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217497 through r217545.

	Brings back next merge piece.

2014-11-13  Richard Biener  <rguenther@suse.de>

	* match.pd: Implement more binary patterns exercised by
	fold_stmt.
	* fold-const.c (sing_bit_p): Export.
	(exact_inverse): Likewise.
	(fold_binary_loc): Remove patterns here.
	(tree_unary_nonnegative_warnv_p): Use CASE_CONVERT.
	* fold-const.h (sing_bit_p): Declare.
	(exact_inverse): Likewise.
	* genmatch.c (add_operator): Allow CONSTRUCTOR.
	(dt_node::gen_kids): Handle CONSTRUCTOR not as GENERIC.
	(parser::parse_op): Allow to iterate over predicates.

2014-11-13  Richard Biener  <rguenther@suse.de>

	* match.pd: Remove redundant pattern.  Inline remaining
	stuff from match-rotate.pd and match-conversions.pd.
	* match-rotate.pd: Remove.
	* match-conversions.pd: Likewise.

2014-11-13  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217417 through r217496.

	Brings back next merge piece.

2014-11-12  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217261 through r217416.

	Brings back next merge piece.

	* match-plusminus.pd: Remove.

2014-11-10  Richard Biener  <rguenther@suse.de>

	* tree-ssa-forwprop.c (simplify_conversion_from_bitmask): Remove.
	(associate_plusminus): Likewise.
	(combine_conversions): Likewise.
	(simplify_mult): Likewise.
	(pass_forwprop::execute): Adjust.
	* gimple-fold.c (fold_gimple_assign): Remove dispatches to
	fold_binary_loc and fold_ternary_loc.
	(gimple_fold_stmt_to_constant_1): Likewise.

2014-11-09  Richard Biener  <rguenther@suse.de>

	Merge from trunk r217075 through r217260.

	Brings back next merge piece.

2014-11-04  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (user_id): Add new member is_oper_list.
	(user_id::user_id): Add new default argument.
	(parser::parse_operator_list): New function.
	(parser::parse_for): Allow operator-list.
	(parser::parse_pattern): Call parser::parse_operator_list.
	(parser::parse_operation): Reject operator-list.
	* match-builtin.pd: Define operator lists POWs, CBRTs and SQRTs.

2014-11-04  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216941 through r217074.

	Brings back next merge piece.

2014-10-31  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parser::parse_c_expr): Mark user-defined ops as used.

2014-10-31  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216800 through r215940.

	Brings back next merge piece.

2014-10-30  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parser::parse_op): Check if predicate is used in
	result operand.

2014-10-29  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parser::parse_for): Make sure to have a valid
	token to report errors at.

2014-10-29  Richard Biener  <rguenther@suse.de>

	* tree-ssa-sccvn.c (try_to_simplify): Allow
	gimple_fold_stmt_to_constant_1 to follow SSA use-def chains.
	(visit_use): Likewise.

2014-10-28  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216772 through r216799.

	Brings back next merge piece.

2014-10-28  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parser): Add new member parsing_match_operand.
	(parser::parse_operation): Check for conditional convert in result
	operand.
	(parser::parse_expr): Check for commutative operator in result operand.
	Check for :type in match operand.
	(parser::parse_simplify): Set/unset parsing_match_operand.
	(parser::parser): Initialize parsing_match_operand.

2014-10-28  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parser::parse_for): Properly check for already
	defined operators.

2014-10-28  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (error_cb): Adjust for printing warnings.
	(warning_at): New function.
	(user_id): Add new member used.
	(get_operator): Mark user_id as used.
	(parse_for): Warn for unused operators.

2014-10-28  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216632 through r216771.

	Brings back third merge piece.

2014-10-24  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216543 through r216631.

	Brings back second merge piece.

2014-10-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (capture_info::capture_info): Initialize
	force_no_side_effects.

2014-10-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (capture_info): New class.
	(capture_info::capture_info): New constructor.
	(capture_info::walk_match): New method.
	(capture_info::walk_result): New method.
	(capture_info::walk_c_expr): New method.
	(dt_simplify::gen): Handle preserving side-effects for
	GENERIC code generation.
	(decision_tree::gen_generic): Do not reject operands
	with TREE_SIDE_EFFECTS.

2014-10-22  Richard Biener  <rguenther@suse.de>

	* generic-match.h: New file.
	* generic-match-head.c: Include generic-match.h, not gimple-match.h.
	* fold-const.c: Include generic-match.h.
	(fold_unary_loc): Remove local prototype of generic_simplify.
	(fold_binary_loc): Likewise.
	(fold_ternary_loc): Likewise.

2014-10-22  Richard Biener  <rguenther@suse.de>

	* fold-const.c (fold_unary_loc): Adjust for generic_simplify
	prototype change.
	(fold_binary_loc): Likewise.
	(fold_ternary_loc): Likewise.
	(fold_binary_loc): Remove patterns implemented by
	match-constant-folding.pd.
	* match.pd: Fold in match-constant-folding.pd and adjust
	it for the non_lvalue changes and make it match fold-const.c
	* match-constant-folding.pd: Remove.
	more closely.
	* genmatch.c (expr::gen_transform): Use fold_buildN_loc
	and build_call_expr_loc.
	(dt_simplify::gen): Drop non_lvalue for GIMPLE, use
	non_lvalue_loc to build it for GENERIC.
	(decision_tree::gen_generic): Add location argument to
	generic_simplify prototype.

2014-10-22  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216394 through r216542.

	Brings back infrastructure merge.

2014-10-21  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (replace_stmt_with_simplification): New helper
	split out from ...
	(fold_stmt_1): ... here.  Discard the simplified sequence if
	replacement failed.

2014-10-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (main): Change -gimple and -generic to
	--gimple and --generic.
	* Makefile.in (s-match): Adjust.

2014-10-20  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_convert): Move out-of-line from ...
	* gimple-fold.h (gimple_convert): ... here.

2014-10-17  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216316 through r216394.

2014-10-17  Richard Biener  <rguenther@suse.de>

	* genmatch.c (simplify::simplify): Fix off-by-one error.

2014-10-16  Richard Biener  <rguenther@suse.de>

	* fold-const.c (fold_comparison): Remove redundant constant
	folding and operand swapping.
	(fold_binary_loc): Do comparison operand swapping here,
	dispatch to generic_simplify after operand canonicalization.
	(fold_ternary_loc): Canonicalize operand order for
	commutative ternary operations.
	* tree.c (commutative_ternary_tree_code): Add DOT_PROD_EXPR
	and FMA_EXPR.

2014-10-16  Richard Biener  <rguenther@suse.de>

	Merge from trunk r216235 through r216315.

2014-10-16  Richard Biener  <rguenther@suse.de>

	* tree-ssa-forwprop.c (fwprop_ssa_val): Adjust comment.

2014-10-15  Richard Biener  <rguenther@suse.de>

	* fold-const.h (negate_expr_p): Revert exporting this.
	* fold-const.c (negate_expr_p): Likewise.

2014-10-15  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c: Remove trailing whitespace.
	* genmatch.c: Likewise.

2014-10-15  Richard Biener  <rguenther@suse.de>

	Merge from trunk r214675 through r216234.

	* hash-table.h: Do not include ggc.h on the host but just declare
	a few ggc allocation templates.
	* tree-ssa-pre.c (create_component_ref_by_pieces_1): Set
	VUSE on built call stmts.

2014-10-14  Richard Biener  <rguenther@suse.de>

	* gimple-fold.h (no_follow_ssa_edges): Declare.
	(gimple_fold_stmt_to_constant_1): Add separate valueize hook for
	gimple_simplify, defaulted to no_follow_ssa_edges.
	* gimple-fold.c (fold_stmt): Make old API never follow SSA edges
	when simplifying.
	(no_follow_ssa_edges): New function.
	(gimple_fold_stmt_to_constant_1): Adjust.
	* tree-cfg.c (no_follow_ssa_edges): Remove.
	(replace_uses_by): Use plain fold_stmt again.
	* gimple-match-head.c (gimple_simplify): When simplifying
	a statement do not stop when valueizing its operands yields NULL.

2014-10-14  Richard Biener  <rguenther@suse.de>

	* Makefile.in (BUILD_RTL): Revert not needed change.
	* match.pd (integral_op_p): Remove predicate and use.
	* generic-match-head.c: Include gimple-match.h and remove
	all code.
	* gimple-match-head.c (integral_op_p): Remove.

2014-10-14  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_operand::gen_gimple_expr): Check for an
	invariant operand before valueizing it.

2014-10-14  Richard Biener  <rguenther@suse.de>

	* genmatch.c: Whitespace and comment fixes, some minor
	refactoring.

2014-10-14  Richard Biener  <rguenther@suse.de>

	* doc/match-and-simplify.texi: Update.

2014-10-07  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parser::parse_pattern): Change match parsing
	to expect the matching template first, not as result.
	(parser::parse_simplify): Likewise.
	* match-bitwise.pd: Adjust.

2014-09-26  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_node::gen_kids): Handle conversions in
	generic expressions properly.
	* match-bitwise.pd ((type) X & CST -> (type) (X & ((type-x) CST))):
	Disable on GENERIC as it conflicts with a transform in fold-const.c.

	cp/
	* typeck.c (enum_cast_to_int): Use CONVERT_EXPR_P to check
	for conversions.

2014-09-26  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct dt_node): Merge gen_gimple and gen_generic
	into gen, merge gen_gimple_kids and gen_generic_kids into
	gen_kids.
	(struct dt_operand): Likewise.

2014-09-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct c_expr): Also record capture identifier
	to index map.
	(c_expr::gen_transform): Use it.

2014-09-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c: Include <map>, <utility> and <string>.
	Allow identifiers for captures, assign capture indexes
	dynamically.

2014-09-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c: Keep track of the maximum capture index used
	and get rid of the static constant dt_simplify::capture_max.

2014-09-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c: Put all AST parsing into a class parser
	simplifying state management.  Keep a vector of user
	predicates in order of definition.

2014-09-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c: TLC.

2014-09-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (c_expr::output_code): Remove and inline into ...
	(c_expr::gen_transform): ... here.
	(outline_c_exprs): Remove.
	(main): Do not call outline_c_exprs.

2014-09-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct id_base): Move nargs member here.
	(check_operator): Remove.
	(check_no_user_id): Likewise.
	(parse_operation): Fix error locations, handle convert0/2
	properly.
	(parse_expr): Error on non-matching arity.
	(parse_for): Compute arity of user-ids and complain for
	inconsistent substitutions.

2014-09-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (id_base): Derive from typed_noop_remove.
	(struct user_id): New id_base derivative.
	(struct simplify): Add vector of fors.
	(lower_commutative): Adjust.
	(lower_opt_convert): Likewise.
	(replace_id): Work with user_id / id_base pairs.
	(lower_for): New function, split out from ...
	(parse_for): ... here.  Maintain a stack of active fors,
	record substitutes in user_id.
	(<everywhere>): Adjust for simplify constructor change and
	maintaining of the stack of active fors.
	* match-bitwise.pd: Enable truth_valued_p for comparison
	codes using for.

2014-09-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct e_operation): Remove.
	(struct expr): Replace e_operation operation with id_base.  Add
	is_commutative member.
	(<everywhere>): Remove indirections through e_operation, move
	is_commutative handling to expr objects.
	(parse_for): Temporarily insert user-defined operators into the
	operator identifier hash.

2014-09-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (error_cb): Implement simple caret diagnostics.

2014-09-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_if): Maintain a vector of active ifs and
	pass it down.
	(dt_simplify::gen): Adjust.
	(copy_reverse): Remove.
	(parse_simplify): Adjust.
	(parse_for): Likewise.
	(parse_pattern): Likewise.
	(main): Likewise.

2014-09-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct predicate_id): Add nargs member.
	(struct simplify): Remove name member.
	(lower_commutative): Adjust.
	(lower_opt_convert): Likewise.
	(dt_node::gen_gimple_kids): Generate code for predicate
	expressions.
	(dt_node::gen_generic_kids): Likewise.
	(dt_simplify::gen): Likewise.
	(write_predicate_prototype): New function.
	(write_predicate): Adjust.
	(parse_simplify): Be less forgiving about errors, handle
	predicate expression definitions.
	(parse_pattern): Adjust.
	(main): Output prototypes for all predicates first.
	* match-bitwise.pd (X & !X -> 0, X | !X and X ^ !X -> 1):
	Implement using predicate expressions, more closely matching
	code in tree-ssa-forwprop.c.

2014-09-23  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_resimplify2): Also swap
	comparison operands.
	(gimple_simplify): Likewise.

2014-09-16  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct predicate_id): Add matchers member.
	(add_predicate): Return added predicate.
	(dt_node::gen_gimple_kids, dt_node::gen_generic_kids): Relocate
	from ...
	(dt_operand::gen_gimple_kids, dt_node::gen_generic_kids): ... here.
	(check_no_user_id): Guard against NULL result.
	(dt_operand::get_name): Handle NULL parent.
	(dt_operand::gen_opname): Likewise.
	(dt_operand::gen_predicate): Mangle user-defined predicates.
	(dt_operand::gen_generic): Adjust.
	(dt_operand::gen_gimple): Likewise.
	(dt_simplify::gen): Guard against NULL result.
	(write_predicate): New function.
	(write_header): Only write header, not split out c-exprs.
	(parse_simplify): Move identifier handling out, handle
	"empty" result.
	(parse_pattern): Parse (match <id> ...).  Drop optional
	identifier from (simplify...).
	(lower): New function, split out from ...
	(main): ... here.  Generate code for all user-defined
	predicates.
	* match.pd (negate_expr_p): Implement as predicate.
	* match-comparison.pd: Use negate_expr_p predicate.

2014-09-16  Richard Biener  <rguenther@suse.de>

	* genmatch.c (id_base::id_kind): Add PREDICATE.
	(struct predicate_id): New id_base variant.
	(is_a_helper): Add predicate_id support.
	(add_predicate): New function.
	(struct predicate): Adjust.
	(print_operand): Likewise.
	(cmp_operand): Likewise.
	(dt_operand::gen_predicate): Likewise.
	(parse_op): Likewise.  Error out on unknown predicates.
	(parse_predicates): New function.
	(parse_pattern): Call it.
	* match.pd: Define used predicates.

2014-09-16  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (operand::gen_transform): Add dt_operand ** default
	argument to operand heirarchy.
	(expr::gen_transform): Adjust.
	(capture::gen_transform): Likewise.
	(dt_simplify::gen): Likewise.
	* match-builtins.pd: Adjust pattern to use expression captures in
	transform.

2014-09-16  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (dt_node::level_max): Remove.

2014-09-16  Richard Biener  <rguenther@suse.de>

	* genmatch.c (operator_id): Add tcc member.
	(get_operand_type): New function, split out from ...
	(expr::gen_transform): ... here.  Treat comparisons
	properly.
	(dt_simplify::gen): Use get_operand_type.

2014-09-15  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c: Include tree-eh.c.
	(fold_stmt_1): Handle GIMPLE_CONDs for gimple_simplify.
	* gimple-match-head.c (gimple_simplify): Likewise.
	* match-comparison.pd (bool != 0): Avoid some churn on
	GIMPLE and amend comment.

2014-09-12  Richard Biener  <rguenther@suse.de>

	* match-constant-folding.pd (x & ~0 -> x): Move ...
	* match-bitwise.pd: ... here.  Implement simplify_not_neg_expr.
	* match-plusminus.pd: Likewise.  Implement simplify_mult.

2014-09-12  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_transform): Properly autocompute
	type of REALPART_EXPR and IMAGPART_EXPR.

2014-09-12  Richard Biener  <rguenther@suse.de>

	* match-bitwise.pd: Complete tree-ssa-forwprop.c patterns
	from simplify_bitwise_binary.  Implement some from fold_binary.
	* match-constant-folding.pd: Add some comments.
	* match-plusminus.pd (~A + 1 -> -A): Fix COMPLEX_TYPE handling.

2014-09-11  Richard Biener  <rguenther@suse.de>

	* match-plusminus.pd: Fix typo.
	* match-conversions.pd: Add pattern for
	simplify_conversion_from_bitmask.

2014-09-11  Richard Biener  <rguenther@suse.de>

	* match-plusminus.pd: More closely match tree-ssa-forwprop.c code.

2014-09-11  Richard Biener  <rguenther@suse.de>

	* match-plusminus.pd: Complete associate_plusminus patterns.
	Properly guard all patterns.  Add associate_pointerplus_align
	pattern.

2014-09-11  Richard Biener  <rguenther@suse.de>

	PR middle-end/41043
	* match-conversions.pd ((T1)(X * Y) -> (T1)X * (T1)Y): Restrict
	to a single or single-use SSA names.
	* gimple-match-head.c: Include tree-phinodes.h and ssa-iterators.h.
	* generic-match-head.c: Likewise.

2014-09-11  Richard Biener  <rguenther@suse.de>

	* genmatch.c (output_line_directive): Add variant for dump files.
	(dt_simplify::gen): Write to dump file with TDF_DETAILS what
	patterns get applied.
	* gimple-match-head: Include dumpfile.h.
	* generic-match-head: Likewise.

2014-09-10  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_for): Allow more flexible replacement counts.
	* match-builtins.pd: Fix initial patterns and complete them
	from the source functions.  Properly handle all builtin variants.

2014-09-10  Richard Biener  <rguenther@suse.de>

	* match-conversions.pd: Fix unsigned type used for
	shortened multiplication.

2014-09-09  Richard Biener  <rguenther@suse.de>

	* genmatch.c (struct expr): Add expr_type member.
	(expr::gen_transform): Honor explicitely specified type.
	(parse_expr): Parse ':<ident>' on the operator as identifier
	specifying the type to use when building the expression.
	* match-conversions.pd ((T1)(X * Y) -> (T1)X * (T1)Y):
	Complete.

2014-09-08  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_for): Supply location for errors, remove
	debug printf.
	* match-builtin.pd (pow transforms): Provide an example
	of multi-id for.

2014-09-08  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (peek_ident): Change id to default argument with value 0.
	(parse_for): Adjust syntax.
	* match-builtin.pd: Rewrite for-patterns to match new syntax.
	* match-comparison.pd: Likewise.
	* match-constant-folding.pd: Likewise.
	* match-conversions.pd: Likewise.
	* match-rotate.pd: Likewise.

2014-09-03  Richard Biener  <rguenther@suse.de>

	* match-conversions.pd
	((view_convert (convert @0)) -> (view_convert @0)): Restrict to
	conversions that do not change size.

2014-09-02  Richard Biener  <rguenther@suse.de>

	* fold-const.h (negate_expr_p): Declare.
	* fold-const.c (negate_expr_p): Export.
	* match-comparison.pd: Implement more comparison patterns.

2014-09-02  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (maybe_build_generic_op): New function.
	(maybe_push_res_to_seq): Use it.
	* gimple-match.h (maybe_build_generic_op): Declare.
	* gimple-fold.c (fold_stmt_1): Use maybe_build_generic_op.

2014-09-02  Richard Biener  <rguenther@suse.de>

	* match-conversions.pd: Add more patterns.

2014-08-28  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (fold_stmt_1): Move gimple_simplify dispatch
	first, add dumping here.
	* tree-ssa-forwprop.c (pass_forwprop::execute): Remove dumping.
	* match-builtin.pd: Implement more patterns and fix existing ones.

	testsuite/
	* gcc.dg/tree-ssa/match-1.c: Split into ...
	* gcc.dg/tree-ssa/match-builtins.c: ... this ...
	* tree-ssa/match-builtins-fast-math.c: ... and this.

2014-08-28  Richard Biener  <rguenther@suse.de>

	* tree-cfg.c (verify_gimple_assign_unary): Do not allow
	NON_LVALUE_EXPR in gimple.
	* genmatch.c (main): Always define GENERIC and GIMPLE.
	* match-constant-folding.pd (x OP 0): Constrain when we
	generate NON_LVALUE_EXPR further.

2014-08-28  Richard Biener  <rguenther@suse.de>

	Merge from trunk r214266 through r214675.

2014-08-28  Richard Biener  <rguenther@suse.de>

	* match-constant-folding.pd (x + 0 -> x): Wrap result in
	a NON_LVALUE_EXPR to account for the C++ frontend folding
	too early, avoding some spurious testsuite FAILs.
	* match-conversions.pd: Use convert where that's unconditionally
	required.

2014-08-27  Richard Biener  <rguenther@suse.de>

	* genmatch.c (is_conversion): New helper, add VIEW_CONVERT_EXPR
	to the list of conversions.
	(expr::gen_transform): Use it.
	(dt_simplify::gen): Properly pass down NULL as the operand
	type for outermost conversions.

2014-08-27  Richard Biener  <rguenther@suse.de>

	* genmatch.c (peek): Fail at unexpected EOF.
	(main): Do not peek at the next token as we do expect
	EOF at some point.

2014-08-27  Richard Biener  <rguenther@suse.de>

	* fold-const.c (fold_binary_loc): Move dispatch to
	generic_simplfy after folding of operations on two constants.

2014-08-26  Richard Biener  <rguenther@suse.de>

	* Makefile.in (gimple-match.o-warn): Add -Wno-unused-variable.
	(generic-match.o-warn): Likewise.
	* genmatch.c (struct if_or_with): New.
	(struct simplify): Change ifexpr vector to a vector of
	if_or_with.
	(dt_simplify::gen): Adjust.
	(parse_simplify): Parse (with {} op).
	* match.pd ((T1)(~(T2)X) into ~(T1)X): Move to...
	* match-conversions.pd: ...this new file.  Implement basic
	conversion simplification.

2014-08-26  Richard Biener  <rguenther@suse.de>

	* tree-ssa-loop-ivopts.c (ivuse_cmp): New function.
	(rewrite_uses): Sort the vector of iv_uses after dominator order.

2014-08-26  Richard Biener  <rguenther@suse.de>

	* match.pd ((T1)(~(T2) X) -> ~(T1) X): Fix simplification
	again.

2014-08-21  Richard Biener  <rguenther@suse.de>

	* match.pd ((T1)(~(T2) X) -> ~(T1) X): Paste all comment
	from fold-const.c, fix simplification result.

2014-08-21  Richard Biener  <rguenther@suse.de>

	Merge from trunk r213754 through r214265.

2014-08-21  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_simplify::gen): New function merged
	from ...
	(dt_simplify::gen_gimple, dt_simplify::gen_generic): ... these,
	made to simple dispatchers.

2014-08-21  Richard Biener  <rguenther@suse.de>

	* genmatch.c (*::gen_transform): Add type parameter.
	(expr::gen_transform): Handle conversion operators by
	converting to the parent expression type.  Properly
	pass down the expression type to children.
	(dt_simplify::gen_gimple): Pass down 'type' to gen_transform.
	(dt_simplify::gen_generic): Likewise.
	* match.pd ((T1)(~(T2) X)  -> ~(T1) X): New pattern.

2014-08-21  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_operand::gen_gimple_expr): Only match
	non-reference-like GIMPLE single RHS.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (copy_reverse): New function.
	(parse_simplify): Support nested inner ifs.
	* match-comparison.pd: Use nested inner ifs.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* match-and-simplify.texi: Fix errors during pdf build.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_simplify): Change inner if parsing, allow
	multiple ifs.
	(parse_pattern): Adjust.
	* match.pd: Adjust inner ifs.
	* match-builtin.pd: Likewise.
	* match-comparison.pd: Likewise.
	* match-constant-folding.pd: Likewise.
	* match-plusminus.pd: Likewise.
	* match-rotate.pd: Likewise.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* match-comparison.pd (X * C1 CMP 0 -> X CMP 0): Fix, complete
	and simplify.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_node::get_expr_code, dt_node::is_gimple_expr,
	dt_node::is_gimple_fn): Remove.
	(dt_operand::kids_type, dt_operand::gtok_kids,
	dt_operand::gen_generic_expr_expr, dt_operand::gen_generic_expr_fn):
	Likewise.
	(dt_operand::gen_gimple_expr_expr, dt_operand::gen_gimple_expr_fn):
	Merge into ...
	(dt_operand::gen_gimple_expr): ... this new function.
	(is_a_helper): More specializations.
	(expr::gen_transform): Add missing newline.
	(dt_operand::gen_gimple_kids): Rewrite to use switch statements.
	(dt_operand::gen_generic_expr): Adjust.
	(dt_operand::gen_gimple): Likewise.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (fold_stmt_1): Use gsi_replace_with_seq_vops
	helper to insert gimple_simplify result.

2014-08-20  Richard Biener  <rguenther@suse.de>

	* match-comparison.pd (X * CST == 0 -> X == 0): Properly guard
	with TYPE_OVERFLOW_UNDEFINED.

2014-08-19  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_operand::gen_gimple): Remove excessive
	braces.
	(dt_operand::gen_generic): Likewise.

2014-08-19  Richard Biener  <rguenther@suse.de>

	* genmatch.c (decision_tree::gen_gimple): Use a switch statement
	for the outermost level.
	* gimple-match.h (code_helper::get_rep): New method.

2014-08-19  Richard Biener  <rguenther@suse.de>

	* genmatch.c (c_expr::output_code): New method.
	(c_expr::gen_transform): Call it.
	(outline_c_exprs): Likewise.

2014-08-19  Richard Biener  <rguenther@suse.de>

	* genmatch.c (is_a_helper): Provide specializations for
	fn_id and operator_id.
	(add_operator): Collect tcc_constant codes.
	(commutate): Special-case zero-operand expressions.
	(dt_node::get_expr_code): Likewise.
	(parse_op): When parsing an id allow zero-operand operators
	as predicates, parsing as expression, and disallow any other
	operator names.
	* gimple-match-head.c (INTEGER_CST_P): Remove.
	(REAL_CST_P): Likewise.
	* match-bitwise.pd: Use INTEGER_CST instead of INTEGER_CST_P
	and REAL_CST instead of REAL_CST_P.
	* match-builtin.pd: Likewise.
	* match-plusminus.pd: Likewise.
	* match-rotate.pd: Likewise.
	* match.pd: Likewise.
	* match-comparison: Likewise.

2014-08-19  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_simplify::gen_generic): Properly use the
	specified type to generate the outermost expression.

2014-08-19  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	testsuite/
	* gcc.dg/tree-ssa/match-constant-folding.c: Fix typo.

2014-08-18  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_build): Add function call overloads
	with two and three arguments.
	* gimple-fold.h (gimple_build): Likewise.

2014-08-18  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_simplify): Handle calls with
	three arguments.

2014-08-18  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match-constant-folding.c: Add new test-case.

2014-08-18  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>
	Richard Biener  <rguenther@suse.de>

	* match-comparison.pd: New file.
	* match.pd: Include match-comparison.pd.
	* genmatch.c (c_expr): Add vec<id_tab> member.
	(replace_id): Handle replacing in c_exprs.
	(c_expr::gen_transform): Handle replacing identifiers.
	(outline_c_exprs): Likewise.
	(parse_for): Replace in if-exprs.

2014-08-18  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* doc/match-and-simplify.texi: Add documentation for capturing
	expressions.  Fix typo.

2014-08-18  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	testsuite/
	* match-constant-folding.c: Add more test-cases.

2014-08-15  Richard Biener  <rguenther@suse.de>

	* gimple-match.h: New file.
	* gimple-fold.c: Include gimple-match.h.
	(fold_stmt_1): Use stmt-based gimple_simplify API.
	(gimple_fold_stmt_to_constant_1): Likewise.
	* gimple-match-head.c: Include gimple-match.h.
	(class code_helper): Move to gimple-match.h.
	(maybe_push_res_to_seq): Export.
	(gimple_simplify): Likewise.
	(gimple_simplify): New overload for functions with tree arguments.
	(gimple_simplify): Remove gsi and SSA name overloads.
	* gimple-fold.h (gimple_simplify): Remove gsi and SSA name
	overloads.

2014-08-13  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	testsuite/
	* match-constant-folding.c: New test-case.

2014-08-12  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Add new pattern.

	testsuite/
	* match.c: New test-case.

2014-08-12  Richard Biener  <rguenther@suse.de>

	* genmatch.c (main): Fix pasto.

2014-08-12  Richard Biener  <rguenther@suse.de>

	* genmatch.c (enum tree_code): Add CONVERT0.
	(main): Likewise.
	(parse_operation): Handle conditional converts specially.
	(lower_opt_convert): Handle CONVERT0.
	(parse_for): Likewise.

2014-08-12  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (decision_tree::insert_operand): Adjust to allow
	multiple capture.

2014-08-11  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (enum tree_code): Add new values CONVERT1, CONVERT2.
	(lower_opt_convert): New function.
	(lower_opt_convert): New function overloaded.
	(lower_opt_convert): Likewise.
	(lower_opt_convert): Likewise.
	(remove_opt_convert): New function.
	(has_opt_convert): Likewise.
	(decision_tree::insert_operand): Adjust for capturing a capture.
	(parse_for): Reject CONVERT1, CONVERT2.
	(main): call add_operator.
	call lower_opt_convert.

2014-08-08  Richard Biener  <rguenther@suse.de>

	Merge from trunk r213455 through r213753.

2014-08-08  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (get_operator): New function.
	(e_operation::e_operation): Adjust to call get_operator.
	(parse_for): Add call to get_operator.

2014-08-07  Richard Biener  <rguenther@suse.de>

	* tree-ssa-sccvn.c (fully_constant_vn_reference_p): Use
	gimple_simplify instead of building a GENERIC call expr.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_simplify): Fix implementation.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* gimple-fold.h (gimple_simplify): Add two-parameter builtin
	function overload.
	* gimple-match-head.c (gimple_simplify): Implement it.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_build): Allow to be called from
	non-SSA context.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* genmatch.c (gen_transform): Add depth parameter everywhere.
	(expr::gen_transform): Make a depth dependent ops[] array
	name and increase depth for siblings.
	(gen_gimple, gen_generic): Pass 1 as depth to gen_transform
	method calls.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* tree-ssa-forwprop.c (pass_forwprop::execute): Properly
	clean EH info on folded stmts.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* match-constant-folding.pd (minus @0 @0): Restrict to
	modes without NaNs.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* tree-cfg.c (replace_uses_by): Clarify added comment.

2014-08-06  Richard Biener  <rguenther@suse.de>

	* tree-cfg.c (no_follow_ssa_edges): New function.
	(replace_uses_by): Do not follow SSA edges when folding the
	stmt.
	* gimple-match-head.c (maybe_push_res_to_seq): Disallow
	stmts that mention SSA names occuring in abnormal PHIs.
	(gimple_simplify): Likewise.

2014-08-05  Richard Biener  <rguenther@suse.de>

	* doc/match-and-simplify.texi: s/match_and_simplify/simplify/g
	* fold-const.c: Likewise.
	* genmatch.c: Likewise.
	* gimple-fold.c: Likewise.
	* gimple-fold.h: Likewise.
	* gimple-match-head.c: Likewise.
	* match-bitwise.pd: Likewise.
	* match-builtin.pd: Likewise.
	* match-constant-folding.pd: Likewise.
	* match-plusminus.pd: Likewise.
	* match-rotate.pd: Likewise.
	* match.pd: Likewise.
	* tree-ssa-forwprop.c: Likewise.
	* tree-ssa-sccvn.c: Likewise.

	* gimple-fold.c (fold_stmt): Add overload with valueize parameter.
	* gimple-fold.h (fold_stmt): Declare it.
	* tree-ssa-forwprop.c (pass_forwprop::execute): Use fold_stmt API.
	* tree-ssa-sccvn.c (try_to_simplify): Use
	gimple_fold_stmt_to_constant_1 API.

	* testsuite/gcc.dg/tree-ssa/match-1.c:
	s/match_and_simplified/simplified/g
	* testsuite/gcc.dg/tree-ssa/match-bitwise.c: Likewise
	* testsuite/gcc.dg/tree-ssa/match-plusminus.c: Likewise
	* testsuite/gcc.dg/tree-ssa/match-realimag.c: Likewise
	* testsuite/gcc.dg/tree-ssa/match-rotate.c: Likewise
	* testsuite/gcc.dg/tree-ssa/pr52631.c: Likewise

2014-08-05  Richard Biener  <rguenther@suse.de>

	* doc/match-and-simplify.texi: New file.
	* doc/gccint.texi: Include match-and-simplify.texi.
	* Makefile.in (TEXI_GCCINT_FILES): Add match-and-simplify.texi.

2014-08-05  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (capture_max): Change value to 6.
	(match-plusminus.pd): Add new patterns.

	testsuite/
	* gcc.dg/tree-ssa/match-plusminus.c (plusminus_9): New test-case.

2014-08-04  Richard Biener  <rguenther@suse.de>

	Merge from trunk r211444 through r213455.

	* genmatch.c (operators): Adjust for hash_table interface change.
	* tree-ssa-pre.c (eliminate_dom_walker::before_dom_children):
	Also fold non-call stmts inplace to avoid creating new SSA names.

2014-08-04  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (dt_simplify::gen_gimple): Use dt_simplify::capture_max.
	(dt_simplify::gen_generic): Likewise.

2014-07-31  Richard Biener  <rguenther@suse.de>

	* Makefile.in (s-match): Fix dependencies.

2014-07-31  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match-bitwise.pd: New file, split out from match.pd.
	* match-plusminus.pd: Likewise.
	* match-constant-folding.pd: Likewise.
	* match-builtin.pd: Likewise.
	* match-rotate.pd: Likewise.
	* match.pd: Move content to individual files based on
	pattern origin and include them.

2014-07-30  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (print_operand): Adjust to use dyn_cast.

2014-07-28  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (is-a.h): Include.
	(is_a_helper::test): Specialize for operand subclasses.
	(print_operand): Adjust to use is_a and as_a.

2014-07-28  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (simplify::ifexpr): Remove.
	(simplify::ifexpr_location): Likewise.
	(simplify::simplify): Adjust to changes in simplify and
	add parameter ifexpr_vec_.
	(dt_simplify::gen_gimple): Adjust to changes in simplify.
	(dt_simplify::gen_generic): Likewise.
	(parse_if): New function.
	(parse_pattern): Add call to parse_if.

	* match.pd: Use outer-if for plus-minus patterns.

2014-07-28  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parse_for): Reject for that has no pattern defined.

2014-07-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parse_match_and_simplify): Adjust to parse
	parenthesized if.
	(peek_ident): New function.
	* match.pd: Adjust patterns having if-expr to new syntax.

2014-07-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (main): Remove unnecessary debug information.

2014-07-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (parse_for): Adjust to parse multiple patterns.

2014-07-17  Richard Biener  <rguenther@suse.de>

	* gimple-fold.h (gimple_convert): Add overload with location_t
	argument.
	(gimple_match_and_simplify): Mark overloads on tree and gsi
	as obsolete.

2014-07-16  Richard Biener  <rguenther@suse.de>

	* match.pd: Fix two patterns.

2014-07-15  Richard Biener  <rguenther@suse.de>

	* match.pd: Remove duplicated and broken rotate pattern.

2014-07-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_operand::gen_match_op): Fall back to
	use operand_equal_p if literal equality does not hold.

2014-07-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (decision_tree::gen_generic): Guard against
	NULL_TREE operands.

2014-07-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (main): Add -v flag and guard debug dumps on it.

2014-07-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (decision_tree::gen_generic): Reject operands
	with TREE_SIDE_EFFECTS for now.
	(parse_for): Drop name of unused parameter.
	(main): Remove unused token.
	* match.pd: Remove ??? comment about TREE_SIDE_EFFECTS.

2014-07-14  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Remove INTEGRAL_TYPE_P (TREE_TYPE (@0)) in bitwise
	patterns and use integral_op_p@0.

2014-07-14  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (print_operand): Add attribute DEBUG_FUNCTION.
	(print_matches): Likewise.
	(decision_tree::print_node): Likewise.
	(decision_tree::print): Likewise.

2014-07-14  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (id_base::id_kind): Add new enum value USER_DEFINED.
	(e_operation::e_operation): New default argument add_new_id. Adjust
	to add id in hash table.
	(simplify): Remove matchers member. New member match.
	(print_matches): Adjust to changes in simplify.
	(decision_tree::insert): Likewise.
	(lower_commutative): New function.
	(check_operator): Likewise.
	(replace_id): Likewise.
	(eat_ident): Likewise.
	(parse_for): Likewise.
	(parse_pattern): Likewise.
	(check_no_user_id): Likewise.
	(check_no_user_id): Likewise, overloaded to take simplify as first
	argument.
	(parse_expr): Call check_operator.
	(main): call parse_pattern, lower_commutative, check_no_user_id.
	* match.pd: Adjust few constant folding patterns to use for.

	testsuite/
	* gcc.dg/tree-ssa/match-rotate.c: New test-case.

2014-07-08  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	testsuite/
	* gcc.dg/tree-ssa/match-2.c: Remove.
	* gcc.dg/tree-ssa/match-plusminus.c: New test-case.
	* gcc.dg/tree-ssa/match-bitwise.c: Likewise.
	* gcc.dg/tree-ssa/match-realimag.c: Likewise.

2014-06-26  Richard Biener  <rguenther@suse.de>

	* genmatch.c (c_expr::gen_transform): Fix unused parameter.
	(dt_simplify::gen_gimple): Mark captures as possibly unused.
	(dt_simplify::gen_generic): Likewise.
	(decision_tree::gen_generic): Mark type parameter as possibly
	unused.

2014-06-26  Richard Biener  <rguenther@suse.de>

	* genmatch.c (dt_operand::gen_generic_kids): New function.
	(dt_operand::gen_generic_expr_expr): Conditionalize matching
	of code to GIMPLE code-gen.
	(dt_operand::gen_generic_expr_fn): Likewise.
	(dt_operand::gen_generic_expr): Adjust to close parens.
	(dt_operand::gen_generic): Call gen_generic_kids.
	(decision_tree::gen_generic): Likewise, use a switch stmt.

2014-06-26  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (dt_node::get_expr_code): New member function.
	(dt_node::is_gimple_expr): Likewise.
	(dt_node::is_gimple_fn): Likewise.
	(dt_operand::kids_type): New struct.
	(dt_operand::gen_gimple_expr): Remove.
	(dt_operand::gen_gimple_expr_expr): Remove 2nd argument and
	change return type to unsigned. Adjust code-gen for expressions.
	(dt_operand::gen_gimple_expr_fn): Remove 2nd argument and change
	return type to unsigned.
	(dt_operand::grok_kids): New member function.
	(dt_operand::gen_gimple_kids): Likewise.
	(dt_operand::gen_gimple): Adjust code-gen for gimple expressions.
	Call dt_operand::gen_gimple_kids.
	(decision_tree::gen_gimple): Call dt_operand::gen_gimple_kids.

2014-06-25  Richard Biener  <rguenther@suse.de>

	* genmatch.c (decision_tree::gen_gimple): Create three
	gimple_match_and_simplify overloads again.
	(decision_tree::gen_generic): Likewise.  Create final API
	with enum tree_code arguments.
	(main): Define GIMPLE or GENERIC dependent on code generation mode.
	* gimple-match-head.c (gimple_match_and_simplify): Adjust
	prototypes.
	* match.pd: Disable P p+ CST -> &MEM[P, CST] transform for GENERIC.
	* fold-const.c (fold_unary_loc): First dispatch to
	generic_match_and_simplify.
	(fold_binary_loc): Likewise.
	(fold_ternary_loc): Likewise.

2014-06-25  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (dt_operand::gen_gimple_predicate): Rename to ...
	(dt_operand::gen_predicate): ... this.
	(dt_operand::gen_gimple_match_op): Rename to ...
	(dt_operand::gen_match_op): ... this.

2014-06-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (operand::gen_gimple_transform): Rename to...
	(operand::gen_transform): ... this and add a flag argument for
	the kind of IL to generate.
	(predicate::gen_gimple_transform): Likewise.
	(expr::gen_gimple_transform): Likewise.
	(c_expr::gen_gimple_transform): Likewise.
	(capture::gen_gimple_transform): Likewise.
	(dt_node::gen_generic): Add.
	(dt_operand::gen_generic_expr): Add flag whether to valueize.
	(dt_operand::gen_generic_expr_expr): Likewise.
	(dt_operand::gen_generic_expr_fn): Likewise.
	(dt_simplify::gen_genric): Add.
	(decision_tree::gen_generic): Likewise.
	(main): Uncomment generic codegen.

2014-06-24  Richard Biener  <rguenther@suse.de>

	* genmatch.c (write_fn_prototype): Remove and inline...
	(decision_tree::gen_gimple): ...here.
	* gimple-match-head.c (gimple_match_and_simplify): Adjust
	operand order to put operands last.  Make the last two
	default initialized to zero.
	(gimple_resimplify1): Adjust.
	(gimple_resimplify2): Likewise.
	(gimple_resimplify3): Likewise.
	(gimple_match_and_simplify): Likewise.

2014-06-24  Richard Biener  <rguenther@suse.de>

	* Makefile.in (OBJS): Add generic-match.o.
	(.PRECIOUS): Likewise.
	(MOSTLYCLEANFILES): Add generic-match.c.
	(generic-match.c): New rule.
	(s-match): Amend.
	* generic-match-head.c: New file.
	* genmatch.c (write_gimple): Rename to ...
	(write_header): ... this and support generic-match.c creation.
	(main): Recognize -gimple and -generic switches and adjust
	what we output.

2014-06-24  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (operand::gen_gimple_transform): Remove 2nd argument.
	(predicate::gen_gimple_transform): Likewise.
	(expr::gen_gimple_transform): Likewise.
	(c_expr::gen_gimple_transform): Likewise.
	(capture::gen_gimple_transform): Likewise.
	(dt_simplify::indexes): Change type to array of dt_operand *
	(dt_simplify::dt_simplify): change type of 3rd argument to dt_operand **
	(dt_simplify::gen_gimple): Remove 2nd argument in call to
	.gen_gimple_transform()
	(dt_operand::get_name): New member function.
	(dt_operand::gen_opname): New member function.
	(dt_operand::match_dop): New member.
	(dt_operand::temps): Remove.
	(dt_operand::temp_count): Likewise.
	(dt_operand::m_level): Likewise.
	(dt_operand::dt_operand): Change type of 2nd argument to dt_operand *
	(dt_operand::gen_gimple): Call get_name for getting operand name.
	(dt_operand::gen_gimple_expr_fn): Replace call to sprintf,
	by get_name (opname).
	(dt_operand::gen_gimple_expr_expr): Likwise.
	(dt_operand::gen_generic_expr_expr): Likewise.
	(dt_operand::gen_generic_expr_fn): Likewise
	(decision_tree::insert_operand): Change type of 3rd argument to
	dt_operand**.
	(dt_node::append_simplify): Likewise.

2014-06-23  Richard Biener  <rguenther@suse.de>

	* match.pd (A - (A + B) -> - B): Fix and mark the inner
	addition as commutative.

2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (gen_gimple_match_fail): Remove.
	(expr::gen_gimple_transform): Inline it here.

2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Mark commutative operators.

2014-06-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (operand::gen_gimple_match): Remove.
	(predicate::gen_gimple_match): Likewise.
	(expr::gen_gimple_match): Likewise.
	(c_expr::gen_gimple_match): Likewise.
	(capture::gen_gimple_match): Likewise.
	(write_nary_simplifiers): Remove.

2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (print_operand): Add additional default argument bool
	flattened = false
	(cmp_operand): New function to compare operands.
	(dt_node): New struct.
	(dt_operand): New struct.
	(dt_simplify): New struct.
	(decision_tree): New struct.
	(write_fn_prototype): New function to write
	gimple_match_and_simplify prototype.
	* gimple-match-head.c (do_valueize): New function.

2014-06-23  Richard Biener  <rguenther@suse.de>
	Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Remove commutated patterns in favor of :c annotations.
	* genmatch.c (e_operation): Add is_commutative flag.
	(e_operation::e_operation): Adjust.
	(simplify): Make match a vector of matches.
	(print_operand): New debug function.
	(print_matches): Likewise.
	(cartesian_product, commutate): New functions implementing
	AST commutation.
	(write_nary_simplifiers): Adjust to create code for all
	commutations.
	(parse_expr): Parse ':<flag>' with <flag> being c for
	commutative.
	(parse_match_and_simplify): Commutate the AST.
	(main): Print commutated simplifiers.

2014-06-17  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Dump
	simplified expression.

2014-06-11  Richard Biener  <rguenther@suse.de>

	Merge from trunk r208477 through r211444.

2014-06-11  Richard Biener  <rguenther@suse.de>

	* genmatch.c (capture::gen_gimple_match): Whitespace fixes.
	(write_nary_simplifiers): Likewise.
	(outline_c_exprs): Likewise.
	(write_gimple): Write preamble.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* genmatch.c (output_line_directive): New function.
	(struct simplify): Add locations for match, ifexpr and result.
	(write_nary_simplifiers): Annotate the source with line
	directives.
	(parse_match_and_simplify): Record locations of match, ifexpr
	and result part.
	(main): Adjust.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* match.pd: Fix bogus (~x & y) | x -> x & y transform which
	should have simplified to x | y.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_resimplify2): Verify constant
	folded result is really constant.
	(gimple_match_and_simplify): Likewise.  Bail out for internal
	functions.
	* match.pd: Match what fold-const.c does for folding of
	division and modulo with regarding to possibly zero 2nd operand.
	Add comment to bogus pow (x, 0.5) to sqrt (x) simplification.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* Makefile.in (gimple-match.o-warn): Drop.
	* genmatch.c (*::gen_gimple_transform): Add destination argument
	and use that to store the result to.  Drop stmt expression use.
	(write_nary_simplifiers): Adjust.
	* gimple-match-head.c (gimple_resimplify1): Initialize tem.
	(gimple_resimplify2): Likewise.
	(gimple_resimplify3): Likewise.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* genmatch.c (c_expr): Record cpp_tokens, the number of
	stmts seen and a function identifier.
	(c_expr::gen_gimple_transform): Generate textual form
	from the token vector or a call to the outlined function.
	(write_nary_simplifiers): Adjust.
	(outline_c_exprs): New function.
	(write_gimple): Call it.
	(parse_c_expr): Record a cpp_token vector.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_match_and_simplify): Fix cut&paste
	error.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* genmatch.c (error_cb, fatal_at): Annotate with printf
	format attribute to silence warning.
	* gimple-match-head.c (gimple_resimplify1): Check for
	builtin availability and properly zero out excess operands.
	(gimple_resimplify2): Likewise.
	(gimple_resimplify3): Likewise.
	(maybe_push_res_to_seq): Check for builtin availability.
	(gimple_match_and_simplify): Likewise.

2014-06-03  Richard Biener  <rguenther@suse.de>

	* match.pd: Generalize ~A + A -> -1 simplification to all
	types.

2014-06-02  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>
	Richard Biener  <rguenther@suse.de>

	* match.pd: Add few patterns from simplify_bitwise_binary.

	* gcc.dg/tree-ssa/match-2.c: Add more test-cases.

2014-06-02  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Rename to ....
	(gimple_fold_stmt_to_constant_2): ... this and make static.
	(gimple_fold_stmt_to_constant_1): New wrapper using
	gimple_match_and_simplify before falling back to
	gimple_fold_stmt_to_constant_2.
	* match.pd: Add basic constant folding patterns.  Add
	two commutations.

2014-05-21  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (constant_for_folding): New function.
	(gimple_resimplify1, gimple_resimplify2, gimple_resimplify3):
	Use it.  Strip NOPs from call stmt constant folding results
	and return whether we re-simplified anything.
	(maybe_push_res_to_seq): Allow is_gimple_val ADDR_EXPRs
	as simple.
	(gimple_match_and_simplify): Use constant_for_folding,
	Strip NOPs from call stmt constant folding results.
	(gimple_match_and_simplify): Use gimple_resimplify1 for the
	stmt overload to get constant folding and argument
	canonicalization.  Simplify SSA name copies.
	(gimple_match_and_simplify): Valueize from a copy or
	constant assignment for the SSA name overload.

2014-05-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (error_cb, fatal_at): New functions.
	(expect, parse_expr, parse_op, parse_match_and_simplify,
	main): Provide error locations.

2014-05-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_match_and_simplify): Reject outermost
	expressions that are captured or not expressions.
	* match.pd: Rewrite negate contracting patterns to avoid
	capturing the outermost expression.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (fold_stmt_1): Dispatch to
	gimple_match_and_simplify.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_match): Fix variable
	shadowing, remove unused decl.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_match): Handle NOP_EXPR
	and CONVERT_EXPR interchangably.

2014-05-14  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (REAL_CST_P): New predicate.
	(gimple_match_and_simplify): Support re-simplification of
	two-argument builtin functions.
	* match.pd: Add pattern simplifying pow (x, 0.5) to sqrt (x).

	testsuite/
	* gcc.dg/tree-ssa/match-1.c: Add testcase involving two-argument
	function re-simplification.

2014-05-14  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (maybe_push_res_to_seq): Fix res
	!= NULL case and add a comment.
	(gimple_match_and_simplify): Properly handle virtual
	operands when we replace the stmt on the gsi interface.

2014-04-02  Richard Biener  <rguenther@suse.de>

	Merge from trunk r208477 through r209020.

2014-03-17  Richard Biener  <rguenther@suse.de>

	* Makefile.in (gimple-match.o-warn): Temporarily add -fpermissive
	to allow bootstrapping.

2014-03-17  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (c_expr::c_expr): use OP_C_EXPR instead of OP_EXPR in
	call to operand constructor.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* match.pd: Add pattern matching a call in a sub-expression.
	* genmatch.c (expr::gen_gimple_match): Complete call handling.
	Support matching GENERIC.

	testsuite/
	* gcc.dg/tree-ssa/match-1.c: Adjust.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine):
	Split out combining with gimple_match_and_simplify to a
	separate "pass".  Implement a lattice.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_resimplify2, gimple_resimplify3):
	Implement missing call handling.
	(gimple_match_and_simplify): Fix lhs gathering.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_transform): Make sure to
	try simplifying a transform pattern even when seq is NULL
	as seq may not be needed.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* tree-ssa-sccvn.h (struct vn_ssa_aux): Remove has_constants
	member.
	* tree-ssa-sccvn.c (vn_get_expr_for): Simplify for legacy PRE use.
	(visit_copy): Do not set or use has_constants or expr.
	(visit_reference_op_call): Likewise.
	(visit_phi): Likewise.
	(visit_use): Likewise.
	(visit_reference_op_load): Simplify result using
	gimple_match_and_simplify.
	(expr_has_constants, stmt_has_constants, valueize_expr,
	simplify_binary_expression, simplify_unary_expression): Remove.
	(try_to_simplify): Do not use gimple_fold_stmt_to_constant_1.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_build): Move constant folding and
	operand order canonicalization ...
	* gimple-match-head.c (gimple_match_and_simplify): ... here.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* genmatch.c: New generator progam.
	* match.pd: New file with match-and-simplify patterns.
	* gimple-match-head.c: Header of generated gimple-match.c.
	* gimple-fold.h (gimple_build): New API for a GIMPLE
	variant of fold_buildN.
	(gimple_convert): Likewise.
	(gimple_match_and_simplify): Declare.

	* tree-ssa-sccvn.c (try_to_simplify): Make use of
	gimple_match_and_simplify.
	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine):
	Make use of gimple_match_and_simplify.
	* tree-ssa-pre.c: Make use of gimple_build and get rid
	of force_gimple_operand uses.

	* hash-table.c: Allow to be used in generator programs.
	* builtins.c (fold_builtin_n): Export.
	* tree.h (fold_builtin_n): Declare.

	* gcc.dg/tree-ssa/match-1.c: A little testcase.
