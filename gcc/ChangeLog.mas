2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (gen_gimple_match_fail): Remove.
	(expr::gen_gimple_transform): Inline it here.

2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Mark commutative operators.

2014-06-23  Richard Biener  <rguenther@suse.de>

	* genmatch.c (operand::gen_gimple_match): Remove.
	(predicate::gen_gimple_match): Likewise.
	(expr::gen_gimple_match): Likewise.
	(c_expr::gen_gimple_match): Likewise.
	(capture::gen_gimple_match): Likewise.
	(write_nary_simplifiers): Remove.

2014-06-23  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (print_operand): Add additional default argument bool
	flattened = false
	(cmp_operand): New function to compare operands.
	(dt_node): New struct.
	(dt_operand): New struct.
	(dt_simplify): New struct.
	(decision_tree): New struct.
	(write_fn_prototype): New function to write
	gimple_match_and_simplify prototype.
	* gimple-match-head.c (do_valueize): New function.

2014-06-23  Richard Biener  <rguenther@suse.de>
	Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* match.pd: Remove commutated patterns in favor of :c annotations.
	* genmatch.c (e_operation): Add is_commutative flag.
	(e_operation::e_operation): Adjust.
	(simplify): Make match a vector of matches.
	(print_operand): New debug function.
	(print_matches): Likewise.
	(cartesian_product, commutate): New functions implementing
	AST commutation.
	(write_nary_simplifiers): Adjust to create code for all
	commutations.
	(parse_expr): Parse ':<flag>' with <flag> being c for
	commutative.
	(parse_match_and_simplify): Commutate the AST.
	(main): Print commutated simplifiers.

2014-06-17  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Dump
	simplified expression.

2014-06-11  Richard Biener  <rguenther@suse.de>

	Merge from trunk r208477 through r211444.

2014-06-11  Richard Biener  <rguenther@suse.de>

	* genmatch.c (capture::gen_gimple_match): Whitespace fixes.
	(write_nary_simplifiers): Likewise.
	(outline_c_exprs): Likewise.
	(write_gimple): Write preamble.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* genmatch.c (output_line_directive): New function.
	(struct simplify): Add locations for match, ifexpr and result.
	(write_nary_simplifiers): Annotate the source with line
	directives.
	(parse_match_and_simplify): Record locations of match, ifexpr
	and result part.
	(main): Adjust.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* match.pd: Fix bogus (~x & y) | x -> x & y transform which
	should have simplified to x | y.

2014-06-05  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_resimplify2): Verify constant
	folded result is really constant.
	(gimple_match_and_simplify): Likewise.  Bail out for internal
	functions.
	* match.pd: Match what fold-const.c does for folding of
	division and modulo with regarding to possibly zero 2nd operand.
	Add comment to bogus pow (x, 0.5) to sqrt (x) simplification.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* Makefile.in (gimple-match.o-warn): Drop.
	* genmatch.c (*::gen_gimple_transform): Add destination argument
	and use that to store the result to.  Drop stmt expression use.
	(write_nary_simplifiers): Adjust.
	* gimple-match-head.c (gimple_resimplify1): Initialize tem.
	(gimple_resimplify2): Likewise.
	(gimple_resimplify3): Likewise.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* genmatch.c (c_expr): Record cpp_tokens, the number of
	stmts seen and a function identifier.
	(c_expr::gen_gimple_transform): Generate textual form
	from the token vector or a call to the outlined function.
	(write_nary_simplifiers): Adjust.
	(outline_c_exprs): New function.
	(write_gimple): Call it.
	(parse_c_expr): Record a cpp_token vector.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_match_and_simplify): Fix cut&paste
	error.

2014-06-04  Richard Biener  <rguenther@suse.de>

	* genmatch.c (error_cb, fatal_at): Annotate with printf
	format attribute to silence warning.
	* gimple-match-head.c (gimple_resimplify1): Check for
	builtin availability and properly zero out excess operands.
	(gimple_resimplify2): Likewise.
	(gimple_resimplify3): Likewise.
	(maybe_push_res_to_seq): Check for builtin availability.
	(gimple_match_and_simplify): Likewise.

2014-06-03  Richard Biener  <rguenther@suse.de>

	* match.pd: Generalize ~A + A -> -1 simplification to all
	types.

2014-06-02  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>
	Richard Biener  <rguenther@suse.de>

	* match.pd: Add few patterns from simplify_bitwise_binary.

	* gcc.dg/tree-ssa/match-2.c: Add more test-cases.

2014-06-02  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_fold_stmt_to_constant_1): Rename to ....
	(gimple_fold_stmt_to_constant_2): ... this and make static.
	(gimple_fold_stmt_to_constant_1): New wrapper using
	gimple_match_and_simplify before falling back to
	gimple_fold_stmt_to_constant_2.
	* match.pd: Add basic constant folding patterns.  Add
	two commutations.

2014-05-21  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (constant_for_folding): New function.
	(gimple_resimplify1, gimple_resimplify2, gimple_resimplify3):
	Use it.  Strip NOPs from call stmt constant folding results
	and return whether we re-simplified anything.
	(maybe_push_res_to_seq): Allow is_gimple_val ADDR_EXPRs
	as simple.
	(gimple_match_and_simplify): Use constant_for_folding,
	Strip NOPs from call stmt constant folding results.
	(gimple_match_and_simplify): Use gimple_resimplify1 for the
	stmt overload to get constant folding and argument
	canonicalization.  Simplify SSA name copies.
	(gimple_match_and_simplify): Valueize from a copy or
	constant assignment for the SSA name overload.

2014-05-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (error_cb, fatal_at): New functions.
	(expect, parse_expr, parse_op, parse_match_and_simplify,
	main): Provide error locations.

2014-05-20  Richard Biener  <rguenther@suse.de>

	* genmatch.c (parse_match_and_simplify): Reject outermost
	expressions that are captured or not expressions.
	* match.pd: Rewrite negate contracting patterns to avoid
	capturing the outermost expression.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (fold_stmt_1): Dispatch to
	gimple_match_and_simplify.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_match): Fix variable
	shadowing, remove unused decl.

2014-05-15  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_match): Handle NOP_EXPR
	and CONVERT_EXPR interchangably.

2014-05-14  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (REAL_CST_P): New predicate.
	(gimple_match_and_simplify): Support re-simplification of
	two-argument builtin functions.
	* match.pd: Add pattern simplifying pow (x, 0.5) to sqrt (x).

	testsuite/
	* gcc.dg/tree-ssa/match-1.c: Add testcase involving two-argument
	function re-simplification.

2014-05-14  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (maybe_push_res_to_seq): Fix res
	!= NULL case and add a comment.
	(gimple_match_and_simplify): Properly handle virtual
	operands when we replace the stmt on the gsi interface.

2014-04-02  Richard Biener  <rguenther@suse.de>

	Merge from trunk r208477 through r209020.

2014-03-17  Richard Biener  <rguenther@suse.de>

	* Makefile.in (gimple-match.o-warn): Temporarily add -fpermissive
	to allow bootstrapping.

2014-03-17  Prathamesh Kulkarni  <bilbotheelffriend@gmail.com>

	* genmatch.c (c_expr::c_expr): use OP_C_EXPR instead of OP_EXPR in
	call to operand constructor.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* match.pd: Add pattern matching a call in a sub-expression.
	* genmatch.c (expr::gen_gimple_match): Complete call handling.
	Support matching GENERIC.

	testsuite/
	* gcc.dg/tree-ssa/match-1.c: Adjust.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine):
	Split out combining with gimple_match_and_simplify to a
	separate "pass".  Implement a lattice.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* gimple-match-head.c (gimple_resimplify2, gimple_resimplify3):
	Implement missing call handling.
	(gimple_match_and_simplify): Fix lhs gathering.

2014-03-13  Richard Biener  <rguenther@suse.de>

	* genmatch.c (expr::gen_gimple_transform): Make sure to
	try simplifying a transform pattern even when seq is NULL
	as seq may not be needed.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* tree-ssa-sccvn.h (struct vn_ssa_aux): Remove has_constants
	member.
	* tree-ssa-sccvn.c (vn_get_expr_for): Simplify for legacy PRE use.
	(visit_copy): Do not set or use has_constants or expr.
	(visit_reference_op_call): Likewise.
	(visit_phi): Likewise.
	(visit_use): Likewise.
	(visit_reference_op_load): Simplify result using
	gimple_match_and_simplify.
	(expr_has_constants, stmt_has_constants, valueize_expr,
	simplify_binary_expression, simplify_unary_expression): Remove.
	(try_to_simplify): Do not use gimple_fold_stmt_to_constant_1.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* gimple-fold.c (gimple_build): Move constant folding and
	operand order canonicalization ...
	* gimple-match-head.c (gimple_match_and_simplify): ... here.

2014-03-11  Richard Biener  <rguenther@suse.de>

	* genmatch.c: New generator progam.
	* match.pd: New file with match-and-simplify patterns.
	* gimple-match-head.c: Header of generated gimple-match.c.
	* gimple-fold.h (gimple_build): New API for a GIMPLE
	variant of fold_buildN.
	(gimple_convert): Likewise.
	(gimple_match_and_simplify): Declare.

	* tree-ssa-sccvn.c (try_to_simplify): Make use of
	gimple_match_and_simplify.
	* tree-ssa-forwprop.c (ssa_forward_propagate_and_combine):
	Make use of gimple_match_and_simplify.
	* tree-ssa-pre.c: Make use of gimple_build and get rid
	of force_gimple_operand uses.

	* hash-table.c: Allow to be used in generator programs.
	* builtins.c (fold_builtin_n): Export.
	* tree.h (fold_builtin_n): Declare.

	* gcc.dg/tree-ssa/match-1.c: A little testcase.
