2012-05-21   Easwaran Raman  <eraman@google.com>

	* gcc/basic-block.h (maybe_hot_count_p): New declaration.
	* gcc/cgraph.c (dump_cgraph_node): Dump max_bb_count.
	(cgraph_clone_node): Update max_bb_count.
	* gcc/cgraph.h (cgraph_node): Add new field max_bb_count.
	* gcc/cgraphbuild.c (rebuild_cgraph_edges): Compute max_bb_count.
	* gcc/cgraphunit.c (cgraph_copy_node_for_versioning): Copy max_bb_count.
	* gcc/ipa-inline-transform.c (inline_call): Update max_bb_count of
	the function to which this callsite is eventually inlined to.
	* gcc/ipa-inline.c (edge_hot_enough_p): New function.
	(want_inline_small_function_p): Call edge_hot_enough_p instead
	of cgraph_maybe_hot_edge_p.
	* gcc/params.def (PARAM_INLINE_FUNCTION_OVERHEAD_SIZE): New param.
	* gcc/predict.c (maybe_hot_count_p): Make it non static.
	* gcc/testsuite/gcc.dg/tree-prof/inliner-1.c: Add option
	--param inline-hot-caller=0.
	* gcc/testsuite/gcc.dg/tree-prof/lipo/inliner-1_0.c: Likewise.

2012-05-18   Teresa Johnson  <tejohnson@google.com>

	Backport from google/main r187660:
	2012-05-18   Teresa Johnson  <tejohnson@google.com>

	* doc/invoke.texi: Update the documentation with new params.
	* loop-unroll.c (loop_has_FP_comp): Remove function.
	(max_unroll_with_branches): New function.
	(decide_unroll_constant_iterations, decide_unroll_runtime_iterations):
        Add heuristic to avoid increasing branch mispredicts when unrolling.
	(limit_code_size, decide_peel_simple, decide_unroll_stupid): Retrieve
        number of branches from niter_desc instead of via function that walks
        loop.
	* loop-iv.c (get_simple_loop_desc): Invoke new analyze_loop_insns
        function, and add guards to enable this function to work for the
        outermost loop.
	* cfgloop.c (insn_has_fp_set, analyze_loop_insns): New functions.
        (num_loop_branches): Remove.
	* cfgloop.h (struct niter_desc): Added new fields to cache additional
        loop analysis information.
        (num_loop_branches): Remove.
	(analyze_loop_insns): Declare.
	* params.def (PARAM_MIN_ITER_UNROLL_WITH_BRANCHES): New param.
        (PARAM_UNROLL_OUTER_LOOP_BRANCH_BUDGET): Ditto.

2012-05-16  Sriraman Tallam  <tmsriram@google.com>

	Port from google/gcc-4_6 
	r177289, r177308, r179104, r179289, r179303, r179404, r182447
	
	* doc/invoke.texi: Document -freorder-functions=*
	* cgraphbuild.c (remove_cgraph_callee_edges): Preserve
	callgraph till pass_final.
	* configure: Regenerate.
	* final.c (dump_cgraph_profiles): New function.
	(rest_of_handle_final): Call dumping of cgraph profiles in
	.gnu.text.callgraph sections.
	* gcc.c (LINK_COMMAND_SPEC): Process -freorder-functions=
	(set_func_reorder_linker_plugin_spec): New function.
	(main): Call function reorder plugin.
	* testsuite/lib/target-supports-dg.exp
	(dg-require-section-exclude): New proc.
	(dg-require-linker-function-reordering-plugin): New proc.
	* testsuite/lib/target-supports.exp
	(check_section_exclude_available): New proc.
	(check_linker_function_reordering_plugin_supported): New proc.
	* testsuite/g++.dg/tree-prof/callgraph-profiles.C: New test.
	* config.in: undef FRPLUGINSONAME
	* opts.c
	* configure.ac (FRPLUGINSONAME): Define 
	* common.opt (fcallgraph-profiles-sections): Remove.
	(freorder-functions=): New option.
	* tree-optimize.c (gate_all_optimizations): Mark last cleanup of
	callgraph.
	* config.host: Set function reordering plugin.
	* params.def (PARAM_NOTE_CGRAPH_SECTION_EDGE_THRESHOLD): Remove.
	(PARAM_GNU_CGRAPH_SECTION_EDGE_THRESHOLD): Add.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* tree-profile.c (add_sampling_wrapper): Call
	add_referenced_var for sampling related variables.
	(gimple_init_instrumentation_sampling): Do not
	call varpool_finalize for external decls.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* cgraph.c (cgraph_set_call_stmt): Resolve target
	to the real target in LIPO mode.
	(cgraph_create_virtual_clone): Ditto.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* c-family/c-opts.c (is_parsing_done_p): New function.
	* cp/semantics.c (cp_clear_constexpr_hashtable): Ditto.
	* cp/decl2.c (cp_clear_defered_fns): Clear constexpr hash.
	* cp/mangle.c (mangle_decl): Save decl for binding clearing.
	* cp/cp-tree.h: New prototype declaration.
	* l-ipo.c: New prototype declaration.


2012-05-15   Teresa Johnson  <tejohnson@google.com>

	Backport from google/main r187536:
	2012-05-15   Teresa Johnson  <tejohnson@google.com>

	* doc/invoke.texi (profile-generate-sampling-period): Rename
	from profile-generate-sampling-rate.
	* tree-profile.c (gcov_sampling_period_decl): Rename from
	gcov_sampling_rate_decl.
	(gcov_has_sampling_decl): New variable.
	(insert_if_then, add_sampling_wrapper): Rename variables from "*rate*"
	to "*period*".
	(gimple_init_instrumentation_sampling): Ditto, and add handling
	for gcov_has_sampling_decl.
	* params.def (profile-generate-sampling-period): Rename
	from profile-generate-sampling-rate.

2012-05-15   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 187362.

2012-05-14  Xinliang David Li  <davidxl@google.com>

	* cgraphbuild.c (record_reference_to_real_target_from_alias):
	New function.
	(mark_address): Record reference to the resolved target node
	in LIPO mode. Also record reference to alias's real target.
	(rebuild_cgraph_edges): As above.
	* cgraph.c (cgraph_clone_edge): Create cgraph edge for
	indirect call inlining edge properly.
	* l-ipo.c (cgraph_lipo_get_resolved_node_1): Do not force
	creating cgraph node.
	(fixup_reference_list): New function.
	(varpool_do_link): Fix up initializer's references to functions
	after linking.

2012-05-09  Teresa Johnson  <tejohnson@google.com>

	Backport from trunk r187297:
	2012-05-08   Teresa Johnson  <tejohnson@google.com>

	* gcov-io.h (__gcov_reset, __gcov_dump): Declare.
	* doc/gcov.texi: Add note on using __gcov_reset and __gcov_dump.

2012-05-08  Xinliang David Li  <davidxl@google.com>

	Fix issue 6457844

	* ipa-inline-transform.c (inline_call): When
	fixing up cgraph edge callees which are aliases,
	find the real resolved alias target in LIPO mode.
	* cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee):
	Remove unnecssary check in LIPO mode.
	* ipa-inline.c (inline_small_functions): Compute
	max_count properly by considering indirect edges.



2012-05-08  Xinliang David Li  <davidxl@google.com>

	Fix issue 6461583

	* profile.c (instrument_values): Skip static ctor/dtors
	for ic counter allocation to match instrumentation.
	* tree-profile.c (gimple_gen_ic_profiler): Remove
	unnecessary guard in FDO mode.

2012-05-03  Dehao Chen  <dehao@google.com>

	Backport r185949 from google-main.

	2012-03-29  Dehao Chen  <dehao@google.com>

		* predict.c (predict_iv_comparison): Add the comparison of
		induction variable against its initial value.

2012-05-01   Rong Xu  <xur@google.com>

	Backport r187028 from google-main.

	2012-05-01   Rong Xu  <xur@google.com>

		* gcc/cp/rtti.c (get_tinfo_decl): generate tinfo for aux 
		modules in LIPO.

2012-04-25   Diego Novillo  <dnovillo@google.com>

	Add better commit message for recent merge.

2012-04-25   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 186721.

2012-04-20  Xinliang David Li  <davidxl@google.com>

	Backport r186622 from trunk
	* tree-ssa-copy.c (propagate_tree_value_into_stmt): Use
	update_call_from_tree when propagating into a call.


	* varasm.c (alias_target_node_exist_p): New function.
	(finish_alias_1): Use the new function in LIPO mode.

2012-04-12  Xinliang David Li  <davidxl@google.com>

	* cgraphbuild.c (rebuild_cgraph_edges): Add ipa reference from
	an alias node to its body node (post LIPO linking one) to avoid
	the body being eliminated.
	* varasm.c (finish_aliases_1): Do not emit error for an alias
	which is artificial in LIPO mode -- it exists but can not be
	found.

2012-04-11  Teresa Johnson  <tejohnson@google.com>

	Revert r182254 since it is subsumed by r186332.

2012-04-11   Teresa Johnson  <tejohnson@google.com>

	Backport r186176 from trunk.

	2012-04-05  Teresa Johnson  <tejohnson@google.com>
		    H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (ix86_tune_indices): Add
	X86_TUNE_LCP_STALL.
	* config/i386/i386.md (move immediate to memory peephole2):
	Add cases for HImode move when LCP stall avoidance is needed.
	* config/i386/i386.c (initial_ix86_tune_features): Initialize
	X86_TUNE_LCP_STALL entry.

2012-04-10  Xinliang David Li  <davidxl@google.com>

	* mversn-dispatch.c (builtin_dispatch_ipa_clone): returns
	TODO flags when there are changes.
	(do_convert_builtin_dispatch): Ditto.

2012-04-09  Xinliang David Li  <davidxl@google.com>

	Fix b/6300341: LIPO profile-gen ICEs 

	* coverage.c (converage_dc_end_function): Properly initialize
	the fn_decl and ctr_data field of the coverage_data.

2012-03-07  Sriraman Tallam  <tmsriram@google.com>

	Backport from google/main rev 185083

	        * config/i386/i386.c (build_struct_with_one_bit_fields): New function.
	        (make_var_decl): New function.
	        (get_field_from_struct): New function.
	        (fold_builtin_target): New function.
	        (ix86_fold_builtin): New function.
	        (ix86_expand_builtin): Expand new builtins by folding them.
	        (make_platform_builtin): New functions.
	        (ix86_init_platform_type_builtins): Make the new builtins.
	        (ix86_init_builtins): Make new builtins to detect CPU type.
	        (TARGET_FOLD_BUILTIN): New macro.
	        (IX86_BUILTIN_CPU_SUPPORTS_CMOV): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_MMX): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_POPCOUNT): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE2): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE3): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSSE3): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE4_1): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE4_2): New enum value.
	        (IX86_BUILTIN_CPU_INIT): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMD): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_ATOM): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_CORE2): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_NEHALEM): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_WESTMERE): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_SANDYBRIDGE): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_BARCELONA): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_SHANGHAI): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_ISTANBUL): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM15H_BDVER1): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM15H_BDVER2): New enum value.
	        * config/i386/i386-builtin-types.def: New function type.
	        * testsuite/gcc.target/builtin_target.c: New testcase.

2012-03-07  Diego Novillo  <dnovillo@google.com>

	Merge from google/main rev 184996.

2012-02-26  Ollie Wild  <aaw@google.com>

	* BASE-VER: Change to 4.7.x-google.

2012-02-23   Diego Novillo  <dnovillo@google.com>

	* BASE-VER: Change to 4.7.0-google.
	* DEV-PHASE: Change to prerelease.
