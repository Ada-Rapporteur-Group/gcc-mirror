2009-03-11  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (argument_set_in_function_p): Always return true
	for when not in SSA.

2009-03-11  Jan Hubicka  <jh@suse.cz>

	Merge from mainline.

2009-03-09  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (non_ssa_argument_ok_to_subtitute): Reorganize for
	better readability; add debug output; handle volatile flags; handle
	more special cases.
	(setup_one_parameter): Add debug output.

2009-03-09  Jan Hubicka  <jh@suse.cz>

	* ipa.c (cgraph_remove_unreachable_nodes):  Do not remove edges of
	functions that are clonned.

2009-03-09  Jan Hubicka  <jh@suse.cz>

	* tree-inline.c (non_ssa_argument_ok_to_subtitute): Update comment,
	ignore gimple register parameters even if they don't have default def
	(i.e. unused parameters), skip NOP_EXPR, use get_base_address;
	accept const functions too; SSA_NAMEs are safe.
	(setup_one_parameter): Shortcut unused params.

2009-03-09  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c (cgraph_materialize_all_clones): Fix thinko in handling
	of clones.

	* tree-inline.c (self_inlining_addr_expr): Remove.
	(argument_set_in_function_p, non_ssa_argument_ok_to_subtitute): New
	functions.
	(setup_one_parameter): Use argument_set_in_function_p; remove FN argument.
	(initialize_inlined_parameters): Update call of setup_one_parameter.
	(tree_function_versioning): Likewise.

2009-02-21  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline up to last merge point of alias-improvements
	branch.

2009-02-16  Jan Hubicka  <jh@suse.cz>

	* cgraph.c: Do not include varray.h
	(cgraph_set_call_stmt_including_clones,
	cgraph_create_edge_including_clones): New functions.
	(cgraph_remove_node): Update clone tree correctly.
	(cgraph_clone_node): Update clone datastructure.
	(cgraph_create_virtual_clone): New functio.
	* cgraph.h (struct ipa_replace_map): Move here from ipa-prop.h
	(ipa_replace_map_p): New type and vector.
	(cgraph_set_call_stmt_including_clones,
	cgraph_create_edge_including_clones, cgraph_create_virtual_clone):
	Declare.
	(cgraph_function_versioning): Use vector instead of varray.
	(tree_function_versioning): Declare here.
	(cgraph_materialize_all_clones): New function.
	* ipa-cp (ipcp_update_cloned_node): Remove
	(ipcp_create_replace_map): Allocate replace_map in GGC.
	(ipcp_update_callgraph): Only create virtual nodes.
	(ipcp_update_bb_counts, ipcp_update_edges_counts): Remove.
	(ipcp_update_profiling): Only update cgraph.
	(ipcp_insert_stage): Use GGC for skip_args bitmap; use vector for
	replace_map.
	* cgraphunit.c (clone_of_p): New function.
	(verify_cgraph_node): Handle cones correctly.
	(cgraph_optimize): Do cgraph_materialize_all_clones.
	(cgraph_materialize_clone, cgraph_materialize_all_clones): Update.
	* ipa-inline.c (cgraph_default_inline_p): Use analyzed flag instead of looking
	into the body.
	* ipa.c: Include gimple.h
	(cgraph_remove_unreachable_nodes): Functions that need to be instantiated
	to clones are needed.
	* ipa-prop.h (ipa_replace_map): Move to cgraph.h
	* tree-inline.c: Do not include varray.h
	(copy_bb): Properly update edges; take care of creating new edges
	for new call statements.
	(expand_call_inline): Edge should always exist.
	(tree_function_versioning): Use vector.
	* tree-inline.h: Remove varray.h
	(tree_function_versioning): Remove.
	* passes.c (do_per_function): Only do functions with bodies.

2009-02-16  Martin Jambor  <mjambor@suse.cz>

	* omp-low.c (expand_omp_taskreg): Always set current_function_decl.

2009-01-17  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_remove_node): Handle clones tree.
	(cgraph_clone_node): Create clone tree.
	(cgraph_function_body_availability): Fixup comment.
	* cgraph.h (cgraph_node): Add clone tree.
	* cgraphunit.c (verify_cgraph_node): Verify clone tree.
	(cgraph_preserve_function_body_p): Use clone tree.
	(save_inline_function_body): Redirect clone tree to new copy.
	* ipa.c (cgraph_remove_unreachable_nodes): Check clone childs.
	* tree-inline.c (copy_bb): Likewise.
	* ipa-struct-reorg.c (do_reorg_1): Likewise.

2009-01-17  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_node_can_be_local_p, cgraph_make_node_local): New
	function.
	* cgraph.h (cgraph_node_can_be_local_p, cgraph_make_node_local):
	Declare.

2009-01-16  Jan Hubicka  <jh@suse.cz>

	* Merge from mainline.

2009-01-07  Martin Jambor  <mjambor@suse.cz>

        * tree-inline.c (optimize_inline_calls): Do not call
        cgraph_node_remove_callees.
        * cgraphbuild.c (remove_cgraph_callee_edges): New function.
        (pass_remove_cgraph_callee_edges): New variable.

        * passes.c (init_optimization_passes): Add
        pass_remove_cgraph_callee_edges after early inlining and before all
        late intraprocedural passes.

2009-01-05  Martin Jambor  <mjambor@suse.cz>

	* tree-dfa.c (get_ref_base_and_extent): Added a FIXME comment.

2008-12-25  Martin Jambor  <mjambor@suse.cz>

	* ipa-prop.h (jump_func_type): Rename IPA_UNKNOWN, IPA_CONST,
	IPA_CONST_MEMBER_PTR, and IPA_PASS_THROUGH to IPA_JF_UNKNOWN,
	IPA_JF_CONST, IPA_JF_CONST_MEMBER_PTR, and IPA_JF_PASS_THROUGH
	respectively.
	* tree-dfa.c (get_ref_base_and_extent): Return -1 maxsize if
	seen_variable_array_ref while also traversing a union.

2008-12-09  Jan Hubicka  <jh@suse.cz>

	Merge from mainline.

2008-12-06  Jan Hubicka  <jh@suse.cz>

	* cp/decl2.c (build_java_method_aliases): Ignore everything that is
	not externally visible.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	Bring from lto-branch:
	2008-09-03  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c (initialize_inline_failed): Use cgraph_inline_failed_t
	enums instead of reason strings.
	* cgraph.c (cgraph_create_edge): Same.
	(cgraph_inline_failed_string): New function.
	* cgraph.h (cgraph_inline_failed_t): New enum type.
	(cgraph_inline_failed_string): New prototype.
	(struct cgraph_edge): Change type of INLINED_FAILED from constant
	char pointer to cgraph_inline_failed_t.
	(cgraph_inline_p): Adjust prototype to use cgraph_inline_failed_t.
	(cgraph_default_inline_p): Ditto.
	* gcc/cgraphunit.c (cgraph_inline_p): Change type of parameter REASON
	to cgraph_inline_failed_t pointer.
	* cif-code.def: New file.
	* ipa-inline.c (cgraph_mark_inline_edge): Use an enum instead of a
	reason string.
	(cgraph_check_inline_limits): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Replace reason strings with enums.
	(cgraph_default_inline_p): Ditto.
	(cgraph_recursive_inlining_p): Ditto.
	(update_caller_keys): Change type of FAILED_REASON to
	cgraph_inline_failed_t.
	(cgraph_set_inline_failed): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Call cgraph_inline_failed_string to
	convert enums to strings for text output.
	(cgraph_decide_inlining_of_small_function): Change FAILED_REASON
	to be of type cgraph_inline_failed_t.  Replace reason strings with
	enums.  Call cgraph_inline_failed_string to covert enums
	to strings for text output.
	(cgraph_decide_inlining): Replace reason strings with enums.
	(cgraph_decide_inlining_incrementally): Change type of FAILED_REASON
	to cgraph_inline_failed_t type.  Call cgraph_inline_failed_string
	for text output.
	* tree-inline.c (expand_call_inline): Change type of REASON
	to cgraph_inline_failed_t.  Replace reason strings with enums.
	Call cgraph_inline_failed_string for text output.
	* Makefile.in (CGRAPH_H): Add cif-code.def to dependencies.
	(cgraph.o): Ditto.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_node, cgraph_remove_node, dump_cgraph_node,
	cgraph_clone_node): Remove master clone handling.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* cgraph.h (master_clone): Remove.
	(cgraph_is_master_clone, cgraph_master_clone): Remove.
	* ipa-type-escape.c (type_escape_execute): Remove use of master clone.
	( tree-ssa-structalias.c (ipa_pta_execute): LIkewise.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* cgraph.c (cgraph_function_body_availability): Inline functions are
	always available.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* doc/invoke.texi (inline-call-cost): Remove.
	(early-inlining-insns): Update.
	* cgraphbuild.c (compute_call_stmt_bb_frequency): Add function argument;
	behave sanely without profile info computed.
	(build_cgraph_edges, rebuild_cgraph_edges): Update.
	* cgraph.c (dump_cgraph_node): Update dumps.
	* cgraph.h (cgraph_local_info): Remove self_insns;
	add self_size, size_inlining_benefit, self_time, time_inlining_benefit.
	(cgraph_global_info): Add time, size field; remove insns field.
	(compute_call_stmt_bb_frequency): Update prototype.
	* ipa-cp.c (ipcp_cloning_candidate_p): Use size instead of insns.
	(ipcp_estimate_growth): Likewise.
	(ipcp_estimate_cloning_cost): Likewise.
	(ipcp_insert_stage): Likewise.
	* ipa-inline.c (MAX_TIME): Add.
	(overall_insns): Remove.
	(overall_size): New static var.
	(cgraph_estimate_time_after_inlining): New function.
	(cgraph_estimate_size_after_inlining): Rewrite to size metrics.
	(cgraph_clone_inlined_nodes): Use size instead of insns.
	(cgraph_mark_inline_edge): Update size and time instead of insns.
	(cgraph_estimate_growth): Use size instead of isnsn.
	(cgraph_check_inline_limits): Use size instead of insns.
	(cgraph_edge_badness): Compute badness based on self time and size.
	(cgraph_decide_recursive_inlining): Use time and size.
	(cgraph_decide_inlining_of_small_function): Bookkeep time and size.
	(cgraph_decide_inlining): Likewise.
	(cgraph_decide_inlining_incrementally): Likewise; handle
	PARAM_EARLY_INLINING_INSNS.
	(likely_eliminated_by_inlining_p): New predicate.
	(estimate_function_body_sizes): New function.
	(compute_inline_parameters): Update.
	(pass_inline_param): Add it a name parameter.
	(cgraph_maybe_hot_edge_p): Return false when optimizing size.
	* ipa-prop.c (ipa_note_param_call): Use compute_call_stmt_bb_frequency.
	* tree-inline.c (eni_inlining_weights): Remove.
	(estimate_num_insns): Recognize loads and stores; be more sane on switch
	statement times; builtin_expect is always free; estimate return value cost.
	(init_inline_once): Kill inlining weights.
	* tree-inline.h (eni_inlining_weights): Remove.
	(eni_weights): Add time_based flag.
	* parms.def (PARAM_INLINE_CALL_COST): Remove.
	(PARAM_EARLY_INLINING_INSNS): Add.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* tree-pass.h (pass_fixup_cfg, pass_local_pure_const): Declare.
	* ipa-pure-const.c (funct_state_d): Add can throw field; make
	state_set_in_source enum
	(check_decl): Ignore memory tags; do not set fake looping flags;
	dump diagnostics.
	(check_operand, check_tree, check_rhs_var, check_lhs_var,
	get_asm_expr_operands, scan_function_op, scan_function_stmt): Remove.
	(check_call, analyze_function): Rewrite.
	(check_stmt): New.
	(add_new_function): Update call of analyze_function.
	(generate_summary): Add call of analyze_function.
	(propagate): Propagate can_throw; handle state_set_in_source correctly.
	(local_pure_const): New function.
	(pass_local_pure_const): New pass.
	* ipa-inline.c (inline_transform): Set after_inlining.
	* tree-eh.c (stmt_can_throw_external): New.
	* tree-optimize.c (execute_fixup_cfg): Do not set after_inlining;
	work with aliasing built.
	* tree-flow.h (stmt_can_throw_external): New.
	* passes.c (init_optimization_passes): Schedule fixup_cfg pass early;
	and local pure/const pass in early and late optimization queue.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	* ipa-pure-const.c (check_decl): Do not handle used attribute
	on local objects specially; readonly reads are safe.
	(look_for_address_of): Remove.
	(check_rhs_var, check_lhs_var): Remove tree_could_trap check.

2008-11-12  Jan Hubicka  <jh@suse.cz>

	Created the branch.
