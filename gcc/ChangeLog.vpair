==================== Branch work162-vpair, patch #205 ====================

Add vector pair optimizations.

2024-03-12  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/vector-pair.md (vpair_add_neg_<vpair_modename>3): New
	combiner insn to convert vector plus/neg into a minus operation.
	(vpair_fma_<vpair_modename>_merge): Optimize multiply, add/subtract, and
	negation into fma operations if the user specifies to create fmas.
	(vpair_fma_<vpair_modename>_merge): Likewise.
	(vpair_fma_<vpair_modename>_merge2): Likewise.
	(vpair_nfma_<vpair_modename>_merge): Likewise.
	(vpair_nfms_<vpair_modename>_merge): Likewise.
	(vpair_nfms_<vpair_modename>_merge2): Likewise.

gcc/testsuite/

	* gcc.target/powerpc/vector-pair-7.c: New test.
	* gcc.target/powerpc/vector-pair-8.c: Likewise.
	* gcc.target/powerpc/vector-pair-9.c: Likewise.
	* gcc.target/powerpc/vector-pair-10.c: Likewise.
	* gcc.target/powerpc/vector-pair-11.c: Likewise.
	* gcc.target/powerpc/vector-pair-12xs.c: Likewise.

==================== Branch work162-vpair, patch #204 ====================

Add vector pair init and splat.

2024-03-12  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-builtins.def (__builtin_vpair_zero): New
	built-in function.
	(__builtin_vpair_f32_splat): Likewise.
	(__builtin_vpair_f64_splat): Likewise.
	* config/rs6000/vector-pair.md (UNSPEC_VPAIR_ZERO): New unspec.
	(UNSPEC_VPAIR_SPLAT): Likewise.
	(VPAIR_SPLAT_VMODE): New mode iterator.
	(VPAIR_SPLAT_ELEMENT_TO_VMODE): New mode attribute.
	(vpair_splat_name): Likewise.
	(vpair_zero): New insn.
	(vpair_splat_<vpair_splat_name>): New define_expand.
	(vpair_splat_<vpair_splat_name>_internal): New insns.

gcc/testsuite/

	* gcc.target/powerpc/vector-pair-5.c: New test.
	* gcc.target/powerpc/vector-pair-6.c: Likewise.

==================== Branch work162-vpair, patch #203 ====================

Add support for vector pair fma operations.

2024-03-12  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-builtins.def (__builtin_vpair_f32_fma): New
	built-in.
	(__builtin_vpair_f32_fms): Likewise.
	(__builtin_vpair_f32_nfma): Likewise.
	(__builtin_vpair_f32_nfms): Likewise.
	(__builtin_vpair_f64_fma): Likewise.
	(__builtin_vpair_f64_fms): Likewise.
	(__builtin_vpair_f64_nfma): Likewise.
	* config/rs6000/rs6000/rs6000-proto.h (enum vpair_split_fma): New
	enumeration.
	(vpair_split_fma): New declaration.
	* config/rs6000/rs6000.cc (vpair_split_fma): New function to split
	vector pair FMA operations.
	* config/rs6000/vector-pair.md (UNSPEC_VPAIR_FMA): New unspec.
	(vpair_stdname): Add UNSPEC_VPAIR_FMA.
	(VPAIR_OP): Likewise.
	(vpair_fma_<vpair_modename>4): New insns.
	(vpair_fms_<vpair_modename>4): Likewise.
	(vpair_nfma_<vpair_modename>4): Likewise.
	(vpair_nfms_<vpair_modename>4): Likewise.
	* doc/extend.texi (PowerPC Vector Pair Built-in Functions): Document new
	vector pair fma built-in functions.

gcc/testsuite/

	* gcc.target/powerpc/vector-pair-3.c: New test.
	* gcc.target/powerpc/vector-pair-4.c: Likewise.

==================== Branch work162-vpair, patch #202 ====================

Add support for vector pair unary and binary operations.

2024-03-12  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-builtins.def (__builtin_vpair_*): Add new
	built-in functions for vector pair support.
	* config/rs6000/rs6000-protos.h (enum vpair_split_unary): New
	enumeration.
	(vpair_split_unary): New declaration.
	(vpair_split_binary): Likewise.
	* config/rs6000/rs6000.cc (vpair_split_unary): New function to split
	vector pair operations.
	(vpair_split_binary): Likewise.
	* config/rs6000/rs6000.md (toplevel): Include vector-pair.md.
	* config/rs6000/t-rs6000 (MD_INCLUDES): Add vector-pair.md.
	* config/rs6000/vector-pair.md: New file.
	* doc/extend.texi (PowerPC Vector Pair Built-in Functions): Add
	documentation for the new vector pair built-in functions.

gcc/testsuite/

	* gcc.target/powerpc/vector-pair-1.c: New test.
	* gcc.target/powerpc/vector-pair-2.c: Likewise.

==================== Branch work162-vpair, patch #201 ====================

Peter's patches for subreg support.

2024-03-12  Peter Bergner  <bergner@linux.ibm.com>

gcc/

	PR target/109116
	* gcc/config/rs6000/rs6000.cc (rs6000_modes_tieable_p): Make OOmode
	tieable with 128-bit vector modes.

2024-01-23  Peter Bergner  <bergner@linux.ibm.com>

gcc/

	PR target/109116
	* gcc/config/rs6000/mma.md (vsx_disassemble_pair): Use SUBREG's instead
	of UNSPEC's.
	(mma_disassemble_acc): Likewise.

==================== Branch work162-vpair, patch #200 ====================

Power10: Add options to disable load and store vector pair.

In working on some future patches that involve utilizing vector pair
instructions, I wanted to be able to tune my program to enable or disable using
the vector pair load or store operations while still keeping the other
operations on the vector pair.

This patch adds two undocumented tuning options.  The -mno-load-vector-pair
option would tell GCC to generate two load vector instructions instead of a
single load vector pair.  The -mno-store-vector-pair option would tell GCC to
generate two store vector instructions instead of a single store vector pair.

If either -mno-load-vector-pair is used, GCC will not generate the indexed
stxvpx instruction.  Similarly if -mno-store-vector-pair is used, GCC will not
generate the indexed lxvpx instruction.  The reason for this is to enable
splitting the {,p}lxvp or {,p}stxvp instructions after reload without needing a
scratch GPR register.

The default for -mcpu=power10 is that both load vector pair and store vector
pair are enabled.

I added code so that the user code can modify these settings using either a
'#pragma GCC target' directive or used __attribute__((__target__(...))) in the
function declaration.

I added tests for the switches, #pragma, and attribute options.

I have built this on both little endian power10 systems and big endian power9
systems doing the normal bootstrap and test.  There were no regressions in any
of the tests, and the new tests passed.  Can I check this patch into the master
branch?

2024-03-12  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (movoo): Add support for -mno-load-vector-pair and
	-mno-store-vector-pair.
	* config/rs6000/rs6000-cpus.def (OTHER_POWER10_MASKS): Add support for
	-mload-vector-pair and -mstore-vector-pair.
	(POWERPC_MASKS): Likewise.
	* config/rs6000/rs6000.cc (rs6000_setup_reg_addr_masks): Only allow
	indexed mode for OOmode if we are generating both load vector pair and
	store vector pair instructions.
	(rs6000_option_override_internal): Add support for -mno-load-vector-pair
	and -mno-store-vector-pair.
	(rs6000_opt_masks): Likewise.
	* config/rs6000/rs6000.md (isa attribute): Add lxvp and stxvp
	attributes.
	(enabled attribute): Likewise.
	* config/rs6000/rs6000.opt (-mload-vector-pair): New option.
	(-mstore-vector-pair): Likewise.

gcc/testsuite/

	* gcc.target/powerpc/vector-pair-attribute.c: New test.
	* gcc.target/powerpc/vector-pair-pragma.c: New test.
	* gcc.target/powerpc/vector-pair-switch1.c: New test.
	* gcc.target/powerpc/vector-pair-switch2.c: New test.
	* gcc.target/powerpc/vector-pair-switch3.c: New test.
	* gcc.target/powerpc/vector-pair-switch4.c: New test.

==================== Branch work162-vpair, baseline ====================

Add ChangeLog.vpair and update REVISION.

2024-03-07  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* ChangeLog.vpair: New file for branch.
	* REVISION: Update.

2024-03-07   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

