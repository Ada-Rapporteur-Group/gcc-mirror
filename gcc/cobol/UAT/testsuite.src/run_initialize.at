## Copyright (C) 2003-2012, 2014-2015, 2017-2018 Free Software Foundation, Inc.
## Written by Keisuke Nishida, Roger While, Simon Sobisch
##
## This file is part of GnuCOBOL.
##
## The GnuCOBOL compiler is free software: you can redistribute it
## and/or modify it under the terms of the GNU General Public License
## as published by the Free Software Foundation, either version 3 of the
## License, or (at your option) any later version.
##
## GnuCOBOL is distributed in the hope that it will be useful,
## but WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
## GNU General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with GnuCOBOL.  If not, see <https://www.gnu.org/licenses/>.

### GnuCOBOL Test Suite

### ISO+IEC+1989-2002 14.8.19 INITIALIZE statement

## 14.8.19.3 General rules

AT_SETUP([INITIALIZE group entry with OCCURS])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2          OCCURS 2.
           03 X1        PIC X.
           03 X2        PIC 9.
       PROCEDURE        DIVISION.
           MOVE SPACE TO G1.
           INITIALIZE G2 (2).
           IF G1 NOT = "   0"
      *>      DISPLAY G1 NO ADVANCING
      *> also applied in tests below
      *>
              DISPLAY G1
              END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([INITIALIZE OCCURS with numeric edited])
AT_KEYWORDS([initialize editing])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2          OCCURS 5.
           03 X         PIC Z9.
       PROCEDURE        DIVISION.
           INITIALIZE G1
           MOVE 5  TO X(1)
           MOVE 99 TO X(3)
           IF G1 NOT = " 5 099 0 0"
              DISPLAY 'MOVE "' G1 '"'
              END-DISPLAY
           END-IF
           INITIALIZE G1
           IF G1 NOT = " 0 0 0 0 0"
              DISPLAY 'INIT "' G1 '"'
              END-DISPLAY
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([INITIALIZE OCCURS with SIGN LEADING / TRAILING])
AT_KEYWORDS([initialize display])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 FILLER      OCCURS 2.
           03 X         PIC S9 SIGN LEADING  SEPARATE.
         02 FILLER      OCCURS 2.
           03 Y         PIC S9 SIGN TRAILING SEPARATE.
      *> definition taken from NC1184.2
       01  MINUS-NAMES SIGN IS TRAILING SEPARATE CHARACTER.
         02 MINUS-NAMES-1.
           03  MINUS-NAME1 PIC  S9(18) VALUE -999999999999999999.
           03  EVEN-NAME1  PIC  S9(18) VALUE +1.
           03  PLUS-NAME1  PIC  S9(18) VALUE +999999999999999999.
         02 MINUS-NAMES-2.
           03  MINUS-NAME3 PIC SV9(18) VALUE -.999999999999999999.
           03  EVEN-NAME2  PIC SV9(18) VALUE +.1.
           03  PLUS-NAME3  PIC SV9(18) VALUE +.999999999999999999.
       PROCEDURE        DIVISION.
           INITIALIZE G1
           MOVE 5    TO X(1), PLUS-NAME1
           MOVE -9   TO Y(2), MINUS-NAME1
           IF G1 NOT = "+5+00+9-"
              DISPLAY 'MOVE G "' G1 '"'
              END-DISPLAY
           END-IF
      **   The following line doesn't work causing test failure.
           MOVE .123 TO PLUS-NAME3
           IF MINUS-NAMES-1 NOT =
           "000000000000000009-000000000000000001+000000000000000005+"
           OR MINUS-NAMES-2 NOT =
           "999999999999999999-100000000000000000+123000000000000000+"
              DISPLAY 'MOVE MN1 "' MINUS-NAMES-1 '"'
              END-DISPLAY
              DISPLAY 'MOVE MN2 "' MINUS-NAMES-2 '"'
              END-DISPLAY
           END-IF
           INITIALIZE G1, MINUS-NAMES
           IF G1 NOT = "+0+00+0+"
              DISPLAY 'INIT G1 "' G1 '"'
              END-DISPLAY
           END-IF
           IF MINUS-NAMES-1 NOT =
           "000000000000000000+000000000000000000+000000000000000000+"
           OR MINUS-NAMES-2 NOT =
           "000000000000000000+000000000000000000+000000000000000000+"
              DISPLAY 'MOVE MN1 "' MINUS-NAMES-1 '"'
              END-DISPLAY
              DISPLAY 'MOVE MN2 "' MINUS-NAMES-2 '"'
              END-DISPLAY
           END-IF
           MOVE .123 TO PLUS-NAME3
           MOVE -.456 TO MINUS-NAME3
           DISPLAY PLUS-NAME3  END-DISPLAY
           DISPLAY MINUS-NAME3 END-DISPLAY
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0],
[.123000000000000000+
.456000000000000000-
], [])

AT_CLEANUP


AT_SETUP([INITIALIZE complex group (1)])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
         02 G2          OCCURS 2.
           03 Y         PIC 9.
         02 Z           PIC 9.
       PROCEDURE        DIVISION.
           INITIALIZE G1.
           IF G1 NOT = " 000"
              DISPLAY G1
              END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([INITIALIZE complex group (2)])
AT_KEYWORDS([initialize])
AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 G2          OCCURS 2.
           03 X         PIC 9.
           03 Y         PIC X OCCURS 2.
           03 Z         PIC X.
       PROCEDURE        DIVISION.
           MOVE ALL 'Z' TO G1
           DISPLAY """"G1""""
           INITIALIZE G1
           DISPLAY """"G1""""
           IF G1 NOT = "0   0   "
              DISPLAY "That should have been ""0   0   """
              END-DISPLAY
           END-IF
           STOP RUN.
])
AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], ["ZZZZZZZZ"
"0   0   "
], [])
AT_CLEANUP

AT_SETUP([INITIALIZE group item])
AT_KEYWORDS([initialize])

# see bug #694

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G.
         02 G2          OCCURS 3.
           03 X         PIC 9.
           03 Y.
             04 Y-REC   OCCURS 5.
              05  Y1    PIC 9 VALUE 9.
              05  Y2    PIC X VALUE 'Y'.
           03 Z         PIC X VALUE 'Z'.
       PROCEDURE        DIVISION.
           MOVE ALL "A" TO G2(1)
           MOVE ALL "B" TO G2(2)
           MOVE ALL "C" TO G2(3)
           INITIALIZE Y (2).
           IF G NOT = "AAAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
              DISPLAY "Test 1 failed: " G ".".
           MOVE ALL "A" TO G2(1)
           MOVE ALL "B" TO G2(2)
           MOVE ALL "C" TO G2(3)
           MOVE 2       TO X(1)
           INITIALIZE Y (X(1)).
           IF G NOT = "2AAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
              DISPLAY "Test 2 failed: " G ".".
           STOP RUN.
])

AT_DATA([prog2.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog2.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       77 NUM           PIC 9 COMP-5 VALUE 3.
       01 G.
         02 G2          OCCURS 0 TO 3 DEPENDING ON NUM.
           03 X         PIC 9.
           03 Y.
             04 Y-REC   OCCURS 5.
              05  Y1    PIC 9 VALUE 9.
              05  Y2    PIC X VALUE 'Y'.
           03 Z         PIC X VALUE 'Z'.
       PROCEDURE        DIVISION.
           MOVE ALL "A" TO G2(1)
           MOVE ALL "B" TO G2(2)
           MOVE ALL "C" TO G2(3)
           INITIALIZE Y (2).
           IF G NOT = "AAAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
              DISPLAY "Test 1 failed: " G ".".
           MOVE ALL "A" TO G2(1)
           MOVE ALL "B" TO G2(2)
           MOVE ALL "C" TO G2(3)
           MOVE 2       TO X(1)
           INITIALIZE Y (X(1)).
           IF G NOT = "2AAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
              DISPLAY "Test 2 failed: " G ".".
           STOP RUN.
])

# This following test is suppressed because we can't handle nested DEPENDING ON
# clauses.  Not only that, it's completely screwed up.  For example, it's
# testing for G2 strings that are 3*12 characters long, rather than 3*14.
#AT_DATA([prog3.cob], [
#       IDENTIFICATION   DIVISION.
#       PROGRAM-ID.      prog3.
#       DATA             DIVISION.
#       WORKING-STORAGE  SECTION.
#       77 NUM           PIC 9 COMP-5 VALUE 3.
#       77 NUM2          PIC 9 COMP-5 VALUE 5.
#       01 G.
#         02 G2          OCCURS 0 TO 3 DEPENDING ON NUM.
#           03 X         PIC 9.
#           03 Y         PIC X VALUE 'Z'.
#           03 Z         OCCURS 1 TO 6 DEPENDING ON NUM2.
#              05  Z1    PIC 9 VALUE 9.
#              05  Z2    PIC X.
#       PROCEDURE        DIVISION.
#           MOVE ALL "A" TO G2(1)
#           MOVE ALL "B" TO G2(2)
#           MOVE ALL "C" TO G2(3)
#           INITIALIZE Y (2).
#           IF G NOT = "AAAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
#              DISPLAY "Test 1 failed: " G ".".
#           MOVE ALL "A" TO G2(1)
#           MOVE ALL "B" TO G2(2)
#           MOVE ALL "C" TO G2(3)
#           MOVE 2       TO X(1)
#           INITIALIZE Y (X(1)).
#           IF G NOT = "2AAAAAAAAAAAB0 0 0 0 0 BCCCCCCCCCCCC"
#              DISPLAY "Test 2 failed: " G ".".
#           STOP RUN.
#])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])
AT_CHECK([$COMPILE prog2.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])
#AT_CHECK([$COMPILE prog3.cob], [0], [], [])
#AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([INITIALIZE with REDEFINES])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC X.
         02 Y           REDEFINES X PIC 9.
         02 Z           PIC 9.
       PROCEDURE        DIVISION.
           INITIALIZE G1.
           IF G1 NOT = " 0"
              DISPLAY G1
              END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([INITIALIZE of EXTERNAL data items])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 EXT-VAR-01    PIC X(5) EXTERNAL.
       01 EXT-VAR-GRP   EXTERNAL.
         02  EXT-FIELD1 PIC 999.
         02  EXT-FIELD2 PIC x(4).
         02  EXT-FIELD3 PIC 9(6).
         02  EXT-FIELD4 PIC s9(5)v99.
       PROCEDURE        DIVISION.
           MOVE "MOVE"  TO EXT-VAR-01.
           MOVE 1       TO EXT-FIELD1.
           MOVE "X"     TO EXT-FIELD2.
           MOVE 123     TO EXT-FIELD3.
           MOVE -2.1    TO EXT-FIELD4.
           INITIALIZE EXT-VAR-01.
           INITIALIZE EXT-VAR-GRP.
           IF EXT-VAR-01 NOT = SPACES
              DISPLAY "EXT-VAR-01 " EXT-VAR-01
              END-DISPLAY
           END-IF.
           IF EXT-FIELD1 NOT = ZERO
              DISPLAY "EXT-FIELD1 " EXT-FIELD1
              END-DISPLAY
           END-IF.
           IF EXT-FIELD2 NOT = SPACES
              DISPLAY "EXT-FIELD2 " EXT-FIELD2
              END-DISPLAY
           END-IF.
           IF EXT-FIELD3 NOT = ZERO
              DISPLAY "EXT-FIELD3 " EXT-FIELD3
              END-DISPLAY
           END-IF.
           IF EXT-FIELD4 NOT = ZERO
              DISPLAY "EXT-FIELD4 " EXT-FIELD4
              END-DISPLAY
           END-IF.
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP

AT_SETUP([INITIALIZE with FILLER])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01 G1.
         02 X           PIC 99.
         02 FILLER      PIC X.
         02 Z           PIC 99.
       01 MY-FILLER.
         02 FILLER      PIC 9(6) VALUE 12345.
       PROCEDURE        DIVISION.
           MOVE ALL   'A' TO G1.
           INITIALIZE G1.
           IF G1 NOT = "00A00"
              DISPLAY "G1 (INIT): " G1
              END-DISPLAY
           END-IF.
           MOVE ALL   'A' TO G1.
           INITIALIZE G1  WITH FILLER.
           IF G1 NOT = "00 00"
              DISPLAY "G1 (INIT FILLER):"   G1
              END-DISPLAY
           END-IF.

           INITIALIZE MY-FILLER
           IF MY-FILLER NOT = "012345"
              DISPLAY "MY-FILLER (INIT): " MY-FILLER
              END-DISPLAY
           END-IF

           INITIALIZE MY-FILLER WITH FILLER
           IF MY-FILLER NOT = "000000"
              DISPLAY "MY-FILLER (INIT FILLER): " MY-FILLER
              END-DISPLAY
           END-IF

           INITIALIZE MY-FILLER ALL TO VALUE
           IF MY-FILLER NOT = "000000"
              DISPLAY "MY-FILLER (INIT TO VAL): " MY-FILLER
              END-DISPLAY
           END-IF

           INITIALIZE MY-FILLER WITH FILLER ALL TO VALUE
           IF MY-FILLER NOT = "012345"
              DISPLAY "MY-FILLER (INIT FILLER TO VAL): " MY-FILLER
              END-DISPLAY
           END-IF

           INITIALIZE MY-FILLER (2:3)
           IF MY-FILLER NOT = "0   45"
              DISPLAY "MY-FILLER (REF-MOD): " MY-FILLER
              END-DISPLAY
           END-IF

           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP

AT_SETUP([INITIALIZE with reference modification])
AT_KEYWORDS([initialize])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       01  MY-FLD       PIC X(6) VALUE "ABCDEF".
       01  MY-OTHER-FLD PIC 9(4) VALUE ZERO.
       PROCEDURE        DIVISION.
       ASTART SECTION.
       A01.
           INITIALIZE MY-FLD (1:2).
           IF MY-FLD NOT = "  CDEF"
              DISPLAY "MY-FLD: " MY-FLD
              END-DISPLAY
           END-IF

      *>  note: INITIALIZE with refmod => handle field as alphanumeric
           INITIALIZE MY-OTHER-FLD (2:2)
           MOVE "0  0" TO MY-FLD
           IF MY-OTHER-FLD NOT = MY-FLD (1:4)
               DISPLAY "MY-OTHER-FLD: " MY-OTHER-FLD
               END-DISPLAY
           END-IF

           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP

###

AT_SETUP([INITIALIZE with -defaultbyte])
AT_KEYWORDS([initialize defaultbyte])
#AT_XFAIL_IF([test "$COB_DIALECT" != "gcc"])

AT_DATA([prog.cob], [
        IDENTIFICATION   DIVISION.
        PROGRAM-ID.      proga.
        PROCEDURE        DIVISION.
        call "prog"
        call "prog"
        goback.
        end program proga.
        IDENTIFICATION   DIVISION.
        PROGRAM-ID.      prog.
        DATA             DIVISION.
        WORKING-STORAGE  SECTION.
        01  MY-FLD       PIC X(6) VALUE "ABCDEF".
        01  MY-OTHER-FLD PIC 9(4) VALUE ZERO.
        01  FILLER.
           02 PHONE-NUMBER.
              03 NAME      PIC A(30).
              03 AREA-CODE PIC 999.
              03 DASH      PIC X VALUE'-'.
              03 PREFIX    PIC 999.
              03 DASH      PIC X VALUE'-'.
              03 LOCAL     PIC 999.
        77 WHO-AM-I PIC X(12).
        PROCEDURE        DIVISION.
        ASTART SECTION.
        A01.
        DISPLAY MY-FLD.
        DISPLAY MY-OTHER-FLD.
        DISPLAY PHONE-NUMBER.
        DISPLAY WHO-AM-I.
        DISPLAY FUNCTION HEX-OF( AREA-CODE(1:1) ).
        move quote to phone-number
        display """" phone-number """"
        goback.
        end program prog.
])
AT_CHECK([$COMPILE -fdefaultbyte 64 prog.cob ], [0], [], [])
AT_CHECK([./a.out], [0], [ABCDEF
0000
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@@@-@@@
@@@@@@@@@@@@
40
"""""""""""""""""""""""""""""""""""""""""""
ABCDEF
0000
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@-@@@-@@@
@@@@@@@@@@@@
40
"""""""""""""""""""""""""""""""""""""""""""
], [])
AT_CLEANUP


AT_SETUP([Complex INITIALIZE with nested tables (1)])
AT_KEYWORDS([initialize ])
AT_DATA([prog.cob], [
        program-id. prog.
        data division.
        working-storage section.

        01 foo.
          05 FNAME  PIC X(7) VALUE "James".
          05 FILLER PIC X(7) VALUE "Keen ".
          05 LNAME  PIC X(7) VALUE "Lowden".

        01 filler  PIC 9999 BINARY value zero.

        01 foo3.
          02 three-lines occurs 3 times.
            05 FNAME  PIC X(7) VALUE "James".
            05 FILLER PIC X(7) VALUE "Keen ".
            05 LNAME  PIC X(7) VALUE "Lowden".

        01 filler  PIC 9999 BINARY value zero.

        01 four-by-four.
          05 four-outer occurs 4 times.
            10 four-inner occurs 4 times.
              15 FNAME  PIC X(7) VALUE "James".
              15 FILLER PIC X(7) VALUE "Keen ".
              15 LNAME  PIC X(7) VALUE "Lowden".

        01 filler  PIC 9999 BINARY value zero.

        01 four-by-four2.
          05 label5 pic x(12) value "four-by-four".
          05 four-outer2 occurs 4 times.
            10 label10 pic x(12) value "four-outer".
            10 four-inner2 occurs 4 times.
              15 label15 pic x(12) value "four-inner".
              15 FNAME  PIC X(7) VALUE "James".
              15 FILLER PIC X(7) VALUE "Keen ".
              15 LNAME  PIC X(7) VALUE "Lowden".

        procedure division.
        display "   Simple data structure"
        display "1 " """" foo """".
        INITIALIZE foo.
        display "2 " """" foo """".
        INITIALIZE foo WITH FILLER.
        display "3 " """" foo """".
        INITIALIZE foo ALL VALUE
        display "4 " """" foo """".
        INITIALIZE foo WITH FILLER ALL VALUE
        display "5 " """" foo """".

        display "    Simple table"
        display "31 " """" foo3 """".
        initialize foo3
        display "32 " """" foo3 """".
        INITIALIZE foo3 WITH FILLER.
        display "33 " """" foo3 """".
        INITIALIZE foo3 ALL VALUE
        display "34 " """" foo3 """".
        INITIALIZE foo3 WITH FILLER ALL VALUE
        display "35 " """" foo3 """".
        
        move all "A" to three-lines(1)
        move all "B" to three-lines(2)
        move all "C" to three-lines(3)
        display "36 " """" foo3 """".
        INITIALIZE foo3 ALL VALUE
        display "37 " """" foo3 """".

        display "      Simple four-by-four table"
        display "40-1 " """" four-outer(1) """"
        display "40-2 " """" four-outer(2) """"
        display "40-3 " """" four-outer(3) """"
        display "40-4 " """" four-outer(4) """"

        move all 'A' to four-inner(1 1)
        move all 'B' to four-inner(1 2)
        move all 'C' to four-inner(1 3)
        move all 'D' to four-inner(1 4)
        move all 'E' to four-inner(2 1)
        move all 'F' to four-inner(2 2)
        move all 'G' to four-inner(2 3)
        move all 'H' to four-inner(2 4)
        move all 'I' to four-inner(3 1)
        move all 'J' to four-inner(3 2)
        move all 'K' to four-inner(3 3)
        move all 'L' to four-inner(3 4)
        move all 'M' to four-inner(4 1)
        move all 'N' to four-inner(4 2)
        move all 'O' to four-inner(4 3)
        move all 'P' to four-inner(4 4)

        display "41-1 " """" four-outer(1) """"
        display "41-2 " """" four-outer(2) """"
        display "41-3 " """" four-outer(3) """"
        display "41-4 " """" four-outer(4) """"

        INITIALIZE four-by-four ALL VALUE

        display "42-1 " """" four-outer(1) """"
        display "42-2 " """" four-outer(2) """"
        display "42-3 " """" four-outer(3) """"
        display "42-4 " """" four-outer(4) """"

        display "      Complex four-by-four table, with extra fields"
        display "50-1 " """" four-outer2(1) """"
        display "50-2 " """" four-outer2(2) """"
        display "50-3 " """" four-outer2(3) """"
        display "50-4 " """" four-outer2(4) """"

        INITIALIZE four-by-four2.
        display "      After INITIALIZE, only the KEEN columns should be left"
        display "51-1 " """" four-outer2(1) """"
        display "51-2 " """" four-outer2(2) """"
        display "51-3 " """" four-outer2(3) """"
        display "51-4 " """" four-outer2(4) """"
        INITIALIZE four-by-four2 WITH FILLER.
        display "      After INITIALIZE WITH FILLER, all should be blank"
        display "52-1 " """" four-outer2(1) """"
        display "52-2 " """" four-outer2(2) """"
        display "52-3 " """" four-outer2(3) """"
        display "52-4 " """" four-outer2(4) """"
        INITIALIZE four-by-four2 ALL VALUE
        display "      After INITIALIZE ALL VALUE, all but the KEEN columns should be back"
        display "53-1 " """" four-outer2(1) """"
        display "53-2 " """" four-outer2(2) """"
        display "53-3 " """" four-outer2(3) """"
        display "53-4 " """" four-outer2(4) """"
        INITIALIZE four-by-four2 WITH FILLER ALL VALUE
        display "      After INITIALIZE WITH FILLER ALL VALUE, should be the original"
        display "54-1 " """" four-outer2(1) """"
        display "54-2 " """" four-outer2(2) """"
        display "54-3 " """" four-outer2(3) """"
        display "54-4 " """" four-outer2(4) """"

        move all 'A' to four-inner2(1 1)
        move all 'B' to four-inner2(1 2)
        move all 'C' to four-inner2(1 3)
        move all 'D' to four-inner2(1 4)
        move all 'E' to four-inner2(2 1)
        move all 'F' to four-inner2(2 2)
        move all 'G' to four-inner2(2 3)
        move all 'H' to four-inner2(2 4)
        move all 'I' to four-inner2(3 1)
        move all 'J' to four-inner2(3 2)
        move all 'K' to four-inner2(3 3)
        move all 'L' to four-inner2(3 4)
        move all 'M' to four-inner2(4 1)
        move all 'N' to four-inner2(4 2)
        move all 'O' to four-inner2(4 3)
        move all 'P' to four-inner2(4 4)

        display "      After setting FILLER fields to unique values"
        display "55-1 " """" four-outer2(1) """"
        display "55-2 " """" four-outer2(2) """"
        display "55-3 " """" four-outer2(3) """"
        display "55-4 " """" four-outer2(4) """"

        INITIALIZE four-by-four2 ALL VALUE
        display "      After INITIALIZE ALL VALUE, the KEEN columns should have the unique values"
        display "56-1 " """" four-outer2(1) """"
        display "56-2 " """" four-outer2(2) """"
        display "56-3 " """" four-outer2(3) """"
        display "56-4 " """" four-outer2(4) """"

        goback.
])
AT_CHECK([$COMPILE  prog.cob ], [0], [], [])
AT_CHECK([./a.out], [0], [   Simple data structure
1 "James  Keen   Lowden "
2 "       Keen          "
3 "                     "
4 "James         Lowden "
5 "James  Keen   Lowden "
    Simple table
31 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
32 "       Keen                 Keen                 Keen          "
33 "                                                               "
34 "James         Lowden James         Lowden James         Lowden "
35 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
36 "AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCC"
37 "James  AAAAAAALowden James  BBBBBBBLowden James  CCCCCCCLowden "
      Simple four-by-four table
40-1 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
40-2 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
40-3 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
40-4 "James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden James  Keen   Lowden "
41-1 "AAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDD"
41-2 "EEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHH"
41-3 "IIIIIIIIIIIIIIIIIIIIIJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLL"
41-4 "MMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPP"
42-1 "James  AAAAAAALowden James  BBBBBBBLowden James  CCCCCCCLowden James  DDDDDDDLowden "
42-2 "James  EEEEEEELowden James  FFFFFFFLowden James  GGGGGGGLowden James  HHHHHHHLowden "
42-3 "James  IIIIIIILowden James  JJJJJJJLowden James  KKKKKKKLowden James  LLLLLLLLowden "
42-4 "James  MMMMMMMLowden James  NNNNNNNLowden James  OOOOOOOLowden James  PPPPPPPLowden "
      Complex four-by-four table, with extra fields
50-1 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
50-2 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
50-3 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
50-4 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
      After INITIALIZE, only the KEEN columns should be left
51-1 "                               Keen                             Keen                             Keen                             Keen          "
51-2 "                               Keen                             Keen                             Keen                             Keen          "
51-3 "                               Keen                             Keen                             Keen                             Keen          "
51-4 "                               Keen                             Keen                             Keen                             Keen          "
      After INITIALIZE WITH FILLER, all should be blank
52-1 "                                                                                                                                                "
52-2 "                                                                                                                                                "
52-3 "                                                                                                                                                "
52-4 "                                                                                                                                                "
      After INITIALIZE ALL VALUE, all but the KEEN columns should be back
53-1 "four-outer  four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden "
53-2 "four-outer  four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden "
53-3 "four-outer  four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden "
53-4 "four-outer  four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden four-inner  James         Lowden "
      After INITIALIZE WITH FILLER ALL VALUE, should be the original
54-1 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
54-2 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
54-3 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
54-4 "four-outer  four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden four-inner  James  Keen   Lowden "
      After setting FILLER fields to unique values
55-1 "four-outer  AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD"
55-2 "four-outer  EEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH"
55-3 "four-outer  IIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJJKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL"
55-4 "four-outer  MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP"
      After INITIALIZE ALL VALUE, the KEEN columns should have the unique values
56-1 "four-outer  four-inner  James  AAAAAAALowden four-inner  James  BBBBBBBLowden four-inner  James  CCCCCCCLowden four-inner  James  DDDDDDDLowden "
56-2 "four-outer  four-inner  James  EEEEEEELowden four-inner  James  FFFFFFFLowden four-inner  James  GGGGGGGLowden four-inner  James  HHHHHHHLowden "
56-3 "four-outer  four-inner  James  IIIIIIILowden four-inner  James  JJJJJJJLowden four-inner  James  KKKKKKKLowden four-inner  James  LLLLLLLLowden "
56-4 "four-outer  four-inner  James  MMMMMMMLowden four-inner  James  NNNNNNNLowden four-inner  James  OOOOOOOLowden four-inner  James  PPPPPPPLowden "
], [])
AT_CLEANUP


AT_SETUP([Complex INITIALIZE with nested tables (2)])
AT_KEYWORDS([initialize ])
AT_DATA([prog.cob], [
        program-id. prog.
        data division.
        working-storage section.

        01 three-by-three2.
          05 label5 pic x(12) value "three-by-three".
          05 three-outer2 occurs 3 times.
            10 label10 pic x(12) value "leading".
            10 three-inner2 occurs 3 times.
              15 label15 pic x(12) value "three-inner".
              15 FNAME  PIC X(7) VALUE "James".
              15 FILLER PIC X(7) VALUE "Keen ".
              15 LNAME  PIC X(7) VALUE "Lowden".
            10 label10 pic x(12) value "middling".
            10 three-inner22 occurs 3 times.
              15 label15 pic x(12) value "three-inner".
              15 FNAME  PIC X(7) VALUE "James".
              15 FILLER PIC X(7) VALUE "Keen ".
              15 LNAME  PIC X(7) VALUE "Lowden".
            10 label10 pic x(12) value "trailing".

        procedure division.
        display "      Complex three-by-three table, with extra fields"
        display "50-1 " """" three-outer2(1) """"
        display "50-2 " """" three-outer2(2) """"
        display "50-3 " """" three-outer2(3) """"

        INITIALIZE three-by-three2.
        display "      After INITIALIZE, only the KEEN columns should be left"
        display "51-1 " """" three-outer2(1) """"
        display "51-2 " """" three-outer2(2) """"
        display "51-3 " """" three-outer2(3) """"
        INITIALIZE three-by-three2 WITH FILLER.
        display "      After INITIALIZE WITH FILLER, all should be blank"
        display "52-1 " """" three-outer2(1) """"
        display "52-2 " """" three-outer2(2) """"
        display "52-3 " """" three-outer2(3) """"
        INITIALIZE three-by-three2 ALL VALUE
        display "      After INITIALIZE ALL VALUE, all but the KEEN columns should be back"
        display "53-1 " """" three-outer2(1) """"
        display "53-2 " """" three-outer2(2) """"
        display "53-3 " """" three-outer2(3) """"
        INITIALIZE three-by-three2 WITH FILLER ALL VALUE
        display "      After INITIALIZE WITH FILLER ALL VALUE, should be the original"
        display "54-1 " """" three-outer2(1) """"
        display "54-2 " """" three-outer2(2) """"
        display "54-3 " """" three-outer2(3) """"

        move all 'Z' to three-by-three2
        move all 'A' to three-inner2(1 1)
        move all 'B' to three-inner2(1 2)
        move all 'C' to three-inner2(1 3)
        move all 'D' to three-inner2(2 1)
        move all 'E' to three-inner2(2 2)
        move all 'F' to three-inner2(2 3)
        move all 'G' to three-inner2(3 1)
        move all 'H' to three-inner2(3 2)
        move all 'I' to three-inner2(3 3)

        move all 'a' to three-inner22(1 1)
        move all 'b' to three-inner22(1 2)
        move all 'c' to three-inner22(1 3)
        move all 'd' to three-inner22(2 1)
        move all 'e' to three-inner22(2 2)
        move all 'f' to three-inner22(2 3)
        move all 'g' to three-inner22(3 1)
        move all 'h' to three-inner22(3 2)
        move all 'i' to three-inner22(3 3)

        display "      After setting FILLER fields to unique values"
        display "55-1 " """" three-outer2(1) """"
        display "55-2 " """" three-outer2(2) """"
        display "55-3 " """" three-outer2(3) """"

        INITIALIZE three-by-three2 ALL VALUE
        display "      After INITIALIZE ALL VALUE, the KEEN columns should have the unique values"
        display "56-1 " """" three-outer2(1) """"
        display "56-2 " """" three-outer2(2) """"
        display "56-3 " """" three-outer2(3) """"

        goback.
])
AT_CHECK([$COMPILE  prog.cob ], [0], [], [])
AT_CHECK([./a.out], [0], [      Complex three-by-three table, with extra fields
50-1 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
50-2 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
50-3 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
      After INITIALIZE, only the KEEN columns should be left
51-1 "                               Keen                             Keen                             Keen                                         Keen                             Keen                             Keen                      "
51-2 "                               Keen                             Keen                             Keen                                         Keen                             Keen                             Keen                      "
51-3 "                               Keen                             Keen                             Keen                                         Keen                             Keen                             Keen                      "
      After INITIALIZE WITH FILLER, all should be blank
52-1 "                                                                                                                                                                                                                                          "
52-2 "                                                                                                                                                                                                                                          "
52-3 "                                                                                                                                                                                                                                          "
      After INITIALIZE ALL VALUE, all but the KEEN columns should be back
53-1 "leading     three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden middling    three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden trailing    "
53-2 "leading     three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden middling    three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden trailing    "
53-3 "leading     three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden middling    three-inner James         Lowden three-inner James         Lowden three-inner James         Lowden trailing    "
      After INITIALIZE WITH FILLER ALL VALUE, should be the original
54-1 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
54-2 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
54-3 "leading     three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden middling    three-inner James  Keen   Lowden three-inner James  Keen   Lowden three-inner James  Keen   Lowden trailing    "
      After setting FILLER fields to unique values
55-1 "ZZZZZZZZZZZZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCZZZZZZZZZZZZaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaabbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbcccccccccccccccccccccccccccccccccZZZZZZZZZZZZ"
55-2 "ZZZZZZZZZZZZDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFZZZZZZZZZZZZdddddddddddddddddddddddddddddddddeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeefffffffffffffffffffffffffffffffffZZZZZZZZZZZZ"
55-3 "ZZZZZZZZZZZZGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIIZZZZZZZZZZZZggggggggggggggggggggggggggggggggghhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhhiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiZZZZZZZZZZZZ"
      After INITIALIZE ALL VALUE, the KEEN columns should have the unique values
56-1 "leading     three-inner James  AAAAAAALowden three-inner James  BBBBBBBLowden three-inner James  CCCCCCCLowden middling    three-inner James  aaaaaaaLowden three-inner James  bbbbbbbLowden three-inner James  cccccccLowden trailing    "
56-2 "leading     three-inner James  DDDDDDDLowden three-inner James  EEEEEEELowden three-inner James  FFFFFFFLowden middling    three-inner James  dddddddLowden three-inner James  eeeeeeeLowden three-inner James  fffffffLowden trailing    "
56-3 "leading     three-inner James  GGGGGGGLowden three-inner James  HHHHHHHLowden three-inner James  IIIIIIILowden middling    three-inner James  gggggggLowden three-inner James  hhhhhhhLowden three-inner James  iiiiiiiLowden trailing    "
], [])
AT_CLEANUP
