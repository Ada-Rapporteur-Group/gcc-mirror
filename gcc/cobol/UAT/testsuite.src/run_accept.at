## Copyright (C) 2003-2012, 2014-2019 Free Software Foundation, Inc.
## Copyright (C) 2020-2023 COBOLworx.
## Written by Keisuke Nishida, Roger While, Simon Sobisch, Ron Norman,
##    Marty Heyman, Nick Mower
##
## This file was copied from GnuCOBOL and modified for use with COBOL.
## for GCC (gcobol).
## The COBOL for GCC compiler is free software: you can redistribute it
## and/or modify it under the terms of the Symas Open Licence. A copy
## of that license is in the LICENSE file included in the distribution.
##

### COBOL for GCC Test Suite

### ISO+IEC+1989-2002 14.8.1 ACCEPT statement
### ISO+IEC+1989-2014 14.9.1 ACCEPT statement

# Format 1: hardware / device

# AT_SETUP([ACCEPT OMITTED (simple)])
# AT_KEYWORDS([accept extensions])
# AT_SKIP_IF(true)
# OMITTED clause of ACCEPT for Format 1 not present in
#    ISO-IEC2014. DIALECT potential
# ### COMMENTED OUT ENTIRELY ###
# OMITTED clause of ACCEPT not implemented (EXTENSION?) TODO
#
# AT_DATA([prog.cob], [
#        IDENTIFICATION DIVISION.
#        PROGRAM-ID.    prog.
#        PROCEDURE      DIVISION.
#            ACCEPT OMITTED.
# ])
#
# AT_DATA([input.txt], [
# ])
#
#
# AT_CLEANUP

#
## FORMAT 1: FROM mnemonic TEST(S) needed TODO
#

#
## Format 2: chronological / temporal
#

AT_SETUP([ACCEPT FROM TIME / DATE / DAY / DAY-OF-WEEK (1)])
AT_KEYWORDS([ACCEPT INSPECT CONVERTING])
# ACCEPT FROM ... not implemented TODO
# Chronologicals and temporals not/partially implemented?

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       *> one byte longer to make sure there is no garbage in
       01 X             PIC X(9).
       PROCEDURE        DIVISION.
           ACCEPT X FROM TIME
           END-ACCEPT
           IF X (1:2) >= "00" AND <= "23" AND
              X (3:2) >= "00" AND <= "59" AND
              X (5:2) >= "00" AND <= "60" AND
              X (7:2) >= "00" AND <= "99" AND
              X (9: )  = SPACE
              CONTINUE
           ELSE
              DISPLAY "TIME " X "!"
              END-DISPLAY
           END-IF
           ACCEPT X FROM DATE
           END-ACCEPT
           INSPECT X CONVERTING "012345678" TO "999999999"
           IF X NOT = "999999"
              DISPLAY "DATE " X "!"
              END-DISPLAY
           END-IF
           ACCEPT X FROM DATE YYYYMMDD
           END-ACCEPT
           INSPECT X CONVERTING "012345678" TO "999999999"
           IF X NOT = "99999999"
              DISPLAY "YYYYMMDD " X "!"
              END-DISPLAY
           END-IF
           ACCEPT X FROM DAY
           END-ACCEPT
           INSPECT X CONVERTING "012345678" TO "999999999"
           IF X NOT = "99999"
              DISPLAY "DAY " X "!"
              END-DISPLAY
           END-IF
           ACCEPT X FROM DAY YYYYDDD
           END-ACCEPT
           INSPECT X CONVERTING "012345678" TO "999999999"
           IF X NOT = "9999999"
              DISPLAY "YYYYDDD " X "!"
              END-DISPLAY
           END-IF
           ACCEPT X FROM DAY-OF-WEEK
           END-ACCEPT
           INSPECT X CONVERTING "1234567" TO "9999999"
           IF X NOT = "9"
              DISPLAY "DAY-OF-WEEK " X "!"
              END-DISPLAY
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])

AT_CLEANUP


AT_SETUP([ACCEPT FROM TIME / DATE / DAY / DAY-OF-WEEK (2)])
AT_KEYWORDS([accept configuration COB_CURRENT_DATE])
# ACCEPT FROM ... not implemented TODO
# SYSERR not implemented TODO
# SYSERR CHANGED to STDERR (Dialect "fix")
# Chronologicals and temporals not/partially implemented?

AT_DATA([prog.cob], [
       IDENTIFICATION DIVISION.
       PROGRAM-ID. prog.
       DATA DIVISION.
       WORKING-STORAGE SECTION.
       *> one byte longer to make sure there is no garbage in
       01  WS-YYYYMMDD   PIC X(9).
       01  WS-YYYYDDD    PIC X(8).
       01  WS-DAYOFWEEK  PIC X(2).
       01  WS-DATE-TODAY.
           05  WS-TODAYS-YY            PIC 9(02) VALUE 0.
           05  WS-TODAYS-MM            PIC 9(02) VALUE 0.
           05  WS-TODAYS-DD            PIC 9(02) VALUE 0.

       01  WS-DATE.
           05  WS-DATE-MM              PIC 9(02) VALUE 0.
           05  FILLER                  PIC X(01) VALUE '/'.
           05  WS-DATE-DD              PIC 9(02) VALUE 0.
           05  FILLER                  PIC X(01) VALUE '/'.
           05  WS-DATE-YY              PIC 9(02) VALUE 0.

       01  WS-TIME-NOW.
           05  WS-NOW-HH               PIC 9(02) VALUE 0.
           05  WS-NOW-MM               PIC 9(02) VALUE 0.
           05  WS-NOW-SS               PIC 9(02) VALUE 0.
           05  WS-NOW-HS               PIC 9(02) VALUE 0.

       01  WS-TIME.
           05  WS-TIME-HH              PIC 9(02) VALUE 0.
           05  FILLER                  PIC X(01) VALUE ':'.
           05  WS-TIME-MM              PIC 9(02) VALUE 0.
           05  FILLER                  PIC X(01) VALUE ':'.
           05  WS-TIME-SS              PIC 9(02) VALUE 0.

       PROCEDURE DIVISION.
           ACCEPT WS-DATE-TODAY FROM DATE
           ACCEPT WS-TIME-NOW   FROM TIME
           MOVE WS-TODAYS-YY TO WS-DATE-YY
           MOVE WS-TODAYS-MM TO WS-DATE-MM
           MOVE WS-TODAYS-DD TO WS-DATE-DD
           MOVE WS-NOW-HH    TO WS-TIME-HH
           MOVE WS-NOW-MM    TO WS-TIME-MM
           MOVE WS-NOW-SS    TO WS-TIME-SS
           DISPLAY 'PROCESS DATE/TIME : ' WS-DATE SPACE WS-TIME
           END-DISPLAY
           ACCEPT  WS-YYYYMMDD   FROM DATE YYYYMMDD
           DISPLAY WS-YYYYMMDD(1:8)
           IF WS-YYYYMMDD not = "20150405"
              DISPLAY 'Wrong date DATE YYYYMMDD: ' WS-YYYYMMDD
                      ' expected: 20150405'
                      UPON STDERR
              END-DISPLAY
           END-IF
           ACCEPT  WS-YYYYDDD    FROM DAY  YYYYDDD
           DISPLAY WS-YYYYDDD(1:7)
           IF WS-YYYYDDD  not = "2015095"
              DISPLAY 'Wrong date YYYYDDD:  '      WS-YYYYDDD
                      ' expected: 2015095'
                      UPON STDERR
              END-DISPLAY
           END-IF
           ACCEPT  WS-DAYOFWEEK    FROM DAY-OF-WEEK
           DISPLAY WS-DAYOFWEEK(1:1)
           IF WS-DAYOFWEEK  not = "7"
              DISPLAY 'Wrong date DAYOFWEEK: '     WS-DAYOFWEEK
                      ' expected: 7'
                      UPON STDERR
              END-DISPLAY
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([COB_CURRENT_DATE='2015/04/05 18:45:22' ./a.out], [0],
[PROCESS DATE/TIME : 04/05/15 18:45:22
20150405
2015095
7
], [])

AT_CLEANUP


# verify that the current date between ACCEPT DATE and DAY matches
# using the intrinsic conversion FUNCTIONs
AT_SETUP([ACCEPT DATE / DAY and intrinsic functions (1)])
AT_KEYWORDS([accept FUNCTION INTEGER-OF-DATE DAY-OF-INTEGER])

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       *> one byte longer to make sure there is no garbage in
       01  WS-YYYYMMDD   PIC 9(9).
       01  WS-YYYYDDD    PIC 9(8).
       PROCEDURE        DIVISION.
           ACCEPT WS-YYYYMMDD FROM DATE YYYYMMDD
           END-ACCEPT
           ACCEPT WS-YYYYDDD  FROM DAY  YYYYDDD
           END-ACCEPT
           IF    FUNCTION INTEGER-OF-DATE (WS-YYYYMMDD)
           NOT = FUNCTION INTEGER-OF-DAY  (WS-YYYYDDD)
              DISPLAY "DIFFERENCES FOUND!"
              END-DISPLAY
              DISPLAY "YYYYMMDD = " WS-YYYYMMDD ", "
                      "YYYYDDD = " WS-YYYYDDD
              END-DISPLAY
              DISPLAY "INTEGER-OF-DATE = "
                      FUNCTION INTEGER-OF-DATE (WS-YYYYMMDD) ", "
                      "INTEGER-OF-DAY = "
                      FUNCTION INTEGER-OF-DAY  (WS-YYYYDDD)
              END-DISPLAY
              MOVE 1 TO RETURN-CODE
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([./a.out], [0], [], [])
AT_CLEANUP

AT_SETUP([ACCEPT DATE / DAY and intrinsic functions (2)])
AT_KEYWORDS([accept configuration FUNCTION INTEGER-OF-DATE DAY-OF-INTEGER COB_CURRENT_DATE])
AT_SKIP_IF(false)
# ACCEPT FROM ... not implemented TODO
# Intrinsics not implemented TODO
# Chronologicals and temporals not/partially implemented?

# FIXME: verify via COB_CURRENT_DATE that the values are resolved correctly

AT_DATA([prog.cob], [
       IDENTIFICATION   DIVISION.
       PROGRAM-ID.      prog.
       DATA             DIVISION.
       WORKING-STORAGE  SECTION.
       *> one byte longer to make sure there is no garbage in
       01  WS-YYYYMMDD   PIC 9(9).
       01  WS-YYYYDDD    PIC 9(8).
       PROCEDURE        DIVISION.
           ACCEPT WS-YYYYMMDD FROM DATE YYYYMMDD
           END-ACCEPT
           ACCEPT WS-YYYYDDD  FROM DAY  YYYYDDD
           END-ACCEPT
           IF    FUNCTION INTEGER-OF-DATE (WS-YYYYMMDD)
           NOT = FUNCTION INTEGER-OF-DAY  (WS-YYYYDDD)
              DISPLAY "DIFFERENCES FOUND!"
              END-DISPLAY
              DISPLAY "YYYYMMDD = " WS-YYYYMMDD ", "
                      "YYYYDDD = " WS-YYYYDDD
              END-DISPLAY
              DISPLAY "INTEGER-OF-DATE = "
                      FUNCTION INTEGER-OF-DATE (WS-YYYYMMDD) ", "
                      "INTEGER-OF-DAY = "
                      FUNCTION INTEGER-OF-DAY  (WS-YYYYDDD)
              END-DISPLAY
              MOVE 1 TO RETURN-CODE
           END-IF
           STOP RUN.
])

AT_CHECK([$COMPILE prog.cob], [0], [], [])
AT_CHECK([COB_CURRENT_DATE='2020/06/12 18:45:22' ./a.out], [0], [], [])

AT_CLEANUP

