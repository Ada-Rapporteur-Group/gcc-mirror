# This makefile is for regression testing.  It assumes there is a
# single .cbl file to be compiled and run, The combined output of the
# compilation and the run is placed in an under-test.txt file, and then
# compared with a known-good.txt file.

# This include file establishes the path to the compilation executables
include ../MakeVars.inc

$(info GCC_BIN IS $(GCC_BIN))

SOURCE_FILE = $(wildcard *.cbl)

DONT_FAIL_DIFF ?= false

BEFORE := $(wildcard before.scr)
AFTER  := $(wildcard after.scr)

EBCDIC=-finternal-ebcdic

.PHONY: all
all:
	@echo "Choices:"
	@echo "'make test'       -- compares result to known-good"
	@echo "'make known-good' -- builds known-good"
	@echo "'make testv'      -- compiles with visible results"
	@echo "'make testvv'     -- compiles with -f-flex-debug -f-yacc-debug
	@echo "'make testd',     -- uses gdb to launch cobol1"
	@echo "'make testt',     -- generates .tag and .gimple files

.PHONY: test
test:
#	Assume any .rpt file is generated by the program under test, and is
#	incorprated into under-test.txt:
	@rm -f test *.rpt
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	gcc $(DEBUG) -O0 -c -o c_sub.o c_sub.c
	$(GCC_BIN)/$(GCOBOL) -main -B $(GCC_BIN) $(DEBUG) $(EBCDIC) -O0 -o test $(SOURCE_FILE) c_sub.o $(SEARCH_PATHS) $(COBOL_RUNTIME_LIBRARY) \
						> under-test.txt 2>&1 || true
	./test <input.txt >>under-test.txt 2>&1 || true
	cat *.rpt 2>/dev/null >> under-test.txt || true
ifneq ("$(AFTER)","")
	./$(AFTER)
endif
	diff -u known-good.txt under-test.txt || $(DONT_FAIL_DIFF)

.PHONY: known-good
known-good:
	@rm -f test *.rpt
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	gcc $(DEBUG) -O0 -c -o c_sub.o c_sub.c
	$(GCC_BIN)/$(GCOBOL) -main -B $(GCC_BIN) $(DEBUG) $(EBCDIC) -O0 -o test $(SOURCE_FILE) c_sub.o $(SEARCH_PATHS) $(COBOL_RUNTIME_LIBRARY) \
						> under-test.txt  2>&1 || true
	./test <input.txt >>under-test.txt 2>&1 || true
	cat *.rpt 2>/dev/null >> under-test.txt || true
ifneq ("$(AFTER)","")
	./$(AFTER)
endif
	cp under-test.txt known-good.txt

.PHONY: testv
testv:
	@rm -f test
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	gcc $(DEBUG) -O0 -c -o c_sub.o c_sub.c
	$(GCC_BIN)/$(GCOBOL) -main -B $(GCC_BIN) $(DEBUG) $(EBCDIC) -O0 -o test $(SOURCE_FILE) c_sub.o $(SEARCH_PATHS) $(COBOL_RUNTIME_LIBRARY)
	./test <input.txt
ifneq ("$(AFTER)","")
	./$(AFTER)
endif

.PHONY: testt
testt:
	@rm -f test
	GCC_PRINT_TREE=1 $(GCC_BIN)/$(GCOBOL) -main -B $(GCC_BIN) $(DEBUG) $(EBCDIC) -O0 -o test $(SOURCE_FILE) $(SEARCH_PATHS) $(COBOL_RUNTIME_LIBRARY) -fdump-tree-gimple

.PHONY: testvv
testvv:
	@rm -f test
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	$(GCC_BIN)/$(GCOBOL) -B $(GCC_BIN) $(DEBUG) $(EBCDIC) -O0 -o test $(SOURCE_FILE) $(SEARCH_PATHS) $(COBOL_RUNTIME_LIBRARY) -f-flex-debug -f-yacc-debug
	./test <input.txt

.PHONY: testd
testd:
	gdb --args $(GCC_BIN)/$(COBOL1) -main=$(SOURCE_FILE) $(SOURCE_FILE) \
		-quiet -dumpbase \
		$(SOURCE_FILE) -mtune=generic -march=x86-64 \
		$(DEBUG) $(EBCDIC) -O0 -version \
		-o $(basename $(SOURCE_FILE)).s

.PHONY: clean
clean:
	@rm -f test gc *.tags *.gimple *.s *.o
