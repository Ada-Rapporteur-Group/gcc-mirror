# This makefile is for regression testing.  It assumes there is a
# single .cbl file to be compiled and run, The combined output of the
# compilation and the run is placed in an under-test.txt file, and then
# compared with a known-good.txt file.

# This include file establishes the path to the compilation executables
include ../MakeVars.inc

SOURCE_FILE = $(wildcard *.cbl)

DONT_FAIL_DIFF ?= false

BEFORE := $(wildcard before.scr)
AFTER  := $(wildcard after.scr)

DEBUG ?= xxx

.PHONY: all
all:
	@echo "Choices:"
	@echo "'make test'       -- compares result to known-good"
	@echo "'make known-good' -- builds known-good"
	@echo "'make testv'      -- compiles with visible results"
	@echo "'make testvv'     -- compiles with -f-flex-debug -f-yacc-debug"
	@echo "'make testd',     -- uses gdb to launch cobol1"
	@echo "'make testt',     -- generates .tag and .gimple files"

.PHONY: test
test:
#	Assume any .rpt file is generated by the program under test, and is
#	incorporated into under-test.txt:
	@rm -f test *.rpt
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG)		\
		-o test $(SOURCE_FILE) $(COBOL_RUNTIME_LIBRARY)	\
		> under-test.txt 2>&1
	$(TEST) $(CMD_LINE_PARAMS) <input.txt >>under-test.txt  2>&1
# If echo echoes only "*.rpt", remove it to indicate there are no .rpt files
	names="$$(echo *.rpt | sed 's/^[*].*//')" && \
	if [ "$$names" ]; then \
		cat *.rpt >> under-test.txt; \
	fi
ifneq ("$(AFTER)","")
	./$(AFTER)
endif
	diff -u known-good.txt under-test.txt || $(DONT_FAIL_DIFF)

.PHONY: known-good
known-good:
	@rm -f test *.rpt
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG)		\
		-o test $(SOURCE_FILE) $(COBOL_RUNTIME_LIBRARY)	\
		> under-test.txt 2>&1
	$(TEST) $(CMD_LINE_PARAMS) <input.txt >>under-test.txt 2>&1
	names="$$(echo *.rpt | sed 's/^[*].*//')" && \
	if [ "$$names" ]; then \
		cat *.rpt >> under-test.txt; \
	fi
ifneq ("$(AFTER)","")
	./$(AFTER)
endif
	cp under-test.txt known-good.txt

.PHONY: testv
testv:
	@rm -f test
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG) -o test $(SOURCE_FILE) $(COBOL_RUNTIME_LIBRARY)
	$(TEST) $(CMD_LINE_PARAMS) <input.txt
ifneq ("$(AFTER)","")
	./$(AFTER)
endif

.PHONY: testt
testt:
	@rm -f test
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG) -S -o test.s $(SOURCE_FILE)                          -fdump-tree-gimple -fdump-generic-nodes
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG)    -o test   $(SOURCE_FILE) $(COBOL_RUNTIME_LIBRARY) -fdump-tree-gimple -fdump-generic-nodes

.PHONY: testvv
testvv:
	@rm -f test
ifneq ("$(BEFORE)","")
	./$(BEFORE)
endif
	$(GCC_BIN)/$(GCOBOL) $(GCOPTIONS) $(SEARCH_PATHS) $(DEBUG) -o test $(SOURCE_FILE) $(COBOL_RUNTIME_LIBRARY) -f-flex-debug -f-yacc-debug
	$(TEST) $(CMD_LINE_PARAMS) <input.txt

.PHONY: testd
testd:
	gdb --args $(GCC_BIN)/$(COBOL1) $(SOURCE_FILE) \
		-quiet -dumpbase \
		$(SOURCE_FILE) -mtune=generic -march=x86-64 \
		$(DEBUG) -version -o $(basename $(SOURCE_FILE)).s \
		-fdump-tree-gimple -fdump-generic-nodes

.PHONY: clean
clean:
	@rm -f test gc *.tags *.gimple *.s *.nodes *.nodes.html
