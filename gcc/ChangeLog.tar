==================== Branch work167-tar, patch #205 ====================

Fix test for TAR register.

2024-05-25  Michael Meissner  <meissner@linux.ibm.com>

gcc/testsuite/

	* gcc.target/powerpc/safe-indirect-jump-2.c: Fix test for generating the
	TAR register.

==================== Branch work167-tar, patch #204 ====================

Add -mccspr and -mfpspr

2024-05-24  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Add
	support for -mccspr and -mfpspr debug switches
	* config/rs6000/rs6000.md (movcc_<mode>): Add spr support back in.
	(movsf_hardfloat): Likewise.
	(movsd_hardfloat): Likewise.
	(mov<mode>_softfloat): Likewise.
	(mov<mode>_softfloat32): Likewise.
	(ov<mode>_hardfloat64): Likewise.
	(mov<mode>_softfloat64): Likewise.
	(indirect_jump<mode>): Add TAR register support.
	(@indirect_jump<mode>_nospec): Likewise.
	* config/rs6000/rs6000.opt (-mccspr): New switch.
	(-mfpspr): Likewise.

==================== Branch work167-tar, patch #203 ====================

Add -mintspr.

2024-05-24  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Add
	support for -mintspr.
	* config/rs6000/rs6000.md (mov<mode>_internal): Add support for moving
	QI/HImode to/from SPRs back.
	* config/rs6000/rs6000.opt (-mintspr): New switch.

==================== Branch work167-tar, patch #202 ====================

Add -mtar.

gcc/

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/constraints.md (h constraint): Add documentation for TAR
	register.
	(wt constraint): New constraint.
	* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Document that we
	are intentionally not setting -mtar for power9.
	(OTHER_POWER10_MASKS): Add -mtar.
	(POWERPC_MASKS): Likewise.
	* config/rs6000/rs6000.cc (rs6000_reg_names): Add TAR register.
	(alt_reg_names): Likewise.
	(rs6000_hard_regno_mode_ok_uncached): Add support for -mtar.
	(rs6000_debug_reg_global): Print information about the TAR register and
	the wt constraint.
	(rs6000_init_hard_regno_mode_ok): Setup the TAR register.  Set up the wt
	constraint if -mtar.
	(rs6000_option_override_internal): If -mtar, make sure we are running on
	at least a power9.
	(rs6000_conditional_register_usage): Enable TAR register if -mtar.
	(print_operand): Handle the TAR register.
	(rs6000_debugger_regno): Likewise.
	(rs6000_opt_masks): Add -mtar.
	* config/rs6000/rs6000.h (FIRST_PSEUDO_REGISTER): Add TAR register.
	(FIXED_REGISTERS): Likewise.
	(CALL_REALLY_USED_REGISTERS): Likewise.
	(REG_ALLOC_ORDER): Likewise.
	(enum reg_class): Add TAR_REGS register class.
	(REG_CLASS_NAMES): Likewise.
	(REG_CLASS_CONTENTS): Likewise.
	(enum r6000_reg_class_enum): Add wt constraint.
	(rs6000_reg_names): Add TAR register.
	* config/rs6000/rs6000.md (TAR_REGNO): New constant.
	(@tablejump<mode>_insn_normal): Add support for the TAR register.
	(@tablejump<mode>_insn_nospec): Likewise.
	* config/rs6000/rs6000.opt (-mtar): New option.

gcc/testsuite/

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/ppc-switch-1.c: Update test for the TAR register.
	* gcc.target/powerpc/pr51513.c: Likewise.
	* gcc.target/powerpc/safe-indirect-jump-3.c: Likewise.

==================== Branch work167-tar, patch #201 ====================

Remove insn alternatives for SPRs with non-integer modes

The previous patch changed the modes that SPR registers can hold to just be
appropriate sized integers (VSAVE and VSCR can only hold SImode, while CTR and
LR can only hold pointer sized values).  This patch updates all of the move
insns for CC modes and floating point types from having alternatives to move
values to and from SPR registers.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.md (mov<mode>_internal): Remove alternatives
	moving values to and from SPR registers.
	(movcc_<mode>): Likewise.
	(movsf_hardfloat): Likewise.
	(movsd_hardfloat): Likewise.
	(mov<mode>_softfloat): Likewise.
	(mov<mode>_hardfloat64): Likewise.
	(mov<mode>_softfloat64): Likewise.

==================== Branch work167-tar, patch #200 ====================

Restrict SPR registers to only use integer modes.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Restrict
	VRSAVE and VSCR to only hold hold SImode.  Restrict LR and CTR to only
	hold SImode or DImode, based on the address size.

==================== Branch work167-tar, patch #11 from work167 branch ====================

Add -mcpu=future tuning support.

This patch makes -mtune=future use the same tuning decision as -mtune=power11.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/power10.md (all reservations): Add future as an
	alterntive to power10 and power11.

==================== Branch work167-tar, patch #10 from work167 branch ====================

Add -mcpu=future support.

This patch adds the future option to the -mcpu= and -mtune= switches.

This patch treats the future like a power11 in terms of costs and reassociation
width.

This patch issues a ".machine future" to the assembly file if you use
-mcpu=power11.

This patch defines _ARCH_PWR_FUTURE if the user uses -mcpu=future.

This patch allows GCC to be configured with the --with-cpu=future and
--with-tune=future options.

This patch passes -mfuture to the assembler if the user uses -mcpu=future.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config.gcc (rs6000*-*-*, powerpc*-*-*): Add support for power11.
	* config/rs6000/aix71.h (ASM_CPU_SPEC): Add support for -mcpu=power11.
	* config/rs6000/aix72.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/aix73.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/driver-rs6000.cc (asm_names): Likewise.
	* config/rs6000/rs6000-c.cc (rs6000_target_modify_macros): Define
	_ARCH_PWR_FUTURE if -mcpu=future.
	* config/rs6000/rs6000-cpus.def (ISA_FUTURE_MASKS_SERVER): New define.
	(POWERPC_MASKS): Add future isa bit.
	(power11 cpu): Add future definition.
	* config/rs6000/rs6000-opts.h (PROCESSOR_FUTURE): Add future processor.
	* config/rs6000/rs6000-string.cc (expand_compare_loop): Likewise.
	* config/rs6000/rs6000-tables.opt: Regenerate.
	* config/rs6000/rs6000.cc (rs6000_option_override_internal): Add future
	support.
	(rs6000_machine_from_flags): Likewise.
	(rs6000_reassociation_width): Likewise.
	(rs6000_adjust_cost): Likewise.
	(rs6000_issue_rate): Likewise.
	(rs6000_sched_reorder): Likewise.
	(rs6000_sched_reorder2): Likewise.
	(rs6000_register_move_cost): Likewise.
	(rs6000_opt_masks): Likewise.
	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/rs6000.md (cpu attribute): Add future.
	* config/rs6000/rs6000.opt (-mpower11): Add internal future ISA flag.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document -mcpu=future.

==================== Branch work167-tar, patch #3 from work167 branch ====================

Add -mcpu=power11 tests.

This patch adds some simple tests for -mcpu=power11 support.  In order to run
these tests, you need an assembler that supports the appropriate option for
supporting the Power11 processor (-mpower11 under Linux or -mpwr11 under AIX).

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/testsuite/

	* gcc.target/powerpc/power11-1.c: New test.
	* gcc.target/powerpc/power11-2.c: Likewise.
	* gcc.target/powerpc/power11-3.c: Likewise.
	* lib/target-supports.exp (check_effective_target_power11_ok): Add new
	effective target.

==================== Branch work167-tar, patch #2 from work167 branch ====================

Add -mcpu=power11 tuning support.

This patch makes -mtune=power11 use the same tuning decisions as -mtune=power10.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/power10.md (all reservations): Add power11 as an
	alternative to power10.

==================== Branch work167-tar, patch #1 from work167 branch ====================

Add -mcpu=power11 support.

This patch adds the power11 option to the -mcpu= and -mtune= switches.

This patch treats the power11 like a power10 in terms of costs and reassociation
width.

This patch issues a ".machine power11" to the assembly file if you use
-mcpu=power11.

This patch defines _ARCH_PWR11 if the user uses -mcpu=power11.

This patch allows GCC to be configured with the --with-cpu=power11 and
--with-tune=power11 options.

This patch passes -mpwr11 to the assembler if the user uses -mcpu=power11.

This patch adds support for using "power11" in the __builtin_cpu_is built-in
function.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config.gcc (rs6000*-*-*, powerpc*-*-*): Add support for power11.
	* config/rs6000/aix71.h (ASM_CPU_SPEC): Add support for -mcpu=power11.
	* config/rs6000/aix72.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/aix73.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/driver-rs6000.cc (asm_names): Likewise.
	* config/rs6000/ppc-auxv.h (PPC_PLATFORM_POWER11): New define.
	* config/rs6000/rs6000-builtin.cc (cpu_is_info): Add power11.
	* config/rs6000/rs6000-c.cc (rs6000_target_modify_macros): Define
	_ARCH_PWR11 if -mcpu=power11.
	* config/rs6000/rs6000-cpus.def (ISA_POWER11_MASKS_SERVER): New define.
	(POWERPC_MASKS): Add power11 isa bit.
	(power11 cpu): Add power11 definition.
	* config/rs6000/rs6000-opts.h (PROCESSOR_POWER11): Add power11 processor.
	* config/rs6000/rs6000-string.cc (expand_compare_loop): Likewise.
	* config/rs6000/rs6000-tables.opt: Regenerate.
	* config/rs6000/rs6000.cc (rs6000_option_override_internal): Add power11
	support.
	(rs6000_machine_from_flags): Likewise.
	(rs6000_reassociation_width): Likewise.
	(rs6000_adjust_cost): Likewise.
	(rs6000_issue_rate): Likewise.
	(rs6000_sched_reorder): Likewise.
	(rs6000_sched_reorder2): Likewise.
	(rs6000_register_move_cost): Likewise.
	(rs6000_opt_masks): Likewise.
	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Likewise.
	* config/rs6000/rs6000.md (cpu attribute): Add power11.
	* config/rs6000/rs6000.opt (-mpower11): Add internal power11 ISA flag.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document -mcpu=power11.

==================== Branch work167-tar, baseline ====================

Add ChangeLog.tar and update REVISION.

2024-05-23  Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* ChangeLog.tar: New file for branch.
	* REVISION: Update.

2024-05-23   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch
