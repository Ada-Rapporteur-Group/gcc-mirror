/* match-and-simplify patterns for simplify_rotate
   Copyright (C) 2014 Free Software Foundation, Inc.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */


/* (x << CNT1) OP (x >> CNT2) -> x r<< CNT1 OP being +, |, ^ */
(for op in plus bit_ior bit_xor 
(match_and_simplify
  (op:c (lshift @0 INTEGER_CST_P@1) (rshift @0 INTEGER_CST_P@2))
  (if (INTEGRAL_TYPE_P (type) && TYPE_UNSIGNED (type)
      && TYPE_PRECISION (type) == GET_MODE_PRECISION (TYPE_MODE (type))
      && tree_fits_uhwi_p (@1) && tree_fits_uhwi_p (@2)
      && wi::eq_p (TYPE_PRECISION (type), wi::add (@1, @2))))
  (lrotate @0 @1)))
