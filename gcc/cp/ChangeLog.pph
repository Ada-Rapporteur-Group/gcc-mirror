2011-06-22  Gabriel Charette  <gchare@google.com>

	* pph-streamer-in.c (pph_start_record): Initialize
	cache_ix in all paths.

2011-06-22  Gabriel Charette  <gchare@google.com>

	* pph-streamer-in.c (pph_in_start_record): 
	Rename from pph_start_record. Update all users.
	* pph-streamer-out.c (pph_out_start_record): 
	Rename from pph_start_record. Update all users.

2011-06-16  Gabriel Charette  <gchare@google.com>

	* pph-streamer-in.c (pph_in_cxx_binding): Fix streaming logic.
	* pph-streamer-out.c (pph_out_cxx_binding): Fix streaming logic.

2011-06-14  Lawrence Crowl <crowl@google.com>

	* pph-streamer-out.c (pph_out_struct_function): New.
	(pph_out_used_types_slot): New for pph_out_struct_function.
	(struct pph_tree_info): New for pph_out_struct_function.
	(pph_write_tree): Save DECL_STRUCT_FUNCTION of FUNCTION_DECL with
	pph_out_struct_function.
	* pph-streamer-in.c (pph_in_struct_function): New.
	(pph_read_tree): Load DECL_STRUCT_FUNCTION of FUNCTION_DECL with
	pph_in_struct_function.

2011-06-14  Gabriel Charette  <gchare@google.com>

	* pph-streamer-in.c (pph_in_binding_level): Fix read
	of shadowed_labels.
	Remove unused variable sl.

2011-06-13   Diego Novillo  <dnovillo@google.com>

	* class.c (sorted_fields_type_new): Set field LEN in the
	newly allocated vector.
	(finish_struct_1): Remove setting of FIELD_VEC->LEN.

2011-06-13   Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_in_sorted_fields_type): Tidy.

2011-06-13   Diego Novillo  <dnovillo@google.com>

	* pph-streamer-out.c (pph_out_class_binding): Tidy.

2011-06-10  Diego Novillo  <dnovillo@google.com>

	* lang-specs.h (@c++-header): Disable PCH if -fpph-gen is given.
	Emit --output-pph if -fpph-gen is used.

2011-06-09  Gabriel Charette  <gchare@google.com>

	* pph-streamer-out.c (pph_out_tree_header): Rename from
	  pph_output_tree_header. Update all users.

2011-06-08   Diego Novillo  <dnovillo@google.com>

	* parser.c (cp_lexer_dump_tokens): If START_TOKEN is NULL,
	set it to the start of the token buffer.
	If BUFFER is NULL, do nothing.
	(cp_debug_parser): Increase token window size.

2011-06-08  Diego Novillo  <dnovillo@google.com>

	Fix spurious differences with trunk.

	* call.c: Do not include pph.h.
	(implicit_conversion): Remove unnecessary braces.
	(build_new_op_1): Likewise.
	* cp-gimplify.c (cp_genericize): Remove FIXME comment.
	* cp-lang.c: Do not include pph.h.
	* decl.c (duplicate_decls): Rename from duplicate_decls_internal.
	(xref_tag_1): Remove FIXME comment.
	* Make-lang.in (cp/cp-lang.o): Remove $(CXX_PPH_H) dependency.
	(cp/decl.o): Remove $(CXX_PPH_H) and langhooks.h dependencies.
	(cp/pt.o): Remove $(CXX_PPH_H) dependency.
	* pt.c: Do not include pph.h.
	* rtti.c (create_pseudo_type_info): Remove setting of
	DECL_ARTIFICIAL.

2011-06-06  Gabriel Charette  <gchare@google.com>

	* pph.c (pth_stats): Remove field. Update all users.
	(pth_get_state): Remove. Update all users.
	(pth_debug_identifiers): Likewise.
	(pth_debug_token_hunks): Likewise.
	(pth_debug_state): Likewise.
	(pth_image_lookup): Likewise.
	(pth_init): Likewise.
	(pth_print_stats): Likewise.
	(pth_finish): Likewise.
	* pph.h (struct pth_include): Likewise.
	(struct pth_image): Likewise.
	(struct pth_state): Likewise.
	(PTH_STATS_INCR): Likewise.

2011-06-05  Lawrence Crowl <crowl@google.com>

	* pph-streamer.c (pph_trace): Clean up trace formatting.
	* pph-streamer-in.c (pph_in_tree_common): New for TS_COMMON chain.
	(pph_read_tree): Call pph_in_tree_common in existing readers for trees.
	Implement readers for C++-specific trees that need pph_in_tree_common.
	* pph-streamer-out.c (pph_out_tree_common): New for TS_COMMON chain.
	(pph_write_tree): Call pph_out_tree_common in existing writers for
	trees.  Implement readers for C++-specific trees that need
	pph_out_tree_common.

2011-06-03  Gabriel Charette  <gchare@google.com>

	* pph.h (struct pph_stats_d): Remove.  Update all users.
	(struct pph_decl_deps_d): Likewise.
	(PPH_POP_TIMEVAR_AND_RETURN): Likewise.
	(pph_start_exposed): Likewise.
	(pph_stop_exposed): Likewise.
	(pph_catch_tree): Likewise.
	(pph_uncatch_tree): Likewise.
	(pph_catch_name_lookup): Likewise.
	* pph.c (pph_print_trees_tokens): Likewise.
	(pph_tree_catcher): Likewise.
	(pph_name_lookups): Likewise.
	(pph_nl_token_map): Likewise.
	(pph_decl_head_token_cache): Likewise.
	(pph_decl_body_token_cache): Likewise.

2011-06-01  Lawrence Crowl <crowl@google.com>

	* pph-streamer-in.c (pph_in_ld_fn): Stream in struct
	lang_decl_min because it is a member of struct lang_decl_fn.
	* pph-streamer-out.c (pph_in_ld_fn): Stream out struct
	lang_decl_min because it is a member of struct lang_decl_fn.

2011-05-31  Gabriel Charette  <gchare@google.com>

	* pph-streamer-in.c (pph_unpack_value_fields): Rename
	from pph_stream_unpack_value_fields.
	Update all users.
	(pph_init_read): Rename from pph_stream_init_read.
	Update all users.
	(pph_in_shared_data): Rename from pph_stream_read_shared_data.
	Update all users.
	(pph_register_shared_data): Rename from pph_stream_register_shared_data.
	Update all users.
	(pph_in_ld_base): Rename from pph_stream_read_ld_base.
	Update all users.
	(pph_in_ld_min): Rename from pph_stream_read_ld_min.
	Update all users.
	(pph_in_tree_vec): Rename from pph_stream_read_tree_vec.
	Update all users.
	(pph_in_qual_use_vec): Rename from pph_stream_read_qual_use_vec.
	Update all users.
	(pph_in_cxx_binding_1): Rename from pph_stream_read_cxx_binding_1.
	Update all users.
	(pph_in_cxx_binding): Rename from pph_stream_read_cxx_binding.
	Update all users.
	(pph_in_class_binding): Rename from pph_stream_read_class_binding.
	Update all users.
	(pph_in_label_binding): Rename from pph_stream_read_label_binding.
	Update all users.
	(pph_in_binding_level): Rename from pph_stream_read_binding_level.
	Update all users.
	(pph_in_c_language_function): Rename from
	pph_stream_read_c_language_function.
	Update all users.
	(pph_in_language_function): Rename from
	pph_stream_read_language_function.
	Update all users.
	(pph_in_ld_fn): Rename from pph_stream_read_ld_fn.
	Update all users.
	(pph_in_ld_ns): Rename from pph_stream_read_ld_ns.
	Update all users.
	(pph_in_ld_parm): Remame from pph_stream_read_ld_parm.
	Update all users.
	(pph_in_lang_specific): Rename from pph_stream_read_lang_specific.
	Update all users.
	(pph_alloc_tree): Rename from pph_stream_alloc_tree.
	Update all users.
	(pph_in_lang_type_header): Rename from pph_stream_read_lang_type_header.
	Update all users.
	(pph_in_tree_pair_vec): Rename from pph_stream_read_tree_pair_vec.
	Update all users.
	(pph_in_sorted_fields_type): Rename from
	pph_stream_read_sorted_fields_type.
	Update all users.
	(pph_in_lang_type_class): Rename from pph_stream_read_lang_type_class.
	Update all users.
	(pph_in_lang_type_ptrmem): Rename from pph_stream_read_lang_type_ptrmem.
	Update all users.
	(pph_in_lang_type): Rename from pph_stream_read_lang_type.
	Update all users.
	(pph_read_tree): Rename from pph_stream_read_tree.
	Update all users.
	* pph-streamer.c (pph_hooks_init): Rename from pph_stream_hooks_init.
	Update all users.
	(pph_trace): Rename from pph_stream_trace.
	Update all users.
	(pph_trace_tree): Rename from pph_stream_trace_tree.
	Update all users.
	(pph_trace_uint): Rename from pph_stream_trace_uint.
	Update all users.
	(pph_trace_bytes): Rename from pph_stream_trace_bytes.
	Update all users.
	(pph_trace_string): Rename from pph_stream_trace_string.
	Update all users.
	(pph_trace_string_with_length): Rename from
	pph_stream_trace_string_with_length.
	Update all users.
	(pph_trace_chain): Rename from pph_stream_trace_chain.
	Update all users.
	(pph_trace_bitpack): Rename from pph_stream_trace_bitpack.
	Update all users.
	(pph_cache_insert_at): Rename from pph_stream_cache_insert_at.
	Update all users.
	(pph_cache_add): Rename from pph_stream_cache_add.
	Update all users.
	(pph_cache_get): Rename from pph_stream_cache_get.
	Update all users.
	* pph-streamer.h (pph_pickle_cache): Rename from
	pph_stream_pickle_cache.
	Update all users.
	(pph_out_tree): Rename from pph_output_tree.
	Update all users.
	(pph_out_tree_array): Rename from pph_output_tree_array.
	Update all users.
	(pph_out_tree_or_ref_1): Rename from pph_output_tree_or_ref_1.
	Update all users.
	(pph_out_tree_or_ref): Rename from pph_output_tree_or_ref.
	Update all users.
	(pph_out_uint): Rename from pph_output_uint.
	Update all users.
	(pph_out_uchar): Rename from pph_output_uchar.
	Update all users.
	(pph_out_bytes): Rename from pph_output_bytes.
	Update all users.
	(pph_out_string): Rename from pph_output_string.
	Update all users.
	(pph_out_string_with_length): Rename from pph_output_string_with_length.
	Update all users.
	(pph_out_tree_VEC): Rename from pph_output_tree_VEC.
	Update all users.
	(pph_out_chain): Rename from pph_output_chain.
	Update all users.
	(pph_out_bitpack): Rename from pph_output_bitpack.
	Update all users.
	(pph_in_uint): Rename from pph_input_uint.
	Update all users.
	(pph_in_uchar): Rename from pph_input_uchar.
	Update all users.
	(pph_in_bytes): Rename from pph_input_bytes.
	Update all users.
	(pph_in_string): Rename from pph_input_string.
	Update all users.
	(pph_in_tree): Rename from pph_input_tree.
	Update all users.
	(pph_in_tree_array): Rename from pph_input_tree_array.
	Update all users.
	(pph_in_tree_VEC): Rename from pph_input_tree_VEC.
	Update all users.
	(pph_in_chain): Rename from pph_input_chain.
	Update all users.
	(pph_in_bitpack): Rename from pph_input_bitpack.
	Update all users.
	* pph-streamer-out.c (pph_pack_value_fields): Rename from
	pph_stream_pack_value_fields.
	Update all users.
	(pph_init_write): Rename from pph_stream_init_write.
	Update all users.
	(pph_begin_section): Rename from pph_stream_begin_section.
	Update all users.
	(pph_out): Rename from pph_stream_write.
	Update all users.
	(pph_end_section): Rename from pph_stream_end_section.
	Update all users.
	(pph_out_header): Rename from pph_stream_write_head.
	Update all users.
	(pph_out_body): Rename from pph_stream_write_body.
	Update all users.
	(pph_flush_buffers): Rename from pph_stream_flush_buffers.
	Update all users.
	(pph_out_ld_base): Rename from pph_stream_write_ld_base.
	Update all users.
	(pph_out_ld_min): Rename from pph_stream_write_ld_min.
	Update all users.
	(pph_out_tree_vec): Rename from pph_stream_write_tree_vec.
	Update all users.
	(pph_out_qual_use_vec): Rename from pph_stream_write_qual_use_vec.
	Update all users.
	(pph_out_cxx_binding_1): Rename from pph_stream_write_cxx_binding_1.
	Update all users.
	(pph_out_cxx_binding): Rename from pph_stream_write_cxx_binding.
	Update all users.
	(pph_out_class_binding): Rename from pph_stream_write_class_binding.
	Update all users.
	(pph_out_label_binding): Rename from pph_stream_write_label_binding.
	Update all users.
	(pph_out_chain_filtered): Rename from pph_output_chain_filtered.
	Update all users.
	(pph_out_binding_level): Rename from pph_stream_write_binding_level.
	Update all users.
	(pph_out_c_language_function): Rename from
	pph_stream_write_c_language_function.
	Update all users.
	(pph_out_language_function): Rename from
	pph_stream_write_language_function.
	Update all users.
	(pph_out_ld_fn): Rename from pph_stream_write_ld_fn.
	Update all users.
	(pph_out_ld_ns): Rename from pph_stream_write_ld_ns.
	Update all users.
	(pph_out_ld_parm): Rename from pph_stream_write_ld_parm.
	Update all users.
	(pph_out_lang_specific): Rename from pph_stream_write_lang_specific.
	Update all users.
	(pph_out_lang_type_header): Rename from
	pph_stream_write_lang_type_header.
	Update all users.
	(pph_out_tree_pair_vec): Rename from pph_stream_write_tree_pair_vec.
	Update all users.
	(pph_out_sorted_fields_type): Rename from
	pph_stream_write_sorted_fields_type.
	Update all users.
	(pph_out_lang_type_class): Rename from pph_stream_write_lang_type_class.
	Update all users.
	(pph_out_lang_type_ptrmem): Rename from
	pph_stream_write_lang_type_ptrmem.
	Update all users.
	(pph_out_lang_type): Rename from pph_stream_write_lang_type.
	Update all users.
	(pph_output_tree_header): Rename from pph_stream_output_tree_header.
	Update all users.
	(pph_write_tree): Rename from pph_stream_write_tree.
	* name-lookup.c (pph_out_binding_table): Rename from
	pph_stream_write_binding_table.
	Update all users.
	(pph_in_binding_table): Rename from pph_stream_read_binding_table.
	Update all users.

2011-05-30  Diego Novillo  <dnovillo@google.com>

	* cp-objcp-common.c (cp_common_init_ts): Fix assertions for
	EXPR_PACK_EXPANSION and TYPE_ARGUMENT_PACK.

2011-05-30  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_stream_read_cxx_binding_1): Call
	ALLOC_AND_REGISTER.
	(pph_stream_read_label_binding): Likewise.
	(pph_stream_read_class_binding): Likewise.
	Do not memcpy into cb->base.  Assign to it directly.
	(pph_stream_read_c_language_function): Call
	pph_stream_read_tree_vec instead of pph_input_tree.
	* pph-streamer-out.c (pph_stream_write_class_binding): Do not
	write &cb->base.  Write cb->base.
	(pph_stream_write_c_language_function): Call
	pph_stream_write_tree_vec instead of pph_output_tree_or_ref.

2011-05-27  Lawrence Crowl  <crowl@google.com>

	* cp-objcp-common.c (cp_tree_size): Remove case TREE_BINFO.

2011-05-27  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.h (enum pph_record_marker): Define.
	Replace all users of PPH_RECORD_START and PPH_RECORD_END to
	use the new enum type.
	* pph-streamer-in.c (pph_stream_read_shared_data): New.
	(pph_stream_register_shared_data): New.
	(ALLOC_AND_REGISTER): Define.
	(pph_start_record): Add argument CACHE_IX.  Update all users.
	(pph_stream_read_ld_base): Do not call pph_start_record.
	(pph_stream_read_ld_min): Likewise.
	(pph_stream_read_cxx_binding_1): Handle PPH_RECORD_SHARED values
	returned from pph_start_record.
	Call pph_stream_register_shared_data.
	(pph_stream_read_cxx_binding): Do not call pph_start_record.
	Handle NULL values returned from pph_stream_read_cxx_binding_1.
	(pph_stream_read_class_binding): Handle PPH_RECORD_SHARED
	values returned from pph_start_record.
	Call pph_stream_register_shared_data.
	(pph_stream_read_label_binding): Likewise.
	(pph_stream_read_binding_level): Likewise.
	(pph_stream_read_c_language_function): Likewise.
	(pph_stream_read_language_function): Likewise.
	(pph_stream_read_ld_fn): Do not call pph_start_record.
	(pph_stream_read_ld_ns): Likewise.
	(pph_stream_read_lang_type_header): Likewise.
	(pph_stream_read_lang_type_class): Likewise.
	(pph_stream_read_lang_type_ptrmem): Likewise.
	(pph_stream_read_lang_specific): Handle PPH_RECORD_SHARED
	values returned from pph_start_record.
	(pph_stream_read_lang_type_class): Likewise.
	(pph_stream_read_lang_type_ptrmem): Likewise.
	(pph_stream_read_lang_type): Likewise.
	(pph_stream_read_sorted_fields_type): Likewise.
	Call pph_stream_register_shared_data.
	(pph_stream_read_lang_type): Remove TYPE argument.
	Return a pointer to the newly materialized struct lang_type.
	Update all users.
	Support shared struct lang_type nodes.
	* pph-streamer-out.c (pph_start_record): Call pph_stream_cache_add.
	(pph_stream_write_ld_base): Do not call pph_start_record.
	(pph_stream_write_ld_min): Likewise.
	(pph_stream_write_cxx_binding): Likewise.
	Handle the case when CB is NULL.
	(pph_stream_write_ld_fn): Do not call pph_start_record.
	(pph_stream_write_ld_ns): Likewise.
	(pph_stream_write_ld_parm): Likewise.
	(pph_stream_write_lang_type_header): Likewise.
	(pph_stream_write_lang_type_ptrmem): Likewise.
	* pph-streamer.c (pph_stream_open): Initialize stream->cache.v and
	stream->cache.m.
	(pph_stream_close): Free stream->cache.v, stream->cache.m and stream.
	(pph_stream_cache_insert_at): New.
	(pph_stream_cache_add): New.
	(pph_stream_cache_get): New.
	* pph-streamer.h (pph_stream_pickle_cache): Define.
	(pph_stream): Add field 'cache'.
	(pph_stream_cache_insert_at): Declare.
	(pph_stream_cache_add): Declare.
	(pph_stream_cache_get): Declare.

2011-05-26  Lawrence Crowl  <crowl@google.com>

	* cp-objcp-common.c (cp_tree_size): Add case TREE_BINFO.
	* pph.c (pph_read_file): Also log closing of PPH files.
	* pph-streamer-in.c (pph_stream_read_tree):
	Organize the switch into tcc_* chunks.
	Move tcc_statement case STATEMENT_LIST down.
        Implement tcc_type cases for BOUND_TEMPLATE_TEMPLATE_PARM,
	DECLTYPE_TYPE, TEMPLATE_TEMPLATE_PARM, TEMPLATE_TYPE_PARM,
	TYPENAME_TYPE, and TYPEOF_TYPE.
	Implement tcc_exceptional case TEMPLATE_PARM_INDEX.
	Add tcc_declaration case TRANSLATION_UNIT_DECL to already handled list.
        Create a section for unimplemented cases as opposed to unrecognized
	cases.
	* pph-streamer-out.c (pph_stream_write_tree):
	Organize the switch into tcc_* chunks.
	Move tcc_statement case STATEMENT_LIST down.
	Implement tcc_type cases for BOUND_TEMPLATE_TEMPLATE_PARM,
        DECLTYPE_TYPE, TEMPLATE_TEMPLATE_PARM, TEMPLATE_TYPE_PARM,
	TYPENAME_TYPE, and TYPEOF_TYPE.
        Move tcc_statement case STATEMENT_LIST down.
	Implement tcc_exceptional case TEMPLATE_PARM_INDEX.
	Add tcc_declaration case TRANSLATION_UNIT_DECL to already handled list.
        Create a section for unimplemented cases as opposed to unrecognized
	cases.

2011-05-26  Lawrence Crowl  <crowl@google.com>

	* pph-streamer-in.c (pph_stream_read_tree): Move TEMPLATE_DECL case
	next to other DECLs.
	* pph-streamer-out.c (pph_stream_write_tree): Move TEMPLATE_DECL case
	next to other DECLs.
	(pph_output_chain_filtered):  Move to just before its use.

2011-05-25  Lawrence Crowl  <crowl@google.com>

	* pph-streamer-in.c (pph_stream_read_tree): Reformat for style.
	* pph-streamer-out.c (pph_stream_write_tree): Reformat for style.

2011-05-25  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-out.c (pph_stream_write_tree) <TEMPLATE_DECL>:
	Do not write DECL_MEMBER_TEMPLATE_P.

2011-05-24  Lawrence Crowl  <crowl@google.com>

	* pph-streamer-in.c (pph_stream_read_tree): Refactor
	from nested if statements to a switch statement.
	For TEMPLATE_DECL, also input DECL_MEMBER_TEMPLATE_P.
	Report unhandled trees when -fpph-untree.
	Add already completely handled trees as separate cases.
	(pph_stream_read_tree_vec_none): Remove.
	* pph-streamer-out.c (pph_stream_write_tree): Refactor
	from nested if statements to a switch statement.
	For TEMPLATE_DECL, also output DECL_MEMBER_TEMPLATE_P.
	Report unhandled trees when -fpph-untree.
	Add already completely handled trees as separate cases.
	(pph_stream_write_tree_vec_none): Remove.

2011-05-24  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_stream_read_tree): For IDENTIFIER_NODE,
	only read fields in struct lang_identifier.
	Remove FIXME pph markers.
	* pph-streamer-out.c (pph_stream_write_tree): For IDENTIFIER_NODE,
	only write fields in struct lang_identifier.
	Remove FIXME pph markers.

2011-05-20  Lawrence Crowl <crowl@google.com>

	* pph-streamer-in.c (pph_stream_read_qual_use_vec): Add.
	(pph_stream_read_tree_vec_none): Add.
	(pph_stream_read_tree): Add read of various C++ fields.
	* pph-streamer-out.c (pph_stream_write_qual_use_vec): Add.
	(pph_stream_write_tree_vec_none): Add.
	(pph_stream_write_tree): Add write of various C++ fields.

2011-05-06  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.c (pph_stream_hooks_init): Set
	has_unique_integer_csts_p field to true.

2011-05-05  Lawrence Crowl <crowl@google.com>

        * pph.c (pph_write_file_contents): Save keyed_classes and
        unemitted_tinfo_decls.
        (pph_read_file_contents): Restore keyed_classes and
        unemitted_tinfo_decls.
	* pph-streamer.h (pph_stream_write_tree_vec): Make extern.
	(pph_stream_read_tree_vec): Make extern.
	(pph_output_tree_array): Archive for future need.
	(pph_output_tree_VEC): Archive for future need.
	(pph_input_tree_array): Archive for future need.
	(pph_input_tree_VEC): Archive for future need.
	* pph-streamer-in.c (pph_stream_read_tree): Make extern.
	(pph_stream_read_tree): Restore TYPE_BINFO.
	* pph-streamer-out.c (pph_stream_write_tree_vec): Make extern.
	(pph_stream_write_tree): Save TYPE_BINFO.
	* name-lookup.c (pushdecl_into_namespace): Add leading comment.

2011-05-04  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.c (pph_get_common_nodes): New.
	(pph_stream_hooks_init): Set it in h->get_common_nodes.

2011-04-29  Lawrence Crowl <crowl@google.com>

	* pph-streamer-out.c (pph_stream_write_tree): Write DECL_INITIAL
	instead of PARM_DECL DECL_ARG_TYPE.
	* pph-streamer-in.c (pph_stream_read_tree): Read DECL_INITIAL
	instead of PARM_DECL DECL_ARG_TYPE.

2011-04-28  Lawrence Crowl <crowl@google.com>

        * pph-streamer-out.c (pph_stream_write_tree): Write PARM_DECL
        DECL_ARG_TYPE.
        * pph-streamer-in.c (pph_stream_read_tree): Read PARM_DECL
        DECL_ARG_TYPE.

2011-04-26  Lawrence Crowl <crowl@google.com>

	* cp-tree.h (pushdecl_into_namespace): Add.
	* name-lookup.c (pushdecl_into_namespace): Add.
	* pph.c: Add include of tree-dump.h.
	(pph_dump_tree_name): Add.
	(pph_dump_namespace): Add.
	(pph_write_file_contents): Call pph_dump_namespace when appropriate.
	(pph_read_file_contents): Call pph_dump_namespace when appropriate.
	(pph_add_names_to_namespace): Use pushdecl_into_namespace rather than
	pushdecl_with_scope.  Make associated changes.  Enable recursive call
	for nested namespace.
	* pph-streamer.c (pph_stream_trace): Reformat conditionals.

2011-04-26  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.h (pph_output_tree_or_ref_1): New.
	(pph_output_tree_lst): Remove.  Change all
	callers to call pph_output_tree_1 with a tracing level of 2.
	(pph_output_tree_aux): Remove.  Change all callers to call
	pph_output_tree_1 with a tracing level of 3.
	(pph_output_tree_or_ref): Call pph_output_tree_or_ref_1 with
	a tracing level of 2.

2011-04-26  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_stream_unpack_value_fields): Read
	TREE_LANG_FLAG_? fields.
	* pph-streamer-out.c (pph_stream_pack_value_fields): Write
	TREE_LANG_FLAG_? fields.

2011-04-26  Diego Novillo  <dnovillo@google.com>

	* cp-objcp-common.c (cp_common_init_ts): Call
	mark_ts_structures_for and tree_node_structure_for_code.
	Change calls to MARK_TS_* into assertions instead.

2011-04-18  Lawrence Crowl <crowl@google.com>

	* pph.c (pth_save_identifiers): Fix FIXME comment.
        (pph_add_names_to_namespace): Add contained namespaces to scope as
	well as regular symbols.
	* pph-streamer.c (enum pph_trace_type): Add a trace for refs.
        (pph_stream_trace): Add the ref printing.  Reduce bulk of trace
	messages.  Filter off uninteresting traces, primarily traces of null
	pointers.
	(pph_stream_trace_tree): Convert ref_p to trace value.
	* pph-streamer.h: Adjust flag_pph_tracer comparisons for better traces.
	(pph_stream_trace_tree): Add ref_p parameter.  Propogate such
	parameters at all call sites.
        (pph_output_tree_lst): New.  Like pph_output_tree, but for list and
	chain contexts.
	(pph_stream_write_tree): The callback is auxillary.
	(pph_output_chain_filtered): Call pph_output_tree_lst.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* pph.c (pph_read_file_contents): Re-instate call to
	pph_add_names_to_namespace.
	(pph_include_handler): Return false if the file has been
	read from an image.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* Make-lang.in (cp/name-lookup.o): Add dependency on
	CXX_PPH_STREAMER_H.
	* name-lookup.c: Include pph-streamer.h.
	(pph_stream_write_binding_table): New.
	* pph-streamer-out.c (pph_stream_write_lang_type_header): New.
	(pph_stream_write_tree_pair_vec): New.
	(pph_stream_write_sorted_fields_type): New.
	(pph_stream_write_lang_type_class): New.
	(pph_stream_write_lang_type_ptrmem): New.
	(pph_stream_write_lang_type): New.
	(pph_stream_write_tree): Call it for TYPE_P nodes.
	* pph-streamer.h (pph_stream_write_binding_table): Declare.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_stream_read_tree): Fix handling of
	TYPE_DECLs.
	* pph-streamer-out.c (pph_stream_write_tree): Likewise.

2011-04-13  Diego Novillo  <dnovillo@google.com>

	* name-lookup.c (pph_stream_write_binding_table): Handle
	NULL BT->CHAIN entries.
	(pph_stream_read_binding_table): New.
	* pph-streamer-in.c (pph_stream_read_lang_specific): Rename
	from pph_stream_read_lang_specific_data.  Update all users.
	(pph_stream_read_lang_type_header): New.
	(pph_stream_read_tree_pair_vec): New.
	(pph_stream_read_sorted_fields_type): New.
	(pph_stream_read_lang_type_class): New.
	(pph_stream_read_lang_type_ptrmem): New.
	(pph_stream_read_lang_type): New.
	(pph_stream_read_tree): Call it.
	* pph-streamer-out.c (pph_stream_write_lang_specific): Rename
	from pph_stream_write_lang_specific_data.  Update all users.
	Remove duplicate assertion for DECL_P.
	(pph_stream_write_lang_type_header): Call pph_start_record.
	Call pph_output_bitpack instead of lto_output_bitpack.
	(pph_stream_write_sorted_fields_type): Call pph_start_record.
	(pph_stream_write_lang_type_class): Call pph_output_bitpack 
	instead of lto_output_bitpack.
	Guard call to pph_stream_write_binding_table with a call to
	pph_start_record.
	(pph_stream_write_lang_type_ptrmem): Call pph_start_record.
	(pph_stream_write_lang_type): Call pph_start_record.
	* pph-streamer.h (pph_stream_read_binding_table): Declare.

2011-04-13  Diego Novillo  <dnovillo@google.com>

	* cp-tree.h (sorted_fields_type_new): Declare.

2011-04-13  Diego Novillo  <dnovillo@google.com>

	* class.c (sorted_fields_type_new): Factor out of ...
	(finish_struct_1): ... here.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* pph.c (pph_read_file_contents): Do not try to re-instantiate
	the PPH image.
	(pph_include_handler): Do not skip header file after reading
	the PPH image.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* parser.c (cp_debug_print_flag): Remove superfluous test.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* pph.c (pph_add_names_to_namespace): New.
	(pph_read_file_contents): Call it.
	Call cpp_lt_replay.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* pph-streamer-in.c (pph_stream_unpack_value_fields): Unpack
	TYPE_LANG_FLAGS and DECL_LANG_FLAGS.
	(pph_stream_read_tree): Handle TYPE_DECL.
	* pph-streamer-out.c (pph_stream_pack_value_fields): Pack
	TYPE_LANG_FLAGS and DECL_LANG_FLAGS.
	(pph_stream_write_binding_level): Call pph_output_chain_filtered
	with a NO_BUILTINS filter for fields that have DECLs in them.
	(pph_stream_write_tree): Handle TYPE_DECL.
	(pph_output_chain_filtered): New.
	* pph-streamer.c (pph_stream_trace): Show the code of the tree
	if it is not NULL_TREE.
	* pph-streamer.h (enum chain_filter): Declare.
	(pph_output_chain_filtered): Declare.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* pph.c (pth_include_handler): Return true.
	(pph_include_handler): If the header file exists as a PPH
	image, return false.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* cp-tree.h (print_namespace): Declare.
	* name-lookup.c (print_namespace): New.
	* parser.c (cp_debug_print_context_stack): Increment loop counter.

2011-04-11  Diego Novillo  <dnovillo@google.com>

	* parser.c (cp_lexer_dump_tokens): Add arguments START_TOKEN and
	CURR_TOKEN.
	Update all callers.
	Print tokens starting with START_TOKEN.
	Highlight CURR_TOKEN by enclosing it in [[ ]].
	(cp_debug_print_tree_if_set): New.
	(cp_debug_print_context): New.
	(cp_debug_print_context_stack): New.
	(cp_debug_print_flag): New.
	(cp_debug_print_unparsed_function): New.
	(cp_debug_print_unparsed_queues): New.
	(cp_debug_parser): New.
	* cp/parser.h (cp_debug_parser): Declare.

2011-04-08  Lawrence Crowl  <crowl@google.com>

        * pph.c (pth_finish): Simplify inconsistency reporting.
	* pph-streamer.h (pph_output_tree_aux): New.
	(pph_output_string): Ensure trace happens before write.
	(pph_output_chain): Likewise.
	(pph_output_string_with_length): Likewise.  Add trace for null case.
	* pph-streamer-out.c (pph_stream_write_tree): Call pph_output_tree_aux
	instead of pph_output_tree.

2011-04-06  Lawrence Crowl  <crowl@google.com>

        * pph.c (pth_dump_identifiers):  Split cpp_idents_used::max_length
	into max_ident_length and max_value_length.  Print used_by_directive
	and expanded_to_text attributes of macros.
	(pth_save_identifiers): Split cpp_idents_used::max_length into
	max_ident_length and max_value_length.  Filter out macro that are
	neither used_by_directive nor expanded_to_text, which requires
	precounting the number of entries remaining.  Save used_by_directive
	and expanded_to_text attributes of the macros.
	(pth_load_identifiers): Split cpp_idents_used::max_length into
	max_ident_length and max_value_length.  Restore used_by_directive and
	expanded_to_text attributes of the macros.
	(pph_read_file): Make failure to read a pph file a non-fatal error.

2011-04-05  Lawrence Crowl <crowl@google.com>

	* parser.c (cp_lexer_dump_tokens): Remove #ifdef ENABLE_CHECKING.
	(cp_lexer_debug_tokens): Likewise.

2011-04-04  Diego Novillo  <dnovillo@google.com>

	* cp-tree.h (cxx_binding_make): Declare.
	* name-lookup.c (cxx_binding_make): Make extern.
	* parser.c (cp_token_cache): Make extern.
	* parser.h (cp_token_cache): Declare.
	* pph-streamer-in.c (pph_stream_unpack_value_fields): Move
	earlier in the file.
	(pph_stream_init_read): Call lto_reader_init.
	Associate STREAM with STREAM->DATA_IN.
	(pph_start_record): New.
	(pph_stream_read_ld_base): New.
	(pph_stream_read_ld_min): New.
	(pph_stream_read_tree_vec): New.
	(pph_stream_read_cxx_binding_1): New.
	(pph_stream_read_cxx_binding): New.
	(pph_stream_read_class_binding): New.
	(pph_stream_read_label_binding): New.
	(pph_stream_read_binding_level): New.
	(pph_stream_read_c_language_function): New.
	(pph_stream_read_language_function): New.
	(pph_stream_read_ld_fn): New.
	(pph_stream_read_ld_ns): New.
	(pph_stream_read_ld_parm): New.
	(pph_stream_read_lang_specific_data): New.
	(pph_stream_read_tree): Retrieve pph_stream instance from
	DATA_IN->SDATA.
	Mark IB argument as unused.
	Call pph_stream_read_lang_specific_data for DECLs that have
	lang_specific data.
	Replace calls to lto_input_sleb128 with pph_input_uint.
	(pph_stream_alloc_tree): New.
	* pph-streamer-out.c (pph_stream_init_write): Call
	lto_writer_init.
	Associate STREAM with OB.
	(pph_start_record): New.
	(pph_stream_write_ld_base): Change first argument to be a
	pph_stream.  Change all users.
	Call pph_start_record.
	Call pph_output_bitpack.
	(pph_stream_write_ld_min): Likewise.
	(pph_stream_write_tree_vec): Likewise.
	(pph_stream_write_cxx_binding_1): Likewise.
	(pph_stream_write_cxx_binding): Likewise.
	(pph_stream_write_class_binding): Likewise.
	(pph_stream_write_label_binding): Likewise.
	(pph_stream_write_binding_level): Likewise.
	(pph_stream_write_c_language_function): Likewise.
	(pph_stream_write_language_function): Likewise.
	(pph_stream_write_ld_fn): Likewise.
	(pph_stream_write_ld_ns): Likewise.
	(pph_stream_write_ld_parm): Likewise.
	(pph_stream_write_lang_specific_data): Likewise.
	(pph_stream_write_tree): Only call
	pph_stream_write_lang_specific_data for tree nodes that have
	DECL_LANG_SPECIFIC set.
	* pph-streamer.c (enum pph_trace_type): Add PPH_TRACE_CHAIN
	and PPH_TRACE_BITPACK.
	(pph_stream_trace): Add "chain" and "bitpack" to TYPE_S.
	Handle PPH_TRACE_CHAIN And PPH_TRACE_BITPACK.
	(pph_stream_trace_tree): Do not compute tree code size on
	NULL_TREE.
	(pph_stream_trace_chain): New.
	(pph_stream_trace_bitpack): New.
	(pph_stream_output_tree_header): New.
	(pph_stream_hooks_init): Add hooks for alloc_tree and
	output_tree_header.
	* pph-streamer.h (PPH_RECORD_START): Declare.
	(PPH_RECORD_END): Declare.
	(pph_stream_trace_chain): Declare.
	(pph_stream_trace_bitpack): Declare.
	(pth_load_token_cache): Declare.
	(pph_output_tree_or_ref): New.
	(pph_output_uchar): New.
	(pph_output_string_with_length): Do not trace the string
	twice.
	(pph_output_chain): New.
	(pph_output_bitpack): New.
	(pph_input_uchar): New.
	(pph_input_chain): New.
	(pph_input_bitpack): New.
	(pph_get_pph_stream): Remove.  Update all users.
	(pph_set_pph_stream): Remove.  Update all users.
	(pph_stream_output_tree_header): Declare.
	(pph_stream_alloc_tree): Declare.
	* pph.c (pth_load_token): Factor out of pth_load_hunk.
	(pth_load_token_cache): New.
	(pph_read_file_contents): Read global_namespace.

2011-03-30  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.h (pph_get_pph_stream): Rename from
	pph_get_ob_stream.  Update all users.
	(pph_set_pph_stream): Rename from pph_set_pph_stream.  Update
	all users.
	(pph_output_tree): Remove ATTRIBUTE_UNUSED.
	(pph_input_tree): Remove ATTRIBUTE_UNUSED.

2011-03-30  Diego Novillo  <dnovillo@google.com>

	* cp-tree.h (struct language_function): Add prefix 'x_' to
	fields returns_value, returns_null, returns_abnormally,
	in_function_try_handler, in_base_initializer.  Update all
	users.
	* pph-streamer.c (pph_stream_write_ld_base): New.
	(pph_stream_write_ld_min): New.
	(pph_stream_write_tree_vec): New.
	(pph_stream_write_cxx_binding_1): New.
	(pph_stream_write_cxx_binding): New.
	(pph_stream_write_class_binding): New.
	(pph_stream_write_label_binding): New.
	(pph_stream_write_binding_level): New.
	(pph_stream_write_c_language_function): New.
	(pph_stream_write_language_function): New.
	(pph_stream_write_ld_fn): New.
	(pph_stream_write_ld_ns): New.
	(pph_stream_write_ld_parm): New.
	(pph_stream_write_lang_specific_data): New.
	(pph_indexable_with_decls_p): New.
	(pph_stream_hooks_init): Initialize h->indexable_with_decls_p
	with pph_indexable_with_decls_p.
	(pph_stream_begin_section): Do not free BLOCK.
	* pph-streamer.h (pth_save_token_cache): Declare.
	(pph_get_ob_stream): New.
	(pph_set_ob_stream): New.
	* pph.c (pth_save_token_cache): New.
	(pph_print_macro_defs_before): Remove.
	(pph_print_macro_defs_after): Remove.
	(pph_write_namespace): Remove.
	(pph_write_format): Remove.
	(pph_write_print): Remove.
	(pph_write_dump): Remove.
	(pph_write_symbol): Remove.
	(declvisitor): Remove.
	(pph_write_namespace_1): Remove.
	(pph_write_namespace): Remove.
	(pph_write_file_contents): Rename from pph_write_file_object.
	Output global_namespace.
	(pph_write_file): Call it.
	(pph_write_file_summary): Remove.
	(pph_read_file_contents): Rename from pph_file_read_object.
	(pph_read_file): Rename from pph_file_read.

2011-03-28  Diego Novillo  <dnovillo@google.com>

	* pph.c (pph_write_format): Rename from write_pph_format.
	(pph_write_namespace): Rename from write_pph_namespace.
	(pph_write_print): Rename from write_pph_print.
	(pph_write_dump): Rename from write_pph_dump.
	(pph_write_symbol): Rename from write_pph_symbol.
	(pph_write_namespace): Rename from write_pph_namespace.
	(pph_write_namespace_1): Rename from write_pph_namespace_1.
	(pph_write_file_object): Rename from write_pph_file_object.
	(pph_write_file_summary): Rename from write_pph_file_summary.
	(pph_write_file_dump): Rename from write_pph_file_dump.
	(pph_write_file): Rename from write_pph_file.
	(pph_file_read_object): Rename from read_pph_file_object.
	(pph_file_read): Rename from read_pph_file.

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* Make-lang.in (cp/pph-streamer.o): Add dependency on
	tree-iterator.h.
	* pph-streamer.c: Include tree-iterator.h
	(pph_stream_write_tree): Handle STATEMENT_LIST.
	(pph_stream_read_tree): Likewise.
	(pph_is_streamable): New.
	(pph_stream_pack_value_fields): New.
	(pph_stream_unpack_valude_fields): New.
	(pph_stream_hooks_init): Rename from pph_streamer_hooks_init.
	Fill in callbacks for name, is_streamable, pack_value_fields
	and unpack_value_fields;
	(pph_stream_open):

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* cp/pph-streamer.c (pph_stream_init_write):

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* pph-streamer.c (pph_stream_hooks_init): New.
	(pph_stream_open): Call it.

2011-03-23  Diego Novillo  <dnovillo@google.com>

	* Make-lang.in (cp/pph-streamer.o): Add dependencies on
	tree-pretty-print.h, CXX_PPH_H, TREE_PASS_H, version.h and
	cppbuiltin.h
	* pph-streamer.c: Include tree-pretty-print.h, pph.h,
	tree-pass.h, version.h and cppbuiltin.h.
	(pph_get_section_data): New.
	(pph_free_section_data): New.
	(pph_stream_init_read): Rename from pph_file_read.
	Initialize LTO streaming data structures.
	Read pph file in memory.
	(pph_stream_init_write): Factor out of ...
	(pph_stream_open): ... here.
	(pph_stream_write_header): New.
	(pph_stream_write_body): Factor out of ...
	(pph_stream_close): ... here.
	Call pph_stream_write_header.
	(enum pph_trace_type): Declare.
	(pph_stream_trace): New.
	(pph_stream_trace_tree): New.
	(pph_stream_trace_uint): New.
	(pph_stream_trace_bytes): New.
	(pph_stream_trace_string): New.
	(pph_stream_trace_string_with_length): New.
	* pph-streamer.h (PPH_NUM_SECTIONS): Define.
	(PPH_USE_FILE_IO): Remove.  Update all users.
	(pph_id_str): Define.
	(pph_file_header): Declare.
	(pph_stream): Add fields pph_sections, file_data and file_size.
	(pph_stream_open): Change second argument to const char *.
	Update all users.
	(pph_stream_trace_tree): Declare.
	(pph_stream_trace_uint): Declare.
	(pph_stream_trace_bytes): Declare.
	(pph_stream_trace_string): Declare.
	(pph_stream_trace_string_with_length): Declare.
	(pph_output_tree): Call pph_stream_trace_tree if flag_pph_tracer
	is enabled.
	(pph_input_tree): Likewise.
	(pph_output_uint): Call pph_stream_trace_uint if flag_pph_tracer
	is enabled.
	(pph_input_uint): Likewise.
	(pph_output_bytes): Call pph_stream_trace_bytes if flag_pph_tracer
	is enabled.
	(pph_input_bytes): Likewise.
	(pph_output_string): Call pph_stream_trace_string if flag_pph_tracer
	is enabled.
	(pph_input_string): Likewise.
	(pph_output_string_with_length): Call
	pph_stream_trace_string_with_length if flag_pph_tracer is
	enabled.
	* pph.c (pph_print_macro_defs_before): Call pph_output_string.
	(pph_print_macro_defs_after): Likewise.
	(pth_load_token_value): Do not free the read string.
	(pth_load_identifiers): Likewise.
	(pth_load_include): Likewise.
	(pth_load_image): Call pph_input_bytes to read the header.
	(write_pph_print): Call pph_output_tree.
	(write_pph_file_object): Remove fprintf() call.
	(pth_include_handler): Remove FIXME marker.
	(pph_include_handler): Tidy.

2011-03-09  Diego Novillo  <dnovillo@google.com>

	* Make-lang.in (CXX_AND_OBJCXX_OBJS): Add cp/pph-streamer.o
	(CXX_PPH_STREAMER_H): New.
	(cp/pph.o): Add dependency on CXX_PPH_STREAMER_H.
	(cp/pph-streamer.o): New.
	* pph-streamer.c: New file.
	* pph-streamer.h: New file.
	* pph.c: Update Copyright line.
	Include pph-streamer.h
	(pth_file_for): Change FILE * argument with pph_streamer *.
	Update all callers.
	(pth_write_uint): Remove.
	(pth_write_bytes): Remove.
	(pth_write_string): Remove.
	(pth_write_number): Re-implement using pph_streamer and 
	pph_output_* calls.
	(pth_save_token_value): Likewise.
	(pth_save_token): Likewise.
	(pth_write_header): Likewise.
	(pph_print_macro_defs_before): Likewise.
	(pph_print_macro_defs_after): Likewise.
	(pth_save_identifiers): Likewise.
	(pth_save_hunk): Likewise.
	(pth_save_include): Likewise.
	(pth_save_image): Likewise.
	(pth_read_uint): Remove.
	(pth_read_bytes): Remove.
	(pth_read_string): Remove.
	(pth_read_string_alloc): Remove.
	(pth_load_number): Re-implement using pph_streamer and
	pph_input_* calls.
	(pth_load_token_value): Likewise.
	(pth_load_identifiers): Likewise.
	(pth_load_hunk): Likewise.
	(pth_load_include): Likewise.
	(pth_load_include): Likewise.
	(pth_load_image): Likewise.
	(pth_have_valid_image_for): Likewise.
	(write_pph_format): Likewise.
	(write_pph_namespace): Likewise.
	(write_pph_print): Likewise.
	(write_pph_dump): Likewise.
	(write_pph_symbol): Likewise.
	(declvisitor): Likewise.
	(write_pph_namespace_1): Likewise.
	(write_pph_file_object): Likewise.
	(write_pph_file_summary): Likewise.
	(write_pph_file_dump): Likewise.
	(read_pph_file_object): Likewise.
	* pph.h: Update file comment.

2011-03-04  Lawrence Crowl <crowl@google.com>

	* cp/pph.c (pph_print_macro_defs_before): New.
	* (pph_print_macro_defs_after): New.
	* (write_pph_format): New.
	* (write_pph_namespace): New.
	* (write_pph_print): New.
	* (write_pph_dump): New.
	* (write_pph_symbol): New.
	* (write_pph_namespace_1): New.
	* (write_pph_namespace): New.
	* (write_pph_file_object): New.
	* (write_pph_file_summary): New.
	* (write_pph_file_dump): New.
	* (write_pph_file): Write used macros instead of dummy contents.
	Renamed from write_pph_output.
	* (wrap_macro_def): New.
	* (report_validation_error): New.
	* (read_pph_file_object): New.
	* (read_pph_file): Read used macros instead of dummy contents.
	Verify the macro values.
	* (pph_include_handler): Do not read a PPH file a second time.
	* (PPH_ARTIFICIAL): Remove redundant condition.
	* (pph_init): Set up the preprocessor lookaside table.

2011-02-24  Lawrence Crowl <crowl@google.com>

        * cp/pph.c (pph_finish): Check for missing preprocessor guard
        for pre-parsed headers.

2011-02-15  Lawrence Crowl <crowl@google.com>

        * cp/pph.c (write_pph_output, read_pph_file,
        pph_include_handler): Add.
	(pph_start_exposed, pph_stop_exposed): Change debug level.
	(pph_init): Set callback for pph_include_handler.
	(pph_finish): Write PPH file.
        * cp/parser.c (cp_lexer_new_main): Duplicate PTH and PCH
        incompatibility for PPH.  Add call to pph_init only when PPH
        is being used.
	* (c_parse_file): Remove call to pph_init.

2011-01-27  Diego Novillo  <dnovillo@google.com>

	* Make-lang.in (cp/parser.o): Fix dependencies.
	* pph.c (pth_process_text_file): Do not try to start reading the file
	at an arbitrary offset.
	Remove OFFSET argument.  Update all users.
	(pth_image_to_lexer): Emit a fatal error if a hunk fails
	validation.
	(pth_lexer_to_image):
	(pth_enter_file):
	* pph.h	(struct cp_token_hunk): Remove fields text_offset and
	text_length.
	Update all users.
	(struct pth_image): Remove field hunk_text_offset.
	Update all users.

2011-01-24  Lawrence Crowl <crowl@google.com>

        Merge timevar patch.

	* decl.c: (push_local_name): Change TV_NAME_LOOKUP to start/stop.
	* (poplevel): Refactor POP_TIMEVAR_AND_RETURN to plain code.
	Change TV_NAME_LOOKUP to start/stop.
	* (define_label): Refactor timevar calls out to a wrapper function.
	Change TV_NAME_LOOKUP to start/stop.
	* (xref_tag): Likewise.
	* (lookup_label): Refactor timevar calls out to a wrapper function.
	Change TV_NAME_LOOKUP to start_cond/stop_cond.

	* pt.c: (instantiate_class_template): Refactor timevar calls out to a
	wrapper function.  Add push/pop of new TV_INSTANTIATE_TEMPLATE.
	* (instantiate_template): Refactor timevar calls out to a wrapper
	function.  Add push/pop of new TV_INSTANTIATE_TEMPLATE.
	* (lookup_template_class): Refactor timevar calls out to a wrapper
	function.  Change TV_NAME_LOOKUP to start_cond/stop_cond.
	* (instantiate_decl): Change TV_PARSE to TV_PARSE_GLOBAL.

	* name-lookup.c: (store_bindings): Change TV_NAME_LOOKUP to start/stop.
	* (poplevel_class): Change TV_NAME_LOOKUP to start_cond/stop_cond.
	* (push_namespace): Likewise.
	* (pop_nested_namespace): Likewise.
	* (pushdecl_namespace_level): Likewise.
	* (store_class_bindings): Likewise.
	* (push_to_top_level): Likewise.
	* (identifier_type_value): Refactor timevar calls out to a wrapper
	function.  Change TV_NAME_LOOKUP to start/stop.
	* (find_binding): Likewise.
	* (push_using_decl): Likewise.
	* (lookup_arg_dependent): Likewise.
	* (push_using_directive): Likewise.
	* (qualified_lookup_using_namespace): Refactor POP_TIMEVAR_AND_RETURN
	to plain code.  Change TV_NAME_LOOKUP to start/stop.
	* (lookup_type_current_level): Likewise.  Refactor inner return to
	break.
	* (pushdecl_class_level): Refactor POP_TIMEVAR_AND_RETURN to plain
	code.  Change TV_NAME_LOOKUP to start_cond/stop_cond.
	* (pushdecl_top_level_1): Likewise.
	* (lookup_using_namespace): Likewise.
	* (pushdecl_with_scope): Refactor timevar calls out to a wrapper
	function.  Change TV_NAME_LOOKUP to start_cond/stop_cond.
	* (push_overloaded_decl): Likewise.
	* (push_class_level_binding): Likewise.
	* (namespace_binding): Likewise.
	* (set_namespace_binding): Likewise.
	* (supplement_binding): Likewise.
	* (unqualified_namespace_lookup): Likewise.
	* (lookup_name_real): Likewise.
	* (lookup_type_scope): Likewise.
	* (namespace_ancestor): Likewise.
	* (lookup_name_innermost_nonclass_level_1): Likewise.
	* (pushtag): Likewise.
	* (pop_from_top_level): Likewise.
	* (pushdecl_maybe_friend): Refactor timevar calls out to a wrapper
	function.  Change TV_NAME_LOOKUP to start_cond/stop_cond.  Wrap long
	lines.
	* (add_using_namespace): Refactor timevar calls out to a wrapper
	function.  Change TV_NAME_LOOKUP to start_cond/stop_cond.  Bypass
	wrapper on call to self.

	* decl2.c: (cp_write_global_declarations):  Add start/stop of
	new TV_PHASE_CP_DEFERRED, TV_PHASE_CGRAPH, TV_PHASE_CHECK_DBGINFO.
	Remove push/pop calls to TV_VARCONST.

	* parser.c: Add include of "timevar.h".
	* (cp_parser_explicit_instantiation): Add push/pop calls to new
	TV_INSTANTIATE_TEMPLATE.
	* (cp_parser_enum_specifier): Add push/pop calls to new TV_PARSE_ENUM.
	* (cp_parser_class_specifier): Add push/pop calls to new
	TV_PARSE_STRUCT.
	* (cp_parser_function_definition_from_specifiers_and_declarator): Add
	push/pop calls to new TV_PARSE_FUNC.
	* (cp_parser_late_parsing_for_member):  Add push/pop calls to
	new TV_PARSE_INMETH.

	* call.c: Add include of "timevar.h".
	* (perform_overload_resolution): Add push/pop calls to new
	TV_RESOLVE_OVERLOAD.

	* Make-lang.in: Add dependence of call.o and parser.o on $(TIMEVAR_H).

2010-12-16  Diego Novillo  <dnovillo@google.com>

	* pph.c (pph_find_exposed_for, pph_get_decl_exposure):
	Replace uses of DECL_INTEGRAL_CONSTANT_VAR_P with
	decl_constant_var_p.

2010-12-09  Lawrence Crowl  <crowl@google.com>

	* pph.c (pth_lexer_to_image): Remove call to cpp_lt_statistics.
	This call is now handled in libcpp.
	(cpp_lt_order): New constant for lookaside table size.
	Table reduced from 32768 slots to 512 slots.
	(pth_init): Use above constant in call to cpp_lt_create.

2010-12-02  Diego Novillo  <dnovillo@google.com>

	* pph.c: New file.
	* pph.h: New file.
	* parser.h: New file.
	* decl.c: Include pph.h.
	* cp/Make-lang.in (CXX_AND_OBJCXX_OBJS): Add cp/pph.o.
	(CXX_PARSER_H): Define.
	(CXX_PPH_H): Define.
	(cp/cp-lang.o): Add dependency on CXX_PARSER_H and
	CXX_PPH_H.
	(cp/parser.o): Likewise.
	(cp/decl.o): Add dependency on CXX_PPH_H.
	(cp/call.o): Likewise.
	(cp/pt.o): Likewise.
	(cp/name-lookup.o): Likewise.
	(cp/pph.o): New.
	* cp/cp-lang.c: Include parser.h and pph.h.
	* cp/pt.c: Include pph.h.
	* cp/parser.c: Remove inclusion of timevar.h,
	pointer-set.h, fixed-value.h, cpplib.h, line-map.h,
	md5.h, hashtab.h, tree-pass.h and tree-inline.h.
	Include parser.h and pph.h
	(struct tree_check): Move to parser.h.
	(struct cp_token): Likewise.
	(struct cp_lexer): Likewise.
	(struct cp_token_cache): Likewise.
	(struct cp_token_ident_d): Likewise.
	(CPP_KEYWORD): Likewise.
	(CPP_TEMPLATE_ID): Likewise.
	(CPP_NESTED_NAME_SPECIFIER): Likewise.
	(N_CP_TTYPES): Likewise.
	(enum cp_parser_status_kind): Likewise.
	(struct cp_parser_context): Likewise.
	(struct cp_default_arg_entry_d): Likewise.
	(struct cp_unparsed_functions_entry_d): Likewise.
	(struct cp_parser): Likewise.
	(struct cp_token_hunk): Move to pph.h.
	(DIGEST_LEN): Likewise.
	(struct pth_image): Likewise.
	(pth_image_ptr): Likewise.
	(struct pth_include): Likewise.
	(pth_include_ptr): Likewise.
	(struct pth_state): Likewise.
	(struct pth_stats_d): Likewise.
	(PTH_STATS_INCR): Likewise.
	(struct pph_stats_d): Likewise.
	(PPH_STATS_INCR): Likewise.
	(pth_stats): Make extern.
	(pph_stats): Likewise.
	(cp_lexer_dump_tokens): Likewise.
	(cp_lexer_debug_tokens): Likewise.
	(cp_lexer_token_position): Likewise.
	(cp_lexer_get_tokens): Likewise.
	(the_parser): Likewise.
	(pph_decl_head_token_cache): Move to pph.c
	(pph_decl_body_token_cache): Likewise.
	(struct pph_decl_deps_d): Likewise.
	(pph_decl_deps): Likewise.
	(pph_tree_catcher): Likewise.
	(pph_name_lookups): Likewise.
	(pph_name_lookups_set): Likewise.
	(pph_nl_token_map): Likewise.
	(pph_logfile): Likewise.
	(pph_print_tokens): Likewise.
	(pathnames_equal_p): Likewise.
	(pph_debug_location): Likewise.
	(pph_debug_loc_of_tree): Likewise.
	(pth_image_dir_hash): Likewise.
	(pth_image_dir_eq): Likewise.
	(pth_global_state): Likewise.
	(pth_get_state): Likewise.
	(pth_id_str): Likewise.
	(pth_header_len): Likewise.
	(PTH_EXTENSION): Likewise.
	(pth_name_for): Likewise.
	(pth_file_for): Likewise.
	(pth_get_md5_digest): Likewise.
	(pth_get_index_from_type): Likewise.
	(pth_write_uint): Likewise.
	(pth_write_sizet): Likewise.
	(pth_write_bytes): Likewise.
	(pth_write_string): Likewise.
	(pth_write_number): Likewise.
	(pth_save_token_value): Likewise.
	(pth_save_token): Likewise.
	(pth_write_header): Likewise.
	(pth_dump_identifiers): Likewise.
	(pth_debug_identifiers): Likewise.
	(pth_dump_hunk): Likewise.
	(pth_debug_hunk): Likewise.
	(pth_dump_include): Likewise.
	(pth_debug_include): Likewise.
	(pth_dump_token_hunks_1): Likewise.
	(pth_dump_token_hunks): Likewise.
	(pth_debug_token_hunks): Likewise.
	(pth_dump_image): Likewise.
	(pth_debug_image): Likewise.
	(pth_show_image_stats): Likewise.
	(pth_dump_state): Likewise.
	(pth_debug_state): Likewise.
	(pth_save_identifiers): Likewise.
	(pth_save_hunk): Likewise.
	(pth_save_include): Likewise.
	(pth_save_image): Likewise.
	(pth_get_type_from_index): Likewise.
	(pth_read_uint): Likewise.
	(pth_read_sizet): Likewise.
	(pth_read_bytes): Likewise.
	(pth_read_string): Likewise.
	(pth_read_string_alloc): Likewise.
	(pth_load_number): Likewise.
	(pth_load_token_value): Likewise.
	(pth_load_identifiers): Likewise.
	(pth_load_hunk): Likewise.
	(pth_create_include): Likewise.
	(pth_load_include): Likewise.
	(pth_load_image): Likewise.
	(pth_have_valid_image_for): Likewise.
	(pth_new_image): Likewise.
	(pth_image_lookup): Likewise.
	(pth_append_hunk): Likewise.
	(pth_hunk_is_valid_p): Likewise.
	(pth_image_can_be_used): Likewise.
	(pth_get_dir_and_name): Likewise.
	(pth_process_text_file): Likewise.
	(pth_image_to_lexer): Likewise.
	(pth_lexer_to_image): Likewise.
	(pth_get_file_transition): Likewise.
	(pth_leave_file): Likewise.
	(pth_enter_file): Likewise.
	(pth_file_change): Likewise.
	(pth_include_handler): Likewise.
	(pth_init): Likewise.
	(pth_print_stats): Likewise.
	(pth_finish): Likewise.
	(pph_log_exposed): Likewise.
	(pph_allocate_catcher_memory): Likewise.
	(pph_free_catcher_memory): Likewise.
	(pph_start_exposed): Likewise.
	(pph_lookup_head_token_cache_for): Likewise.
	(pph_lookup_body_token_cache_for): Likewise.
	(pph_set_head_token_cache_for): Likewise.
	(pph_set_body_token_cache_for): Likewise.
	(pph_copy_decls_into_cache): Likewise.
	(pph_copy_decls_outof_cache): Likewise.
	(pph_stop_exposed): Likewise.
	(pph_debug_tree): Likewise.
	(pph_debug_type): Likewise.
	(pph_tree_caught_p): Likewise.
	(pph_catch_head_tokens_for): Likewise.
	(pph_catch_body_tokens_for): Likewise.
	(pph_lookup_dependencies_for): Likewise.
	(pph_set_dependencies_for): Likewise.
	(is_namespace): Likewise.
	(PPH_ARTIFICIAL): Likewise.
	(pph_null_exposed): Likewise.
	(pph_live_exposed): Likewise.
	(pph_find_exposed_for): Likewise.
	(pph_catch_dependencies_for): Likewise.
	(pph_catch_tree): Likewise.
	(pph_uncatch_tree): Likewise.
	(pph_locate_name_lookups_in): Likewise.
	(pph_print_copy_tokens): Likewise.
	(pph_print_token_range): Likewise.
	(pph_print_dependence): Likewise.
	(pph_print_depend_template): Likewise.
	(pph_print_depend_decl): Likewise.
	(pph_print_depend_type): Likewise.
	(pph_print_depend_type_type): Likewise.
	(pph_print_depend_func_type): Likewise.
	(pph_print_depend_var_type): Likewise.
	(pph_get_decl_exposure): Likewise.
	(pph_print_dependences): Likewise.
	(pph_print_declaration_head): Likewise.
	(pph_print_declaration_body): Likewise.
	(pph_find_special_methods): Likewise.
	(pph_implicit_class_cost): Likewise.
	(pph_print_declaration): Likewise.
	(pph_print_declarations): Likewise.
	(pph_print_trees_tokens): Likewise.
	(pph_catch_name_lookup): Likewise.
	(pph_print_stats): Likewise.
	(pph_init): Likewise.
	(pph_finish): Likewise.
	* config-lang.in (gtfiles): Add cp/parser.h, cp/pph.h
	and cp/pph.c.
	* call.c: Include pph.h
	* cp-tree.h (PPH_POP_TIMEVAR_AND_RETURN): Move to
	pph.h
	(pph_catch_tree): Likewise.
	(pph_uncatch_tree): Likewise.
	(pph_catch_name_lookup): Likewise.
	* name-lookup.c: Include pph.h.

2010-11-02  Lawrence Crowl  <crowl@google.com>
	    Diego Novillo  <dnovillo@google.com>

	* decl.c: Include langhooks.h
	(duplicate_decls_internal): Rename from duplicate_decls
	(duplicate_decls): New wrapper around
	duplicate_decls_internal.
	* Make-lang.in (cp/decl.o): Add dependency on langhooks.h
	(cp/parser.o): Add dependency on pointer-set.h,
	fixed-value.h, MD5_H, HASTHTAB_H, tree-pass.h,
	TREE_INLINE_H and tree-pretty-print.h.
	(cp/name-lookup.o): Add dependency on tree-pretty-print.h
	* rtti.c (create_pseudo_type_info): Mark TYPE_NAME of
	PSEUDO_TYPE as artificial.
	* cp-gimplify.c	(cp_genericize): Add FIXME note.
	* parser.c: Include timevar.h, pointer-set.h,
	fixed-value.h, cpplib.h, line-map.h, md5.h, hashtab.h,
	tree-pass.h, tree-inline.h and tree-pretty-print.h.
	(struct cp_token): Add field purged_p.
	Adjust all users of CPP_PURGED.
	(eof_token): Adjust.
	(struct cp_lexer): Convert buffer into a VEC.
	Remove field buffer_length.
	Adjust all users.
	(cp_token_cache_ptr): New typedef.
	(struct cp_token_ident_d): Declare.
	(cp_token_ident): New typedef.
	(struct cp_token_hunk): Declare.
	(cp_token_hunk_ptr): New typedef.
	(DIGEST_LEN): Define.
	(struct pth_image): Define.
	(pth_image_ptr): New typedef.
	(struct pth_include): Define.
	(pth_include_ptr): New typedef.
	(struct pth_state): Declare.
	(struct pth_stats_d): Declare.
	(pth_stats): Declare.
	(PTH_STATS_INCR): Define.
	(struct pph_stats_d): Declare.
	(pph_stats): Declare.
	(PPH_STATS_INCR): Define.
	(pph_decl_head_token_cache): Declare.
	(pph_decl_body_token_cache): Declare.
	(struct pph_decl_deps_d): Declare.
	(pph_decl_deps): Declare.
	(pph_tree_catcher): Declare.
	(pph_name_lookups): Declare.
	(pph_name_lookups_set): Declare.
	(pph_nl_token_map): Declare.
	(pph_logfile): Declare.
	(pph_print_trees_tokens): Declare.
	(cp_lexer_print_token): Always declare.
	(CPP_PURGED): Remove.  Replace all uses with
	token->purged_p.
	(N_CP_TTYPES): Adjust.
	(cp_lexer_dump_tokens): Move earlier in the file.
	(cp_lexer_debug_tokens): New.
	(pathnames_equal_p): New.
	(pph_debug_location): New.
	(pph_debug_loc_of_tree): New.
	(pth_image_dir_hash): New.
	(pth_image_dir_eq): New.
	(pth_get_state): New.
	(pth_id_str): New.
	(pth_header_len): New.
	(PTH_EXTENSION): Define.
	(pth_name_for): New.
	(pth_file_for): New.
	(pth_get_md5_digest): New.
	(pth_get_index_from_type): New.
	(pth_write_uint): New.
	(pth_write_sizet): New.
	(pth_write_bytes): New.
	(pth_write_string): New.
	(pth_write_number): New.
	(pth_save_token_value): New.
	(pth_save_token): New.
	(pth_write_header): New.
	(pth_dump_identifiers): New.
	(pth_debug_identifiers): New.
	(pth_dump_hunk): New.
	(pth_debug_hunk): New.
	(pth_dump_include): New.
	(pth_debug_include): New.
	(pth_dump_token_hunks_1): New.
	(pth_dump_token_hunks): New.
	(pth_debug_token_hunks): New.
	(pth_dump_image): New.
	(pth_debug_image): New.
	(pth_show_image_stats): New.
	(pth_dump_state): New.
	(pth_debug_state): New.
	(pth_save_identifiers): New.
	(pth_save_hunk): New.
	(pth_save_include): New.
	(pth_save_image): New.
	(pth_get_type_from_index): New.
	(pth_read_uint): New.
	(pth_read_sizet): New.
	(pth_read_bytes): New.
	(pth_read_string): New.
	(pth_read_string_alloc): New.
	(pth_load_number): New.
	(pth_load_token_value): New.
	(pth_load_identifiers): New.
	(pth_load_hunk): New.
	(pth_create_include): New.
	(pth_load_include): New.
	(pth_load_image): New.
	(pth_have_valid_image_for): New.
	(pth_new_image): New.
	(pth_image_lookup): New.
	(pth_append_hunk): New.
	(pth_hunk_is_valid_p): New.
	(pth_image_can_be_used): New.
	(cp_lexer_finished_p): New.
	(cp_lexer_get_tokens): New.
	(pth_get_dir_and_name): New.
	(pth_process_text_file): New.
	(pth_image_to_lexer): New.
	(pth_lexer_to_image): New.
	(pth_get_file_transition): New.
	(pth_leave_file): New.
	(pth_enter_file): New.
	(pth_file_change): New.
	(pth_include_handler): New.
	(pth_init): New.
	(pth_print_stats): New.
	(pth_finish): New.
	(cp_lexer_alloc): New.
	(cp_lexer_new_main): Rewrite to support -fpth.
	(cp_lexer_get_preprocessor_token): Flag error if -fpth
	is used together with PCH.
	(cp_lexer_consume_token): Call PPH_STATS_INCR.
	(cp_lexer_print_token): Remove "PURGED" string.
	Show CPP_NUMBER tokens.
	Do not abort if token->type is outside of TOKEN_NAMES.
	(pph_log_exposed): New.
	(pph_allocate_catcher_memory): New.
	(pph_free_catcher_memory): New.
	(pph_start_exposed): New.
	(pph_lookup_head_token_cache_for): New.
	(pph_lookup_body_token_cache_for): New.
	(pph_set_head_token_cache_for): New.
	(pph_set_body_token_cache_for): New.
	(pph_copy_decls_into_cache): New.
	(pph_copy_decls_outof_cache): New.
	(pph_stop_exposed): New.
	(cp_parser_declaration): Call pph_start_exposed and
	pph_stop_exposed for several cases.
	(cp_parser_elaborated_type_specifier): Add tracing code
	for -fpph-debug.
	(cp_parser_class_specifier): Add FIXME notes.
	(cp_parser_lookup_name_1): Rename from cp_parser_lookup_name.
	(cp_parser_lookup_name): Call it.
	Call pph_catch_name_lookup with the result.
	(pph_debug_tree): New.
	(pph_debug_type): New.
	(pph_tree_caught_p): New.
	(pph_catch_head_tokens_for): New.
	(pph_catch_body_tokens_for): New.
	(pph_lookup_dependencies_for): New.
	(pph_set_dependencies_for): New.
	(is_namespace): New.
	(pph_null_exposed): New.
	(pph_live_exposed): New.
	(pph_find_exposed_for): New.
	(pph_catch_dependencies_for): New.
	(pph_catch_tree): New.
	(pph_uncatch_tree): New.
	(pph_locate_name_lookups_in): New.
	(pph_print_copy_tokens): New.
	(pph_print_token_range): New.
	(pph_print_dependence): New.
	(pph_print_depend_template): New.
	(pph_print_depend_decl): New.
	(pph_print_depend_type): New.
	(pph_print_depend_type_type): New.
	(pph_print_depend_func_type): New.
	(pph_print_depend_var_type): New.
	(pph_get_decl_exposure): New.
	(pph_print_dependences): New.
	(pph_print_declaration_head): New.
	(pph_print_declaration_body): New.
	(pph_find_special_methods): New.
	(pph_implicit_class_cost): New.
	(pph_print_declaration): New.
	(pph_print_declarations): New.
	(pph_print_trees_tokens): New.
	(pph_catch_name_lookup): New.
	(pph_print_stats): New.
	(pph_init): New.
	(pph_finish): New.
	(c_parse_file): Call pph_init and pph_finish.
	* call.c (implicit_conversion): Call pph_catch_name_lookup.
	(build_new_op): Call pph_catch_name_lookup.
	(convert_like_real): Call pph_catch_name_lookup.
	(build_new_method_call): Call pph_catch_name_lookup.
	* cp-objcp-common.h (LANG_HOOKS_PPH_CATCH_TREE): Define.
	(LANG_HOOKS_PPH_UNCATCH_TREE): Define.
	* cp-tree.h (PPH_POP_TIMEVAR_AND_RETURN): Define.
	Replace every call to POP_TIMEVAR_AND_RETURN with
	PPH_POP_TIMEVAR_AND_RETURN.
	(pph_catch_tree): Declare.
	(pph_uncatch_tree): Declare.
	(pph_catch_name_lookup): Declare.
	* name-lookup.c: Include tree-pretty-print.h
	(add_decl_to_level): Add tracing for -fpph-debug.
