2014-11-11  Thomas Schwinge  <thomas@codesourcery.com>

	* gfortran.h (OMP_LIST_DEVICEPTR): Remove, and instead...
	(enum gfc_omp_map_op): ... add OMP_MAP_FORCE_DEVICEPTR here.
	* dump-parse-tree.c (show_omp_clauses): Update.
	* openmp.c (gfc_match_omp_clauses, resolve_omp_clauses)
	(gfc_resolve_oacc_declare): Likewise.
	* trans-openmp.c (gfc_trans_omp_clauses): Likewise.

2014-11-05  Thomas Schwinge  <thomas@codesourcery.com>

	* openmp.c (OMP_CLAUSE_HOST, OMP_CLAUSE_SELF): Merge into the new
	OMP_CLAUSE_HOST_SELF.  Update all users.

	* gfortran.texi: Update for OpenACC.
	* intrinsic.texi: Likewise.
	* invoke.texi: Likewise.

2014-11-04  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (ST_OACC_ROUTINE): New statement enum.
	* match.h (gfc_match_oacc_routine): New prototype.
	* openmp.c (gfc_match_oacc_routine): New function.
	* parse.c (decode_oacc_directive): Handle the routine directive.
	(next_statement): Handle ST_OACC_ROUTINE.
	(gfc_ascii_statement): Likewise.

2014-11-03  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (enum OMP_LIST_HOST): Remove.
	(enum OMP_LIST_DEVICE, OMP_LIST_DEVICE): Remove.
	* dump-parse-tree.c (show_omp_clauses): Remove OMP_LIST_HOST and
	OMP_LIST_DEVICE from here also.
	* openmp.c (OMP_CLAUSE_SELF): New define.
	(gfc_match_omp_clauses): Update handling of OMP_CLAUSE_HOST and
	OMP_CLAUSE_DEVICE. Add support for OMP_CLAUSE_SELF.
	* trans-openmp.c (gfc_trans_omp_clauses): Remove support for
	OMP_LIST_HOST and OMP_LIST_DEVICE since they are treated as memory
	maps now.
	(gfc_trans_oacc_executable_directive): Remove stale EXEC_OACC_WAIT.

2014-10-31  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (struct gfc_omp_clauses): Remove non_clause_wait_expr.
	* dump-parse-tree.c (show_omp_clauses): Likewise.
	* openmp.c (gfc_free_omp_clauses): Likewise.
	(gfc_match_omp_clauses): Update handling of async.
	(OACC_WAIT_CLAUSE_MASK): New define.
	(gfc_match_oacc_wait): Make the wait directive comply with OpenACC 2.0.
	(resolve_omp_clauses): Use resolve_oacc_scalar_in_expr inspect
	arguments to the wait clause.
	(resolve_oacc_wait): Remove.
	(gfc_resolve_oacc_directive): Handle EXEC_OACC_WAIT with
	resolve_omp_clauses.
	* trans-openmp.c (gfc_trans_omp_clauses): Update handling of OpenACC
	wait arguments.
	(gfc_trans_oacc_executable_directive): Remove EXEC_OACC_WAIT.
	(gfc_trans_oacc_wait_directive): New function.
	(gfc_trans_oacc_directive): Use it.

2014-10-15  James Norris  <jnorris@codesourcery.com>

	* types.def (BT_FN_VOID_INT_PTR_INT): New type.

2014-09-23  Thomas Schwinge  <thomas@codesourcery.com>

	* f95-lang.c (DEF_GOACC_BUILTIN_COMPILER): New macro.
	* types.def (BT_FN_INT_INT): New type.

2014-09-08  Cesar Philippidis  <cesar@codesourcery.com>

	* gfortran.h (enum OMP_LIST_FIRST, OMP_LIST_LAST): New
	OMP enums.
	* openmp.c (oacc_compatible_clauses): New function.
	(resolve_omp_clauses): Use it.
	(struct omp_context): Add is_openmp member.
	(gfc_resolve_omp_parallel_blocks): Set is_openmp true.
	(gfc_resolve_do_iterator): Scan for compatible clauses.
	(typedef oacc_context): Remove.
	(oacc_current_ctx): Remove. Use omp_current_ctx for both
	OpenACC and OpenMP.
	(resolve_oacc_directive_inside_omp_region): Replace
	oacc_current_ctx with omp_current_ctx.
	(resolve_omp_directive_inside_oacc_region): Likewise.
	(resolve_oacc_nested_loops): Likewise.
	(resolve_oacc_params_in_parallel): Likewise.
	(resolve_oacc_loop_blocks): Likewise. Set is_openmp to false.

2014-07-28  Cesar Philippidis  <cesar@codesourcery.com>
	    Thomas Schwinge  <thomas@codesourcery.com>
	    Ilmir Usmanov  <i.usmanov@samsung.com>

	* gfortran.h (gfc_omp_map_op): Add OMP_MAP_FORCE_ALLOC,
	OMP_MAP_FORCE_DEALLOC, OMP_MAP_FORCE_TO, OMP_MAP_FORCE_FROM,
	OMP_MAP_FORCE_TOFROM, OMP_MAP_FORCE_PRESENT.
	(enum) Remove OMP_LIST_OACC_COPYIN, OMP_LIST_COPYOUT,
	OMP_LIST_CREATE, OMP_LIST_DELETE, OMP_LIST_PRESENT,
	OMP_LIST_PRESENT_OR_COPY, OMP_LIST_PRESENT_OR_COPYIN,
	OMP_LIST_PRESENT_OR_COPYOUT, OMP_LIST_PRESENT_OR_CREATE.
	* dump-parse-tree.c (show_omp_clauses): Remove handling of
	OMP_LIST_OACC_COPYIN, OMP_LIST_COPYOUT,	OMP_LIST_CREATE,
	OMP_LIST_DELETE, OMP_LIST_PRESENT, OMP_LIST_PRESENT_OR_COPY,
	OMP_LIST_PRESENT_OR_COPYIN, OMP_LIST_PRESENT_OR_COPYOUT,
	OMP_LIST_PRESENT_OR_CREATE.
	* openmp.c (OMP_CLAUSE_OACC_COPYIN): Remove define.
	(gfc_match_omp_map_clause): New function.
	(gfc_match_omp_clauses): New openacc argument. Treat
	OMP_CLAUSE_COPY, OMP_CLAUSE_COPYOUT, OMP_CLAUSE_CREATE,
	OMP_CLAUSE_DELETE, OMP_CLAUSE_PRESENT, OMP_CLAUSE_PRESENT_OR_COPY,
	OMP_CLAUSE_PRESENT_OR_COPYIN, OMP_CLAUSE_PRESENT_OR_COPYOUT, and
	OMP_CLAUSE_PRESENT_OR_CREATE as OpenMP memory maps. Also, remove
	support for OMP_CLAUSE_OACC_COPYIN. Make OMP_CLAUSE_COPYIN
	represent the COPYIN clause for both OpenACC and OpenMP.
	(OACC_PARALLEL_CLAUSES): Replace OMP_CLAUSE_OACC_COPYIN with
	OMC_CLAUSE_COPYIN.
	(OACC_KERNEL_CLAUSES): Likewise.
	(OACC_DATA_CLAUSES): Likewise.
	(OACC_DECLARE_CLAUSES): Likewise.
	(OACC_ENTER_DATA_CLAUSES): Likewise.
	(gfc_match_oacc_parallel_loop): Call gfc_match_omp_clauses with
	the openacc parameter as true.
	(gfc_match_oacc_parallel): Likewise.
	(gfc_match_oacc_kernels_loop): Likewise.
	(gfc_match_oacc_kernels): Likewise.
	(gfc_match_oacc_data): Likewise.
	(gfc_match_oacc_host_data): Likewise.
	(gfc_match_oacc_loop): Likewise.
	(gfc_match_oacc_declare): Likewise.
	(gfc_match_oacc_update): Likewise.
	(gfc_match_oacc_enter_data): Likewise.
	(gfc_match_oacc_exit_data): Likewise.
	(resolve_omp_clauses): New openacc argument. Call
	resolve_oacc_data_clauses to check additional errors.
	(resolve_oacc_loop): Update call to resolve_omp_clauses.
	(resolve_oacc_wait): Likewise.
	(gfc_resolve_oacc_declare): Likewise.
	(gfc_resolve_oacc_directive): Likewise.
	* trans-openmp.c (gfc_trans_omp_clauses): Remove
	OMP_LIST_OACC_COPYIN, OMP_LIST_COPYOUT, OMP_LIST_CREATE,
	OMP_LIST_DELETE, OMP_LIST_PRESENT, OMP_LIST_PRESENT_OR_COPY,
	OMP_LIST_PRESENT_OR_COPYIN, OMP_LIST_PRESENT_OR_COPYOUT,
	OMP_LIST_PRESENT_OR_CREATE switch items. Handle
	OMP_MAP_FORCE_ALLOC, OMP_MAP_FORCE_DEALLOC, OMP_MAP_FORCE_TO,
	OMP_MAP_FORCE_FROM, OMP_MAP_FORCE_TOFROM, OMP_MAP_FORCE_PRESENT
	clause memory mappings.

2014-07-08  Cesar Philippidis  <cesar@codesourcery.com>

	* gcc/fortran/scanner.c (gfc_next_char_literal): Fix the scan for
	*$acc.

2014-07-03  Cesar Philippidis  <cesar@codesourcery.com>

	* scanner.c (skip_fixed_comments): Reset openacc_flag
	if an openacc directive wasn't found.

2014-06-13  Ilmir Usmanov  <i.usmanov@samsung.com>
	    Cesar Philippidis  <cesar@codesourcery.com>

	* trans-openmp.c (gfc_trans_oacc_combined_directive): Move under
	gfc_trans_omp_do.
	(gfc_trans_omp_do, gfc_trans_oacc_directive): Handle EXEC_OACC_LOOP.

2014-04-05  Tobias Burnus  <burnus@net-b.de>

	PR fortran/60283
	* parse.c (decode_oacc_directive): Use gfc_unset_implicit_pure.

2014-03-18  Thomas Schwinge  <thomas@codesourcery.com>

	* f95-lang.c (DEF_FUNCTION_TYPE_10): Define.
	* types.def
	(BT_FN_VOID_INT_OMPFN_PTR_SIZE_PTR_PTR_PTR_INT_INT_INT): New type.

2014-03-13  Ilmir Usmanov  <i.usmanov@samsung.com>

	OpenACC 1.0 support.

	* dump-parse-tree.c
	(show_omp_node): Dump also OpenACC executable statements.
	(show_code_node): Call it.
	(show_namespace): Dump !$ACC DECLARE directive.
	* gfortran.h
	(ST_OACC_PARALLEL_LOOP, ST_OACC_END_PARALLEL_LOOP, ST_OACC_PARALLEL,
	ST_OACC_END_PARALLEL, ST_OACC_KERNELS, ST_OACC_END_KERNELS,
	ST_OACC_DATA, ST_OACC_END_DATA, ST_OACC_HOST_DATA,
	ST_OACC_END_HOST_DATA, ST_OACC_LOOP, ST_OACC_DECLARE, ST_OACC_UPDATE,
	ST_OACC_WAIT, ST_OACC_CACHE, ST_OACC_KERNELS_LOOP,
	ST_OACC_END_KERNELS_LOOP, ST_OACC_ENTER_DATA,
	ST_OACC_EXIT_DATA, ST_OACC_END_LOOP): New statements.
	(gfc_expr_list): New structure to hold list of expressions.
	(OMP_LIST_COPY, OMP_LIST_DATA_CLAUSE_FIRST,
	OMP_LIST_OACC_COPYIN, OMP_LIST_COPYOUT, OMP_LIST_CREATE, OMP_LIST_DELETE,
	OMP_LIST_PRESENT, OMP_LIST_PRESENT_OR_COPY,
	OMP_LIST_PRESENT_OR_COPYIN, OMP_LIST_PRESENT_OR_COPYOUT,
	OMP_LIST_PRESENT_OR_CREATE, OMP_LIST_DEVICEPTR,
	OMP_LIST_DATA_CLAUSE_LAST, OMP_LIST_USE_DEVICE,
	OMP_LIST_DEVICE_RESIDENT, OMP_LIST_HOST, OMP_LIST_DEVICE,
	OMP_LIST_CACHE): New types of list, allowed in clauses.
	(gfc_omp_clauses): Add OpenACC clauses.
	(gfc_namespace): Add OpenACC declare directive clauses.
	(EXEC_OACC_KERNELS_LOOP, EXEC_OACC_PARALLEL_LOOP, EXEC_OACC_PARALLEL,
	EXEC_OACC_KERNELS, EXEC_OACC_DATA, EXEC_OACC_HOST_DATA, EXEC_OACC_LOOP,
	EXEC_OACC_UPDATE, EXEC_OACC_WAIT, EXEC_OACC_CACHE, EXEC_OACC_ENTER_DATA,
	EXEC_OACC_EXIT_DATA): New executable statements.
	(gfc_free_expr_list): New function declaration.
	(gfc_resolve_oacc_directive): Likewise.
	(gfc_resolve_oacc_parallel_loop_blocks): Likewise.
	(gfc_resolve_oacc_blocks): Likewise.
	* match.c (match_exit_cycle): Add support of OpenACC regions and loops.
	* match.h (gfc_match_oacc_cache): New function declaration.
	(gfc_match_oacc_wait, gfc_match_oacc_update): Likewise.
	(gfc_match_oacc_declare, gfc_match_oacc_loop): Likewise.
	(gfc_match_oacc_host_data, gfc_match_oacc_data): Likewise.
	(gfc_match_oacc_kernels, gfc_match_oacc_kernels_loop): Likewise.
	(gfc_match_oacc_parallel, gfc_match_oacc_parallel_loop): Likewise.
	(gfc_match_oacc_enter_data, gfc_match_oacc_exit_data): Likewise.
	* parse.c (decode_oacc_directive): New function.
	(verify_token_free, verify_token_fixed): New helper functions.
	(next_free, next_fixed): Decode !$ACC sentinel.
	(case_executable): Add ST_OACC_UPDATE, ST_OACC_WAIT, ST_OACC_CACHE,
	ST_OACC_ENTER_DATA and ST_OACC_EXIT_DATA directives.
	(case_exec_markers): Add ST_OACC_PARALLEL_LOOP, ST_OACC_PARALLEL,
	ST_OACC_KERNELS, ST_OACC_DATA, ST_OACC_HOST_DATA, ST_OACC_LOOP and
	ST_OACC_KERNELS_LOOP directives.
	(push_state): Initialize OpenACC declare clauses.
	(gfc_ascii_statement): Dump names of OpenACC directives.
	(verify_st_order): Verify OpenACC declare directive as declarative.
	(parse_spec): Push clauses to state stack when declare directive is
	parsed.
	(parse_oacc_structured_block, parse_oacc_loop): New functions.
	(parse_executable): Call them.
	(parse_progunit): Move declare clauses from state stack to namespace.
	* parse.h (gfc_state_data): Add declare directive's clauses.
	* resolve.c (gfc_resolve_blocks): Resolve OpenACC directives.
	(resolve_code): Likewise.
	* scanner.c (openacc_flag, openacc_locus): New static variables.
	(skip_oacc_attribute, skip_omp_attribute): New helper functions.
	(skip_free_comments, skip_fixed_comments): Don't skip !$ACC sentinel.
	(gfc_next_char_literal): Support OpenACC directives.
	* st.c (gfc_free_statement): Free also OpenACC directives. 
	* openmp.c
	(gfc_free_omp_clauses): Remove also OpenACC clauses.
	(gfc_free_expr_list): New function to clear expression list.
	(match_oacc_expr_list): New function to match expression list.
	(match_oacc_clause_gang): New function to match OpenACC 2.0 gang clauses.
	(OMP_CLAUSE_ASYNC, OMP_CLAUSE_NUM_GANGS,
	OMP_CLAUSE_NUM_WORKERS, OMP_CLAUSE_VECTOR_LENGTH,
	OMP_CLAUSE_COPY, OMP_CLAUSE_OACC_COPYIN,
	OMP_CLAUSE_COPYOUT, OMP_CLAUSE_CREATE, OMP_CLAUSE_PRESENT,
	OMP_CLAUSE_PRESENT_OR_COPY, OMP_CLAUSE_PRESENT_OR_COPYIN,
	OMP_CLAUSE_PRESENT_OR_COPYOUT, OMP_CLAUSE_PRESENT_OR_CREATE,
	OMP_CLAUSE_DEVICEPTR, OMP_CLAUSE_GANG, OMP_CLAUSE_WORKER,
	OMP_CLAUSE_VECTOR, OMP_CLAUSE_SEQ, OMP_CLAUSE_INDEPENDENT,
	OMP_CLAUSE_USE_DEVICE, OMP_CLAUSE_HOST, OMP_CLAUSE_DEVICE_RESIDENT,
	OMP_CLAUSE_DEVICE, OMP_CLAUSE_DEFAULT, OMP_CLAUSE_WAIT,
	OMP_CLAUSE_DELETE, OMP_CLAUSE_AUTO, OMP_CLAUSE_TILE): New clauses.
	(OACC_PARALLEL_CLAUSES, OACC_KERNELS_CLAUSES, OACC_DATA_CLAUSES,
	OACC_LOOP_CLAUSES, OACC_PARALLEL_LOOP_CLAUSES,
	OACC_KERNELS_LOOP_CLAUSES, OACC_HOST_DATA_CLAUSES, OACC_DECLARE_CLAUSES,
	OACC_UPDATE_CLAUSES, OACC_ENTER_DATA_CLAUSES,
	OACC_EXIT_DATA_CLAUSES): New defines.
	(gfc_match_oacc_parallel_loop, gfc_match_oacc_parallel,
	gfc_match_oacc_kernels_loop, gfc_match_oacc_kernels,
	gfc_match_oacc_data, gfc_match_oacc_host_data, gfc_match_oacc_loop,
	gfc_match_oacc_declare, gfc_match_oacc_update,
	gfc_match_oacc_enter_data, gfc_match_oacc_exit_data,
	gfc_match_oacc_wait, gfc_match_oacc_cache, oacc_is_loop,
	check_symbol_not_pointer, resolve_oacc_scalar_int_expr,
	resolve_oacc_positive_int_expr, check_array_not_assumed,
	resolve_oacc_data_clauses, resolve_oacc_deviceptr_clause,
	oacc_is_parallel, oacc_is_kernels, omp_code_to_statement,
	oacc_code_to_statement, resolve_oacc_directive_inside_omp_region,
	resolve_omp_directive_inside_oacc_region, resolve_oacc_nested_loops,
	resolve_oacc_params_in_parallel, resolve_oacc_loop_blocks,
	gfc_resolve_oacc_blocks, resolve_oacc_loop, resolve_oacc_cache,
	resolve_oacc_wait, gfc_resolve_oacc_declare,
	gfc_resolve_oacc_directive): New functions.
	(resolve_omp_clauses): Resolve also OpenACC clauses.
	(gfc_resolve_omp_directive): Check for enclosing OpenACC region. 
	* trans-decl.c
	(gfc_generate_function_code): Insert OACC_DECLARE GENERIC node.
	* trans-openmp.c (gfc_convert_expr_to_tree): New helper function.
	(gfc_trans_omp_array_reduction): Support also OpenACC. Add parameter.
	(gfc_trans_omp_reduction_list): Update.
	(gfc_trans_oacc_construct): New transform function.
	(gfc_trans_omp_map_clause_list): Likewise.
	(gfc_trans_oacc_executable_directive): Likewise.
	(gfc_trans_oacc_combined_directive, gfc_trans_oacc_declare): Likewise.
	(gfc_trans_oacc_directive): Use them.
	(gfc_trans_oacc_loop): Stub.
	(gfc_trans_omp_clauses): Transform OpenACC clauses.
	* trans-stmt.h  (gfc_trans_oacc_directive): New function prototype.
	(gfc_trans_oacc_declare): Likewise.
	* trans.c (trans_code): Transform also OpenACC directives. 

2013-11-07  Thomas Schwinge  <thomas@codesourcery.com>

	* f95-lang.c (DEF_GOACC_BUILTIN): New macro.
	Include "../oacc-builtins.def".

	* cpp.c (cpp_define_builtins): Conditionally define _OPENACC.

	* lang.opt (fopenacc): New option.
	* invoke.texi (-fopenacc): Document it.
	* gfortran.h (gfc_option_t): New member.
	* options.c (gfc_init_options, gfc_handle_option): Handle it.

2013-09-26  Jakub Jelinek  <jakub@redhat.com>

	* types.def
	(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT): Remove.
	(BT_FN_VOID_OMPFN_PTR_OMPCPYFN_LONG_LONG_BOOL_UINT_PTR): New.

2013-09-19  Jakub Jelinek  <jakub@redhat.com>

	* types.def (BT_FN_VOID_INT_SIZE_PTR_PTR_PTR): Remove.
	(BT_FN_VOID_INT_PTR_SIZE_PTR_PTR_PTR): New.

2013-09-18  Jakub Jelinek  <jakub@redhat.com>

	* trans-openmp.c (gfc_omp_clause_default_ctor,
	gfc_omp_clause_dtor): Return NULL for OMP_CLAUSE_REDUCTION.

2013-09-05  Jakub Jelinek  <jakub@redhat.com>

	* types.def (BT_FN_VOID_UINT_UINT, BT_FN_VOID_INT_SIZE_PTR_PTR_PTR,
	BT_FN_VOID_INT_OMPFN_PTR_SIZE_PTR_PTR_PTR): New.

2013-07-09  Jakub Jelinek  <jakub@redhat.com>

	* types.def (BT_FN_BOOL_INT, BT_FN_BOOL_INT_BOOL): New.

2013-04-10  Jakub Jelinek  <jakub@redhat.com>

	* f95-lang.c (DEF_FUNCTION_TYPE_8): Define.
	* types.def (DEF_FUNCTION_TYPE_8): Document.
	(BT_FN_VOID_OMPFN_PTR_UINT, BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG,
	BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_LONG): Remove.
	(BT_FN_VOID_OMPFN_PTR_UINT_UINT_UINT,
	BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_UINT,
	BT_FN_VOID_OMPFN_PTR_UINT_LONG_LONG_LONG_LONG_UINT): New.

2013-03-27  Jakub Jelinek  <jakub@redhat.com>

	* f95-lang.c (ATTR_NULL): Define.

Copyright (C) 2013-2014 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
