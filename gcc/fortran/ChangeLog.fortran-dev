2013-04-30  Tobias Burnus  <burnus@net-b.de>

	* trans-array.c (gfc_trans_dummy_array_bias, get_std_lbound,
	gfc_alloc_allocatable_for_assignment): Change ubound to extent.
	* trans-expr.c (gfc_trans_alloc_subarray_assign): Ditto.
	* trans-intrinsic.c (gfc_conv_intrinsic_bound): Ditto.

2013-04-25  Tobias Burnus  <burnus@net-b.de>

	* libgfortran.h (GFC_ATTRIBUTE_*): New defines.
	* trans-array.c (gfc_conv_descriptor_elem_len,
	gfc_conv_descriptor_elem_len_get,
	gfc_conv_descriptor_elem_len_set, gfc_conv_descriptor_rank_set,
	gfc_conv_descriptor_version_set, gfc_conv_descriptor_attr_set):
	New functions.
	(gfc_build_null_descriptor, gfc_trans_static_array_pointer,
	gfc_trans_create_temp_array, gfc_conv_array_initializer,
	gfc_conv_expr_descriptor, structure_alloc_comps): Fill new fields at
	decl time/DT-alloc time.
	(gfc_conv_descriptor_size_1, get_full_array_size,
	gfc_alloc_allocatable_for_assignment): Use extent directly.
	* trans-array.h (gfc_conv_descriptor_elem_len_get,
	gfc_conv_descriptor_elem_len_set, gfc_conv_descriptor_rank_set,
	gfc_conv_descriptor_version_set, gfc_conv_descriptor_attr_set): New
	prototype.
	* trans-common.c (create_common): Update calls.
	* trans-decl.c (gfc_get_symbol_decl, get_proc_pointer_decl,
	gfc_trans_deferred_vars, gfc_emit_parameter_debug_info): Ditto.
	* trans-expr.c (gfc_conv_scalar_to_descriptor,
	class_array_data_assign, gfc_conv_derived_to_class,
	gfc_conv_class_to_class, gfc_conv_initializer,
	gfc_trans_pointer_assignment, fcncall_realloc_result): Set new fields.
	(gfc_conv_structure): Update calls.
	(gfc_set_interface_mapping_bounds,
	gfc_conv_subref_array_arg): Use extent directly.
	* trans-intrinsic.c (size_of_string_in_bytes): Remove static.
	* trans-io.c (transfer_namelist_element): Pass elem_size.
	* trans-types.c (gfc_get_array_descriptor_base): Add "attribute" field.
	* trans.h (size_of_string_in_bytes): New prototype.
	(gfc_get_module_backend_decl): Update prototype.

2013-04-01  Tobias Burnus  <burnus@net-b.de>

	* libgfortran.h (GFC_MAX_DIMENSIONS): Change to 15.
	(GFC_DTYPE_RANK_MASK): Remove.
	* trans-array.c (RANK_FIELD): New define.
	(gfc_conv_descriptor_rank): Use rank field.
	(gfc_trans_create_temp_array, gfc_array_init_size,
	gfc_conv_expr_descriptor,
	gfc_alloc_allocatable_for_assignment): Set rank field.
	* trans-expr.c (gfc_conv_scalar_to_descriptor,
	class_array_data_assign, gfc_conv_derived_to_class,
	gfc_conv_class_to_class, gfc_trans_pointer_assignment,
	fcncall_realloc_result): Ditto.
	* trans-intrinsic.c (conv_isocbinding_subroutine): Ditto.
	* trans-io.c (gfc_build_io_library_fndecls,
	transfer_namelist_element): Pass rank as extra argument.
	* trans-types.c (gfc_get_element_type, gfc_get_dtype): Don't
	add the rank to dtype.
	(gfc_get_array_descriptor_base): New "rank" field.

2013-03-31  Tobias Burnus  <burnus@net-b.de>

	* trans-intrinsic.c (conv_isocbinding_subroutine): Fix
	merge-resolution bug.

2013-03-31  Tobias Burnus  <burnus@net-b.de>

	* trans-array.c (VERSION_FIELD): New define.
	(ELEM_LEN_FIELD): Renamed from SIZE_FIELD, reordered the fields.
	(gfc_build_null_descriptor): Also set version field (to 1).
	* trans-types.c (gfc_get_array_descriptor_base): Rename "size" to
	"elem_len" and move up, add "version" field.

2012-07-20  Tobias Burnus  <burnus@net-b.de>

	* trans-expr.c (conv_isocbinding_procedure): For C_F_Pointer,
	directly set extent and sm instead of using ubound and stride.

2012-07-15  Tobias Burnus  <burnus@net-b.de>

	* trans-intrinsic.c (gfc_conv_intrinsic_size,
	gfc_conv_intrinsic_sizeof): Replace (ubound-lbound+1) calculation
	by "extent".
	* trans-expr.c (fcncall_realloc_result): Ditto.
	* trans-io.c (gfc_convert_array_to_string): Ditto.
	* trans-openmp.c (gfc_omp_clause_default_ctor,
	gfc_omp_clause_copy_ctor, gfc_omp_clause_assign_op,
	gfc_trans_omp_array_reduction): Ditto.
	* trans-array.c (array_parameter_size): Ditto.
	(gfc_grow_array): Ditto - and fix size calculation for realloc.

2012-07-15  Tobias Burnus  <burnus@net-b.de>

	* trans-intrinsic.c (gfc_conv_associated): Compare sm
	instead of stride.

2012-03-12  Tobias Burnus  <burnus@net-b.de>

	* trans-types.c (gfc_get_array_descriptor_base): Rename "data"
	to "base_addr".

2012-03-11  Tobias Burnus  <burnus@net-b.de>

	* trans-array.c (UBOUND_SUBFIELD, STRIDE_SUBFIELD): Remove.
	(LBOUND_SUBFIELD, EXTENT_SUBFIELD, SM_SUBFIELD): Change value.
	(gfc_conv_descriptor_stride): Remove.
	(gfc_conv_descriptor_stride_set): Only set "sm".
	(gfc_conv_descriptor_ubound): Remove.
	(gfc_conv_descriptor_ubound_set): Only set "extent"
	(gfc_conv_shift_descriptor_lbound): Remove ubound-setting call.
	(gfc_conv_array_sm, gfc_conv_array_extent): New functions.
	* trans-array.h (gfc_conv_array_sm, gfc_conv_array_extent): New
	prototypes.
	* trans-types.c (gfc_get_desc_dim_type): Remove stride/ubound,
	rename and reorder according to TS29113.
	* trans-io.h (transfer_namelist_element): Pass extent/sm instead
	of ubound/stride.

2012-03-10  Tobias Burnus  <burnus@net-b.de>

	* trans-array.c (CAF_TOKEN_FIELD): Set to the correct value.
	(gfc_conv_descriptor_ubound_get, gfc_conv_descriptor_ubound_set):
	Remove bogus byte-size handling, correctly handle lower bounds
	which don't start with unity.
	(gfc_conv_shift_descriptor_lbound): Reorder to make sure that
	lbound comes before ubound.
	* trans-expr.c (gfc_conv_subref_array_arg,
	gfc_trans_alloc_subarray_assign): Ditto.

2010-09-01  Paul Thomas  <pault@gcc.gnu.org>

	* trans-array.c : Define and subsequently undefine descriptor
	SIZE_FIELD, SM_SUBFIELD and EXTENT_SUBFIELD. Change the offset
	for DIMENSION_FIELD.
	(gfc_data_field_from_base_field): New function.
	(gfc_conv_descriptor_data_addr): Call it to maintain API.
	(gfc_dimension_field_from_base_field): New function.
	(gfc_conv_descriptor_dimension): Call it.
	(gfc_conv_descriptor_stride_get): Compute the stride from the
	'sm' field.
	(gfc_conv_descriptor_stride_set): Compute and set 'sm' field.
	(gfc_conv_descriptor_sm, gfc_conv_descriptor_sm_get,
	gfc_conv_descriptor_sm_set): New functions.
	(gfc_conv_descriptor_extent, gfc_conv_descriptor_extent_get,
	gfc_conv_descriptor_extent_set): New functions.
	(gfc_conv_descriptor_ubound_get): Compute the ubound from the
	'extent' field.
	(gfc_conv_descriptor_ubound_set): Compute and set 'extent'
	field.
	trans-array.h: New prototypes for gfc_conv_descriptor_sm_get,
	gfc_conv_descriptor_extent_get, gfc_data_field_from_base_field,
	gfc_dimension_field_from_base_field,gfc_conv_descriptor_sm_set,
	and gfc_conv_descriptor_extent_set.
	trans-types.c (gfc_get_desc_dim_type): Add 'sm' and 'extent'
	fields.
	(gfc_get_array_descriptor_base): Add 'size' field.
	(gfc_get_array_descr_info): Call gfc_data_field_from_base_field
	and gfc_dimension_field_from_base_field instead of using the
	field offsets explicitly.
