2010-05-14  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/sse.md (*avx_cvtdq2pd256_2): New.
	(*avx_cvtps2pd256_2): Allow memory source.
	(vec_unpacks_hi_v8sf): Fixed.
	(vec_unpacks_float_hi_v8si): Likewise.

2010-05-14  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/44144
	* tree-vect-data-refs.c (vect_create_data_ref_ptr): Increase
	base_name alignment only if base_name is a variable.

2010-05-13  H.J. Lu  <hongjiu.lu@intel.com>

	PR middle-end/44130
	* tree-vect-data-refs.c (vect_create_data_ref_ptr): Increase
	base_name alignment if needed.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_expand_fp_absneg_operator): Remove
	elt_mode.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/sse.md (vec_interleave_highv8sf): New.
	(vec_interleave_lowv8sf): Likewise.
	(vec_extract<mode>): Likewise.
	(*vec_concat_lo_<mode>_avx): Likewise.
	(*vec_concat_hi_<mode>_avx): Likewise.
	(*vec_concat_lo_<mode>_avx"): Likewise.
	(*vec_concat_hi_<mode>_avx): Likewise.
	(vec_interleave_highv4df): Defined as expander.
	(vec_interleave_lowv4df): Likewise.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/sse.md (vec_pack_trunc_v4df): New.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_builtins): Add
	IX86_BUILTIN_CPYSGNPS256 and IX86_BUILTIN_CPYSGNPD256.
	(bdesc_args): Likewise.
	(ix86_builtin_vectorized_function): Support 
	IX86_BUILTIN_CPYSGNPS256 and IX86_BUILTIN_CPYSGNPD256.

	* config/i386/sse.md (copysign<mode>3): New.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_build_signbit_mask): Get scalar mode
	for vector mode.
	(ix86_expand_fp_absneg_operator): Call ix86_build_signbit_mask
	with vector mode.
	(ix86_expand_copysign): Properly get vector mode.
	(ix86_sse_copysign_to_positive): Likewise.
	(ix86_expand_sse_fabs): Likewise.

2010-05-12  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_build_const_vector): Check vector
	mode instead of scalar mode.
	(ix86_build_signbit_mask): Likewise.
	(ix86_expand_fp_absneg_operator): Updated.
	(ix86_expand_copysign): Likewise.
	(ix86_expand_int_vcond): Likewise.
	(ix86_emit_swdivsf): Likewise.
	(ix86_sse_copysign_to_positive): Likewise.
	(ix86_expand_sse_fabs): Likewise.
	* config/i386/i386.md (fixuns_trunc<mode>si2): Likewise.
	* config/i386/sse.md (copysign<mode>3): Likewise.
	(sse2_cvtudq2ps): Likewise.
	(vec_unpacku_float_hi_v4si): Likewise.
	(vec_unpacku_float_lo_v4si): Likewise.

	* config/i386/i386.h (UNITS_PER_SIMD_WORD_MAX): Removed.

2010-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.c (ix86_builtin_vectorized_function):
	Support IX86_BUILTIN_SQRTPD256, IX86_BUILTIN_SQRTPS_NR256,
	IX86_BUILTIN_CVTPS2DQ256.
	(ix86_builtin_reciprocal): Support IX86_BUILTIN_SQRTPS_NR256.

2010-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/sse.md (storent<mode>): New for AVX.
	(<code><mode>2: absneg): Likewise.

2010-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (UNITS_PER_SIMD_WORD_MAX): Use
	UNITS_PER_SIMD_WORD.

2010-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (UNITS_PER_SIMD_WORD_MAX): New.
	* config/i386/i386.c (ix86_build_const_vector): Check
	UNITS_PER_SIMD_WORD_MAX.
	(ix86_build_signbit_mask): Likewise.

2010-05-11  H.J. Lu  <hongjiu.lu@intel.com>

	* tree-vect-data-refs.c (vect_analyze_data_refs): Initialize
	scalar_type.

2010-05-11  Richard Guenther  <rguenther@suse.de>

	* tree-vect-data-refs.c (vect_analyze_data_ref_dependence): Adjust
	maximal vectorization factor according to dependences.  Move
	alignment handling ...
	(vect_find_same_alignment_drs): ... here.  New function.
	(vect_analyze_data_ref_dependences): Adjust.
	(vect_analyze_data_refs_alignment): Call vect_find_same_alignment_drs.
	(vect_analyze_data_refs): Adjust minimal vectorization factor
	according to data references.  Do not set vector types here,
	but ...
	(vect_set_data_ref_stmt_vectypes): ... here.  New function.
	* tree-vect-loop.c (vect_determine_vectorization_factor): Compute
	minimal, maximal and desired vectorization factor.  Do not
	set vector types here, but ...
	(vect_determine_vectorization_types): ... here.  New function.
	(vect_analyze_loop_operations): Adjust.
	(vect_analyze_loop): Delay computing vector types.
	(vect_model_reduction_cost): Use the stmt vector type.
	(get_initial_def_for_induction): Get a vector type according
	to the vectorization factor.
	(get_initial_def_for_reduction): Likewise.
	(vect_create_epilog_for_reduction): Likewise.
	* tree-vect-patterns.c (vect_recog_dot_prod_pattern): Pass in
	the vectorization factor.
	(vect_recog_widen_mult_pattern): Likewise.  Use it.
	(vect_recog_pow_pattern): Likewise.
	(vect_recog_widen_sum_pattern): Likewise.
	(vect_pattern_recog_1): Likewise.
	(vect_pattern_recog): Likewise.
	* tree-vect-slp.c (vect_build_slp_tree): Use the vectorization
	factor or the SLP group size to determine the vector type.
	(vect_analyze_slp_instance): Likewise.
	(vect_slp_analyze_node_operations): Pass in the SLP instance.
	(vect_slp_analyze_node_operations): Likewise.
	(vect_set_slp_vectypes): New function.
	(vect_slp_analyze_bb): Adjust for data-ref changes.  Re-set
	vector types.
	(vect_get_constant_vectors): Get a vector of the same size as
	that of the stmt.
	(vect_transform_slp_perm_load): Likewise.
	(vect_schedule_slp_instance): Assert vec_stmts_size makes sense.
	* tree-vect-stmts.c (vect_get_vec_def_for_operand): Allow
	vectors with more elements.
	(vect_analyze_stmt): Pass in the SLP instance.  Set stmt
	types according to the SLP group size.
	(get_vectype_for_scalar_type_1): Get vectorization factor and flag
	whether larger vectors are ok.
	(get_vectype_for_scalar_type): Wrap get_vectype_for_scalar_type_1.
	(get_vectype_for_scalar_type_and_size): Likewise.
	(get_same_sized_vectype): Adjust.
	* tree-vectorizer.c (increase_alignment): Increase alignment
	according to the maximal vector size.
	* tree-vectorizer.h (get_vectype_for_scalar_type): Adjust.
	(get_vectype_for_scalar_type_1): Declare.
	(get_vectype_for_scalar_type_and_size): Likewise.
	(get_same_sized_vectype): Likewise.
	(vect_analyze_stmt): Adjust.
	(vect_analyze_data_ref_dependences): Likewise.
	(vect_analyze_data_refs): Likewise.
	(vect_set_data_ref_stmt_vectypes): Declare.
	(vect_recog_func_ptr): Adjust.
	(vect_pattern_recog): Likewise.

2010-05-11  Richard Guenther  <rguenther@suse.de>

	* defaults.h (UNITS_PER_SIMD_WORD): Adjust.
	* config/i386/i386.h (UNITS_PER_SIMD_WORD): Allow 32byte float
	vectors.
	* config/arm/arm.h (UNITS_PER_SIMD_WORD): Adjust.
	* config/mips/mips.h (UNITS_PER_SIMD_WORD): Likewise.
	* config/rs6000/rs6000.h (UNITS_PER_SIMD_WORD): Likewise.
	* config/sparc/sparc.h (UNITS_PER_SIMD_WORD): Likewise.
	* tree-vect-stmts.c (get_vectype_for_scalar_type): Adjust.
	* tree-vectorizer.h (MAX_VECTORIZATION_FACTOR): New define.

2010-05-10  Richard Guenther  <rguenther@suse.de>

	* config/i386/sse.md (reduc_splus_v8sf): Add.
	(reduc_splus_v4df): Likewise.
	(vec_unpacks_hi_v8sf): Likewise.
	(vec_unpacks_lo_v8sf): Likewise.
	(*avx_cvtps2pd256_2): Likewise.
	(vec_unpacks_float_hi_v8si): Likewise.
	(vec_unpacks_float_lo_v8si): Likewise.
	(vec_interleave_highv4df): Likewise.
	(vec_interleave_lowv4df): Likewise.
