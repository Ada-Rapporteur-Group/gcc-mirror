#!/bin/bash
#@!  -*- buffer-read-only: t -*- vi: set ro:
#@#@# 
#@#@# DO NOT EDIT THIS FILE   (melt-build-script.sh)
#@#@# 
#@#@# It has been AutoGen-ed  September 13, 2012 at 09:59:50 PM by AutoGen 5.12
#@#@# From the definitions    melt-build-script.def
#@#@# and the template file   melt-build-script.tpl
# Generated shell script for MELT modules and MELT translator bootstrap
#   Copyright (C) 2012  Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#@ from melt-build-script.tpl line 20 generated by Autogen 5.12 using melt-build-script.def

## melt-build-script.tpl generates melt-build-script.sh which may
## create meltbuild-* files and directories.  The invoking makefile
## may clean these meltbuild-* things.

## Ypu may want to set the GCCMELT_BUILD_NOTIFICATION environment variable
## to a shell script called with two arguments (a title, and a message)
## e.g. using notify-send or logger in such a script.
shopt -s nullglob




## set the overallgoal  melt-build-script.tpl:36/1 
melt_overall_goal=$1
if [ -z "$melt_overall_goal" ]; then
  melt_overall_goal=gendoc
fi

## source the builtin settings  melt-build-script.tpl:42/2 generated from the MELT runtime
. ./melt-build-settings.sh

## source the parameters  melt-build-script.tpl:45/3
. ./melt-build-param.sh

export GAWK=${GAWK:=gawk}
export MD5SUM=${MD5SUM:=md5sum}

## internal variables for this script  melt-build-script.tpl:51/4
## GCCMELT_STAGE is an internal variable; it keeps the current MELT stage
export GCCMELT_STAGE=""
## GCCMELT_BASE is an internal variable; it keeps the current MELT base
export GCCMELT_BASE=""
## GCCMELT_SKIPEMITC is an internal variable; it skips the emission of C code when non-empty
export GCCMELT_SKIPEMITC=""



date +"/*empty file for MELT build %c*/" > meltbuild-empty-file.c

[ -d meltbuild-workdir ] || mkdir  meltbuild-workdir
[ -d meltbuild-tempdir ] || mkdir  meltbuild-tempdir

## our error function  melt-build-script.tpl:66/5
function meltbuild_error () {
    echo MELT BUILD SCRIPT FAILURE: $@ > /dev/stderr
    exit 1
}

## symbolic linking
function meltbuild_symlink () {
    ln -svf `realpath $1` $2
}

## our info function
function meltbuild_info () {
    echo MELT BUILD SCRIPT INFO: $@ > /dev/stderr
}

## our notice function - for more important things than info
function meltbuild_notice () {
    meltnotititle=$1
    shift
    (echo; echo; echo MELT BUILD SCRIPT NOTICE "$meltnotititle:" $@ ; echo ) > /dev/stderr
    if [ -n "$GCCMELT_BUILD_NOTIFICATION" ]; then
	$GCCMELT_BUILD_NOTIFICATION "$meltnotititle:" "$*"
    fi
}

## utility to build MELT specific arguments in meltbuild_emit
function meltbuild_arg () {
    local meltarg=$1
    if [ -z "$GCCMELT_IS_PLUGIN" ]; then
	echo " -fmelt-$meltarg"
    else
	echo " -fplugin-arg-melt-$meltarg"
    fi
}


if [ ! -f "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
    meltbuild_error  melt-build-script.tpl:104/6 missing MELT runtime dependency "$GCCMELT_RUNTIME_DEPENDENCY" 
fi

if [ -z "$GCCMELT_CC1" ]; then
   meltbuild_error  melt-build-script.tpl:108/7 missing GCCMELT_CC1
fi

if [ ! -f meltrunsup.h ]; then 
    meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/meltrunsup.h meltrunsup.h 
    meltbuild_info  melt-build-script.tpl:113/8 symlinking meltrunsup.h header
fi

GCCMELT_RUNTIME_DEPENDENCY_MD5SUM=$($MD5SUM "$GCCMELT_RUNTIME_DEPENDENCY"  | cut -b 1-32)

case $melt_overall_goal in
    translator) ;;
    applications) ;;
    modlists) ;;
    checkruntime) ;;
    gendoc) ;;
    regenerate) ;;
    *) meltbuild_error  melt-build-script.tpl:125/9 bad MELT overall goal "$melt_overall_goal:" \
        expecting translator, applications, modlists, checkruntime or gendoc or regenerate
esac

################################################################
################ stage zero

GCCMELT_ZERO_FLAVOR=${GCCMELT_STAGE_ZERO#meltbuild-stage0-}

## The base name of the MELT translator files melt-build-script.tpl:134/10
GCCMELT_TRANSLATOR_BASE=(  warmelt-first \
  warmelt-base \
  warmelt-debug \
  warmelt-macro \
  warmelt-normal \
  warmelt-normatch \
  warmelt-genobj \
  warmelt-outobj \
  warmelt-modes )

case $GCCMELT_ZERO_FLAVOR in
    optimized) ;;
    dynamic) ;;
    debugnoline) ;;
    quicklybuilt) ;;
    *) meltbuild_error  melt-build-script.tpl:142/11 bad zero flavor $GCCMELT_ZERO_FLAVOR ;;
esac


## our stage0 melt-build-script.tpl:146/12

[ -d $GCCMELT_STAGE_ZERO ] || mkdir  $GCCMELT_STAGE_ZERO


function meltbuild_do_stage_zero () {
meltbuild_notice STAGE0+  melt-build-script.tpl:152/13 starting stage zero


  meltbuild_info making stage0 warmelt-first  melt-build-script.tpl:155/14

##  stage0 melt-build-script.tpl:157/15 symlink descriptor file warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/16 symlink melt/generated source code warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/17 symlink stamp warmelt-first
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+melttime.h $GCCMELT_STAGE_ZERO/warmelt-first+melttime.h 
  fi

  MELT_ZERO_GENERATED_FIRST_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c)


## manually generate the stage0 warmelt-first+meltbuild.mk file  melt-build-script.tpl:178/18
  MELT_ZERO_GENERATED_FIRST_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-first+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_FIRST_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/19 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-first"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_FIRST"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-first melt-build-script.tpl:186/20' >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first.c $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-first melt-build-script.tpl:194/21'  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_FIRST=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_FIRST=warmelt-first  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_FIRST_BUILDMK >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_FIRST_BUILDMK
  meltbuild_info melt-build-script.tpl:207/22 generated stagezero makedep $MELT_ZERO_GENERATED_FIRST_BUILDMK
  ls -l $MELT_ZERO_GENERATED_FIRST_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/23 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/24 stage0 warmelt-first did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/25 stage0 warmelt-first module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/26 stage0 warmelt-first fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/27 successfully build stage0 warmelt-first
# end stage0  melt-build-script.tpl:229/28 base  warmelt-first

  meltbuild_info making stage0 warmelt-base  melt-build-script.tpl:155/29

##  stage0 melt-build-script.tpl:157/30 symlink descriptor file warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/31 symlink melt/generated source code warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/32 symlink stamp warmelt-base
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+melttime.h $GCCMELT_STAGE_ZERO/warmelt-base+melttime.h 
  fi

  MELT_ZERO_GENERATED_BASE_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c)


## manually generate the stage0 warmelt-base+meltbuild.mk file  melt-build-script.tpl:178/33
  MELT_ZERO_GENERATED_BASE_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-base+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_BASE_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/34 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-base"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_BASE"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-base melt-build-script.tpl:186/35' >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base.c $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-base melt-build-script.tpl:194/36'  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_BASE=$MELT_ZERO_GENERATED_BASE_CUMULMD5 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_BASE=warmelt-base  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_BASE_BUILDMK >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_BASE_BUILDMK
  meltbuild_info melt-build-script.tpl:207/37 generated stagezero makedep $MELT_ZERO_GENERATED_BASE_BUILDMK
  ls -l $MELT_ZERO_GENERATED_BASE_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/38 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_BASE_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/39 stage0 warmelt-base did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/40 stage0 warmelt-base module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/41 stage0 warmelt-base fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/42 successfully build stage0 warmelt-base
# end stage0  melt-build-script.tpl:229/43 base  warmelt-base

  meltbuild_info making stage0 warmelt-debug  melt-build-script.tpl:155/44

##  stage0 melt-build-script.tpl:157/45 symlink descriptor file warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/46 symlink melt/generated source code warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/47 symlink stamp warmelt-debug
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+melttime.h $GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h 
  fi

  MELT_ZERO_GENERATED_DEBUG_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c)


## manually generate the stage0 warmelt-debug+meltbuild.mk file  melt-build-script.tpl:178/48
  MELT_ZERO_GENERATED_DEBUG_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-debug+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_DEBUG_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/49 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-debug"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_DEBUG"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-debug melt-build-script.tpl:186/50' >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug.c $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-debug melt-build-script.tpl:194/51'  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_DEBUG=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_DEBUG=warmelt-debug  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_DEBUG_BUILDMK >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  meltbuild_info melt-build-script.tpl:207/52 generated stagezero makedep $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  ls -l $MELT_ZERO_GENERATED_DEBUG_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/53 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/54 stage0 warmelt-debug did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/55 stage0 warmelt-debug module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/56 stage0 warmelt-debug fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/57 successfully build stage0 warmelt-debug
# end stage0  melt-build-script.tpl:229/58 base  warmelt-debug

  meltbuild_info making stage0 warmelt-macro  melt-build-script.tpl:155/59

##  stage0 melt-build-script.tpl:157/60 symlink descriptor file warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/61 symlink melt/generated source code warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/62 symlink stamp warmelt-macro
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+melttime.h $GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h 
  fi

  MELT_ZERO_GENERATED_MACRO_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c)


## manually generate the stage0 warmelt-macro+meltbuild.mk file  melt-build-script.tpl:178/63
  MELT_ZERO_GENERATED_MACRO_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-macro+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MACRO_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/64 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-macro"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MACRO"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-macro melt-build-script.tpl:186/65' >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro.c $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-macro melt-build-script.tpl:194/66'  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MACRO=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MACRO=warmelt-macro  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MACRO_BUILDMK >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MACRO_BUILDMK
  meltbuild_info melt-build-script.tpl:207/67 generated stagezero makedep $MELT_ZERO_GENERATED_MACRO_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MACRO_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/68 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/69 stage0 warmelt-macro did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/70 stage0 warmelt-macro module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/71 stage0 warmelt-macro fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/72 successfully build stage0 warmelt-macro
# end stage0  melt-build-script.tpl:229/73 base  warmelt-macro

  meltbuild_info making stage0 warmelt-normal  melt-build-script.tpl:155/74

##  stage0 melt-build-script.tpl:157/75 symlink descriptor file warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/76 symlink melt/generated source code warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/77 symlink stamp warmelt-normal
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMAL_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c)


## manually generate the stage0 warmelt-normal+meltbuild.mk file  melt-build-script.tpl:178/78
  MELT_ZERO_GENERATED_NORMAL_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normal+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMAL_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/79 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normal"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMAL"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normal melt-build-script.tpl:186/80' >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal.c $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normal melt-build-script.tpl:194/81'  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMAL=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMAL=warmelt-normal  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMAL_BUILDMK >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  meltbuild_info melt-build-script.tpl:207/82 generated stagezero makedep $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMAL_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/83 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/84 stage0 warmelt-normal did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/85 stage0 warmelt-normal module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/86 stage0 warmelt-normal fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/87 successfully build stage0 warmelt-normal
# end stage0  melt-build-script.tpl:229/88 base  warmelt-normal

  meltbuild_info making stage0 warmelt-normatch  melt-build-script.tpl:155/89

##  stage0 melt-build-script.tpl:157/90 symlink descriptor file warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/91 symlink melt/generated source code warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/92 symlink stamp warmelt-normatch
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMATCH_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c)


## manually generate the stage0 warmelt-normatch+meltbuild.mk file  melt-build-script.tpl:178/93
  MELT_ZERO_GENERATED_NORMATCH_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normatch+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMATCH_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/94 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normatch"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMATCH"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normatch melt-build-script.tpl:186/95' >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch.c $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normatch melt-build-script.tpl:194/96'  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMATCH=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMATCH=warmelt-normatch  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMATCH_BUILDMK >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  meltbuild_info melt-build-script.tpl:207/97 generated stagezero makedep $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMATCH_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/98 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/99 stage0 warmelt-normatch did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/100 stage0 warmelt-normatch module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/101 stage0 warmelt-normatch fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/102 successfully build stage0 warmelt-normatch
# end stage0  melt-build-script.tpl:229/103 base  warmelt-normatch

  meltbuild_info making stage0 warmelt-genobj  melt-build-script.tpl:155/104

##  stage0 melt-build-script.tpl:157/105 symlink descriptor file warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/106 symlink melt/generated source code warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/107 symlink stamp warmelt-genobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_GENOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c)


## manually generate the stage0 warmelt-genobj+meltbuild.mk file  melt-build-script.tpl:178/108
  MELT_ZERO_GENERATED_GENOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-genobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_GENOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/109 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-genobj"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_GENOBJ"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-genobj melt-build-script.tpl:186/110' >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj.c $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-genobj melt-build-script.tpl:194/111'  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_GENOBJ=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_GENOBJ=warmelt-genobj  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_GENOBJ_BUILDMK >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:207/112 generated stagezero makedep $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_GENOBJ_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/113 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/114 stage0 warmelt-genobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/115 stage0 warmelt-genobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/116 stage0 warmelt-genobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/117 successfully build stage0 warmelt-genobj
# end stage0  melt-build-script.tpl:229/118 base  warmelt-genobj

  meltbuild_info making stage0 warmelt-outobj  melt-build-script.tpl:155/119

##  stage0 melt-build-script.tpl:157/120 symlink descriptor file warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/121 symlink melt/generated source code warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/122 symlink stamp warmelt-outobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c)


## manually generate the stage0 warmelt-outobj+meltbuild.mk file  melt-build-script.tpl:178/123
  MELT_ZERO_GENERATED_OUTOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-outobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/124 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-outobj"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_OUTOBJ"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-outobj melt-build-script.tpl:186/125' >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj.c $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-outobj melt-build-script.tpl:194/126'  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_OUTOBJ=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_OUTOBJ=warmelt-outobj  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:207/127 generated stagezero makedep $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/128 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/129 stage0 warmelt-outobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/130 stage0 warmelt-outobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/131 stage0 warmelt-outobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/132 successfully build stage0 warmelt-outobj
# end stage0  melt-build-script.tpl:229/133 base  warmelt-outobj

  meltbuild_info making stage0 warmelt-modes  melt-build-script.tpl:155/134

##  stage0 melt-build-script.tpl:157/135 symlink descriptor file warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/136 symlink melt/generated source code warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes.c $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+[0-9][0-9].c ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:170/137 symlink stamp warmelt-modes
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+melttime.h $GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h 
  fi

  MELT_ZERO_GENERATED_MODES_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c)


## manually generate the stage0 warmelt-modes+meltbuild.mk file  melt-build-script.tpl:178/138
  MELT_ZERO_GENERATED_MODES_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-modes+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MODES_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:182/139 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-modes"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MODES"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-modes melt-build-script.tpl:186/140' >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes.c $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].c; do
      echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-modes melt-build-script.tpl:194/141'  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].c; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .c`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MODES=$MELT_ZERO_GENERATED_MODES_CUMULMD5 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MODES=warmelt-modes  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MODES_BUILDMK >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MODES_BUILDMK
  meltbuild_info melt-build-script.tpl:207/142 generated stagezero makedep $MELT_ZERO_GENERATED_MODES_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MODES_BUILDMK > /dev/stderr

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:211/143 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MODES_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:221/144 stage0 warmelt-modes did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:223/145 stage0 warmelt-modes module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" > /dev/stderr \
      || meltbuild_error  melt-build-script.tpl:225/146 stage0 warmelt-modes fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:228/147 successfully build stage0 warmelt-modes
# end stage0  melt-build-script.tpl:229/148 base  warmelt-modes

} ################ end of function meltbuild_do_stage_zero melt-build-script.tpl:231/149
################################################################

## stage0 stamp file melt-build-script.tpl:234/150
melt_stagezero_stamp=$GCCMELT_STAGE_ZERO/$GCCMELT_STAGE_ZERO.stamp

## test if stage0 should be skipped then do it  melt-build-script.tpl:237/151
if [ ! -f "$melt_stagezero_stamp" -o "$melt_stagezero_stamp" -ot "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
   meltbuild_do_stage_zero
    melt_stagezero_stamptemp=$melt_stagezero_stamp-tmp$$
    echo MELT stagezero stampfile $GCCMELT_STAGE_ZERO.stamp for MELT $MELTGCCBUILTIN_VERSION_STRING from melt-build-script.tpl:241/152 >  $melt_stagezero_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/153 base  warmelt-first
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.c $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/154 base  warmelt-base
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.c $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/155 base  warmelt-debug
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.c $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/156 base  warmelt-macro
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.c $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/157 base  warmelt-normal
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.c $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/158 base  warmelt-normatch
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.c $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/159 base  warmelt-genobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.c $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/160 base  warmelt-outobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.c $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:244/161 base  warmelt-modes
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.c $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].c >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

    $GCCMELT_MOVE_IF_CHANGE $melt_stagezero_stamptemp $melt_stagezero_stamp
else
   meltbuild_info melt-build-script.tpl:250/162 skipped stage0 because of stamp file $melt_stagezero_stamp
fi

meltbuild_info melt-build-script.tpl:253/163 times after stagezero at `date '+%x %H:%M:%S'`: ;  times > /dev/stderr



################################################################
## function to run MELT to emit C code  melt-build-script.tpl:258/164
function meltbuild_emit () {
    local meltfrom=$1
    local meltmode=$2
    local meltbase=$3
    local meltstage=$4
    local meltprevstage=$5
    local meltinit=$6
    local meltinclude=$7
    local meltargs=$meltstage/$meltbase.args
    local meltsrc=$(realpath $GCCMELT_MELTSOURCEDIR/$meltbase.melt)
    meltbuild_info meltfrom=$meltfrom meltmode=$meltmode meltbase=$meltbase meltstage=$meltstage meltprevstage=$meltprevstage meltinit=$meltinit meltinclude=$meltinclude meltsrc=$meltsrc
    local meltsum
    local meltprevf
    if [ -z "$meltmode" ]; then
	meltbuild_error $meltfrom no MELT mode at stage $meltstage
    fi
    if [ ! -f "$meltsrc" ]; then
	meltbuild_error $meltfrom no MELT file $meltsrc at stage $meltstage base $meltbase
    fi
    if [ -z "$meltinit" ]; then
	meltbuild_error $meltfrom no MELT init  at stage $meltstage base $meltbase
    fi
    meltsum=$($MD5SUM $meltsrc | $GAWK '{print $1}')
    meltbuild_info $meltfrom emit C code for $meltbase of $meltstage
    echo -Wno-shadow -frandom-seed=$meltsum > $meltargs-$$-tmp
    ## various arguments
    echo " -DGCCMELT_FROM_ARG=\"$meltfrom\"" >>  $meltargs-$$-tmp
    meltbuild_arg mode=$meltmode >> $meltargs-$$-tmp
    meltbuild_arg arg=$meltsrc >>  $meltargs-$$-tmp
    meltbuild_arg output=$meltstage/$meltbase  >>  $meltargs-$$-tmp
    meltbuild_arg "module-make-command='$GCCMELT_MAKE'" >> $meltargs-$$-tmp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >> $meltargs-$$-tmp
    meltbuild_arg "module-cflags='$GCCMELT_INCLUDES -I. -I$meltstage -I$meltprevstage $GCCMELT_COMPILER_FLAGS'" >>  $meltargs-$$-tmp
    meltbuild_arg init=$meltinit >> $meltargs-$$-tmp
    meltbuild_arg workdir=meltbuild-workdir >> $meltargs-$$-tmp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltargs-$$-tmp
    meltbuild_arg source-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg module-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg bootstrapping  >> $meltargs-$$-tmp
    meltbuild_arg generate-work-link  >> $meltargs-$$-tmp
    meltbuild_arg generated-c-file-list=$meltstage/$meltbase.cfilist  >> $meltargs-$$-tmp
    ## final empty file
    echo meltbuild-empty-file.c >>  $meltargs-$$-tmp
    mv $meltargs-$$-tmp $meltargs
    meltbuild_info $meltfrom argument file $meltargs is
    cat  $meltargs < /dev/null > /dev/stderr
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	$GCCMELT_CC1_PREFIX $GCCMELT_CC1 @$meltargs || meltbuild_error $meltfrom failed with arguments @$meltargs
        ## remove obsolete secondary C files left previously in $meltstage 
	for meltcsecfil in $meltstage/$meltbase+[0-9][0-9].c ; do
	    if grep -q `basename $meltcsecfil` "$meltstage/$meltbase.cfilist" ; then
		: # at  melt-build-script.tpl:310/165
	    else
		meltbuild_info $meltfrom removing obsolete $meltcsecfil
		rm -f "$meltcsecfil"
	    fi
	done
    else
	meltbuild_info $meltfrom skips emission of C code with  @$meltargs stage $meltstage prevstage $meltprevstage skipreason $GCCMELT_SKIPEMITC
	ls -l $meltprevstage/$meltbase*
	for meltprevf in $meltprevstage/$meltbase.c  $meltprevstage/$meltbase+[0-9][0-9].c  $meltprevstage/$meltbase+meltdesc.c  $meltprevstage/$meltbase+melttime.h   $meltprevstage/$meltbase+meltbuild.mk ; do
	    meltbuild_symlink $meltprevf $meltstage/`basename $meltprevf`
	done
	meltbuild_info $meltfrom symlinked previous stage $meltprevstage/$meltbase
    fi
    GCCMELT_STAGE=$meltstage
    GCCMELT_BASE=$meltbase
} ################################ end function meltbuild_emit

################################################################
################################################################
#################@ before our stages melt-build-script.tpl:330/166 
### Our stages  
### are incrementally built, with the former modules of
### the current stage and the later modules of the previous stages
### used to emit the source of the current module in the current stage.
### This is a kind of "diagonalization".


################################################################
#### function to do a stage melt-build-script.tpl:339/167
function meltbuild_do_stage () {
    local meltfrom=$1
    local meltcurstagedir=$2
    local meltcurflavor=$3
    local meltprevstagedir=$4
    local meltprevflavor=$5

    local meltchecksum_FIRST

    local meltchecksum_BASE

    local meltchecksum_DEBUG

    local meltchecksum_MACRO

    local meltchecksum_NORMAL

    local meltchecksum_NORMATCH

    local meltchecksum_GENOBJ

    local meltchecksum_OUTOBJ

    local meltchecksum_MODES

    local meltstamp
    local meltstamptmp
#### meltbuild_do_stage melt-build-script.tpl:351/168
    meltbuild_notice "$meltcurstagedir+" starting  stage $meltcurstagedir flavor $meltcurflavor from $meltfrom
####  meltbuild_do_stage melt-build-script.tpl:353/169
    meltbuild_info $meltfrom starting stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor
    [ -d $meltcurstagedir ] || mkdir $meltcurstagedir
    if [ ! -d "$meltprevstagedir" -o ! -f "$meltprevstagedir/$meltprevstagedir.stamp" ]; then
	meltbuild_error $meltfrom previous stage "$meltprevstagedir/" without stamp file $meltprevstagedir/$meltprevstagedir.stamp
    fi



    #in meltbuild_do_stage melt-build-script.tpl:363/170 base warmelt-first
    meltbuild_info melt-build-script.tpl:364/171 from $meltfrom generating C code of warmelt-first in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/172 emit C code for warmelt-first
    meltbuild_emit melt-build-script.tpl:367/173-$meltfrom \
	translateinit \
	warmelt-first \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltprevstagedir/warmelt-first.$meltprevflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/174 checksum C code for warmelt-first
    meltchecksum_cumul_FIRST=$(cat "$meltcurstagedir"/warmelt-first.c "$meltcurstagedir"/warmelt-first+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/175 perhaps compiling C code for warmelt-first
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/176-$meltfrom compiling module warmelt-first in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/177-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-first" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-first" \
	|| meltbuild_error  melt-build-script.tpl:393/178-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-first compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/179-$meltfrom NOT compiling module warmelt-first "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-first \
	    checksum $meltchecksum_cumul_FIRST skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/180 done base warmelt-first


    #in meltbuild_do_stage melt-build-script.tpl:363/181 base warmelt-base
    meltbuild_info melt-build-script.tpl:364/182 from $meltfrom generating C code of warmelt-base in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/183 emit C code for warmelt-base
    meltbuild_emit melt-build-script.tpl:367/184-$meltfrom \
	translatefile \
	warmelt-base \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/185 checksum C code for warmelt-base
    meltchecksum_cumul_BASE=$(cat "$meltcurstagedir"/warmelt-base.c "$meltcurstagedir"/warmelt-base+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/186 perhaps compiling C code for warmelt-base
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/187-$meltfrom compiling module warmelt-base in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/188-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-base" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-base" \
	|| meltbuild_error  melt-build-script.tpl:393/189-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-base compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/190-$meltfrom NOT compiling module warmelt-base "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-base \
	    checksum $meltchecksum_cumul_BASE skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/191 done base warmelt-base


    #in meltbuild_do_stage melt-build-script.tpl:363/192 base warmelt-debug
    meltbuild_info melt-build-script.tpl:364/193 from $meltfrom generating C code of warmelt-debug in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/194 emit C code for warmelt-debug
    meltbuild_emit melt-build-script.tpl:367/195-$meltfrom \
	translatefile \
	warmelt-debug \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/196 checksum C code for warmelt-debug
    meltchecksum_cumul_DEBUG=$(cat "$meltcurstagedir"/warmelt-debug.c "$meltcurstagedir"/warmelt-debug+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/197 perhaps compiling C code for warmelt-debug
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/198-$meltfrom compiling module warmelt-debug in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/199-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-debug" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-debug" \
	|| meltbuild_error  melt-build-script.tpl:393/200-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-debug compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/201-$meltfrom NOT compiling module warmelt-debug "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-debug \
	    checksum $meltchecksum_cumul_DEBUG skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/202 done base warmelt-debug


    #in meltbuild_do_stage melt-build-script.tpl:363/203 base warmelt-macro
    meltbuild_info melt-build-script.tpl:364/204 from $meltfrom generating C code of warmelt-macro in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/205 emit C code for warmelt-macro
    meltbuild_emit melt-build-script.tpl:367/206-$meltfrom \
	translatefile \
	warmelt-macro \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/207 checksum C code for warmelt-macro
    meltchecksum_cumul_MACRO=$(cat "$meltcurstagedir"/warmelt-macro.c "$meltcurstagedir"/warmelt-macro+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/208 perhaps compiling C code for warmelt-macro
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/209-$meltfrom compiling module warmelt-macro in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/210-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-macro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-macro" \
	|| meltbuild_error  melt-build-script.tpl:393/211-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-macro compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/212-$meltfrom NOT compiling module warmelt-macro "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-macro \
	    checksum $meltchecksum_cumul_MACRO skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/213 done base warmelt-macro


    #in meltbuild_do_stage melt-build-script.tpl:363/214 base warmelt-normal
    meltbuild_info melt-build-script.tpl:364/215 from $meltfrom generating C code of warmelt-normal in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/216 emit C code for warmelt-normal
    meltbuild_emit melt-build-script.tpl:367/217-$meltfrom \
	translatefile \
	warmelt-normal \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "warmelt-predef.melt"

    #in meltbuild_do_stage melt-build-script.tpl:379/218 checksum C code for warmelt-normal
    meltchecksum_cumul_NORMAL=$(cat "$meltcurstagedir"/warmelt-normal.c "$meltcurstagedir"/warmelt-normal+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/219 perhaps compiling C code for warmelt-normal
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/220-$meltfrom compiling module warmelt-normal in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/221-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normal" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normal" \
	|| meltbuild_error  melt-build-script.tpl:393/222-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normal compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/223-$meltfrom NOT compiling module warmelt-normal "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normal \
	    checksum $meltchecksum_cumul_NORMAL skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/224 done base warmelt-normal


    #in meltbuild_do_stage melt-build-script.tpl:363/225 base warmelt-normatch
    meltbuild_info melt-build-script.tpl:364/226 from $meltfrom generating C code of warmelt-normatch in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/227 emit C code for warmelt-normatch
    meltbuild_emit melt-build-script.tpl:367/228-$meltfrom \
	translatefile \
	warmelt-normatch \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/229 checksum C code for warmelt-normatch
    meltchecksum_cumul_NORMATCH=$(cat "$meltcurstagedir"/warmelt-normatch.c "$meltcurstagedir"/warmelt-normatch+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/230 perhaps compiling C code for warmelt-normatch
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/231-$meltfrom compiling module warmelt-normatch in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/232-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normatch" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normatch" \
	|| meltbuild_error  melt-build-script.tpl:393/233-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normatch compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/234-$meltfrom NOT compiling module warmelt-normatch "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normatch \
	    checksum $meltchecksum_cumul_NORMATCH skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/235 done base warmelt-normatch


    #in meltbuild_do_stage melt-build-script.tpl:363/236 base warmelt-genobj
    meltbuild_info melt-build-script.tpl:364/237 from $meltfrom generating C code of warmelt-genobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/238 emit C code for warmelt-genobj
    meltbuild_emit melt-build-script.tpl:367/239-$meltfrom \
	translatefile \
	warmelt-genobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/240 checksum C code for warmelt-genobj
    meltchecksum_cumul_GENOBJ=$(cat "$meltcurstagedir"/warmelt-genobj.c "$meltcurstagedir"/warmelt-genobj+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/241 perhaps compiling C code for warmelt-genobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/242-$meltfrom compiling module warmelt-genobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/243-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-genobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-genobj" \
	|| meltbuild_error  melt-build-script.tpl:393/244-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-genobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/245-$meltfrom NOT compiling module warmelt-genobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-genobj \
	    checksum $meltchecksum_cumul_GENOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/246 done base warmelt-genobj


    #in meltbuild_do_stage melt-build-script.tpl:363/247 base warmelt-outobj
    meltbuild_info melt-build-script.tpl:364/248 from $meltfrom generating C code of warmelt-outobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/249 emit C code for warmelt-outobj
    meltbuild_emit melt-build-script.tpl:367/250-$meltfrom \
	translatefile \
	warmelt-outobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/251 checksum C code for warmelt-outobj
    meltchecksum_cumul_OUTOBJ=$(cat "$meltcurstagedir"/warmelt-outobj.c "$meltcurstagedir"/warmelt-outobj+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/252 perhaps compiling C code for warmelt-outobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/253-$meltfrom compiling module warmelt-outobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/254-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-outobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-outobj" \
	|| meltbuild_error  melt-build-script.tpl:393/255-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-outobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/256-$meltfrom NOT compiling module warmelt-outobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-outobj \
	    checksum $meltchecksum_cumul_OUTOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/257 done base warmelt-outobj


    #in meltbuild_do_stage melt-build-script.tpl:363/258 base warmelt-modes
    meltbuild_info melt-build-script.tpl:364/259 from $meltfrom generating C code of warmelt-modes in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:366/260 emit C code for warmelt-modes
    meltbuild_emit melt-build-script.tpl:367/261-$meltfrom \
	translatefile \
	warmelt-modes \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltcurstagedir/warmelt-outobj.$meltcurflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    ""

    #in meltbuild_do_stage melt-build-script.tpl:379/262 checksum C code for warmelt-modes
    meltchecksum_cumul_MODES=$(cat "$meltcurstagedir"/warmelt-modes.c "$meltcurstagedir"/warmelt-modes+[0-9][0-9].c | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:382/263 perhaps compiling C code for warmelt-modes
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:384/264-$meltfrom compiling module warmelt-modes in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:386/265-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-modes" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-modes" \
	|| meltbuild_error  melt-build-script.tpl:393/266-$meltfrom in "$meltcurstagedir/" failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-modes compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS"
    else
	meltbuild_info melt-build-script.tpl:395/267-$meltfrom NOT compiling module warmelt-modes "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-modes \
	    checksum $meltchecksum_cumul_MODES skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:401/268 done base warmelt-modes


    #in meltbuild_do_stage melt-build-script.tpl:404/269 generating the stampfile
    meltstamp=$meltcurstagedir/$meltcurstagedir.stamp
    meltstamptmp=$meltstamp-tmp$$
    echo "///timestamp file $meltstamp" > $meltstamptmp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-first.c $meltcurstagedir/warmelt-first+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-base.c $meltcurstagedir/warmelt-base+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-debug.c $meltcurstagedir/warmelt-debug+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-macro.c $meltcurstagedir/warmelt-macro+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normal.c $meltcurstagedir/warmelt-normal+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normatch.c $meltcurstagedir/warmelt-normatch+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-genobj.c $meltcurstagedir/warmelt-genobj+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-outobj.c $meltcurstagedir/warmelt-outobj+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-modes.c $meltcurstagedir/warmelt-modes+[0-9][0-9].c  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"  >> $meltstamptmp

    echo "///end timestamp file $meltstamp"
    $GCCMELT_MOVE_IF_CHANGE $meltstamptmp $meltstamp

    #in meltbuild_do_stage melt-build-script.tpl:416/270 ending
    meltbuild_info $meltfrom done stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor timestamp $meltstamp

}				#### end meltbuild_do_stage melt-build-script.tpl:419/271
################################################################

##### possibly run all our stages  melt-build-script.tpl:422/272

#@  melt-build-script.tpl:424/273 stagedir meltbuild-stage1
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage1/meltbuild-stage1.stamp -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    meltbuild_info  melt-build-script.tpl:429/274 building stage meltbuild-stage1
    ## building stage meltbuild-stage1 previous $GCCMELT_STAGE_ZERO  melt-build-script.tpl:430/275
    meltbuild_do_stage  melt-build-script.tpl:431/276 meltbuild-stage1 quicklybuilt $GCCMELT_STAGE_ZERO $GCCMELT_ZERO_FLAVOR
else
    meltbuild_info  melt-build-script.tpl:433/277 skipping stage meltbuild-stage1
fi

##  melt-build-script.tpl:436/278
GCCMELT_LASTSTAGE=meltbuild-stage1


#@  melt-build-script.tpl:424/279 stagedir meltbuild-stage2
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage2/meltbuild-stage2.stamp -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    meltbuild_info  melt-build-script.tpl:429/280 building stage meltbuild-stage2
    ## building stage meltbuild-stage2 previous meltbuild-stage1  melt-build-script.tpl:430/281
    meltbuild_do_stage  melt-build-script.tpl:431/282 meltbuild-stage2 quicklybuilt meltbuild-stage1 quicklybuilt
else
    meltbuild_info  melt-build-script.tpl:433/283 skipping stage meltbuild-stage2
fi

##  melt-build-script.tpl:436/284
GCCMELT_LASTSTAGE=meltbuild-stage2


#@  melt-build-script.tpl:424/285 stagedir meltbuild-stage3
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage3/meltbuild-stage3.stamp -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    meltbuild_info  melt-build-script.tpl:429/286 building stage meltbuild-stage3
    ## building stage meltbuild-stage3 previous meltbuild-stage2  melt-build-script.tpl:430/287
    meltbuild_do_stage  melt-build-script.tpl:431/288 meltbuild-stage3 quicklybuilt meltbuild-stage2 quicklybuilt
else
    meltbuild_info  melt-build-script.tpl:433/289 skipping stage meltbuild-stage3
fi

##  melt-build-script.tpl:436/290
GCCMELT_LASTSTAGE=meltbuild-stage3



################################################################


GCCMELT_LASTSTAGE=$GCCMELT_STAGE

meltbuild_info melt-build-script.tpl:446/291 last stage $GCCMELT_LASTSTAGE

################################################################
################################################################
###########@ before generating meltbuild-sources melt-build-script.tpl:450/292

#### the meltbuild-sources is the final sources directory, to be
#### installed.  They are generated from the last stage, using the
#### modules inside it. Notice that in contrast from the intermediate
#### stages no "diagonalization" is involved.

[ -d meltbuild-sources ] || mkdir meltbuild-sources

#@ from  melt-build-script.tpl:459/293  compiling the modules
[ -d meltbuild-modules ] || mkdir meltbuild-modules

################################################################
function meltbuild_emit_translator_sources () {

  ## meltbuild_emit_source  melt-build-script.tpl:465/294 base warmelt-first
  meltbuild_info melt-build-script.tpl:466/295 generating C code of warmelt-first in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/296 \
      translateinit \
      warmelt-first \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/297 base warmelt-base
  meltbuild_info melt-build-script.tpl:466/298 generating C code of warmelt-base in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/299 \
      translatefile \
      warmelt-base \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/300 base warmelt-debug
  meltbuild_info melt-build-script.tpl:466/301 generating C code of warmelt-debug in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/302 \
      translatefile \
      warmelt-debug \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/303 base warmelt-macro
  meltbuild_info melt-build-script.tpl:466/304 generating C code of warmelt-macro in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/305 \
      translatefile \
      warmelt-macro \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/306 base warmelt-normal
  meltbuild_info melt-build-script.tpl:466/307 generating C code of warmelt-normal in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/308 \
      translatefile \
      warmelt-normal \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      "warmelt-predef.melt"

  ## meltbuild_emit_source  melt-build-script.tpl:465/309 base warmelt-normatch
  meltbuild_info melt-build-script.tpl:466/310 generating C code of warmelt-normatch in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/311 \
      translatefile \
      warmelt-normatch \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/312 base warmelt-genobj
  meltbuild_info melt-build-script.tpl:466/313 generating C code of warmelt-genobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/314 \
      translatefile \
      warmelt-genobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/315 base warmelt-outobj
  meltbuild_info melt-build-script.tpl:466/316 generating C code of warmelt-outobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/317 \
      translatefile \
      warmelt-outobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:465/318 base warmelt-modes
  meltbuild_info melt-build-script.tpl:466/319 generating C code of warmelt-modes in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:467/320 \
      translatefile \
      warmelt-modes \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

}  # end of function meltbuild_emit_translator_sources


################
function meltbuild_compile_translator_modules () {


  # in meltbuild_compile_translator_sources quicklybuilt melt-build-script.tpl:482/321
  meltbuild_info melt-build-script.tpl:483/322 compiling translator quicklybuilt


   #@ melt-build-script.tpl:486/323 flavor quicklybuilt base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/324 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:495/325 in meltbuild-modules failed to compile translator warmelt-first quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/326 flavor quicklybuilt base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/327 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:495/328 in meltbuild-modules failed to compile translator warmelt-base quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/329 flavor quicklybuilt base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/330 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:495/331 in meltbuild-modules failed to compile translator warmelt-debug quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/332 flavor quicklybuilt base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/333 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:495/334 in meltbuild-modules failed to compile translator warmelt-macro quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/335 flavor quicklybuilt base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/336 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:495/337 in meltbuild-modules failed to compile translator warmelt-normal quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/338 flavor quicklybuilt base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/339 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:495/340 in meltbuild-modules failed to compile translator warmelt-normatch quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/341 flavor quicklybuilt base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/342 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:495/343 in meltbuild-modules failed to compile translator warmelt-genobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/344 flavor quicklybuilt base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/345 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:495/346 in meltbuild-modules failed to compile translator warmelt-outobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/347 flavor quicklybuilt base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/348 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:495/349 in meltbuild-modules failed to compile translator warmelt-modes quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources optimized melt-build-script.tpl:482/350
  meltbuild_info melt-build-script.tpl:483/351 compiling translator optimized


   #@ melt-build-script.tpl:486/352 flavor optimized base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/353 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:495/354 in meltbuild-modules failed to compile translator warmelt-first optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/355 flavor optimized base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/356 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:495/357 in meltbuild-modules failed to compile translator warmelt-base optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/358 flavor optimized base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/359 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:495/360 in meltbuild-modules failed to compile translator warmelt-debug optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/361 flavor optimized base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/362 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:495/363 in meltbuild-modules failed to compile translator warmelt-macro optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/364 flavor optimized base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/365 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:495/366 in meltbuild-modules failed to compile translator warmelt-normal optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/367 flavor optimized base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/368 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:495/369 in meltbuild-modules failed to compile translator warmelt-normatch optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/370 flavor optimized base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/371 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:495/372 in meltbuild-modules failed to compile translator warmelt-genobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/373 flavor optimized base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/374 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:495/375 in meltbuild-modules failed to compile translator warmelt-outobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/376 flavor optimized base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/377 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:495/378 in meltbuild-modules failed to compile translator warmelt-modes optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources debugnoline melt-build-script.tpl:482/379
  meltbuild_info melt-build-script.tpl:483/380 compiling translator debugnoline


   #@ melt-build-script.tpl:486/381 flavor debugnoline base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/382 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:495/383 in meltbuild-modules failed to compile translator warmelt-first debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/384 flavor debugnoline base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/385 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:495/386 in meltbuild-modules failed to compile translator warmelt-base debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/387 flavor debugnoline base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/388 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:495/389 in meltbuild-modules failed to compile translator warmelt-debug debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/390 flavor debugnoline base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/391 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:495/392 in meltbuild-modules failed to compile translator warmelt-macro debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/393 flavor debugnoline base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/394 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:495/395 in meltbuild-modules failed to compile translator warmelt-normal debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/396 flavor debugnoline base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/397 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:495/398 in meltbuild-modules failed to compile translator warmelt-normatch debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/399 flavor debugnoline base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/400 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:495/401 in meltbuild-modules failed to compile translator warmelt-genobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/402 flavor debugnoline base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/403 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:495/404 in meltbuild-modules failed to compile translator warmelt-outobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:486/405 flavor debugnoline base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:488/406 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:495/407 in meltbuild-modules failed to compile translator warmelt-modes debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS



}     # end of function meltbuild_compile_translator_modules
################################################################


#################@ melt-build-script.tpl:503/408 
function meltbuild_symlink_melt_translator_sources () {


### symlinking the MELT translator code in meltbuild-sources for warmelt-first from melt-build-script.tpl:508/409

meltbuild_info melt-build-script.tpl:510/410 putting MELT translator code of warmelt-first in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-first.melt meltbuild-sources/warmelt-first.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-base from melt-build-script.tpl:508/411

meltbuild_info melt-build-script.tpl:510/412 putting MELT translator code of warmelt-base in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-base.melt meltbuild-sources/warmelt-base.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-debug from melt-build-script.tpl:508/413

meltbuild_info melt-build-script.tpl:510/414 putting MELT translator code of warmelt-debug in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt meltbuild-sources/warmelt-debug.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-macro from melt-build-script.tpl:508/415

meltbuild_info melt-build-script.tpl:510/416 putting MELT translator code of warmelt-macro in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt meltbuild-sources/warmelt-macro.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-normal from melt-build-script.tpl:508/417

meltbuild_info melt-build-script.tpl:510/418 putting MELT translator code of warmelt-normal in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt meltbuild-sources/warmelt-normal.melt
meltbuild_symlink warmelt-predef.melt meltbuild-sources/warmelt-predef.melt



### symlinking the MELT translator code in meltbuild-sources for warmelt-normatch from melt-build-script.tpl:508/419

meltbuild_info melt-build-script.tpl:510/420 putting MELT translator code of warmelt-normatch in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt meltbuild-sources/warmelt-normatch.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-genobj from melt-build-script.tpl:508/421

meltbuild_info melt-build-script.tpl:510/422 putting MELT translator code of warmelt-genobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt meltbuild-sources/warmelt-genobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-outobj from melt-build-script.tpl:508/423

meltbuild_info melt-build-script.tpl:510/424 putting MELT translator code of warmelt-outobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt meltbuild-sources/warmelt-outobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-modes from melt-build-script.tpl:508/425

meltbuild_info melt-build-script.tpl:510/426 putting MELT translator code of warmelt-modes in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt meltbuild-sources/warmelt-modes.melt



} 				# end of meltbuild_symlink_melt_translator_sources


################@ melt-build-script.tpl:519/427 
melt_final_translator_stamp=meltbuild-final-translator.stamp

if [ ! -f $melt_final_translator_stamp -o $melt_final_translator_stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_LASTSTAGE/$GCCMELT_LASTSTAGE.stamp ]; then
    meltbuild_notice 'Emit Translator Source'  melt-build-script.tpl:525/428 emit then translate the MELT translator 
    meltbuild_info melt-build-script.tpl:526/429 emit then translate the compile translator for  $melt_final_translator_stamp
    meltbuild_emit_translator_sources
    meltbuild_symlink_melt_translator_sources
    meltbuild_compile_translator_modules
    melt_final_translator_stamptemp=$melt_final_translator_stamp-tmp$$
    echo "///MELT translator timestamp file $melt_final_translator_stamp" > $melt_final_translator_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $melt_final_translator_stamptemp

#@  melt-build-script.tpl:534/430 
    $MD5SUM meltbuild-sources/warmelt-first.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-first.c meltbuild-sources/warmelt-first+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_FIRST_cumulmd5=$(cat  meltbuild-sources/warmelt-first.c meltbuild-sources/warmelt-first+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/431 
    $MD5SUM meltbuild-sources/warmelt-base.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-base.c meltbuild-sources/warmelt-base+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_BASE_cumulmd5=$(cat  meltbuild-sources/warmelt-base.c meltbuild-sources/warmelt-base+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/432 
    $MD5SUM meltbuild-sources/warmelt-debug.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-debug.c meltbuild-sources/warmelt-debug+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_DEBUG_cumulmd5=$(cat  meltbuild-sources/warmelt-debug.c meltbuild-sources/warmelt-debug+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/433 
    $MD5SUM meltbuild-sources/warmelt-macro.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-macro.c meltbuild-sources/warmelt-macro+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_MACRO_cumulmd5=$(cat  meltbuild-sources/warmelt-macro.c meltbuild-sources/warmelt-macro+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/434 
    $MD5SUM meltbuild-sources/warmelt-normal.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-predef.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normal.c meltbuild-sources/warmelt-normal+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_NORMAL_cumulmd5=$(cat  meltbuild-sources/warmelt-normal.c meltbuild-sources/warmelt-normal+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/435 
    $MD5SUM meltbuild-sources/warmelt-normatch.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normatch.c meltbuild-sources/warmelt-normatch+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_NORMATCH_cumulmd5=$(cat  meltbuild-sources/warmelt-normatch.c meltbuild-sources/warmelt-normatch+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/436 
    $MD5SUM meltbuild-sources/warmelt-genobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-genobj.c meltbuild-sources/warmelt-genobj+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_GENOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-genobj.c meltbuild-sources/warmelt-genobj+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/437 
    $MD5SUM meltbuild-sources/warmelt-outobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-outobj.c meltbuild-sources/warmelt-outobj+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_OUTOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-outobj.c meltbuild-sources/warmelt-outobj+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:534/438 
    $MD5SUM meltbuild-sources/warmelt-modes.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-modes.c meltbuild-sources/warmelt-modes+[0-9][0-9].c  >> $melt_final_translator_stamptemp
    melt_translator_MODES_cumulmd5=$(cat  meltbuild-sources/warmelt-modes.c meltbuild-sources/warmelt-modes+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)

    echo "///end timestamp file $melt_final_translator_stamp"
    $GCCMELT_MOVE_IF_CHANGE $melt_final_translator_stamptemp $melt_final_translator_stamp
else
    meltbuild_info melt-build-script.tpl:545/439 skip final translation of translator stamp  $melt_final_translator_stamp
fi

################################################################
#@ melt-build-script.tpl:549/440
if [ "$melt_overall_goal" = "translator" ]; then
    meltbuild_info melt-build-script.tpl:551/441 done translation overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

################
#@ melt-build-script.tpl:556/442 before application xtramelt* modules
################################################################
meltbuild_info melt-build-script.tpl:558/443 before applications GCCMELT_SKIPEMITC=$GCCMELT_SKIPEMITC.

meltbuild_info melt-build-script.tpl:560/444 times before applications at `date '+%x %H:%M:%S'`: ;  times > /dev/stderr
 
melt_final_application_stamp=meltbuild-final-application.stamp

function meltbuild_do_applications () {
meltbuild_notice 'doing applications'  melt-build-script.tpl:565/445 doing applications 



  ## meltbuild_do_applications xtramelt-ana-base melt-build-script.tpl:569/446
  if [ ! -f meltbuild-sources/xtramelt-ana-base.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-base.melt meltbuild-sources/xtramelt-ana-base.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-base melt-build-script.tpl:573/447
  if [ ! -f meltbuild-sources/xtramelt-ana-base.c -o  ! -f meltbuild-sources/xtramelt-ana-base+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-base.melt \
 ]; then
      meltbuild_info melt-build-script.tpl:579/448 emit application C code for xtramelt-ana-base
      meltbuild_emit melt-build-script.tpl:580/449 \
	  translatefile \
	  xtramelt-ana-base \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/450 failed to generate C code of application xtramelt-ana-base
  else
      meltbuild_info melt-build-script.tpl:589/451 DONT emit application C code for xtramelt-ana-base
  fi
  local meltapp_ANA_BASE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-base.c meltbuild-sources/xtramelt-ana-base+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-base.c \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/452 compiling application module for xtramelt-ana-base quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/453 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:606/454 in meltbuild-modules failed to compile application xtramelt-ana-base quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/455 not compiling application module for xtramelt-ana-base quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-base.c \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/456 compiling application module for xtramelt-ana-base optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/457 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:606/458 in meltbuild-modules failed to compile application xtramelt-ana-base optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/459 not compiling application module for xtramelt-ana-base optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-base.c \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/460 compiling application module for xtramelt-ana-base debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/461 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:606/462 in meltbuild-modules failed to compile application xtramelt-ana-base debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/463 not compiling application module for xtramelt-ana-base debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-tree melt-build-script.tpl:569/464
  if [ ! -f meltbuild-sources/xtramelt-ana-tree.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-tree.melt meltbuild-sources/xtramelt-ana-tree.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-tree melt-build-script.tpl:573/465
  if [ ! -f meltbuild-sources/xtramelt-ana-tree.c -o  ! -f meltbuild-sources/xtramelt-ana-tree+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-tree.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-tree+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/466 emit application C code for xtramelt-ana-tree
      meltbuild_emit melt-build-script.tpl:580/467 \
	  translatefile \
	  xtramelt-ana-tree \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/468 failed to generate C code of application xtramelt-ana-tree
  else
      meltbuild_info melt-build-script.tpl:589/469 DONT emit application C code for xtramelt-ana-tree
  fi
  local meltapp_ANA_TREE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-tree.c meltbuild-sources/xtramelt-ana-tree+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-tree.c \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/470 compiling application module for xtramelt-ana-tree quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/471 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:606/472 in meltbuild-modules failed to compile application xtramelt-ana-tree quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/473 not compiling application module for xtramelt-ana-tree quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-tree.c \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/474 compiling application module for xtramelt-ana-tree optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/475 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:606/476 in meltbuild-modules failed to compile application xtramelt-ana-tree optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/477 not compiling application module for xtramelt-ana-tree optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-tree.c \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/478 compiling application module for xtramelt-ana-tree debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/479 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:606/480 in meltbuild-modules failed to compile application xtramelt-ana-tree debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/481 not compiling application module for xtramelt-ana-tree debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-gimple melt-build-script.tpl:569/482
  if [ ! -f meltbuild-sources/xtramelt-ana-gimple.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-gimple.melt meltbuild-sources/xtramelt-ana-gimple.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-gimple melt-build-script.tpl:573/483
  if [ ! -f meltbuild-sources/xtramelt-ana-gimple.c -o  ! -f meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-gimple.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/484 emit application C code for xtramelt-ana-gimple
      meltbuild_emit melt-build-script.tpl:580/485 \
	  translatefile \
	  xtramelt-ana-gimple \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/486 failed to generate C code of application xtramelt-ana-gimple
  else
      meltbuild_info melt-build-script.tpl:589/487 DONT emit application C code for xtramelt-ana-gimple
  fi
  local meltapp_ANA_GIMPLE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-gimple.c meltbuild-sources/xtramelt-ana-gimple+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-gimple.c \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/488 compiling application module for xtramelt-ana-gimple quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/489 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:606/490 in meltbuild-modules failed to compile application xtramelt-ana-gimple quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/491 not compiling application module for xtramelt-ana-gimple quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-gimple.c \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/492 compiling application module for xtramelt-ana-gimple optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/493 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:606/494 in meltbuild-modules failed to compile application xtramelt-ana-gimple optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/495 not compiling application module for xtramelt-ana-gimple optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-gimple.c \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/496 compiling application module for xtramelt-ana-gimple debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/497 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:606/498 in meltbuild-modules failed to compile application xtramelt-ana-gimple debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/499 not compiling application module for xtramelt-ana-gimple debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-probe melt-build-script.tpl:569/500
  if [ ! -f meltbuild-sources/xtramelt-probe.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt meltbuild-sources/xtramelt-probe.melt
  fi
  ## meltbuild_do_applications xtramelt-probe melt-build-script.tpl:573/501
  if [ ! -f meltbuild-sources/xtramelt-probe.c -o  ! -f meltbuild-sources/xtramelt-probe+meltdesc.c \
       -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot  meltbuild-sources/xtramelt-probe.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/502 emit application C code for xtramelt-probe
      meltbuild_emit melt-build-script.tpl:580/503 \
	  translatefile \
	  xtramelt-probe \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/504 failed to generate C code of application xtramelt-probe
  else
      meltbuild_info melt-build-script.tpl:589/505 DONT emit application C code for xtramelt-probe
  fi
  local meltapp_PROBE_cumulmd5=$(cat  meltbuild-sources/xtramelt-probe.c meltbuild-sources/xtramelt-probe+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe.c \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/506 compiling application module for xtramelt-probe quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/507 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:606/508 in meltbuild-modules failed to compile application xtramelt-probe quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/509 not compiling application module for xtramelt-probe quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe.c \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/510 compiling application module for xtramelt-probe optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/511 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:606/512 in meltbuild-modules failed to compile application xtramelt-probe optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/513 not compiling application module for xtramelt-probe optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe.c \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/514 compiling application module for xtramelt-probe debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/515 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:606/516 in meltbuild-modules failed to compile application xtramelt-probe debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/517 not compiling application module for xtramelt-probe debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-simple melt-build-script.tpl:569/518
  if [ ! -f meltbuild-sources/xtramelt-ana-simple.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt meltbuild-sources/xtramelt-ana-simple.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-simple melt-build-script.tpl:573/519
  if [ ! -f meltbuild-sources/xtramelt-ana-simple.c -o  ! -f meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-simple.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/520 emit application C code for xtramelt-ana-simple
      meltbuild_emit melt-build-script.tpl:580/521 \
	  translatefile \
	  xtramelt-ana-simple \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt:xtramelt-probe.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/522 failed to generate C code of application xtramelt-ana-simple
  else
      meltbuild_info melt-build-script.tpl:589/523 DONT emit application C code for xtramelt-ana-simple
  fi
  local meltapp_ANA_SIMPLE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-simple.c meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple.c \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/524 compiling application module for xtramelt-ana-simple quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/525 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:606/526 in meltbuild-modules failed to compile application xtramelt-ana-simple quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/527 not compiling application module for xtramelt-ana-simple quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple.c \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/528 compiling application module for xtramelt-ana-simple optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/529 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:606/530 in meltbuild-modules failed to compile application xtramelt-ana-simple optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/531 not compiling application module for xtramelt-ana-simple optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple.c \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/532 compiling application module for xtramelt-ana-simple debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/533 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:606/534 in meltbuild-modules failed to compile application xtramelt-ana-simple debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/535 not compiling application module for xtramelt-ana-simple debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-c-generator melt-build-script.tpl:569/536
  if [ ! -f meltbuild-sources/xtramelt-c-generator.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-c-generator.melt meltbuild-sources/xtramelt-c-generator.melt
  fi
  ## meltbuild_do_applications xtramelt-c-generator melt-build-script.tpl:573/537
  if [ ! -f meltbuild-sources/xtramelt-c-generator.c -o  ! -f meltbuild-sources/xtramelt-c-generator+meltdesc.c \
       -o meltbuild-sources/xtramelt-c-generator+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-c-generator+meltdesc.c -ot  meltbuild-sources/xtramelt-c-generator.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-c-generator+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-c-generator+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-c-generator+meltdesc.c \
 -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-c-generator+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-sources/xtramelt-c-generator+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/538 emit application C code for xtramelt-c-generator
      meltbuild_emit melt-build-script.tpl:580/539 \
	  translatefile \
	  xtramelt-c-generator \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt:xtramelt-probe.quicklybuilt:xtramelt-ana-simple.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/540 failed to generate C code of application xtramelt-c-generator
  else
      meltbuild_info melt-build-script.tpl:589/541 DONT emit application C code for xtramelt-c-generator
  fi
  local meltapp_C_GENERATOR_cumulmd5=$(cat  meltbuild-sources/xtramelt-c-generator.c meltbuild-sources/xtramelt-c-generator+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-c-generator.c \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-c-generator+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/542 compiling application module for xtramelt-c-generator quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/543 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-c-generator \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-c-generator \
	  || meltbuild_error  melt-build-script.tpl:606/544 in meltbuild-modules failed to compile application xtramelt-c-generator quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/545 not compiling application module for xtramelt-c-generator quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-c-generator.c \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-c-generator+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/546 compiling application module for xtramelt-c-generator optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/547 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-c-generator \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-c-generator \
	  || meltbuild_error  melt-build-script.tpl:606/548 in meltbuild-modules failed to compile application xtramelt-c-generator optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/549 not compiling application module for xtramelt-c-generator optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-c-generator.c \
      -o  meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-c-generator+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/550 compiling application module for xtramelt-c-generator debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/551 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-c-generator \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-c-generator \
	  || meltbuild_error  melt-build-script.tpl:606/552 in meltbuild-modules failed to compile application xtramelt-c-generator debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/553 not compiling application module for xtramelt-c-generator debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-opengpu melt-build-script.tpl:569/554
  if [ ! -f meltbuild-sources/xtramelt-opengpu.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-opengpu.melt meltbuild-sources/xtramelt-opengpu.melt
  fi
  ## meltbuild_do_applications xtramelt-opengpu melt-build-script.tpl:573/555
  if [ ! -f meltbuild-sources/xtramelt-opengpu.c -o  ! -f meltbuild-sources/xtramelt-opengpu+meltdesc.c \
       -o meltbuild-sources/xtramelt-opengpu+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-opengpu+meltdesc.c -ot  meltbuild-sources/xtramelt-opengpu.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 -o meltbuild-sources/xtramelt-c-generator+meltdesc.c -ot meltbuild-sources/xtramelt-opengpu+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:579/556 emit application C code for xtramelt-opengpu
      meltbuild_emit melt-build-script.tpl:580/557 \
	  translatefile \
	  xtramelt-opengpu \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt:xtramelt-probe.quicklybuilt:xtramelt-ana-simple.quicklybuilt:xtramelt-c-generator.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:587/558 failed to generate C code of application xtramelt-opengpu
  else
      meltbuild_info melt-build-script.tpl:589/559 DONT emit application C code for xtramelt-opengpu
  fi
  local meltapp_OPENGPU_cumulmd5=$(cat  meltbuild-sources/xtramelt-opengpu.c meltbuild-sources/xtramelt-opengpu+[0-9][0-9].c  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-opengpu.c \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-opengpu+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/560 compiling application module for xtramelt-opengpu quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/561 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-opengpu \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-opengpu \
	  || meltbuild_error  melt-build-script.tpl:606/562 in meltbuild-modules failed to compile application xtramelt-opengpu quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/563 not compiling application module for xtramelt-opengpu quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-opengpu.c \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-opengpu+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/564 compiling application module for xtramelt-opengpu optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/565 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-opengpu \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-opengpu \
	  || meltbuild_error  melt-build-script.tpl:606/566 in meltbuild-modules failed to compile application xtramelt-opengpu optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/567 not compiling application module for xtramelt-opengpu optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-opengpu.c \
      -o  meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-opengpu+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:597/568 compiling application module for xtramelt-opengpu debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:599/569 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-opengpu \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-opengpu \
	  || meltbuild_error  melt-build-script.tpl:606/570 in meltbuild-modules failed to compile application xtramelt-opengpu debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:608/571 not compiling application module for xtramelt-opengpu debugnoline
  fi
 

  ## meltbuild_do_applications  melt-build-script.tpl:612/572
  local meltappstamptemp=$melt_final_application_stamp-tmp$$
  echo "///MELT application time stamp $melt_final_application_stamp" > $meltappstamptemp
  echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $meltappstamptemp

  $MD5SUM meltbuild-sources/xtramelt-ana-base.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-base.c meltbuild-sources/xtramelt-ana-base+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-tree.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-tree.c meltbuild-sources/xtramelt-ana-tree+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-gimple.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-gimple.c meltbuild-sources/xtramelt-ana-gimple+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-probe.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-probe.c meltbuild-sources/xtramelt-probe+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-simple.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-simple.c meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-c-generator.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-c-generator.c meltbuild-sources/xtramelt-c-generator+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-c-generator.meltmod-$meltapp_C_GENERATOR_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-opengpu.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-opengpu.c meltbuild-sources/xtramelt-opengpu+[0-9][0-9].c  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-opengpu.meltmod-$meltapp_OPENGPU_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  echo "///end stamp $melt_final_application_stamp"  >> $meltappstamptemp
  $GCCMELT_MOVE_IF_CHANGE $meltappstamptemp  $melt_final_application_stamp
meltbuild_info melt-build-script.tpl:625/573 times after applications at `date '+%x %H:%M:%S'`: ;  times > /dev/stderr
} ## end meltbuild_do_applications  melt-build-script.tpl:626/574

if [ ! -f  "$melt_final_application_stamp" \
     -o "$melt_final_application_stamp" -ot "$melt_final_translator_stamp" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-base.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-tree.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-gimple.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-c-generator.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-opengpu.melt" \
 ]; then
    meltbuild_info melt-build-script.tpl:632/575 building MELT applications
    meltbuild_do_applications
else
    meltbuild_info melt-build-script.tpl:635/576 not building MELT applications because of applstamp  "$melt_final_application_stamp"
fi

################################################################
#@ melt-build-script.tpl:639/577
if [ "$melt_overall_goal" = "applications" ]; then
    meltbuild_info melt-build-script.tpl:641/578 done applications overall goal with stamp  $melt_final_translator_stamp
    meltbuild_notice 'Done applications' melt-build-script.tpl:642/579 applications overall goal 
    exit 0
fi
################################################################
################################################################
### the modules lists melt-build-script.tpl:647/580

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:652/581 module list quicklybuilt
  meltbuild_info  melt-build-script.tpl:653/582 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:660/583
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-probe.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-c-generator.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-opengpu.quicklybuilt >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
  #  melt-build-script.tpl:666/584 warmelt module list quicklybuilt
  melt_modlis_temp="meltbuild-sources/warmelt.quicklybuilt.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.quicklybuilt.modlis"
else
  meltbuild_info  melt-build-script.tpl:674/585 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:652/586 module list optimized
  meltbuild_info  melt-build-script.tpl:653/587 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:660/588
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.optimized >> $melt_modlis_temp
 
  echo xtramelt-probe.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.optimized >> $melt_modlis_temp
 
  echo xtramelt-c-generator.optimized >> $melt_modlis_temp
 
  echo xtramelt-opengpu.optimized >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
  #  melt-build-script.tpl:666/589 warmelt module list optimized
  melt_modlis_temp="meltbuild-sources/warmelt.optimized.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.optimized.modlis"
else
  meltbuild_info  melt-build-script.tpl:674/590 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:652/591 module list debugnoline
  meltbuild_info  melt-build-script.tpl:653/592 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:660/593
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-probe.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-c-generator.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-opengpu.debugnoline >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
  #  melt-build-script.tpl:666/594 warmelt module list debugnoline
  melt_modlis_temp="meltbuild-sources/warmelt.debugnoline.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.debugnoline.modlis"
else
  meltbuild_info  melt-build-script.tpl:674/595 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"  
fi


#@ melt-build-script.tpl:678/596
if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis" ]; then
   meltbuild_symlink "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis"
fi

################################################################
#@ melt-build-script.tpl:684/597 module lists
if [ "$melt_overall_goal" = "modlists" ]; then
    meltbuild_info melt-build-script.tpl:686/598 done modlists overall goal with stamp  $melt_final_application_stamp
    exit 0
fi


################################################################
#@ melt-build-script.tpl:692/599 runtime self check

##  melt-build-script.tpl:694/600 FIXME: should skip that when cross-compiler MELT plugin..

meltcheckruntime_stamp=meltbuild-checkruntime.stamp
if [ ! -f $meltcheckruntime_stamp -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_ARGS" \
    -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_C" \
    -o $meltcheckruntime_stamp -ot $melt_final_application_stamp ]; then
    #@ melt-build-script.tpl:700/601 checkruntime
    if [ -f melt-no-check-runtime -o -n "$MELTGCC_NO_CHECK_RUNTIME" -o ! -f melt-runtime.i ]; then
	meltbuild_info melt-build-script.tpl:702/602 skipping check of MELT runtime
    else
	meltcheckruntime_args=meltbuild-checkruntime.args 
	meltcheckruntime_argstemp=$meltcheckruntime_args-tmp$$
	echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:706/603"' > $meltcheckruntime_argstemp
	meltbuild_arg mode=meltframe >> $meltcheckruntime_argstemp
	meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckruntime_argstemp
	meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckruntime_argstemp
	meltbuild_arg source-path=meltbuild-sources >> $meltcheckruntime_argstemp
	meltbuild_arg module-path=meltbuild-modules >> $meltcheckruntime_argstemp
	meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckruntime_argstemp
	meltbuild_arg bootstrapping  >> $meltcheckruntime_argstemp
	echo ' -o /dev/null' >> $meltcheckruntime_argstemp
	echo melt-runtime.i >> $meltcheckruntime_argstemp
	$GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_argstemp $meltcheckruntime_args
	[ -f "$meltcheckruntime_args" ] || meltbuild_error  melt-build-script.tpl:717/604 missing check runtime args  "$meltcheckruntime_args"
	meltbuild_info melt-build-script.tpl:718/605 $meltcheckruntime_args  is
	cat $meltcheckruntime_args < /dev/null > /dev/stderr
	if [ -n "$MELTGCCBUILTIN_BUILD_WITH_CXX" ]; then
	    $GCCMELT_CC1_PREFIX $GCCMELT_CC1PLUS @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:722/606 failed  $GCCMELT_CC1PLUS with arguments @$meltcheckruntime_args
	else
	    $GCCMELT_CC1_PREFIX $GCCMELT_CC1 @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:725/607 failed  $GCCMELT_CC1 with arguments @$meltcheckruntime_args
	fi
	meltbuild_info melt-build-script.tpl:727/608 done check runtime with $meltcheckruntime_args
    fi

   #@ melt-build-script.tpl:730/609 checkhello
    meltcheckhelloworld_args=meltbuild-checkhelloworld.args 
    meltcheckhelloworld_argstemp=$meltcheckhelloworld_args-tmp$$
    echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:733/610"' > $meltcheckhelloworld_argstemp
    meltbuild_arg mode=runfile >> $meltcheckhelloworld_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckhelloworld_argstemp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >>  $meltcheckhelloworld_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckhelloworld_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltcheckhelloworld_argstemp
    meltbuild_arg module-path=meltbuild-modules >> $meltcheckhelloworld_argstemp
    meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckhelloworld_argstemp
    date +'(code_chunk hello%j #{puts("hello world from MELT %F @" __TIME__"\n")}#)' > meltbuild-hello.melt-tmp$$
    $GCCMELT_MOVE_IF_CHANGE meltbuild-hello.melt-tmp$$  meltbuild-hello.melt
    meltbuild_arg arg=meltbuild-hello.melt >> $meltcheckhelloworld_argstemp
    echo ' meltbuild-empty-file.c -o /dev/null' >> $meltcheckhelloworld_argstemp
    cat $GCCMELT_HELLOWORLD_ARGS < /dev/null >>  $meltcheckhelloworld_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckhelloworld_argstemp $meltcheckhelloworld_args
    [ -f "$meltcheckhelloworld_args" ] || meltbuild_error  melt-build-script.tpl:747/611 missing check helloworld args  "$meltcheckhelloworld_args"
   meltbuild_info melt-build-script.tpl:748/612 $meltcheckhelloworld_args  is
   cat $meltcheckhelloworld_args < /dev/null > /dev/stderr
    $GCCMELT_CC1_PREFIX $GCCMELT_CC1 @$meltcheckhelloworld_args \
	|| meltbuild_error melt-build-script.tpl:751/613 running helloworld failed with arguments @$meltcheckhelloworld_args
   meltbuild_info melt-build-script.tpl:752/614 done check helloworld with $meltcheckhelloworld_args
   #@ melt-build-script.tpl:753/615 runtime stamp
    meltcheckruntime_stamptemp=$meltcheckruntime_stamp-tmp$$
    [ -f "$GCCMELT_RUNTIME_C" ] || meltbuild_error melt-build-script.tpl:755/616 missing MELT runtime C file $GCCMELT_RUNTIME_C
    echo "/// MELT check runtime timestamp file $meltcheckruntime_stamp" > $meltcheckruntime_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltcheckruntime_stamptemp
    $MD5SUM $GCCMELT_RUNTIME_C < /dev/null >>  $meltcheckruntime_stamptemp
    $MD5SUM meltbuild-hello.melt < /dev/null >>  $meltcheckruntime_stamptemp
    [ -f "$melt_final_translator_stamp" ] || meltbuild_error melt-build-script.tpl:760/617 missing final translator stamp "$melt_final_translator_stamp"
    [ -f "$melt_final_application_stamp" ] || meltbuild_error melt-build-script.tpl:761/618 missing final application stamp "$melt_final_application_stamp"
    grep meltbuild-modules/ "$melt_final_translator_stamp" "$melt_final_application_stamp" < /dev/null >>   $meltcheckruntime_stamptemp
    echo "///end timestamp file $meltcheckruntime_stamp" >>   $meltcheckruntime_stamptemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_stamptemp $meltcheckruntime_stamp
    meltbuild_info melt-build-script.tpl:765/619 done check runtime  $meltcheckruntime_stamp
else
    meltbuild_info melt-build-script.tpl:767/620 keeping runtime checks  $meltcheckruntime_stamp
fi

if [ "$melt_overall_goal" = "checkruntime" ]; then
    meltbuild_info melt-build-script.tpl:771/621 done checkruntime overall goal with stamp  $meltcheckruntime_stamp
    exit 0
fi
################################################################
################################################################
#@ melt-build-script.tpl:776/622
if [ "$melt_overall_goal" = "regenerate" ]; then
    meltbuild_notice regenerating runtime support melt-build-script.tpl:778/623 
    [ -d meltbuild-sources/generated ] || mkdir meltbuild-sources/generated
    meltregen_args=meltbuild-regen.args
    meltregen_argstemp="$meltregen_args-tmp$$"
    echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:782/624"' > $meltregen_argstemp
   meltbuild_arg mode=runtypesupport >> $meltregen_argstemp
    meltbuild_arg output=meltbuild-sources/generated/meltrunsup >> $meltregen_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltregen_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltregen_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltregen_argstemp
    meltbuild_arg module-path=meltbuild-modules >> $meltregen_argstemp
    meltbuild_arg bootstrapping  >> $meltregen_argstemp
    echo meltbuild-empty-file.c >> $meltregen_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltregen_argstemp $meltregen_args
   meltbuild_info melt-build-script.tpl:792/625 $meltregen_args  is
   cat $meltregen_args < /dev/null > /dev/stderr
    $GCCMELT_CC1_PREFIX $GCCMELT_CC1 @$meltregen_args \
	|| meltbuild_error melt-build-script.tpl:795/626 failed with arguments @$meltregen_args
    meltbuild_info melt-build-script.tpl:796/627 done regenerate overall goal
    exit 0
fi

################################################################
### the generated documentation meltgendoc.texi melt-build-script.tpl:801/628

if [   ! -f meltgendoc.texi  -o meltbuild-sources/warmelt-first.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-debug.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-macro.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normal.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normatch.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-genobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-outobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-modes.melt -nt meltgendoc.texi  \
  -o meltbuild-sources/xtramelt-ana-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-tree.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-gimple.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-probe.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-simple.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-c-generator.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-opengpu.melt -nt meltgendoc.texi   ]; then
   meltbuild_info melt-build-script.tpl:805/629 generating meltgendoc.texi
   meltgen_args=meltbuild-gendoc.args-tmp$$
   echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:807/630"' > $meltgen_args
   meltbuild_arg mode=makedoc >> $meltgen_args
   meltbuild_arg output=meltgendoc.texi >> $meltgen_args
   meltbuild_arg init=@$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt >> $meltgen_args
   meltbuild_arg workdir=meltbuild-workdir >>  $meltgen_args
   meltbuild_arg tempdir=meltbuild-tempdir >> $meltgen_args
   meltbuild_arg source-path=meltbuild-sources >> $meltgen_args
   meltbuild_arg module-path=meltbuild-modules >> $meltgen_args
   meltbuild_arg bootstrapping  >> $meltgen_args 
   meltbuild_arg arglist=warmelt-first.melt,warmelt-base.melt,warmelt-debug.melt,warmelt-macro.melt,warmelt-normal.melt,warmelt-normatch.melt,warmelt-genobj.melt,warmelt-outobj.melt,warmelt-modes.melt,xtramelt-ana-base.melt,xtramelt-ana-tree.melt,xtramelt-ana-gimple.melt,xtramelt-probe.melt,xtramelt-ana-simple.melt,xtramelt-c-generator.melt,xtramelt-opengpu.melt  >> $meltgen_args 
   echo meltbuild-empty-file.c >> $meltgen_args
   $GCCMELT_MOVE_IF_CHANGE  $meltgen_args meltbuild-gendoc.args
   meltbuild_info melt-build-script.tpl:819/631  meltbuild-gendoc.args is
   cat meltbuild-gendoc.args < /dev/null > /dev/stderr
   $GCCMELT_CC1_PREFIX $GCCMELT_CC1 @meltbuild-gendoc.args \
     || meltbuild_error melt-build-script.tpl:822/632 failed with arguments @meltbuild-gendoc.args
else
   meltbuild_info melt-build-script.tpl:824/633 keeping meltgendoc.texi
fi

################
meltbuild_info melt-build-script.tpl:828/634 successfully done with times at `date '+%x %H:%M:%S'`: ; times > /dev/stderr

################################################################
#@ melt-build-script.tpl:831/635
if [ "$melt_overall_goal" = "gendoc" ]; then
    meltbuild_info melt-build-script.tpl:833/636 done gendoc overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

## #@ melt-build-script.tpl:837/637 if we get here something is wrong in this script
meltbuild_error  melt-build-script.tpl:838/638 unexpected MELT overall goal "$melt_overall_goal" buggy melt-build-script.tpl
#@ eof melt-build-script.tpl:839/639 end of generated melt-build-script.sh
