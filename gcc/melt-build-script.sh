#!/bin/bash
#@!  -*- buffer-read-only: t -*- vi: set ro:
#@#@#
#@#@# DO NOT EDIT THIS FILE   (melt-build-script.sh)
#@#@#
#@#@# It has been AutoGen-ed  April  4, 2014 at 10:15:34 AM by AutoGen 5.18.1
#@#@# From the definitions    melt-build-script.def
#@#@# and the template file   melt-build-script.tpl
# Generated shell script for MELT modules and MELT translator bootstrap
#   Copyright (C) 2012-2014  Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#@ from melt-build-script.tpl line 20 generated by Autogen 5.18.1 using melt-build-script.def

## melt-build-script.tpl generates melt-build-script.sh which may
## create meltbuild-* files and directories.  The invoking makefile
## may clean these meltbuild-* things.

## Ypu may want to set the GCCMELT_BUILD_NOTIFICATION environment variable
## to a shell script called with two arguments (a title, and a message)
## e.g. using notify-send or logger in such a script.
shopt -s nullglob




## set the overallgoal  melt-build-script.tpl:36/1 
melt_overall_goal=$1
if [ -z "$melt_overall_goal" ]; then
  melt_overall_goal=gendoc
fi

## source the builtin settings  melt-build-script.tpl:42/2 generated from the MELT runtime
. ./melt-build-settings.sh

## source the parameters  melt-build-script.tpl:45/3
. ./melt-build-param.sh

export GAWK=${GAWK:=gawk}
export MD5SUM=${MD5SUM:=md5sum}

## internal variables for this script  melt-build-script.tpl:51/4
## GCCMELT_STAGE is an internal variable; it keeps the current MELT stage
export GCCMELT_STAGE=""
## GCCMELT_BASE is an internal variable; it keeps the current MELT base
export GCCMELT_BASE=""
## GCCMELT_SKIPEMITC is an internal variable; it skips the emission of C++ code when non-empty
export GCCMELT_SKIPEMITC=""



date +"/*empty file for MELT build %c*/" > meltbuild-empty-file.c

[ -d meltbuild-workdir ] || mkdir  meltbuild-workdir
[ -d meltbuild-tempdir ] || mkdir  meltbuild-tempdir

## our error function  melt-build-script.tpl:66/5
function meltbuild_error () {
    echo MELT BUILD SCRIPT FAILURE: $@ >&2
    exit 1
}

## symbolic linking
function meltbuild_symlink () {
    ln -svf `realpath $1` $2
}

## our info function
function meltbuild_info () {
    echo MELT BUILD SCRIPT INFO: $@ >&2
}

## our notice function - for more important things than info
function meltbuild_notice () {
    meltnotititle=$1
    shift
    (echo; echo; echo MELT BUILD SCRIPT NOTICE "$meltnotititle:" $@ ; echo ) >&2
    if [ -n "$GCCMELT_BUILD_NOTIFICATION" ]; then
	$GCCMELT_BUILD_NOTIFICATION "$meltnotititle:" "$*"
    fi
}

## utility to build MELT specific arguments in meltbuild_emit
function meltbuild_arg () {
    local meltarg=$1
    if [ -z "$GCCMELT_IS_PLUGIN" ]; then
	echo " -fmelt-$meltarg"
    else
	echo " -fplugin-arg-melt-$meltarg"
    fi
}


if [ ! -f "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
    meltbuild_error  melt-build-script.tpl:104/6 missing MELT runtime dependency "$GCCMELT_RUNTIME_DEPENDENCY" 
fi

if [ -z "$GCCMELT_CC1PLUS" ]; then
   meltbuild_error  melt-build-script.tpl:108/7 missing GCCMELT_CC1PLUS
fi

if [ ! -f meltrunsup.h ]; then 
    meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/meltrunsup.h meltrunsup.h 
    meltbuild_info  melt-build-script.tpl:113/8 symlinking meltrunsup.h header
fi

GCCMELT_RUNTIME_DEPENDENCY_MD5SUM=$($MD5SUM "$GCCMELT_RUNTIME_DEPENDENCY"  | cut -b 1-32)

case $melt_overall_goal in
    translator) ;;
    library) ;;
    applications) ;;
    modlists) ;;
    checkruntime) ;;
    gendoc) ;;
    regenerate) ;;
    *) meltbuild_error  melt-build-script.tpl:126/9 bad MELT overall goal "$melt_overall_goal:" \
        expecting translator, library, applications, modlists, checkruntime, gendoc or regenerate
esac

################################################################
################ stage zero

GCCMELT_ZERO_FLAVOR=${GCCMELT_STAGE_ZERO#meltbuild-stage0-}

## The base name of the MELT translator files melt-build-script.tpl:135/10
GCCMELT_TRANSLATOR_BASE=(  warmelt-first \
  warmelt-base \
  warmelt-debug \
  warmelt-macro \
  warmelt-moremacro \
  warmelt-normal \
  warmelt-normatch \
  warmelt-genobj \
  warmelt-outobj \
  warmelt-hooks \
  warmelt-modes )

case $GCCMELT_ZERO_FLAVOR in
    optimized) ;;
    dynamic) ;;
    debugnoline) ;;
    quicklybuilt) ;;
    *) meltbuild_error  melt-build-script.tpl:143/11 bad zero flavor $GCCMELT_ZERO_FLAVOR ;;
esac


## our stage0 melt-build-script.tpl:147/12

[ -d $GCCMELT_STAGE_ZERO ] || mkdir  $GCCMELT_STAGE_ZERO


function meltbuild_do_stage_zero () {
meltbuild_notice STAGE0+  melt-build-script.tpl:153/13 starting stage zero


  meltbuild_info making stage0 warmelt-first  melt-build-script.tpl:156/14

##  stage0 melt-build-script.tpl:158/15 symlink descriptor file warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/16 symlink melt/generated source code warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first.cc" ]; then
      meltbuild_info making stage0 warmelt-first symlinking sources melt-build-script.tpl:165/17
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/18 symlink stamp warmelt-first
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-first symlinking timestamp melt-build-script.tpl:174/19
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+melttime.h $GCCMELT_STAGE_ZERO/warmelt-first+melttime.h 
  fi

  MELT_ZERO_GENERATED_FIRST_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c)


## manually generate the stage0 warmelt-first+meltbuild.mk file  melt-build-script.tpl:181/20
  MELT_ZERO_GENERATED_FIRST_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-first+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_FIRST_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/21 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-first"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_FIRST"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-first melt-build-script.tpl:189/22' >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first.cc $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-first melt-build-script.tpl:197/23'  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_FIRST=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_FIRST=warmelt-first  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_FIRST_BUILDMK >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_FIRST_BUILDMK
  meltbuild_info melt-build-script.tpl:210/24 generated stagezero makedep $MELT_ZERO_GENERATED_FIRST_BUILDMK
  ls -l $MELT_ZERO_GENERATED_FIRST_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/25 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/26 stage0 warmelt-first did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/27 stage0 warmelt-first module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/28 stage0 warmelt-first fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/29 successfully build stage0 warmelt-first
# end stage0  melt-build-script.tpl:232/30 base  warmelt-first

  meltbuild_info making stage0 warmelt-base  melt-build-script.tpl:156/31

##  stage0 melt-build-script.tpl:158/32 symlink descriptor file warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/33 symlink melt/generated source code warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base.cc" ]; then
      meltbuild_info making stage0 warmelt-base symlinking sources melt-build-script.tpl:165/34
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/35 symlink stamp warmelt-base
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-base symlinking timestamp melt-build-script.tpl:174/36
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+melttime.h $GCCMELT_STAGE_ZERO/warmelt-base+melttime.h 
  fi

  MELT_ZERO_GENERATED_BASE_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c)


## manually generate the stage0 warmelt-base+meltbuild.mk file  melt-build-script.tpl:181/37
  MELT_ZERO_GENERATED_BASE_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-base+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_BASE_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/38 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-base"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_BASE"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-base melt-build-script.tpl:189/39' >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base.cc $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-base melt-build-script.tpl:197/40'  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_BASE=$MELT_ZERO_GENERATED_BASE_CUMULMD5 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_BASE=warmelt-base  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_BASE_BUILDMK >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_BASE_BUILDMK
  meltbuild_info melt-build-script.tpl:210/41 generated stagezero makedep $MELT_ZERO_GENERATED_BASE_BUILDMK
  ls -l $MELT_ZERO_GENERATED_BASE_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/42 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_BASE_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/43 stage0 warmelt-base did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/44 stage0 warmelt-base module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/45 stage0 warmelt-base fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/46 successfully build stage0 warmelt-base
# end stage0  melt-build-script.tpl:232/47 base  warmelt-base

  meltbuild_info making stage0 warmelt-debug  melt-build-script.tpl:156/48

##  stage0 melt-build-script.tpl:158/49 symlink descriptor file warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/50 symlink melt/generated source code warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug.cc" ]; then
      meltbuild_info making stage0 warmelt-debug symlinking sources melt-build-script.tpl:165/51
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/52 symlink stamp warmelt-debug
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-debug symlinking timestamp melt-build-script.tpl:174/53
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+melttime.h $GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h 
  fi

  MELT_ZERO_GENERATED_DEBUG_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c)


## manually generate the stage0 warmelt-debug+meltbuild.mk file  melt-build-script.tpl:181/54
  MELT_ZERO_GENERATED_DEBUG_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-debug+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_DEBUG_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/55 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-debug"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_DEBUG"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-debug melt-build-script.tpl:189/56' >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug.cc $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-debug melt-build-script.tpl:197/57'  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_DEBUG=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_DEBUG=warmelt-debug  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_DEBUG_BUILDMK >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  meltbuild_info melt-build-script.tpl:210/58 generated stagezero makedep $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  ls -l $MELT_ZERO_GENERATED_DEBUG_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/59 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/60 stage0 warmelt-debug did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/61 stage0 warmelt-debug module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/62 stage0 warmelt-debug fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/63 successfully build stage0 warmelt-debug
# end stage0  melt-build-script.tpl:232/64 base  warmelt-debug

  meltbuild_info making stage0 warmelt-macro  melt-build-script.tpl:156/65

##  stage0 melt-build-script.tpl:158/66 symlink descriptor file warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/67 symlink melt/generated source code warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro.cc" ]; then
      meltbuild_info making stage0 warmelt-macro symlinking sources melt-build-script.tpl:165/68
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/69 symlink stamp warmelt-macro
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-macro symlinking timestamp melt-build-script.tpl:174/70
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+melttime.h $GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h 
  fi

  MELT_ZERO_GENERATED_MACRO_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c)


## manually generate the stage0 warmelt-macro+meltbuild.mk file  melt-build-script.tpl:181/71
  MELT_ZERO_GENERATED_MACRO_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-macro+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MACRO_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/72 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-macro"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MACRO"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-macro melt-build-script.tpl:189/73' >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro.cc $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-macro melt-build-script.tpl:197/74'  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MACRO=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MACRO=warmelt-macro  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MACRO_BUILDMK >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MACRO_BUILDMK
  meltbuild_info melt-build-script.tpl:210/75 generated stagezero makedep $MELT_ZERO_GENERATED_MACRO_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MACRO_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/76 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/77 stage0 warmelt-macro did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/78 stage0 warmelt-macro module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/79 stage0 warmelt-macro fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/80 successfully build stage0 warmelt-macro
# end stage0  melt-build-script.tpl:232/81 base  warmelt-macro

  meltbuild_info making stage0 warmelt-moremacro  melt-build-script.tpl:156/82

##  stage0 melt-build-script.tpl:158/83 symlink descriptor file warmelt-moremacro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-moremacro+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-moremacro+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/84 symlink melt/generated source code warmelt-moremacro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-moremacro.cc" ]; then
      meltbuild_info making stage0 warmelt-moremacro symlinking sources melt-build-script.tpl:165/85
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-moremacro.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-moremacro+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/86 symlink stamp warmelt-moremacro
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-moremacro+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-moremacro symlinking timestamp melt-build-script.tpl:174/87
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-moremacro+melttime.h $GCCMELT_STAGE_ZERO/warmelt-moremacro+melttime.h 
  fi

  MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-moremacro+meltdesc.c)


## manually generate the stage0 warmelt-moremacro+meltbuild.mk file  melt-build-script.tpl:181/88
  MELT_ZERO_GENERATED_MOREMACRO_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-moremacro+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/89 >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-moremacro"  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MOREMACRO"  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-moremacro melt-build-script.tpl:189/90' >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-moremacro.$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-moremacro+meltdesc.c  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-moremacro.cc $GCCMELT_STAGE_ZERO/warmelt-moremacro+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-moremacro melt-build-script.tpl:197/91'  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-moremacro.meltmod-$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-moremacro.$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-moremacro+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-moremacro._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MOREMACRO=$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5 >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MOREMACRO=warmelt-moremacro  >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK >> $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK
  meltbuild_info melt-build-script.tpl:210/92 generated stagezero makedep $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MOREMACRO_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/93 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-moremacro \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-moremacro \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/94 stage0 warmelt-moremacro did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/95 stage0 warmelt-moremacro module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-moremacro.meltmod-$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/96 stage0 warmelt-moremacro fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-moremacro.meltmod-$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/97 successfully build stage0 warmelt-moremacro
# end stage0  melt-build-script.tpl:232/98 base  warmelt-moremacro

  meltbuild_info making stage0 warmelt-normal  melt-build-script.tpl:156/99

##  stage0 melt-build-script.tpl:158/100 symlink descriptor file warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/101 symlink melt/generated source code warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal.cc" ]; then
      meltbuild_info making stage0 warmelt-normal symlinking sources melt-build-script.tpl:165/102
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/103 symlink stamp warmelt-normal
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-normal symlinking timestamp melt-build-script.tpl:174/104
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMAL_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c)


## manually generate the stage0 warmelt-normal+meltbuild.mk file  melt-build-script.tpl:181/105
  MELT_ZERO_GENERATED_NORMAL_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normal+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMAL_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/106 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normal"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMAL"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normal melt-build-script.tpl:189/107' >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal.cc $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normal melt-build-script.tpl:197/108'  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMAL=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMAL=warmelt-normal  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMAL_BUILDMK >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  meltbuild_info melt-build-script.tpl:210/109 generated stagezero makedep $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMAL_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/110 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/111 stage0 warmelt-normal did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/112 stage0 warmelt-normal module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/113 stage0 warmelt-normal fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/114 successfully build stage0 warmelt-normal
# end stage0  melt-build-script.tpl:232/115 base  warmelt-normal

  meltbuild_info making stage0 warmelt-normatch  melt-build-script.tpl:156/116

##  stage0 melt-build-script.tpl:158/117 symlink descriptor file warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/118 symlink melt/generated source code warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch.cc" ]; then
      meltbuild_info making stage0 warmelt-normatch symlinking sources melt-build-script.tpl:165/119
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/120 symlink stamp warmelt-normatch
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-normatch symlinking timestamp melt-build-script.tpl:174/121
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMATCH_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c)


## manually generate the stage0 warmelt-normatch+meltbuild.mk file  melt-build-script.tpl:181/122
  MELT_ZERO_GENERATED_NORMATCH_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normatch+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMATCH_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/123 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normatch"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMATCH"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normatch melt-build-script.tpl:189/124' >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normatch melt-build-script.tpl:197/125'  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMATCH=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMATCH=warmelt-normatch  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMATCH_BUILDMK >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  meltbuild_info melt-build-script.tpl:210/126 generated stagezero makedep $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMATCH_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/127 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/128 stage0 warmelt-normatch did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/129 stage0 warmelt-normatch module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/130 stage0 warmelt-normatch fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/131 successfully build stage0 warmelt-normatch
# end stage0  melt-build-script.tpl:232/132 base  warmelt-normatch

  meltbuild_info making stage0 warmelt-genobj  melt-build-script.tpl:156/133

##  stage0 melt-build-script.tpl:158/134 symlink descriptor file warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/135 symlink melt/generated source code warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj.cc" ]; then
      meltbuild_info making stage0 warmelt-genobj symlinking sources melt-build-script.tpl:165/136
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/137 symlink stamp warmelt-genobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-genobj symlinking timestamp melt-build-script.tpl:174/138
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_GENOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c)


## manually generate the stage0 warmelt-genobj+meltbuild.mk file  melt-build-script.tpl:181/139
  MELT_ZERO_GENERATED_GENOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-genobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_GENOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/140 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-genobj"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_GENOBJ"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-genobj melt-build-script.tpl:189/141' >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-genobj melt-build-script.tpl:197/142'  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_GENOBJ=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_GENOBJ=warmelt-genobj  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_GENOBJ_BUILDMK >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:210/143 generated stagezero makedep $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_GENOBJ_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/144 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/145 stage0 warmelt-genobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/146 stage0 warmelt-genobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/147 stage0 warmelt-genobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/148 successfully build stage0 warmelt-genobj
# end stage0  melt-build-script.tpl:232/149 base  warmelt-genobj

  meltbuild_info making stage0 warmelt-outobj  melt-build-script.tpl:156/150

##  stage0 melt-build-script.tpl:158/151 symlink descriptor file warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/152 symlink melt/generated source code warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj.cc" ]; then
      meltbuild_info making stage0 warmelt-outobj symlinking sources melt-build-script.tpl:165/153
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/154 symlink stamp warmelt-outobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-outobj symlinking timestamp melt-build-script.tpl:174/155
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c)


## manually generate the stage0 warmelt-outobj+meltbuild.mk file  melt-build-script.tpl:181/156
  MELT_ZERO_GENERATED_OUTOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-outobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/157 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-outobj"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_OUTOBJ"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-outobj melt-build-script.tpl:189/158' >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-outobj melt-build-script.tpl:197/159'  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_OUTOBJ=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_OUTOBJ=warmelt-outobj  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:210/160 generated stagezero makedep $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/161 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/162 stage0 warmelt-outobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/163 stage0 warmelt-outobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/164 stage0 warmelt-outobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/165 successfully build stage0 warmelt-outobj
# end stage0  melt-build-script.tpl:232/166 base  warmelt-outobj

  meltbuild_info making stage0 warmelt-hooks  melt-build-script.tpl:156/167

##  stage0 melt-build-script.tpl:158/168 symlink descriptor file warmelt-hooks
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/169 symlink melt/generated source code warmelt-hooks
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks.cc" ]; then
      meltbuild_info making stage0 warmelt-hooks symlinking sources melt-build-script.tpl:165/170
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/171 symlink stamp warmelt-hooks
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-hooks symlinking timestamp melt-build-script.tpl:174/172
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+melttime.h $GCCMELT_STAGE_ZERO/warmelt-hooks+melttime.h 
  fi

  MELT_ZERO_GENERATED_HOOKS_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+meltdesc.c)


## manually generate the stage0 warmelt-hooks+meltbuild.mk file  melt-build-script.tpl:181/173
  MELT_ZERO_GENERATED_HOOKS_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-hooks+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_HOOKS_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/174 >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-hooks"  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_HOOKS"  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-hooks melt-build-script.tpl:189/175' >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-hooks.$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-hooks+meltdesc.c  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-hooks melt-build-script.tpl:197/176'  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-hooks.$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-hooks._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_HOOKS=$MELT_ZERO_GENERATED_HOOKS_CUMULMD5 >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_HOOKS=warmelt-hooks  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_HOOKS_BUILDMK >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_HOOKS_BUILDMK
  meltbuild_info melt-build-script.tpl:210/177 generated stagezero makedep $MELT_ZERO_GENERATED_HOOKS_BUILDMK
  ls -l $MELT_ZERO_GENERATED_HOOKS_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/178 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-hooks \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_HOOKS_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-hooks \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/179 stage0 warmelt-hooks did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/180 stage0 warmelt-hooks module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/181 stage0 warmelt-hooks fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/182 successfully build stage0 warmelt-hooks
# end stage0  melt-build-script.tpl:232/183 base  warmelt-hooks

  meltbuild_info making stage0 warmelt-modes  melt-build-script.tpl:156/184

##  stage0 melt-build-script.tpl:158/185 symlink descriptor file warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:163/186 symlink melt/generated source code warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes.cc" ]; then
      meltbuild_info making stage0 warmelt-modes symlinking sources melt-build-script.tpl:165/187
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:172/188 symlink stamp warmelt-modes
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-modes symlinking timestamp melt-build-script.tpl:174/189
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+melttime.h $GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h 
  fi

  MELT_ZERO_GENERATED_MODES_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c)


## manually generate the stage0 warmelt-modes+meltbuild.mk file  melt-build-script.tpl:181/190
  MELT_ZERO_GENERATED_MODES_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-modes+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MODES_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:185/191 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-modes"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MODES"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-modes melt-build-script.tpl:189/192' >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes.cc $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-modes melt-build-script.tpl:197/193'  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MODES=$MELT_ZERO_GENERATED_MODES_CUMULMD5 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MODES=warmelt-modes  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MODES_BUILDMK >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MODES_BUILDMK
  meltbuild_info melt-build-script.tpl:210/194 generated stagezero makedep $MELT_ZERO_GENERATED_MODES_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MODES_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:214/195 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MODES_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:224/196 stage0 warmelt-modes did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:226/197 stage0 warmelt-modes module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:228/198 stage0 warmelt-modes fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:231/199 successfully build stage0 warmelt-modes
# end stage0  melt-build-script.tpl:232/200 base  warmelt-modes

} ################ end of function meltbuild_do_stage_zero melt-build-script.tpl:234/201
################################################################

## stage0 stamp file melt-build-script.tpl:237/202
melt_stagezero_stamp=$GCCMELT_STAGE_ZERO/$GCCMELT_STAGE_ZERO.stamp

## test if stage0 should be skipped then do it  melt-build-script.tpl:240/203
if [ ! -f "$melt_stagezero_stamp" -o "$melt_stagezero_stamp" -ot "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
   meltbuild_do_stage_zero
    melt_stagezero_stamptemp=$melt_stagezero_stamp-tmp$$
    echo MELT stagezero stampfile $GCCMELT_STAGE_ZERO.stamp for MELT $MELTGCCBUILTIN_VERSION_STRING from melt-build-script.tpl:244/204 >  $melt_stagezero_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/205 base  warmelt-first
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.cc $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/206 base  warmelt-base
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.cc $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/207 base  warmelt-debug
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.cc $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/208 base  warmelt-macro
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.cc $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/209 base  warmelt-moremacro
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-moremacro.cc $GCCMELT_STAGE_ZERO/warmelt-moremacro+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-moremacro.meltmod-$MELT_ZERO_GENERATED_MOREMACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/210 base  warmelt-normal
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.cc $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/211 base  warmelt-normatch
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/212 base  warmelt-genobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/213 base  warmelt-outobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/214 base  warmelt-hooks
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:247/215 base  warmelt-modes
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.cc $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

    $GCCMELT_MOVE_IF_CHANGE $melt_stagezero_stamptemp $melt_stagezero_stamp
else
   meltbuild_info melt-build-script.tpl:253/216 skipped stage0 because of stamp file $melt_stagezero_stamp
fi

meltbuild_info melt-build-script.tpl:256/217 times after stagezero at `date '+%x %H:%M:%S'`: ;  times >&2


################################################################
## function to run MELT to emit C++ code  melt-build-script.tpl:260/218
function meltbuild_emit () {
    local meltfrom=$1
    local meltmode=$2
    local meltbase=$3
    local meltstage=$4
    local meltprevstage=$5
    local meltinit=$6
    local meltinclude=$7
    local meltbuildoption=$8
    local meltargs=$meltstage/$meltbase.args
    local meltsrc=$(realpath $GCCMELT_MELTSOURCEDIR/$meltbase.melt)
    meltbuild_info meltfrom=$meltfrom meltmode=$meltmode meltbase=$meltbase meltstage=$meltstage meltprevstage=$meltprevstage meltinit=$meltinit meltinclude=$meltinclude meltsrc=$meltsrc
    local meltsum
    local meltprevf
    if [ -z "$meltmode" ]; then
	meltbuild_error $meltfrom no MELT mode at stage $meltstage
    fi
    if [ ! -f "$meltsrc" ]; then
	meltbuild_error $meltfrom no MELT file $meltsrc at stage $meltstage base $meltbase
    fi
    if [ -z "$meltinit" ]; then
	meltbuild_error $meltfrom no MELT init  at stage $meltstage base $meltbase
    fi
    meltsum=$($MD5SUM $meltsrc | $GAWK '{print $1}')
    meltbuild_info $meltfrom emit C++ code for $meltbase of $meltstage
    echo -Wno-shadow -frandom-seed=$meltsum > $meltargs-$$-tmp
    ## various arguments
    echo " -DGCCMELT_FROM_ARG=\"$meltfrom\"" >>  $meltargs-$$-tmp
    meltbuild_arg mode=$meltmode >> $meltargs-$$-tmp
    meltbuild_arg arg=$meltsrc >>  $meltargs-$$-tmp
    meltbuild_arg output=$meltstage/$meltbase  >>  $meltargs-$$-tmp
    meltbuild_arg "module-make-command='$GCCMELT_MAKE'" >> $meltargs-$$-tmp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >> $meltargs-$$-tmp
    meltbuild_arg "module-cflags='$GCCMELT_INCLUDES -I. -I$meltstage -I$meltprevstage $GCCMELT_COMPILER_FLAGS'" >>  $meltargs-$$-tmp
    meltbuild_arg init=$meltinit >> $meltargs-$$-tmp
    meltbuild_arg workdir=meltbuild-workdir >> $meltargs-$$-tmp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltargs-$$-tmp
    meltbuild_arg source-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg module-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg bootstrapping  >> $meltargs-$$-tmp
    meltbuild_arg generate-work-link  >> $meltargs-$$-tmp
    meltbuild_arg generated-c-file-list=$meltstage/$meltbase.cfilist  >> $meltargs-$$-tmp
    if [ -n "$meltbuildoption" ]; then
	echo "$meltbuildoption" >> $meltargs-$$-tmp
    fi
    ## final empty file
    echo meltbuild-empty-file.c >>  $meltargs-$$-tmp
    mv $meltargs-$$-tmp $meltargs
    meltbuild_info $meltfrom argument file $meltargs is
    cat  $meltargs < /dev/null >&2
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	$GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltargs || meltbuild_error $meltfrom failed with arguments @$meltargs
        ## remove obsolete secondary C files left previously in $meltstage 
	for meltcsecfil in $meltstage/$meltbase+[0-9][0-9].cc ; do
	    if grep -q `basename $meltcsecfil` "$meltstage/$meltbase.cfilist" ; then
		: # at  melt-build-script.tpl:316/219
	    else
		meltbuild_info $meltfrom removing obsolete $meltcsecfil
		rm -f "$meltcsecfil"
	    fi
	done
    else
	meltbuild_info $meltfrom skips emission of C++ code with  @$meltargs stage $meltstage prevstage $meltprevstage skipreason $GCCMELT_SKIPEMITC  melt-build-script.tpl:323/220 
	ls -l $meltprevstage/$meltbase*
	meltbuild_info $meltfrom symlinking previous stage $meltprevstage  melt-build-script.tpl:325/221 
	for meltprevf in $meltprevstage/$meltbase.cc  $meltprevstage/$meltbase+[0-9][0-9].cc  $meltprevstage/$meltbase+meltdesc.c  $meltprevstage/$meltbase+melttime.h   $meltprevstage/$meltbase+meltbuild.mk ; do
	    meltbuild_symlink $meltprevf $meltstage/`basename $meltprevf`
	done
	meltbuild_info $meltfrom symlinked previous stage $meltprevstage/$meltbase melt-build-script.tpl:329/222 
    fi
    GCCMELT_STAGE=$meltstage
    GCCMELT_BASE=$meltbase
} ################################ end function meltbuild_emit

################################################################
################################################################
#################@ before our stages melt-build-script.tpl:337/223 
### Our stages  
### are incrementally built, with the former modules of
### the current stage and the later modules of the previous stages
### used to emit the source of the current module in the current stage.
### This is a kind of "diagonalization".


################################################################
#### function to do a stage melt-build-script.tpl:346/224
function meltbuild_do_stage () {
    local meltfrom=$1
    local meltcurstagedir=$2
    local meltcurflavor=$3
    local meltprevstagedir=$4
    local meltprevflavor=$5
    local meltbuildoption=$6

    local meltchecksum_FIRST

    local meltchecksum_BASE

    local meltchecksum_DEBUG

    local meltchecksum_MACRO

    local meltchecksum_MOREMACRO

    local meltchecksum_NORMAL

    local meltchecksum_NORMATCH

    local meltchecksum_GENOBJ

    local meltchecksum_OUTOBJ

    local meltchecksum_HOOKS

    local meltchecksum_MODES

    local meltstamp
    local meltstamptmp
####in meltbuild_do_stage melt-build-script.tpl:359/225
    meltbuild_notice "$meltcurstagedir+" starting  stage $meltcurstagedir flavor $meltcurflavor from $meltfrom
####in meltbuild_do_stage melt-build-script.tpl:361/226
    meltbuild_info $meltfrom starting stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor
    [ -d $meltcurstagedir ] || mkdir $meltcurstagedir
    if [ ! -d "$meltprevstagedir" -o ! -f "$meltprevstagedir/$meltprevstagedir.stamp" ]; then
	meltbuild_error $meltfrom previous stage "$meltprevstagedir/" without stamp file $meltprevstagedir/$meltprevstagedir.stamp
    fi



    #in meltbuild_do_stage melt-build-script.tpl:371/227 base warmelt-first
    meltbuild_info melt-build-script.tpl:372/228 from $meltfrom generating C++ code of warmelt-first in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/229 emit C++ code for warmelt-first
    meltbuild_emit melt-build-script.tpl:375/230-$meltfrom \
	translateinit \
	warmelt-first \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltprevstagedir/warmelt-first.$meltprevflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-moremacro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/231 checksum C++ code for warmelt-first
    meltchecksum_cumul_FIRST=$(cat "$meltcurstagedir"/warmelt-first.cc "$meltcurstagedir"/warmelt-first+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/232 perhaps compiling C++ code for warmelt-first
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/233-$meltfrom compiling module warmelt-first in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/234-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-first" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-first" \
	|| ( meltbuild_info melt-build-script.tpl:402/235-$meltfrom recompiling bad module warmelt-first in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/236-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-first" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-first" ; \
	    meltbuild_error  melt-build-script.tpl:411/237-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-first compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/238-$meltfrom NOT compiling module warmelt-first "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-first \
	    checksum $meltchecksum_cumul_FIRST skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/239 done base warmelt-first


    #in meltbuild_do_stage melt-build-script.tpl:371/240 base warmelt-base
    meltbuild_info melt-build-script.tpl:372/241 from $meltfrom generating C++ code of warmelt-base in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/242 emit C++ code for warmelt-base
    meltbuild_emit melt-build-script.tpl:375/243-$meltfrom \
	translatefile \
	warmelt-base \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-moremacro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/244 checksum C++ code for warmelt-base
    meltchecksum_cumul_BASE=$(cat "$meltcurstagedir"/warmelt-base.cc "$meltcurstagedir"/warmelt-base+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/245 perhaps compiling C++ code for warmelt-base
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/246-$meltfrom compiling module warmelt-base in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/247-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-base" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-base" \
	|| ( meltbuild_info melt-build-script.tpl:402/248-$meltfrom recompiling bad module warmelt-base in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/249-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-base" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-base" ; \
	    meltbuild_error  melt-build-script.tpl:411/250-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-base compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/251-$meltfrom NOT compiling module warmelt-base "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-base \
	    checksum $meltchecksum_cumul_BASE skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/252 done base warmelt-base


    #in meltbuild_do_stage melt-build-script.tpl:371/253 base warmelt-debug
    meltbuild_info melt-build-script.tpl:372/254 from $meltfrom generating C++ code of warmelt-debug in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/255 emit C++ code for warmelt-debug
    meltbuild_emit melt-build-script.tpl:375/256-$meltfrom \
	translatefile \
	warmelt-debug \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-moremacro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/257 checksum C++ code for warmelt-debug
    meltchecksum_cumul_DEBUG=$(cat "$meltcurstagedir"/warmelt-debug.cc "$meltcurstagedir"/warmelt-debug+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/258 perhaps compiling C++ code for warmelt-debug
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/259-$meltfrom compiling module warmelt-debug in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/260-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-debug" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-debug" \
	|| ( meltbuild_info melt-build-script.tpl:402/261-$meltfrom recompiling bad module warmelt-debug in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/262-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-debug" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-debug" ; \
	    meltbuild_error  melt-build-script.tpl:411/263-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-debug compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/264-$meltfrom NOT compiling module warmelt-debug "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-debug \
	    checksum $meltchecksum_cumul_DEBUG skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/265 done base warmelt-debug


    #in meltbuild_do_stage melt-build-script.tpl:371/266 base warmelt-macro
    meltbuild_info melt-build-script.tpl:372/267 from $meltfrom generating C++ code of warmelt-macro in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/268 emit C++ code for warmelt-macro
    meltbuild_emit melt-build-script.tpl:375/269-$meltfrom \
	translatefile \
	warmelt-macro \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-moremacro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/270 checksum C++ code for warmelt-macro
    meltchecksum_cumul_MACRO=$(cat "$meltcurstagedir"/warmelt-macro.cc "$meltcurstagedir"/warmelt-macro+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/271 perhaps compiling C++ code for warmelt-macro
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/272-$meltfrom compiling module warmelt-macro in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/273-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-macro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-macro" \
	|| ( meltbuild_info melt-build-script.tpl:402/274-$meltfrom recompiling bad module warmelt-macro in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/275-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-macro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-macro" ; \
	    meltbuild_error  melt-build-script.tpl:411/276-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-macro compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/277-$meltfrom NOT compiling module warmelt-macro "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-macro \
	    checksum $meltchecksum_cumul_MACRO skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/278 done base warmelt-macro


    #in meltbuild_do_stage melt-build-script.tpl:371/279 base warmelt-moremacro
    meltbuild_info melt-build-script.tpl:372/280 from $meltfrom generating C++ code of warmelt-moremacro in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/281 emit C++ code for warmelt-moremacro
    meltbuild_emit melt-build-script.tpl:375/282-$meltfrom \
	translatefile \
	warmelt-moremacro \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltprevstagedir/warmelt-moremacro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/283 checksum C++ code for warmelt-moremacro
    meltchecksum_cumul_MOREMACRO=$(cat "$meltcurstagedir"/warmelt-moremacro.cc "$meltcurstagedir"/warmelt-moremacro+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/284 perhaps compiling C++ code for warmelt-moremacro
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/285-$meltfrom compiling module warmelt-moremacro in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/286-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-moremacro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-moremacro" \
	|| ( meltbuild_info melt-build-script.tpl:402/287-$meltfrom recompiling bad module warmelt-moremacro in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/288-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-moremacro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-moremacro" ; \
	    meltbuild_error  melt-build-script.tpl:411/289-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-moremacro compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/290-$meltfrom NOT compiling module warmelt-moremacro "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-moremacro \
	    checksum $meltchecksum_cumul_MOREMACRO skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-moremacro.meltmod-$meltchecksum_cumul_MOREMACRO.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-moremacro.meltmod-$meltchecksum_cumul_MOREMACRO.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/291 done base warmelt-moremacro


    #in meltbuild_do_stage melt-build-script.tpl:371/292 base warmelt-normal
    meltbuild_info melt-build-script.tpl:372/293 from $meltfrom generating C++ code of warmelt-normal in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/294 emit C++ code for warmelt-normal
    meltbuild_emit melt-build-script.tpl:375/295-$meltfrom \
	translatefile \
	warmelt-normal \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "warmelt-predef.melt" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/296 checksum C++ code for warmelt-normal
    meltchecksum_cumul_NORMAL=$(cat "$meltcurstagedir"/warmelt-normal.cc "$meltcurstagedir"/warmelt-normal+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/297 perhaps compiling C++ code for warmelt-normal
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/298-$meltfrom compiling module warmelt-normal in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/299-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normal" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normal" \
	|| ( meltbuild_info melt-build-script.tpl:402/300-$meltfrom recompiling bad module warmelt-normal in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/301-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normal" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normal" ; \
	    meltbuild_error  melt-build-script.tpl:411/302-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normal compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/303-$meltfrom NOT compiling module warmelt-normal "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normal \
	    checksum $meltchecksum_cumul_NORMAL skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/304 done base warmelt-normal


    #in meltbuild_do_stage melt-build-script.tpl:371/305 base warmelt-normatch
    meltbuild_info melt-build-script.tpl:372/306 from $meltfrom generating C++ code of warmelt-normatch in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/307 emit C++ code for warmelt-normatch
    meltbuild_emit melt-build-script.tpl:375/308-$meltfrom \
	translatefile \
	warmelt-normatch \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/309 checksum C++ code for warmelt-normatch
    meltchecksum_cumul_NORMATCH=$(cat "$meltcurstagedir"/warmelt-normatch.cc "$meltcurstagedir"/warmelt-normatch+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/310 perhaps compiling C++ code for warmelt-normatch
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/311-$meltfrom compiling module warmelt-normatch in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/312-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normatch" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normatch" \
	|| ( meltbuild_info melt-build-script.tpl:402/313-$meltfrom recompiling bad module warmelt-normatch in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/314-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normatch" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normatch" ; \
	    meltbuild_error  melt-build-script.tpl:411/315-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normatch compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/316-$meltfrom NOT compiling module warmelt-normatch "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normatch \
	    checksum $meltchecksum_cumul_NORMATCH skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/317 done base warmelt-normatch


    #in meltbuild_do_stage melt-build-script.tpl:371/318 base warmelt-genobj
    meltbuild_info melt-build-script.tpl:372/319 from $meltfrom generating C++ code of warmelt-genobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/320 emit C++ code for warmelt-genobj
    meltbuild_emit melt-build-script.tpl:375/321-$meltfrom \
	translatefile \
	warmelt-genobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/322 checksum C++ code for warmelt-genobj
    meltchecksum_cumul_GENOBJ=$(cat "$meltcurstagedir"/warmelt-genobj.cc "$meltcurstagedir"/warmelt-genobj+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/323 perhaps compiling C++ code for warmelt-genobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/324-$meltfrom compiling module warmelt-genobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/325-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-genobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-genobj" \
	|| ( meltbuild_info melt-build-script.tpl:402/326-$meltfrom recompiling bad module warmelt-genobj in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/327-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-genobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-genobj" ; \
	    meltbuild_error  melt-build-script.tpl:411/328-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-genobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/329-$meltfrom NOT compiling module warmelt-genobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-genobj \
	    checksum $meltchecksum_cumul_GENOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/330 done base warmelt-genobj


    #in meltbuild_do_stage melt-build-script.tpl:371/331 base warmelt-outobj
    meltbuild_info melt-build-script.tpl:372/332 from $meltfrom generating C++ code of warmelt-outobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/333 emit C++ code for warmelt-outobj
    meltbuild_emit melt-build-script.tpl:375/334-$meltfrom \
	translatefile \
	warmelt-outobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/335 checksum C++ code for warmelt-outobj
    meltchecksum_cumul_OUTOBJ=$(cat "$meltcurstagedir"/warmelt-outobj.cc "$meltcurstagedir"/warmelt-outobj+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/336 perhaps compiling C++ code for warmelt-outobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/337-$meltfrom compiling module warmelt-outobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/338-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-outobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-outobj" \
	|| ( meltbuild_info melt-build-script.tpl:402/339-$meltfrom recompiling bad module warmelt-outobj in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/340-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-outobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-outobj" ; \
	    meltbuild_error  melt-build-script.tpl:411/341-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-outobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/342-$meltfrom NOT compiling module warmelt-outobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-outobj \
	    checksum $meltchecksum_cumul_OUTOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/343 done base warmelt-outobj


    #in meltbuild_do_stage melt-build-script.tpl:371/344 base warmelt-hooks
    meltbuild_info melt-build-script.tpl:372/345 from $meltfrom generating C++ code of warmelt-hooks in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/346 emit C++ code for warmelt-hooks
    meltbuild_emit melt-build-script.tpl:375/347-$meltfrom \
	translatefile \
	warmelt-hooks \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltcurstagedir/warmelt-outobj.$meltcurflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/348 checksum C++ code for warmelt-hooks
    meltchecksum_cumul_HOOKS=$(cat "$meltcurstagedir"/warmelt-hooks.cc "$meltcurstagedir"/warmelt-hooks+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/349 perhaps compiling C++ code for warmelt-hooks
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/350-$meltfrom compiling module warmelt-hooks in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/351-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-hooks" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-hooks" \
	|| ( meltbuild_info melt-build-script.tpl:402/352-$meltfrom recompiling bad module warmelt-hooks in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/353-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-hooks" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-hooks" ; \
	    meltbuild_error  melt-build-script.tpl:411/354-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-hooks compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/355-$meltfrom NOT compiling module warmelt-hooks "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-hooks \
	    checksum $meltchecksum_cumul_HOOKS skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/356 done base warmelt-hooks


    #in meltbuild_do_stage melt-build-script.tpl:371/357 base warmelt-modes
    meltbuild_info melt-build-script.tpl:372/358 from $meltfrom generating C++ code of warmelt-modes in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:374/359 emit C++ code for warmelt-modes
    meltbuild_emit melt-build-script.tpl:375/360-$meltfrom \
	translatefile \
	warmelt-modes \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-moremacro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltcurstagedir/warmelt-outobj.$meltcurflavor:$meltcurstagedir/warmelt-hooks.$meltcurflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:388/361 checksum C++ code for warmelt-modes
    meltchecksum_cumul_MODES=$(cat "$meltcurstagedir"/warmelt-modes.cc "$meltcurstagedir"/warmelt-modes+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:391/362 perhaps compiling C++ code for warmelt-modes
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:393/363-$meltfrom compiling module warmelt-modes in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:395/364-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-modes" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-modes" \
	|| ( meltbuild_info melt-build-script.tpl:402/365-$meltfrom recompiling bad module warmelt-modes in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:404/366-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-modes" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-modes" ; \
	    meltbuild_error  melt-build-script.tpl:411/367-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-modes compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:414/368-$meltfrom NOT compiling module warmelt-modes "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-modes \
	    checksum $meltchecksum_cumul_MODES skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:420/369 done base warmelt-modes


    #in meltbuild_do_stage melt-build-script.tpl:423/370 generating the stampfile
    meltstamp=$meltcurstagedir/$meltcurstagedir.stamp
    meltstamptmp=$meltstamp-tmp$$
    echo "///timestamp file $meltstamp" > $meltstamptmp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-first.cc $meltcurstagedir/warmelt-first+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-base.cc $meltcurstagedir/warmelt-base+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-debug.cc $meltcurstagedir/warmelt-debug+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-macro.cc $meltcurstagedir/warmelt-macro+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-moremacro.cc $meltcurstagedir/warmelt-moremacro+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-moremacro.meltmod-$meltchecksum_cumul_MOREMACRO.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normal.cc $meltcurstagedir/warmelt-normal+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normatch.cc $meltcurstagedir/warmelt-normatch+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-genobj.cc $meltcurstagedir/warmelt-genobj+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-outobj.cc $meltcurstagedir/warmelt-outobj+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-hooks.cc $meltcurstagedir/warmelt-hooks+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-modes.cc $meltcurstagedir/warmelt-modes+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"  >> $meltstamptmp

    echo "///end timestamp file $meltstamp"
    $GCCMELT_MOVE_IF_CHANGE $meltstamptmp $meltstamp

    #in meltbuild_do_stage melt-build-script.tpl:435/371 ending
    meltbuild_info $meltfrom done stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor timestamp $meltstamp

}			#### end meltbuild_do_stage melt-build-script.tpl:438/372
################################################################

##### possibly run all our stages  melt-build-script.tpl:441/373

#@  melt-build-script.tpl:443/374 stagedir meltbuild-stage1
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage1/meltbuild-stage1.stamp -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-moremacro.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:449/375 '++++++++++++++++' building stage meltbuild-stage1 '++++++++++++++++'
    ## building stage meltbuild-stage1 previous $GCCMELT_STAGE_ZERO  melt-build-script.tpl:450/376
    meltbuild_do_stage  melt-build-script.tpl:451/377 meltbuild-stage1 quicklybuilt $GCCMELT_STAGE_ZERO $GCCMELT_ZERO_FLAVOR "$GCCMELT_EMIT_OPTION_STAGE1"
else
    meltbuild_info  melt-build-script.tpl:453/378 skipping stage meltbuild-stage1
fi

##  melt-build-script.tpl:456/379
GCCMELT_LASTSTAGE=meltbuild-stage1


#@  melt-build-script.tpl:443/380 stagedir meltbuild-stage2
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage2/meltbuild-stage2.stamp -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-moremacro.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:449/381 '++++++++++++++++' building stage meltbuild-stage2 '++++++++++++++++'
    ## building stage meltbuild-stage2 previous meltbuild-stage1  melt-build-script.tpl:450/382
    meltbuild_do_stage  melt-build-script.tpl:451/383 meltbuild-stage2 quicklybuilt meltbuild-stage1 quicklybuilt "$GCCMELT_EMIT_OPTION_STAGE2"
else
    meltbuild_info  melt-build-script.tpl:453/384 skipping stage meltbuild-stage2
fi

##  melt-build-script.tpl:456/385
GCCMELT_LASTSTAGE=meltbuild-stage2


#@  melt-build-script.tpl:443/386 stagedir meltbuild-stage3
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage3/meltbuild-stage3.stamp -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-moremacro.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:449/387 '++++++++++++++++' building stage meltbuild-stage3 '++++++++++++++++'
    ## building stage meltbuild-stage3 previous meltbuild-stage2  melt-build-script.tpl:450/388
    meltbuild_do_stage  melt-build-script.tpl:451/389 meltbuild-stage3 quicklybuilt meltbuild-stage2 quicklybuilt "$GCCMELT_EMIT_OPTION_STAGE3"
else
    meltbuild_info  melt-build-script.tpl:453/390 skipping stage meltbuild-stage3
fi

##  melt-build-script.tpl:456/391
GCCMELT_LASTSTAGE=meltbuild-stage3



################################################################


meltbuild_info melt-build-script.tpl:464/392 last stage $GCCMELT_LASTSTAGE

################################################################
################################################################
###########@ before generating meltbuild-sources melt-build-script.tpl:468/393

#### the meltbuild-sources is the final sources directory, to be
#### installed.  They are generated from the last stage, using the
#### modules inside it. Notice that in contrast from the intermediate
#### stages no "diagonalization" is involved.

[ -d meltbuild-sources ] || mkdir meltbuild-sources

#@ from  melt-build-script.tpl:477/394  compiling the modules
[ -d meltbuild-modules ] || mkdir meltbuild-modules

################################################################
function meltbuild_emit_translator_sources () {

  ## meltbuild_emit_source  melt-build-script.tpl:483/395 base warmelt-first
  meltbuild_info melt-build-script.tpl:484/396 generating C++ code of warmelt-first in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/397 \
      translateinit \
      warmelt-first \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/398 base warmelt-base
  meltbuild_info melt-build-script.tpl:484/399 generating C++ code of warmelt-base in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/400 \
      translatefile \
      warmelt-base \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/401 base warmelt-debug
  meltbuild_info melt-build-script.tpl:484/402 generating C++ code of warmelt-debug in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/403 \
      translatefile \
      warmelt-debug \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/404 base warmelt-macro
  meltbuild_info melt-build-script.tpl:484/405 generating C++ code of warmelt-macro in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/406 \
      translatefile \
      warmelt-macro \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/407 base warmelt-moremacro
  meltbuild_info melt-build-script.tpl:484/408 generating C++ code of warmelt-moremacro in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/409 \
      translatefile \
      warmelt-moremacro \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/410 base warmelt-normal
  meltbuild_info melt-build-script.tpl:484/411 generating C++ code of warmelt-normal in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/412 \
      translatefile \
      warmelt-normal \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      "warmelt-predef.melt"

  ## meltbuild_emit_source  melt-build-script.tpl:483/413 base warmelt-normatch
  meltbuild_info melt-build-script.tpl:484/414 generating C++ code of warmelt-normatch in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/415 \
      translatefile \
      warmelt-normatch \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/416 base warmelt-genobj
  meltbuild_info melt-build-script.tpl:484/417 generating C++ code of warmelt-genobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/418 \
      translatefile \
      warmelt-genobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/419 base warmelt-outobj
  meltbuild_info melt-build-script.tpl:484/420 generating C++ code of warmelt-outobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/421 \
      translatefile \
      warmelt-outobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/422 base warmelt-hooks
  meltbuild_info melt-build-script.tpl:484/423 generating C++ code of warmelt-hooks in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/424 \
      translatefile \
      warmelt-hooks \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:483/425 base warmelt-modes
  meltbuild_info melt-build-script.tpl:484/426 generating C++ code of warmelt-modes in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:485/427 \
      translatefile \
      warmelt-modes \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-moremacro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

}  # end of function meltbuild_emit_translator_sources


################
function meltbuild_compile_translator_modules () {


  # in meltbuild_compile_translator_sources quicklybuilt melt-build-script.tpl:500/428
  meltbuild_info melt-build-script.tpl:501/429 compiling translator quicklybuilt


   #@ melt-build-script.tpl:504/430 flavor quicklybuilt base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/431 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:513/432 in meltbuild-modules failed to compile translator warmelt-first quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/433 flavor quicklybuilt base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/434 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:513/435 in meltbuild-modules failed to compile translator warmelt-base quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/436 flavor quicklybuilt base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/437 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:513/438 in meltbuild-modules failed to compile translator warmelt-debug quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/439 flavor quicklybuilt base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/440 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:513/441 in meltbuild-modules failed to compile translator warmelt-macro quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/442 flavor quicklybuilt base warmelt-moremacro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/443 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-moremacro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-moremacro \
 || meltbuild_error  melt-build-script.tpl:513/444 in meltbuild-modules failed to compile translator warmelt-moremacro quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/445 flavor quicklybuilt base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/446 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:513/447 in meltbuild-modules failed to compile translator warmelt-normal quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/448 flavor quicklybuilt base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/449 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:513/450 in meltbuild-modules failed to compile translator warmelt-normatch quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/451 flavor quicklybuilt base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/452 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:513/453 in meltbuild-modules failed to compile translator warmelt-genobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/454 flavor quicklybuilt base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/455 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:513/456 in meltbuild-modules failed to compile translator warmelt-outobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/457 flavor quicklybuilt base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/458 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:513/459 in meltbuild-modules failed to compile translator warmelt-hooks quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/460 flavor quicklybuilt base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/461 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:513/462 in meltbuild-modules failed to compile translator warmelt-modes quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources optimized melt-build-script.tpl:500/463
  meltbuild_info melt-build-script.tpl:501/464 compiling translator optimized


   #@ melt-build-script.tpl:504/465 flavor optimized base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/466 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:513/467 in meltbuild-modules failed to compile translator warmelt-first optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/468 flavor optimized base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/469 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:513/470 in meltbuild-modules failed to compile translator warmelt-base optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/471 flavor optimized base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/472 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:513/473 in meltbuild-modules failed to compile translator warmelt-debug optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/474 flavor optimized base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/475 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:513/476 in meltbuild-modules failed to compile translator warmelt-macro optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/477 flavor optimized base warmelt-moremacro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/478 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-moremacro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-moremacro \
 || meltbuild_error  melt-build-script.tpl:513/479 in meltbuild-modules failed to compile translator warmelt-moremacro optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/480 flavor optimized base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/481 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:513/482 in meltbuild-modules failed to compile translator warmelt-normal optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/483 flavor optimized base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/484 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:513/485 in meltbuild-modules failed to compile translator warmelt-normatch optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/486 flavor optimized base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/487 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:513/488 in meltbuild-modules failed to compile translator warmelt-genobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/489 flavor optimized base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/490 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:513/491 in meltbuild-modules failed to compile translator warmelt-outobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/492 flavor optimized base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/493 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:513/494 in meltbuild-modules failed to compile translator warmelt-hooks optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/495 flavor optimized base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/496 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:513/497 in meltbuild-modules failed to compile translator warmelt-modes optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources debugnoline melt-build-script.tpl:500/498
  meltbuild_info melt-build-script.tpl:501/499 compiling translator debugnoline


   #@ melt-build-script.tpl:504/500 flavor debugnoline base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/501 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:513/502 in meltbuild-modules failed to compile translator warmelt-first debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/503 flavor debugnoline base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/504 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:513/505 in meltbuild-modules failed to compile translator warmelt-base debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/506 flavor debugnoline base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/507 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:513/508 in meltbuild-modules failed to compile translator warmelt-debug debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/509 flavor debugnoline base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/510 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:513/511 in meltbuild-modules failed to compile translator warmelt-macro debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/512 flavor debugnoline base warmelt-moremacro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/513 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-moremacro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-moremacro \
 || meltbuild_error  melt-build-script.tpl:513/514 in meltbuild-modules failed to compile translator warmelt-moremacro debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/515 flavor debugnoline base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/516 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:513/517 in meltbuild-modules failed to compile translator warmelt-normal debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/518 flavor debugnoline base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/519 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:513/520 in meltbuild-modules failed to compile translator warmelt-normatch debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/521 flavor debugnoline base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/522 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:513/523 in meltbuild-modules failed to compile translator warmelt-genobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/524 flavor debugnoline base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/525 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:513/526 in meltbuild-modules failed to compile translator warmelt-outobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/527 flavor debugnoline base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/528 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:513/529 in meltbuild-modules failed to compile translator warmelt-hooks debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:504/530 flavor debugnoline base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:506/531 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:513/532 in meltbuild-modules failed to compile translator warmelt-modes debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS



}     # end of function meltbuild_compile_translator_modules
################################################################


#################@ melt-build-script.tpl:521/533 
function meltbuild_symlink_melt_translator_sources () {


### symlinking the MELT translator code in meltbuild-sources for warmelt-first from melt-build-script.tpl:526/534

meltbuild_info melt-build-script.tpl:528/535 putting MELT translator code of warmelt-first in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-first.melt meltbuild-sources/warmelt-first.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-base from melt-build-script.tpl:526/536

meltbuild_info melt-build-script.tpl:528/537 putting MELT translator code of warmelt-base in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-base.melt meltbuild-sources/warmelt-base.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-debug from melt-build-script.tpl:526/538

meltbuild_info melt-build-script.tpl:528/539 putting MELT translator code of warmelt-debug in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt meltbuild-sources/warmelt-debug.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-macro from melt-build-script.tpl:526/540

meltbuild_info melt-build-script.tpl:528/541 putting MELT translator code of warmelt-macro in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt meltbuild-sources/warmelt-macro.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-moremacro from melt-build-script.tpl:526/542

meltbuild_info melt-build-script.tpl:528/543 putting MELT translator code of warmelt-moremacro in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-moremacro.melt meltbuild-sources/warmelt-moremacro.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-normal from melt-build-script.tpl:526/544

meltbuild_info melt-build-script.tpl:528/545 putting MELT translator code of warmelt-normal in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt meltbuild-sources/warmelt-normal.melt
meltbuild_symlink warmelt-predef.melt meltbuild-sources/warmelt-predef.melt



### symlinking the MELT translator code in meltbuild-sources for warmelt-normatch from melt-build-script.tpl:526/546

meltbuild_info melt-build-script.tpl:528/547 putting MELT translator code of warmelt-normatch in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt meltbuild-sources/warmelt-normatch.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-genobj from melt-build-script.tpl:526/548

meltbuild_info melt-build-script.tpl:528/549 putting MELT translator code of warmelt-genobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt meltbuild-sources/warmelt-genobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-outobj from melt-build-script.tpl:526/550

meltbuild_info melt-build-script.tpl:528/551 putting MELT translator code of warmelt-outobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt meltbuild-sources/warmelt-outobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-hooks from melt-build-script.tpl:526/552

meltbuild_info melt-build-script.tpl:528/553 putting MELT translator code of warmelt-hooks in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt meltbuild-sources/warmelt-hooks.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-modes from melt-build-script.tpl:526/554

meltbuild_info melt-build-script.tpl:528/555 putting MELT translator code of warmelt-modes in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt meltbuild-sources/warmelt-modes.melt



} 				# end of meltbuild_symlink_melt_translator_sources


################@ final translator melt-build-script.tpl:537/556 
melt_final_translator_stamp=meltbuild-final-translator.stamp

if [ ! -f $melt_final_translator_stamp -o $melt_final_translator_stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-moremacro.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_LASTSTAGE/$GCCMELT_LASTSTAGE.stamp ]; then
    meltbuild_notice 'Emit Translator Source'  melt-build-script.tpl:543/557 emit then translate the MELT translator 
    meltbuild_info melt-build-script.tpl:544/558 emit then translate the compile translator for  $melt_final_translator_stamp
    meltbuild_emit_translator_sources
    meltbuild_symlink_melt_translator_sources
    meltbuild_compile_translator_modules
    melt_final_translator_stamptemp=$melt_final_translator_stamp-tmp$$
    echo "///MELT translator timestamp file $melt_final_translator_stamp" > $melt_final_translator_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $melt_final_translator_stamptemp

#@  melt-build-script.tpl:552/559 
    $MD5SUM meltbuild-sources/warmelt-first.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-first.cc meltbuild-sources/warmelt-first+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_FIRST_cumulmd5=$(cat  meltbuild-sources/warmelt-first.cc meltbuild-sources/warmelt-first+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/560 
    $MD5SUM meltbuild-sources/warmelt-base.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-base.cc meltbuild-sources/warmelt-base+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_BASE_cumulmd5=$(cat  meltbuild-sources/warmelt-base.cc meltbuild-sources/warmelt-base+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/561 
    $MD5SUM meltbuild-sources/warmelt-debug.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-debug.cc meltbuild-sources/warmelt-debug+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_DEBUG_cumulmd5=$(cat  meltbuild-sources/warmelt-debug.cc meltbuild-sources/warmelt-debug+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/562 
    $MD5SUM meltbuild-sources/warmelt-macro.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-macro.cc meltbuild-sources/warmelt-macro+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_MACRO_cumulmd5=$(cat  meltbuild-sources/warmelt-macro.cc meltbuild-sources/warmelt-macro+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/563 
    $MD5SUM meltbuild-sources/warmelt-moremacro.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-moremacro.cc meltbuild-sources/warmelt-moremacro+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_MOREMACRO_cumulmd5=$(cat  meltbuild-sources/warmelt-moremacro.cc meltbuild-sources/warmelt-moremacro+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/564 
    $MD5SUM meltbuild-sources/warmelt-normal.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-predef.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normal.cc meltbuild-sources/warmelt-normal+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_NORMAL_cumulmd5=$(cat  meltbuild-sources/warmelt-normal.cc meltbuild-sources/warmelt-normal+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/565 
    $MD5SUM meltbuild-sources/warmelt-normatch.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normatch.cc meltbuild-sources/warmelt-normatch+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_NORMATCH_cumulmd5=$(cat  meltbuild-sources/warmelt-normatch.cc meltbuild-sources/warmelt-normatch+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/566 
    $MD5SUM meltbuild-sources/warmelt-genobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-genobj.cc meltbuild-sources/warmelt-genobj+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_GENOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-genobj.cc meltbuild-sources/warmelt-genobj+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/567 
    $MD5SUM meltbuild-sources/warmelt-outobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-outobj.cc meltbuild-sources/warmelt-outobj+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_OUTOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-outobj.cc meltbuild-sources/warmelt-outobj+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/568 
    $MD5SUM meltbuild-sources/warmelt-hooks.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-hooks.cc meltbuild-sources/warmelt-hooks+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_HOOKS_cumulmd5=$(cat  meltbuild-sources/warmelt-hooks.cc meltbuild-sources/warmelt-hooks+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:552/569 
    $MD5SUM meltbuild-sources/warmelt-modes.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-modes.cc meltbuild-sources/warmelt-modes+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_MODES_cumulmd5=$(cat  meltbuild-sources/warmelt-modes.cc meltbuild-sources/warmelt-modes+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

    echo "///end timestamp file $melt_final_translator_stamp"
    $GCCMELT_MOVE_IF_CHANGE $melt_final_translator_stamptemp $melt_final_translator_stamp
else
    meltbuild_info melt-build-script.tpl:563/570 skip final translation of translator stamp  $melt_final_translator_stamp
fi

################################################################
#@ melt-build-script.tpl:567/571 making the meltbuild-common.args file to make life easier
# I would often use that meltbuild-common.args for testing, etc.
meltcommon_args=meltbuild-common.args
meltbuild_info melt-build-script.tpl:570/572 making $meltcommon_args
meltcommon_argstemp=$meltcommon_args-tmp$$
echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:572/573"' > $meltcommon_argstemp
meltbuild_arg workdir=meltbuild-workdir >>  $meltcommon_argstemp
meltbuild_arg tempdir=meltbuild-tempdir >> $meltcommon_argstemp
meltbuild_arg source-path=meltbuild-sources:$GCCMELT_LASTSTAGE >> $meltcommon_argstemp
meltbuild_arg module-path=meltbuild-modules:$GCCMELT_LASTSTAGE >> $meltcommon_argstemp
meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcommon_argstemp
meltbuild_arg "module-makefile=\"$GCCMELT_MODULE_MK\""  >>  $meltcommon_argstemp

$GCCMELT_MOVE_IF_CHANGE $meltcommon_argstemp $meltcommon_args
meltbuild_info melt-build-script.tpl:581/574 $meltcommon_args is
cat $meltcommon_args < /dev/null >&2


################
### the warmelt modules lists  melt-build-script.tpl:586/575

if [ ! -f meltbuild-sources/warmelt.quicklybuilt.modlis \
    -o  meltbuild-sources/warmelt.quicklybuilt.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:590/576 warmelt module list quicklybuilt
  melt_modlis_temp="meltbuild-sources/warmelt.quicklybuilt.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-moremacro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-hooks.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.quicklybuilt.modlis"
fi

if [ ! -f meltbuild-sources/warmelt.optimized.modlis \
    -o  meltbuild-sources/warmelt.optimized.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:590/577 warmelt module list optimized
  melt_modlis_temp="meltbuild-sources/warmelt.optimized.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-moremacro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-hooks.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.optimized.modlis"
fi

if [ ! -f meltbuild-sources/warmelt.debugnoline.modlis \
    -o  meltbuild-sources/warmelt.debugnoline.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:590/578 warmelt module list debugnoline
  melt_modlis_temp="meltbuild-sources/warmelt.debugnoline.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-moremacro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-hooks.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.debugnoline.modlis"
fi


################################################################
#@ melt-build-script.tpl:601/579
if [ "$melt_overall_goal" = "translator" ]; then
    meltbuild_info melt-build-script.tpl:603/580 done translation overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

################################################################
################################################################
### the warmelt modules lists melt-build-script.tpl:609/581

if [ ! -f "meltbuild-sources/warmelt.quicklybuilt.modlis" \
    -o "meltbuild-sources/warmelt.quicklybuilt.modlis" -ot $melt_final_translator_stamp  ]; then
  #  melt-build-script.tpl:613/582 warmelt module list quicklybuilt
  meltbuild_info  melt-build-script.tpl:614/583 generating warmelt module list  "meltbuild-sources/warmelt.quicklybuilt.modlis"
  melt_modlis_temp="meltbuild-sources/warmelt.quicklybuilt.modlis-tmp$$"
  echo "# MELT module list file warmelt.quicklybuilt.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-moremacro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-hooks.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:621/584
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.quicklybuilt.modlis"
else
  meltbuild_info  melt-build-script.tpl:624/585 keeping warmelt module list  "meltbuild-sources/warmelt.quicklybuilt.modlis"  
fi

if [ ! -f "meltbuild-sources/warmelt.optimized.modlis" \
    -o "meltbuild-sources/warmelt.optimized.modlis" -ot $melt_final_translator_stamp  ]; then
  #  melt-build-script.tpl:613/586 warmelt module list optimized
  meltbuild_info  melt-build-script.tpl:614/587 generating warmelt module list  "meltbuild-sources/warmelt.optimized.modlis"
  melt_modlis_temp="meltbuild-sources/warmelt.optimized.modlis-tmp$$"
  echo "# MELT module list file warmelt.optimized.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-moremacro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-hooks.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:621/588
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.optimized.modlis"
else
  meltbuild_info  melt-build-script.tpl:624/589 keeping warmelt module list  "meltbuild-sources/warmelt.optimized.modlis"  
fi

if [ ! -f "meltbuild-sources/warmelt.debugnoline.modlis" \
    -o "meltbuild-sources/warmelt.debugnoline.modlis" -ot $melt_final_translator_stamp  ]; then
  #  melt-build-script.tpl:613/590 warmelt module list debugnoline
  meltbuild_info  melt-build-script.tpl:614/591 generating warmelt module list  "meltbuild-sources/warmelt.debugnoline.modlis"
  melt_modlis_temp="meltbuild-sources/warmelt.debugnoline.modlis-tmp$$"
  echo "# MELT module list file warmelt.debugnoline.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-moremacro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-hooks.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:621/592
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.debugnoline.modlis"
else
  meltbuild_info  melt-build-script.tpl:624/593 keeping warmelt module list  "meltbuild-sources/warmelt.debugnoline.modlis"  
fi


################################################################
################################################################
######################### REGENERATION #########################
#@ melt-build-script.tpl:631/594
if [ "$melt_overall_goal" = "regenerate" ]; then
    meltbuild_notice regenerating runtime support melt-build-script.tpl:633/595 
    [ -d meltbuild-sources/generated ] || mkdir meltbuild-sources/generated
    meltregen_args=meltbuild-regen.args
    meltregen_argstemp="$meltregen_args-tmp$$"
    echo ' -DGCCMELT_REGENERATING  -DGCCMELT_FROM_ARG="melt-build-script.tpl:637/596"' > $meltregen_argstemp
    meltbuild_arg mode=runtypesupport >> $meltregen_argstemp
    meltbuild_arg output=meltbuild-sources/generated/meltrunsup >> $meltregen_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltregen_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltregen_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltregen_argstemp
    meltbuild_arg init=@warmelt.quicklybuilt >> $meltregen_argstemp
    meltbuild_arg bootstrapping  >> $meltregen_argstemp
    echo meltbuild-empty-file.c >> $meltregen_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltregen_argstemp $meltregen_args
   meltbuild_info melt-build-script.tpl:647/597 $meltregen_args  is
   cat $meltregen_args < /dev/null >&2
    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltregen_args \
	|| meltbuild_error melt-build-script.tpl:650/598 failed with arguments @$meltregen_args
    meltbuild_info melt-build-script.tpl:651/599 done regenerate overall goal
    exit 0
fi



################################################################
################################################################
########################### LIBRARY ############################
################
#@ melt-build-script.tpl:661/600 before library libmelt* modules
################################################################
meltbuild_info melt-build-script.tpl:663/601 before library GCCMELT_SKIPEMITC=$GCCMELT_SKIPEMITC.

meltbuild_info melt-build-script.tpl:665/602 times before library at `date '+%x %H:%M:%S'`: ;  times >&2
 
melt_final_library_stamp=meltbuild-final-library.stamp

function meltbuild_do_library () {
  meltbuild_notice 'start doing library'  melt-build-script.tpl:670/603 doing library 
  
  
    ## meltbuild_do_library libmelt-ana-base melt-build-script.tpl:673/604
    meltbuild_info melt-build-script.tpl:674/605 doing library libmelt-ana-base
    if [ ! -f meltbuild-sources/libmelt-ana-base.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/libmelt-ana-base.melt meltbuild-sources/libmelt-ana-base.melt
    fi
    ## meltbuild_do_library libmelt-ana-base melt-build-script.tpl:678/606
    if [ ! -f meltbuild-sources/libmelt-ana-base.cc -o  ! -f meltbuild-sources/libmelt-ana-base+meltdesc.c \
         -o meltbuild-sources/libmelt-ana-base+meltdesc.c -ot meltbuild-final-translator.stamp \
         -o meltbuild-sources/libmelt-ana-base+meltdesc.c -ot meltbuild-sources/libmelt-ana-base.melt \
   ]; then
        meltbuild_info melt-build-script.tpl:684/607 emit library C++ code for libmelt-ana-base
        meltbuild_emit melt-build-script.tpl:685/608 \
  	  translatefile \
  	  libmelt-ana-base \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized \
      "" \
  	  || meltbuild_error melt-build-script.tpl:692/609 failed to generate C++ code of library libmelt-ana-base
    else
        meltbuild_info melt-build-script.tpl:694/610 DONT emit library C++ code for libmelt-ana-base
    fi
    local meltlib_ANA_BASE_cumulmd5=$(cat  meltbuild-sources/libmelt-ana-base.cc meltbuild-sources/libmelt-ana-base+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-base.cc \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-base+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/611 compiling library module for libmelt-ana-base quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/612 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base \
  	  || ( meltbuild_notice melt-build-script.tpl:711/613 in meltbuild-modules failure to compile library libmelt-ana-base quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/614 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base ; \
  	       meltbuild_error  melt-build-script.tpl:720/615 in meltbuild-modules failed to compile library libmelt-ana-base quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/616 not compiling library module for libmelt-ana-base quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.optimized.so \
        -o meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-base.cc \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-base+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/617 compiling library module for libmelt-ana-base optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/618 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base \
  	  || ( meltbuild_notice melt-build-script.tpl:711/619 in meltbuild-modules failure to compile library libmelt-ana-base optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/620 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base ; \
  	       meltbuild_error  melt-build-script.tpl:720/621 in meltbuild-modules failed to compile library libmelt-ana-base optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/622 not compiling library module for libmelt-ana-base optimized
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.debugnoline.so \
        -o meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-base.cc \
        -o  meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-base+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/623 compiling library module for libmelt-ana-base debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/624 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base \
  	  || ( meltbuild_notice melt-build-script.tpl:711/625 in meltbuild-modules failure to compile library libmelt-ana-base debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/626 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-base \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-base ; \
  	       meltbuild_error  melt-build-script.tpl:720/627 in meltbuild-modules failed to compile library libmelt-ana-base debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/628 not compiling library module for libmelt-ana-base debugnoline
    fi
   
  
  
    ## meltbuild_do_library libmelt-ana-tree melt-build-script.tpl:673/629
    meltbuild_info melt-build-script.tpl:674/630 doing library libmelt-ana-tree
    if [ ! -f meltbuild-sources/libmelt-ana-tree.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/libmelt-ana-tree.melt meltbuild-sources/libmelt-ana-tree.melt
    fi
    ## meltbuild_do_library libmelt-ana-tree melt-build-script.tpl:678/631
    if [ ! -f meltbuild-sources/libmelt-ana-tree.cc -o  ! -f meltbuild-sources/libmelt-ana-tree+meltdesc.c \
         -o meltbuild-sources/libmelt-ana-tree+meltdesc.c -ot meltbuild-final-translator.stamp \
         -o meltbuild-sources/libmelt-ana-tree+meltdesc.c -ot meltbuild-sources/libmelt-ana-tree.melt \
   -o meltbuild-sources/libmelt-ana-base+meltdesc.c -ot meltbuild-sources/libmelt-ana-tree+meltdesc.c \
   ]; then
        meltbuild_info melt-build-script.tpl:684/632 emit library C++ code for libmelt-ana-tree
        meltbuild_emit melt-build-script.tpl:685/633 \
  	  translatefile \
  	  libmelt-ana-tree \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:libmelt-ana-base.quicklybuilt \
      "" \
  	  || meltbuild_error melt-build-script.tpl:692/634 failed to generate C++ code of library libmelt-ana-tree
    else
        meltbuild_info melt-build-script.tpl:694/635 DONT emit library C++ code for libmelt-ana-tree
    fi
    local meltlib_ANA_TREE_cumulmd5=$(cat  meltbuild-sources/libmelt-ana-tree.cc meltbuild-sources/libmelt-ana-tree+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-tree.cc \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-tree+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/636 compiling library module for libmelt-ana-tree quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/637 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree \
  	  || ( meltbuild_notice melt-build-script.tpl:711/638 in meltbuild-modules failure to compile library libmelt-ana-tree quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/639 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree ; \
  	       meltbuild_error  melt-build-script.tpl:720/640 in meltbuild-modules failed to compile library libmelt-ana-tree quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/641 not compiling library module for libmelt-ana-tree quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.optimized.so \
        -o meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-tree.cc \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-tree+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/642 compiling library module for libmelt-ana-tree optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/643 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree \
  	  || ( meltbuild_notice melt-build-script.tpl:711/644 in meltbuild-modules failure to compile library libmelt-ana-tree optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/645 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree ; \
  	       meltbuild_error  melt-build-script.tpl:720/646 in meltbuild-modules failed to compile library libmelt-ana-tree optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/647 not compiling library module for libmelt-ana-tree optimized
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.debugnoline.so \
        -o meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-tree.cc \
        -o  meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-tree+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/648 compiling library module for libmelt-ana-tree debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/649 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree \
  	  || ( meltbuild_notice melt-build-script.tpl:711/650 in meltbuild-modules failure to compile library libmelt-ana-tree debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/651 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-tree \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-tree ; \
  	       meltbuild_error  melt-build-script.tpl:720/652 in meltbuild-modules failed to compile library libmelt-ana-tree debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/653 not compiling library module for libmelt-ana-tree debugnoline
    fi
   
  
  
    ## meltbuild_do_library libmelt-ana-gimple melt-build-script.tpl:673/654
    meltbuild_info melt-build-script.tpl:674/655 doing library libmelt-ana-gimple
    if [ ! -f meltbuild-sources/libmelt-ana-gimple.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/libmelt-ana-gimple.melt meltbuild-sources/libmelt-ana-gimple.melt
    fi
    ## meltbuild_do_library libmelt-ana-gimple melt-build-script.tpl:678/656
    if [ ! -f meltbuild-sources/libmelt-ana-gimple.cc -o  ! -f meltbuild-sources/libmelt-ana-gimple+meltdesc.c \
         -o meltbuild-sources/libmelt-ana-gimple+meltdesc.c -ot meltbuild-final-translator.stamp \
         -o meltbuild-sources/libmelt-ana-gimple+meltdesc.c -ot meltbuild-sources/libmelt-ana-gimple.melt \
   -o meltbuild-sources/libmelt-ana-base+meltdesc.c -ot meltbuild-sources/libmelt-ana-gimple+meltdesc.c \
   -o meltbuild-sources/libmelt-ana-tree+meltdesc.c -ot meltbuild-sources/libmelt-ana-gimple+meltdesc.c \
   ]; then
        meltbuild_info melt-build-script.tpl:684/657 emit library C++ code for libmelt-ana-gimple
        meltbuild_emit melt-build-script.tpl:685/658 \
  	  translatefile \
  	  libmelt-ana-gimple \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:libmelt-ana-base.quicklybuilt:libmelt-ana-tree.quicklybuilt \
      "" \
  	  || meltbuild_error melt-build-script.tpl:692/659 failed to generate C++ code of library libmelt-ana-gimple
    else
        meltbuild_info melt-build-script.tpl:694/660 DONT emit library C++ code for libmelt-ana-gimple
    fi
    local meltlib_ANA_GIMPLE_cumulmd5=$(cat  meltbuild-sources/libmelt-ana-gimple.cc meltbuild-sources/libmelt-ana-gimple+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-gimple.cc \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/libmelt-ana-gimple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/661 compiling library module for libmelt-ana-gimple quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/662 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple \
  	  || ( meltbuild_notice melt-build-script.tpl:711/663 in meltbuild-modules failure to compile library libmelt-ana-gimple quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/664 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple ; \
  	       meltbuild_error  melt-build-script.tpl:720/665 in meltbuild-modules failed to compile library libmelt-ana-gimple quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/666 not compiling library module for libmelt-ana-gimple quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.optimized.so \
        -o meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-gimple.cc \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/libmelt-ana-gimple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/667 compiling library module for libmelt-ana-gimple optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/668 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple \
  	  || ( meltbuild_notice melt-build-script.tpl:711/669 in meltbuild-modules failure to compile library libmelt-ana-gimple optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/670 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple ; \
  	       meltbuild_error  melt-build-script.tpl:720/671 in meltbuild-modules failed to compile library libmelt-ana-gimple optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/672 not compiling library module for libmelt-ana-gimple optimized
    fi
   
    if [ ! -f meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.debugnoline.so \
        -o meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-gimple.cc \
        -o  meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/libmelt-ana-gimple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:702/673 compiling library module for libmelt-ana-gimple debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:704/674 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple \
  	  || ( meltbuild_notice melt-build-script.tpl:711/675 in meltbuild-modules failure to compile library libmelt-ana-gimple debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:713/676 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/libmelt-ana-gimple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/libmelt-ana-gimple ; \
  	       meltbuild_error  melt-build-script.tpl:720/677 in meltbuild-modules failed to compile library libmelt-ana-gimple debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:723/678 not compiling library module for libmelt-ana-gimple debugnoline
    fi
   
  
    ## meltbuild_do_library  melt-build-script.tpl:727/679
    local meltlibstamptemp=$melt_final_library_stamp-tmp$$
    echo "///MELT library time stamp $melt_final_library_stamp" > $meltlibstamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $meltlibstamptemp
  
    $MD5SUM meltbuild-sources/libmelt-ana-base.melt >>  $meltlibstamptemp
    $MD5SUM meltbuild-sources/libmelt-ana-base.cc meltbuild-sources/libmelt-ana-base+[0-9][0-9].cc  >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.quicklybuilt.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.optimized.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-base.meltmod-$meltlib_ANA_BASE_cumulmd5.debugnoline.so >> $meltlibstamptemp
   
  
    $MD5SUM meltbuild-sources/libmelt-ana-tree.melt >>  $meltlibstamptemp
    $MD5SUM meltbuild-sources/libmelt-ana-tree.cc meltbuild-sources/libmelt-ana-tree+[0-9][0-9].cc  >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.quicklybuilt.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.optimized.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-tree.meltmod-$meltlib_ANA_TREE_cumulmd5.debugnoline.so >> $meltlibstamptemp
   
  
    $MD5SUM meltbuild-sources/libmelt-ana-gimple.melt >>  $meltlibstamptemp
    $MD5SUM meltbuild-sources/libmelt-ana-gimple.cc meltbuild-sources/libmelt-ana-gimple+[0-9][0-9].cc  >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.quicklybuilt.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.optimized.so >> $meltlibstamptemp
   
    $MD5SUM meltbuild-modules/libmelt-ana-gimple.meltmod-$meltlib_ANA_GIMPLE_cumulmd5.debugnoline.so >> $meltlibstamptemp
   
  
    echo "///end stamp $melt_final_library_stamp"  >> $meltlibstamptemp
    $GCCMELT_MOVE_IF_CHANGE $meltlibstamptemp  $melt_final_library_stamp
  meltbuild_info melt-build-script.tpl:740/680 times after library at `date '+%x %H:%M:%S'`: ;  times >&2
} ## end function meltbuild_do_library  melt-build-script.tpl:741/681


if [ ! -f  "$melt_final_library_stamp" \
     -o "$melt_final_library_stamp" -ot "$melt_final_translator_stamp" \
 -o "$melt_final_library_stamp" -ot "$GCCMELT_MELTSOURCEDIR/libmelt-ana-base.melt" \
 -o "$melt_final_library_stamp" -ot "$GCCMELT_MELTSOURCEDIR/libmelt-ana-tree.melt" \
 -o "$melt_final_library_stamp" -ot "$GCCMELT_MELTSOURCEDIR/libmelt-ana-gimple.melt" \
 ]; then
    meltbuild_info melt-build-script.tpl:748/682 building MELT library
    meltbuild_do_library
else
    meltbuild_info melt-build-script.tpl:751/683 not building MELT library because of libstamp  "$melt_final_library_stamp"
fi

################################################################
#@ melt-build-script.tpl:755/684
if [ "$melt_overall_goal" = "library" ]; then
    meltbuild_info melt-build-script.tpl:757/685 done library overall goal with stamp  $melt_final_translator_stamp
    meltbuild_notice 'Done library' melt-build-script.tpl:758/686 library overall goal 
    exit 0
fi

################################################################
################################################################
### the modules lists melt-build-script.tpl:764/687

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_library_stamp ]; then
  #  melt-build-script.tpl:769/688 module list quicklybuilt
  meltbuild_info  melt-build-script.tpl:770/689 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  #  melt-build-script.tpl:774/690 module list quicklybuilt translator
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-moremacro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-hooks.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  #  melt-build-script.tpl:778/691 module list quicklybuilt library
  echo "# MELT library modules:" >> $melt_modlis_temp
 
  echo libmelt-ana-base.quicklybuilt >> $melt_modlis_temp
 
  echo libmelt-ana-tree.quicklybuilt >> $melt_modlis_temp
 
  echo libmelt-ana-gimple.quicklybuilt >> $melt_modlis_temp
 
  #  melt-build-script.tpl:783/692 module list quicklybuilt extra, with mode condition
 echo "# MELT extra modules with mode condition:" >> $melt_modlis_temp
 
 printf '#xtra xtramelt-probe\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-probe.quicklybuilt\n", $2);}' meltbuild-sources/xtramelt-probe.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-ana-simple\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-ana-simple.quicklybuilt\n", $2);}' meltbuild-sources/xtramelt-ana-simple.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-playground\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-playground.quicklybuilt\n", $2);}' meltbuild-sources/xtramelt-playground.melt | sort -u >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
else
  meltbuild_info  melt-build-script.tpl:791/693 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_library_stamp ]; then
  #  melt-build-script.tpl:769/694 module list optimized
  meltbuild_info  melt-build-script.tpl:770/695 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  #  melt-build-script.tpl:774/696 module list optimized translator
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-moremacro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-hooks.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  #  melt-build-script.tpl:778/697 module list optimized library
  echo "# MELT library modules:" >> $melt_modlis_temp
 
  echo libmelt-ana-base.optimized >> $melt_modlis_temp
 
  echo libmelt-ana-tree.optimized >> $melt_modlis_temp
 
  echo libmelt-ana-gimple.optimized >> $melt_modlis_temp
 
  #  melt-build-script.tpl:783/698 module list optimized extra, with mode condition
 echo "# MELT extra modules with mode condition:" >> $melt_modlis_temp
 
 printf '#xtra xtramelt-probe\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-probe.optimized\n", $2);}' meltbuild-sources/xtramelt-probe.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-ana-simple\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-ana-simple.optimized\n", $2);}' meltbuild-sources/xtramelt-ana-simple.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-playground\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-playground.optimized\n", $2);}' meltbuild-sources/xtramelt-playground.melt | sort -u >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
else
  meltbuild_info  melt-build-script.tpl:791/699 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_library_stamp ]; then
  #  melt-build-script.tpl:769/700 module list debugnoline
  meltbuild_info  melt-build-script.tpl:770/701 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  #  melt-build-script.tpl:774/702 module list debugnoline translator
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-moremacro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-hooks.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  #  melt-build-script.tpl:778/703 module list debugnoline library
  echo "# MELT library modules:" >> $melt_modlis_temp
 
  echo libmelt-ana-base.debugnoline >> $melt_modlis_temp
 
  echo libmelt-ana-tree.debugnoline >> $melt_modlis_temp
 
  echo libmelt-ana-gimple.debugnoline >> $melt_modlis_temp
 
  #  melt-build-script.tpl:783/704 module list debugnoline extra, with mode condition
 echo "# MELT extra modules with mode condition:" >> $melt_modlis_temp
 
 printf '#xtra xtramelt-probe\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-probe.debugnoline\n", $2);}' meltbuild-sources/xtramelt-probe.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-ana-simple\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-ana-simple.debugnoline\n", $2);}' meltbuild-sources/xtramelt-ana-simple.melt | sort -u >> $melt_modlis_temp
 
 printf '#xtra xtramelt-playground\n' >> $melt_modlis_temp
 $GAWK -F\" '/\(install_melt_mode /{if (length($2)>1) printf("?%s xtramelt-playground.debugnoline\n", $2);}' meltbuild-sources/xtramelt-playground.melt | sort -u >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
else
  meltbuild_info  melt-build-script.tpl:791/705 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"  
fi


#@ melt-build-script.tpl:795/706
if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis" ]; then
   meltbuild_symlink "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis"
fi

################################################################
#@ melt-build-script.tpl:801/707 module lists
if [ "$melt_overall_goal" = "modlists" ]; then
    meltbuild_info melt-build-script.tpl:803/708 done modlists overall goal with stamp  $melt_final_library_stamp
    exit 0
fi

################################################################
################################################################
########################### EXTRA ############################
################
#@ melt-build-script.tpl:811/709 before extra libmelt* modules
################################################################
meltbuild_info melt-build-script.tpl:813/710 before extra GCCMELT_SKIPEMITC=$GCCMELT_SKIPEMITC.

meltbuild_info melt-build-script.tpl:815/711 times before extras at `date '+%x %H:%M:%S'`: ;  times >&2
 
melt_final_extra_stamp=meltbuild-final-extra.stamp



function meltbuild_do_extras () {
  meltbuild_notice 'start doing extras'  melt-build-script.tpl:822/712 doing extras 
  
  
    ## meltbuild_do_extras xtramelt-probe melt-build-script.tpl:825/713
    meltbuild_info melt-build-script.tpl:826/714 doing extra xtramelt-probe
    if [ ! -f meltbuild-sources/xtramelt-probe.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt meltbuild-sources/xtramelt-probe.melt
    fi
    ## meltbuild_do_extras xtramelt-probe melt-build-script.tpl:830/715
    if [ ! -f meltbuild-sources/xtramelt-probe.cc -o  ! -f meltbuild-sources/xtramelt-probe+meltdesc.c \
         -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-final-library.stamp \
         -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-probe.melt \
    ]; then 
        meltbuild_info melt-build-script.tpl:835/716 emit extra C++ code for xtramelt-probe
        meltbuild_emit melt-build-script.tpl:836/717 \
  	  translatefile \
  	  xtramelt-probe \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:libmelt-ana-base.optimized:libmelt-ana-tree.optimized:libmelt-ana-gimple.optimized \
      "" \
  	  || meltbuild_error melt-build-script.tpl:843/718 failed to generate C++ code of extra xtramelt-probe
    else
        meltbuild_info melt-build-script.tpl:845/719 DONT emit extra C++ code for xtramelt-probe
    fi
    local meltextra_PROBE_cumulmd5=$(cat  meltbuild-sources/xtramelt-probe.cc meltbuild-sources/xtramelt-probe+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe.cc \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/720 compiling extra module for xtramelt-probe quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/721 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
  	  || ( meltbuild_notice melt-build-script.tpl:862/722 in meltbuild-modules failure to compile extra xtramelt-probe quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/723 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe ; \
  	       meltbuild_error  melt-build-script.tpl:871/724 in meltbuild-modules failed to compile extra xtramelt-probe quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/725 not compiling extra module for xtramelt-probe quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.optimized.so \
        -o meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe.cc \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/726 compiling extra module for xtramelt-probe optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/727 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
  	  || ( meltbuild_notice melt-build-script.tpl:862/728 in meltbuild-modules failure to compile extra xtramelt-probe optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/729 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe ; \
  	       meltbuild_error  melt-build-script.tpl:871/730 in meltbuild-modules failed to compile extra xtramelt-probe optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/731 not compiling extra module for xtramelt-probe optimized
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.debugnoline.so \
        -o meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe.cc \
        -o  meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/732 compiling extra module for xtramelt-probe debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/733 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
  	  || ( meltbuild_notice melt-build-script.tpl:862/734 in meltbuild-modules failure to compile extra xtramelt-probe debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/735 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe ; \
  	       meltbuild_error  melt-build-script.tpl:871/736 in meltbuild-modules failed to compile extra xtramelt-probe debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/737 not compiling extra module for xtramelt-probe debugnoline
    fi
   
   ## meltbuild_do_extras after build xtramelt-probe melt-build-script.tpl:877/738
   
   
  
    ## meltbuild_do_extras xtramelt-ana-simple melt-build-script.tpl:825/739
    meltbuild_info melt-build-script.tpl:826/740 doing extra xtramelt-ana-simple
    if [ ! -f meltbuild-sources/xtramelt-ana-simple.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt meltbuild-sources/xtramelt-ana-simple.melt
    fi
    ## meltbuild_do_extras xtramelt-ana-simple melt-build-script.tpl:830/741
    if [ ! -f meltbuild-sources/xtramelt-ana-simple.cc -o  ! -f meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
         -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-final-library.stamp \
         -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple.melt \
    ]; then 
        meltbuild_info melt-build-script.tpl:835/742 emit extra C++ code for xtramelt-ana-simple
        meltbuild_emit melt-build-script.tpl:836/743 \
  	  translatefile \
  	  xtramelt-ana-simple \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:libmelt-ana-base.optimized:libmelt-ana-tree.optimized:libmelt-ana-gimple.optimized \
      "" \
  	  || meltbuild_error melt-build-script.tpl:843/744 failed to generate C++ code of extra xtramelt-ana-simple
    else
        meltbuild_info melt-build-script.tpl:845/745 DONT emit extra C++ code for xtramelt-ana-simple
    fi
    local meltextra_ANA_SIMPLE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-simple.cc meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/746 compiling extra module for xtramelt-ana-simple quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/747 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
  	  || ( meltbuild_notice melt-build-script.tpl:862/748 in meltbuild-modules failure to compile extra xtramelt-ana-simple quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/749 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple ; \
  	       meltbuild_error  melt-build-script.tpl:871/750 in meltbuild-modules failed to compile extra xtramelt-ana-simple quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/751 not compiling extra module for xtramelt-ana-simple quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.optimized.so \
        -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/752 compiling extra module for xtramelt-ana-simple optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/753 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
  	  || ( meltbuild_notice melt-build-script.tpl:862/754 in meltbuild-modules failure to compile extra xtramelt-ana-simple optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/755 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple ; \
  	       meltbuild_error  melt-build-script.tpl:871/756 in meltbuild-modules failed to compile extra xtramelt-ana-simple optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/757 not compiling extra module for xtramelt-ana-simple optimized
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.debugnoline.so \
        -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
        -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/758 compiling extra module for xtramelt-ana-simple debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/759 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
  	  || ( meltbuild_notice melt-build-script.tpl:862/760 in meltbuild-modules failure to compile extra xtramelt-ana-simple debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/761 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple ; \
  	       meltbuild_error  melt-build-script.tpl:871/762 in meltbuild-modules failed to compile extra xtramelt-ana-simple debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/763 not compiling extra module for xtramelt-ana-simple debugnoline
    fi
   
   ## meltbuild_do_extras after build xtramelt-ana-simple melt-build-script.tpl:877/764
   
   
  
    ## meltbuild_do_extras xtramelt-playground melt-build-script.tpl:825/765
    meltbuild_info melt-build-script.tpl:826/766 doing extra xtramelt-playground
    if [ ! -f meltbuild-sources/xtramelt-playground.melt ]; then
        meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-playground.melt meltbuild-sources/xtramelt-playground.melt
    fi
    ## meltbuild_do_extras xtramelt-playground melt-build-script.tpl:830/767
    if [ ! -f meltbuild-sources/xtramelt-playground.cc -o  ! -f meltbuild-sources/xtramelt-playground+meltdesc.c \
         -o meltbuild-sources/xtramelt-playground+meltdesc.c -ot meltbuild-final-library.stamp \
         -o meltbuild-sources/xtramelt-playground+meltdesc.c -ot meltbuild-sources/xtramelt-playground.melt \
    ]; then 
        meltbuild_info melt-build-script.tpl:835/768 emit extra C++ code for xtramelt-playground
        meltbuild_emit melt-build-script.tpl:836/769 \
  	  translatefile \
  	  xtramelt-playground \
  	  meltbuild-sources \
  	  meltbuild-modules \
  	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-moremacro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:libmelt-ana-base.optimized:libmelt-ana-tree.optimized:libmelt-ana-gimple.optimized \
      "" \
  	  || meltbuild_error melt-build-script.tpl:843/770 failed to generate C++ code of extra xtramelt-playground
    else
        meltbuild_info melt-build-script.tpl:845/771 DONT emit extra C++ code for xtramelt-playground
    fi
    local meltextra_PLAYGROUND_cumulmd5=$(cat  meltbuild-sources/xtramelt-playground.cc meltbuild-sources/xtramelt-playground+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
   
    if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.quicklybuilt.so \
        -o meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-playground.cc \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/772 compiling extra module for xtramelt-playground quicklybuilt
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/773 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
  	  || ( meltbuild_notice melt-build-script.tpl:862/774 in meltbuild-modules failure to compile extra xtramelt-playground quicklybuilt ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/775 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=quicklybuilt \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground ; \
  	       meltbuild_error  melt-build-script.tpl:871/776 in meltbuild-modules failed to compile extra xtramelt-playground quicklybuilt \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/777 not compiling extra module for xtramelt-playground quicklybuilt
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.optimized.so \
        -o meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-playground.cc \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/778 compiling extra module for xtramelt-playground optimized
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/779 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=optimized \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
  	  || ( meltbuild_notice melt-build-script.tpl:862/780 in meltbuild-modules failure to compile extra xtramelt-playground optimized ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/781 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=optimized \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground ; \
  	       meltbuild_error  melt-build-script.tpl:871/782 in meltbuild-modules failed to compile extra xtramelt-playground optimized \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/783 not compiling extra module for xtramelt-playground optimized
    fi
   
    if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.debugnoline.so \
        -o meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-playground.cc \
        -o  meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
        meltbuild_info melt-build-script.tpl:853/784 compiling extra module for xtramelt-playground debugnoline
        $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  	  GCCMELT_FROM=melt-build-script.tpl:855/785 \
  	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  	  GCCMELT_MODULE_FLAVOR=debugnoline \
  	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
  	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
  	  || ( meltbuild_notice melt-build-script.tpl:862/786 in meltbuild-modules failure to compile extra xtramelt-playground debugnoline ; \
  	       $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
  			     GCCMELT_FROM=melt-build-script.tpl:864/787 \
  			     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
  			     GCCMELT_MODULE_FLAVOR=debugnoline \
  			     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
  			     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
  			     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
  			     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground ; \
  	       meltbuild_error  melt-build-script.tpl:871/788 in meltbuild-modules failed to compile extra xtramelt-playground debugnoline \
  				"($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS )
  	       else
        meltbuild_info melt-build-script.tpl:874/789 not compiling extra module for xtramelt-playground debugnoline
    fi
   
   ## meltbuild_do_extras after build xtramelt-playground melt-build-script.tpl:877/790
   
   
 
   ## meltbuild_do_extras timestamping  melt-build-script.tpl:881/791
    local meltextrastamptemp=$melt_final_extra_stamp-tmp$$
    echo "///MELT extra time stamp $melt_final_extra_stamp" > $meltextrastamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $meltextrastamptemp
  
    $MD5SUM meltbuild-sources/xtramelt-probe.melt >>  $meltextrastamptemp
    $MD5SUM meltbuild-sources/xtramelt-probe.cc meltbuild-sources/xtramelt-probe+[0-9][0-9].cc  >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.quicklybuilt.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.optimized.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltextra_PROBE_cumulmd5.debugnoline.so >> $meltextrastamptemp
   
   ## meltbuild_do_extras end extra xtramelt-probe melt-build-script.tpl:891/792
 
   
    $MD5SUM meltbuild-sources/xtramelt-ana-simple.melt >>  $meltextrastamptemp
    $MD5SUM meltbuild-sources/xtramelt-ana-simple.cc meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].cc  >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.quicklybuilt.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.optimized.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltextra_ANA_SIMPLE_cumulmd5.debugnoline.so >> $meltextrastamptemp
   
   ## meltbuild_do_extras end extra xtramelt-ana-simple melt-build-script.tpl:891/793
 
   
    $MD5SUM meltbuild-sources/xtramelt-playground.melt >>  $meltextrastamptemp
    $MD5SUM meltbuild-sources/xtramelt-playground.cc meltbuild-sources/xtramelt-playground+[0-9][0-9].cc  >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.quicklybuilt.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.optimized.so >> $meltextrastamptemp
   
    $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltextra_PLAYGROUND_cumulmd5.debugnoline.so >> $meltextrastamptemp
   
   ## meltbuild_do_extras end extra xtramelt-playground melt-build-script.tpl:891/794
 
   

    ## meltbuild_do_extras final  melt-build-script.tpl:895/795
    echo "///end stamp $melt_final_extra_stamp"  >> $meltextrastamptemp
    $GCCMELT_MOVE_IF_CHANGE $meltextrastamptemp  $melt_final_extra_stamp
  meltbuild_info melt-build-script.tpl:898/796 times after extras at `date '+%x %H:%M:%S'`: ;  times >&2
} ## end function meltbuild_do_extras  melt-build-script.tpl:899/797

 ## building extras melt-build-script.tpl:901/798
if [ ! -f  "$melt_final_extra_stamp" \
     -o "$melt_final_extra_stamp" -ot "$melt_final_translator_stamp" \
     -o "$melt_final_extra_stamp" -ot "$melt_final_library_stamp" \
 -o "$melt_final_extra_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt" \
 -o "$melt_final_extra_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt" \
 -o "$melt_final_extra_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-playground.melt" \
 ]; then
    meltbuild_info melt-build-script.tpl:907/799 building MELT extras
    meltbuild_do_extras
else
    meltbuild_info melt-build-script.tpl:910/800 not building MELT extra because of xtrastamp  "$melt_final_extra_stamp"
fi
 ## done building extras melt-build-script.tpl:912/801


################################################################
################################################################
#@ melt-build-script.tpl:917/802 runtime self check

##  melt-build-script.tpl:919/803 FIXME: should skip that when cross-compiler MELT plugin..

if [ -z "$GCCMELT_RUNTIME_CC" ]; then 
    meltbuild_error melt-build-script.tpl:922/804 failed because no GCCMELT_RUNTIME_CC shell variable
    exit 1
fi

meltcheckruntime_stamp=meltbuild-checkruntime.stamp
if [ ! -f $meltcheckruntime_stamp -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_ARGS" \
    -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_CC" \
    -o $meltcheckruntime_stamp -ot $melt_final_extra_stamp ]; then
    #@ melt-build-script.tpl:930/805 checkruntime
    if [ -f melt-no-check-runtime -o -n "$MELTGCC_NO_CHECK_RUNTIME" -o ! -f melt-runtime.i ]; then
	meltbuild_info melt-build-script.tpl:932/806 skipping check of MELT runtime
    else
	meltcheckruntime_args=meltbuild-checkruntime.args 
	meltcheckruntime_argstemp=$meltcheckruntime_args-tmp$$
	echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:936/807"' ' -DGCCMELT_CHECKMELTRUNTIME' > $meltcheckruntime_argstemp
	meltbuild_arg mode=meltframe >> $meltcheckruntime_argstemp
	meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckruntime_argstemp
	meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckruntime_argstemp
	meltbuild_arg source-path=meltbuild-sources >> $meltcheckruntime_argstemp
	meltbuild_arg module-path=meltbuild-modules >> $meltcheckruntime_argstemp
        meltbuild_arg extra=xtramelt-ana-simple >> $meltcheckruntime_argstemp
	meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckruntime_argstemp
	meltbuild_arg bootstrapping  >> $meltcheckruntime_argstemp
	echo ' -o /dev/null' >> $meltcheckruntime_argstemp
	echo melt-runtime.i >> $meltcheckruntime_argstemp
	$GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_argstemp $meltcheckruntime_args
	[ -f "$meltcheckruntime_args" ] || meltbuild_error  melt-build-script.tpl:948/808 missing check runtime args  "$meltcheckruntime_args"
	meltbuild_info melt-build-script.tpl:949/809 $meltcheckruntime_args  is
	cat $meltcheckruntime_args < /dev/null >&2
	if [ -n "$MELTGCCBUILTIN_BUILD_WITH_CXX" ]; then
	    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:953/810 failed  $GCCMELT_CC1PLUS with arguments @$meltcheckruntime_args
	else
	    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:956/811 failed  $GCCMELT_CC1PLUS with arguments @$meltcheckruntime_args
	fi
	meltbuild_info melt-build-script.tpl:958/812 done check runtime with $meltcheckruntime_args
    fi

   #@ melt-build-script.tpl:961/813 checkhello
    meltcheckhelloworld_args=meltbuild-checkhelloworld.args 
    meltcheckhelloworld_argstemp=$meltcheckhelloworld_args-tmp$$
    echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:964/814"' > $meltcheckhelloworld_argstemp
    meltbuild_arg mode=runfile >> $meltcheckhelloworld_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckhelloworld_argstemp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >>  $meltcheckhelloworld_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckhelloworld_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltcheckhelloworld_argstemp
    meltbuild_arg module-path=meltbuild-modules >> $meltcheckhelloworld_argstemp
    meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckhelloworld_argstemp
    date +'(code_chunk hello%j #{puts("hello world from MELT %F @" __TIME__"\n")}#)' > meltbuild-hello.melt-tmp$$
    $GCCMELT_MOVE_IF_CHANGE meltbuild-hello.melt-tmp$$  meltbuild-hello.melt
    meltbuild_arg arg=meltbuild-hello.melt >> $meltcheckhelloworld_argstemp
    echo ' meltbuild-empty-file.c -o /dev/null' >> $meltcheckhelloworld_argstemp
    cat $GCCMELT_HELLOWORLD_ARGS < /dev/null >>  $meltcheckhelloworld_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckhelloworld_argstemp $meltcheckhelloworld_args
    [ -f "$meltcheckhelloworld_args" ] || meltbuild_error  melt-build-script.tpl:978/815 missing check helloworld args  "$meltcheckhelloworld_args"
   meltbuild_info melt-build-script.tpl:979/816 $meltcheckhelloworld_args  is
   cat $meltcheckhelloworld_args < /dev/null >&2
    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckhelloworld_args \
	|| meltbuild_error melt-build-script.tpl:982/817 running helloworld failed with arguments @$meltcheckhelloworld_args
   meltbuild_info melt-build-script.tpl:983/818 done check helloworld with $meltcheckhelloworld_args
   #@ melt-build-script.tpl:984/819 runtime stamp
    meltcheckruntime_stamptemp=$meltcheckruntime_stamp-tmp$$
    [ -f "$GCCMELT_RUNTIME_CC" ] || meltbuild_error melt-build-script.tpl:986/820 missing MELT runtime C++ file $GCCMELT_RUNTIME_CC
    echo "/// MELT check runtime timestamp file $meltcheckruntime_stamp" > $meltcheckruntime_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltcheckruntime_stamptemp
    $MD5SUM $GCCMELT_RUNTIME_CC < /dev/null >>  $meltcheckruntime_stamptemp
    $MD5SUM meltbuild-hello.melt < /dev/null >>  $meltcheckruntime_stamptemp
    [ -f "$melt_final_translator_stamp" ] || meltbuild_error melt-build-script.tpl:991/821 missing final translator stamp "$melt_final_translator_stamp"
    [ -f "$melt_final_library_stamp" ] || meltbuild_error melt-build-script.tpl:992/822 missing final library stamp "$melt_final_library_stamp"
    grep meltbuild-modules/ "$melt_final_translator_stamp" "$melt_final_library_stamp" < /dev/null >>   $meltcheckruntime_stamptemp
    echo "///end timestamp file $meltcheckruntime_stamp" >>   $meltcheckruntime_stamptemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_stamptemp $meltcheckruntime_stamp
    meltbuild_info melt-build-script.tpl:996/823 done check runtime  $meltcheckruntime_stamp
else
    meltbuild_info melt-build-script.tpl:998/824 keeping runtime checks  $meltcheckruntime_stamp
fi

if [ "$melt_overall_goal" = "checkruntime" ]; then
    meltbuild_info melt-build-script.tpl:1002/825 done checkruntime overall goal with stamp  $meltcheckruntime_stamp
    exit 0
fi

################################################################
#@ melt-build-script.tpl:1007/826
if [ "$melt_overall_goal" = "applications" ]; then
    meltbuild_info melt-build-script.tpl:1009/827 done applications overall goal with stamp  $meltcheckruntime_stamp
    exit 0
fi

################################################################
################################################################
### the generated documentation meltgendoc.texi melt-build-script.tpl:1015/828

if [   ! -f meltgendoc.texi  -o meltbuild-sources/warmelt-first.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-debug.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-macro.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-moremacro.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normal.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normatch.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-genobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-outobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-hooks.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-modes.melt -nt meltgendoc.texi  \
  -o meltbuild-sources/libmelt-ana-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/libmelt-ana-tree.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/libmelt-ana-gimple.melt -nt meltgendoc.texi   ]; then
   meltbuild_info melt-build-script.tpl:1019/829 generating meltgendoc.texi
   meltgen_args=meltbuild-gendoc.args-tmp$$
   echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:1021/830"' > $meltgen_args
   meltbuild_arg mode=makedoc >> $meltgen_args
   meltbuild_arg output=meltgendoc.texi >> $meltgen_args
   meltbuild_arg init=@$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt >> $meltgen_args
   meltbuild_arg workdir=meltbuild-workdir >>  $meltgen_args
   meltbuild_arg tempdir=meltbuild-tempdir >> $meltgen_args
   meltbuild_arg source-path=meltbuild-sources >> $meltgen_args
   meltbuild_arg module-path=meltbuild-modules >> $meltgen_args
meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltgen_args
meltbuild_arg "module-makefile=\"$GCCMELT_MODULE_MK\""  >>  $meltgen_args
   meltbuild_arg bootstrapping  >> $meltgen_args 
   meltbuild_arg arglist=warmelt-first.melt,warmelt-base.melt,warmelt-debug.melt,warmelt-macro.melt,warmelt-moremacro.melt,warmelt-normal.melt,warmelt-normatch.melt,warmelt-genobj.melt,warmelt-outobj.melt,warmelt-hooks.melt,warmelt-modes.melt,libmelt-ana-base.melt,libmelt-ana-tree.melt,libmelt-ana-gimple.melt  >> $meltgen_args 
   echo meltbuild-empty-file.c >> $meltgen_args
   $GCCMELT_MOVE_IF_CHANGE  $meltgen_args meltbuild-gendoc.args
   meltbuild_info melt-build-script.tpl:1035/831  meltbuild-gendoc.args is
   cat meltbuild-gendoc.args < /dev/null >&2
   $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @meltbuild-gendoc.args \
     || meltbuild_error melt-build-script.tpl:1038/832  "$GCCMELT_CC1PLUS" failed with arguments @meltbuild-gendoc.args
else
   meltbuild_info melt-build-script.tpl:1040/833 keeping meltgendoc.texi
fi

################
meltbuild_info melt-build-script.tpl:1044/834 successfully done with times at `date '+%x %H:%M:%S'`: ; times >&2

################################################################
#@ melt-build-script.tpl:1047/835
if [ "$melt_overall_goal" = "gendoc" ]; then
    meltbuild_info melt-build-script.tpl:1049/836 done gendoc overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

## #@ melt-build-script.tpl:1053/837 if we get here something is wrong in this script
meltbuild_error  melt-build-script.tpl:1054/838 unexpected MELT overall goal "$melt_overall_goal" buggy melt-build-script.tpl
#@ eof melt-build-script.tpl:1055/839 end of generated melt-build-script.sh
