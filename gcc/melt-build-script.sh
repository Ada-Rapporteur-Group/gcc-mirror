#!/bin/bash
#@!  -*- buffer-read-only: t -*- vi: set ro:
#@#@#
#@#@# DO NOT EDIT THIS FILE   (melt-build-script.sh)
#@#@#
#@#@# It has been AutoGen-ed  October 17, 2013 at 04:11:25 PM by AutoGen 5.18
#@#@# From the definitions    melt-build-script.def
#@#@# and the template file   melt-build-script.tpl
# Generated shell script for MELT modules and MELT translator bootstrap
#   Copyright (C) 2012 - 2013  Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#@ from melt-build-script.tpl line 20 generated by Autogen 5.18 using melt-build-script.def

## melt-build-script.tpl generates melt-build-script.sh which may
## create meltbuild-* files and directories.  The invoking makefile
## may clean these meltbuild-* things.

## Ypu may want to set the GCCMELT_BUILD_NOTIFICATION environment variable
## to a shell script called with two arguments (a title, and a message)
## e.g. using notify-send or logger in such a script.
shopt -s nullglob




## set the overallgoal  melt-build-script.tpl:36/1 
melt_overall_goal=$1
if [ -z "$melt_overall_goal" ]; then
  melt_overall_goal=gendoc
fi

## source the builtin settings  melt-build-script.tpl:42/2 generated from the MELT runtime
. ./melt-build-settings.sh

## source the parameters  melt-build-script.tpl:45/3
. ./melt-build-param.sh

export GAWK=${GAWK:=gawk}
export MD5SUM=${MD5SUM:=md5sum}

## internal variables for this script  melt-build-script.tpl:51/4
## GCCMELT_STAGE is an internal variable; it keeps the current MELT stage
export GCCMELT_STAGE=""
## GCCMELT_BASE is an internal variable; it keeps the current MELT base
export GCCMELT_BASE=""
## GCCMELT_SKIPEMITC is an internal variable; it skips the emission of C code when non-empty
export GCCMELT_SKIPEMITC=""



date +"/*empty file for MELT build %c*/" > meltbuild-empty-file.c

[ -d meltbuild-workdir ] || mkdir  meltbuild-workdir
[ -d meltbuild-tempdir ] || mkdir  meltbuild-tempdir

## our error function  melt-build-script.tpl:66/5
function meltbuild_error () {
    echo MELT BUILD SCRIPT FAILURE: $@ >&2
    exit 1
}

## symbolic linking
function meltbuild_symlink () {
    ln -svf `realpath $1` $2
}

## our info function
function meltbuild_info () {
    echo MELT BUILD SCRIPT INFO: $@ >&2
}

## our notice function - for more important things than info
function meltbuild_notice () {
    meltnotititle=$1
    shift
    (echo; echo; echo MELT BUILD SCRIPT NOTICE "$meltnotititle:" $@ ; echo ) >&2
    if [ -n "$GCCMELT_BUILD_NOTIFICATION" ]; then
	$GCCMELT_BUILD_NOTIFICATION "$meltnotititle:" "$*"
    fi
}

## utility to build MELT specific arguments in meltbuild_emit
function meltbuild_arg () {
    local meltarg=$1
    if [ -z "$GCCMELT_IS_PLUGIN" ]; then
	echo " -fmelt-$meltarg"
    else
	echo " -fplugin-arg-melt-$meltarg"
    fi
}


if [ ! -f "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
    meltbuild_error  melt-build-script.tpl:104/6 missing MELT runtime dependency "$GCCMELT_RUNTIME_DEPENDENCY" 
fi

if [ -z "$GCCMELT_CC1PLUS" ]; then
   meltbuild_error  melt-build-script.tpl:108/7 missing GCCMELT_CC1PLUS
fi

if [ ! -f meltrunsup.h ]; then 
    meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/meltrunsup.h meltrunsup.h 
    meltbuild_info  melt-build-script.tpl:113/8 symlinking meltrunsup.h header
fi

GCCMELT_RUNTIME_DEPENDENCY_MD5SUM=$($MD5SUM "$GCCMELT_RUNTIME_DEPENDENCY"  | cut -b 1-32)

case $melt_overall_goal in
    translator) ;;
    applications) ;;
    modlists) ;;
    checkruntime) ;;
    gendoc) ;;
    regenerate) ;;
    *) meltbuild_error  melt-build-script.tpl:125/9 bad MELT overall goal "$melt_overall_goal:" \
        expecting translator, applications, modlists, checkruntime or gendoc or regenerate
esac

################################################################
################ stage zero

GCCMELT_ZERO_FLAVOR=${GCCMELT_STAGE_ZERO#meltbuild-stage0-}

## The base name of the MELT translator files melt-build-script.tpl:134/10
GCCMELT_TRANSLATOR_BASE=(  warmelt-first \
  warmelt-base \
  warmelt-debug \
  warmelt-macro \
  warmelt-normal \
  warmelt-normatch \
  warmelt-genobj \
  warmelt-outobj \
  warmelt-hooks \
  warmelt-modes )

case $GCCMELT_ZERO_FLAVOR in
    optimized) ;;
    dynamic) ;;
    debugnoline) ;;
    quicklybuilt) ;;
    *) meltbuild_error  melt-build-script.tpl:142/11 bad zero flavor $GCCMELT_ZERO_FLAVOR ;;
esac


## our stage0 melt-build-script.tpl:146/12

[ -d $GCCMELT_STAGE_ZERO ] || mkdir  $GCCMELT_STAGE_ZERO


function meltbuild_do_stage_zero () {
meltbuild_notice STAGE0+  melt-build-script.tpl:152/13 starting stage zero


  meltbuild_info making stage0 warmelt-first  melt-build-script.tpl:155/14

##  stage0 melt-build-script.tpl:157/15 symlink descriptor file warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/16 symlink melt/generated source code warmelt-first
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first.cc" ]; then
      meltbuild_info making stage0 warmelt-first symlinking sources melt-build-script.tpl:164/17
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/18 symlink stamp warmelt-first
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-first+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-first symlinking timestamp melt-build-script.tpl:173/19
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+melttime.h $GCCMELT_STAGE_ZERO/warmelt-first+melttime.h 
  fi

  MELT_ZERO_GENERATED_FIRST_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-first+meltdesc.c)


## manually generate the stage0 warmelt-first+meltbuild.mk file  melt-build-script.tpl:180/20
  MELT_ZERO_GENERATED_FIRST_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-first+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_FIRST_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/21 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-first"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_FIRST"  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-first melt-build-script.tpl:188/22' >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-first+meltdesc.c  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first.cc $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-first melt-build-script.tpl:196/23'  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first.$MELT_ZERO_GENERATED_FIRST_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-first._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_FIRST=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_FIRST=warmelt-first  >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_FIRST_BUILDMK >> $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_FIRST_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_FIRST_BUILDMK
  meltbuild_info melt-build-script.tpl:209/24 generated stagezero makedep $MELT_ZERO_GENERATED_FIRST_BUILDMK
  ls -l $MELT_ZERO_GENERATED_FIRST_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/25 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_FIRST_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-first \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/26 stage0 warmelt-first did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/27 stage0 warmelt-first module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/28 stage0 warmelt-first fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/29 successfully build stage0 warmelt-first
# end stage0  melt-build-script.tpl:231/30 base  warmelt-first

  meltbuild_info making stage0 warmelt-base  melt-build-script.tpl:155/31

##  stage0 melt-build-script.tpl:157/32 symlink descriptor file warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/33 symlink melt/generated source code warmelt-base
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base.cc" ]; then
      meltbuild_info making stage0 warmelt-base symlinking sources melt-build-script.tpl:164/34
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/35 symlink stamp warmelt-base
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-base+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-base symlinking timestamp melt-build-script.tpl:173/36
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+melttime.h $GCCMELT_STAGE_ZERO/warmelt-base+melttime.h 
  fi

  MELT_ZERO_GENERATED_BASE_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-base+meltdesc.c)


## manually generate the stage0 warmelt-base+meltbuild.mk file  melt-build-script.tpl:180/37
  MELT_ZERO_GENERATED_BASE_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-base+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_BASE_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/38 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-base"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_BASE"  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-base melt-build-script.tpl:188/39' >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-base+meltdesc.c  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base.cc $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-base melt-build-script.tpl:196/40'  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base.$MELT_ZERO_GENERATED_BASE_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-base._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_BASE=$MELT_ZERO_GENERATED_BASE_CUMULMD5 >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_BASE=warmelt-base  >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_BASE_BUILDMK >> $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_BASE_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_BASE_BUILDMK
  meltbuild_info melt-build-script.tpl:209/41 generated stagezero makedep $MELT_ZERO_GENERATED_BASE_BUILDMK
  ls -l $MELT_ZERO_GENERATED_BASE_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/42 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_BASE_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-base \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/43 stage0 warmelt-base did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/44 stage0 warmelt-base module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/45 stage0 warmelt-base fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/46 successfully build stage0 warmelt-base
# end stage0  melt-build-script.tpl:231/47 base  warmelt-base

  meltbuild_info making stage0 warmelt-debug  melt-build-script.tpl:155/48

##  stage0 melt-build-script.tpl:157/49 symlink descriptor file warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/50 symlink melt/generated source code warmelt-debug
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug.cc" ]; then
      meltbuild_info making stage0 warmelt-debug symlinking sources melt-build-script.tpl:164/51
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/52 symlink stamp warmelt-debug
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-debug symlinking timestamp melt-build-script.tpl:173/53
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+melttime.h $GCCMELT_STAGE_ZERO/warmelt-debug+melttime.h 
  fi

  MELT_ZERO_GENERATED_DEBUG_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-debug+meltdesc.c)


## manually generate the stage0 warmelt-debug+meltbuild.mk file  melt-build-script.tpl:180/54
  MELT_ZERO_GENERATED_DEBUG_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-debug+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_DEBUG_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/55 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-debug"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_DEBUG"  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-debug melt-build-script.tpl:188/56' >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-debug+meltdesc.c  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug.cc $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-debug melt-build-script.tpl:196/57'  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug.$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-debug._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_DEBUG=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_DEBUG=warmelt-debug  >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_DEBUG_BUILDMK >> $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_DEBUG_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  meltbuild_info melt-build-script.tpl:209/58 generated stagezero makedep $MELT_ZERO_GENERATED_DEBUG_BUILDMK
  ls -l $MELT_ZERO_GENERATED_DEBUG_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/59 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_DEBUG_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-debug \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/60 stage0 warmelt-debug did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/61 stage0 warmelt-debug module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/62 stage0 warmelt-debug fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/63 successfully build stage0 warmelt-debug
# end stage0  melt-build-script.tpl:231/64 base  warmelt-debug

  meltbuild_info making stage0 warmelt-macro  melt-build-script.tpl:155/65

##  stage0 melt-build-script.tpl:157/66 symlink descriptor file warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/67 symlink melt/generated source code warmelt-macro
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro.cc" ]; then
      meltbuild_info making stage0 warmelt-macro symlinking sources melt-build-script.tpl:164/68
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/69 symlink stamp warmelt-macro
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-macro symlinking timestamp melt-build-script.tpl:173/70
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+melttime.h $GCCMELT_STAGE_ZERO/warmelt-macro+melttime.h 
  fi

  MELT_ZERO_GENERATED_MACRO_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-macro+meltdesc.c)


## manually generate the stage0 warmelt-macro+meltbuild.mk file  melt-build-script.tpl:180/71
  MELT_ZERO_GENERATED_MACRO_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-macro+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MACRO_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/72 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-macro"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MACRO"  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-macro melt-build-script.tpl:188/73' >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-macro+meltdesc.c  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro.cc $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-macro melt-build-script.tpl:196/74'  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro.$MELT_ZERO_GENERATED_MACRO_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-macro._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MACRO=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MACRO=warmelt-macro  >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MACRO_BUILDMK >> $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MACRO_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MACRO_BUILDMK
  meltbuild_info melt-build-script.tpl:209/75 generated stagezero makedep $MELT_ZERO_GENERATED_MACRO_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MACRO_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/76 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MACRO_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-macro \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/77 stage0 warmelt-macro did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/78 stage0 warmelt-macro module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/79 stage0 warmelt-macro fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/80 successfully build stage0 warmelt-macro
# end stage0  melt-build-script.tpl:231/81 base  warmelt-macro

  meltbuild_info making stage0 warmelt-normal  melt-build-script.tpl:155/82

##  stage0 melt-build-script.tpl:157/83 symlink descriptor file warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/84 symlink melt/generated source code warmelt-normal
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal.cc" ]; then
      meltbuild_info making stage0 warmelt-normal symlinking sources melt-build-script.tpl:164/85
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/86 symlink stamp warmelt-normal
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-normal symlinking timestamp melt-build-script.tpl:173/87
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normal+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMAL_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normal+meltdesc.c)


## manually generate the stage0 warmelt-normal+meltbuild.mk file  melt-build-script.tpl:180/88
  MELT_ZERO_GENERATED_NORMAL_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normal+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMAL_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/89 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normal"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMAL"  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normal melt-build-script.tpl:188/90' >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normal+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal.cc $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normal melt-build-script.tpl:196/91'  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal.$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normal._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMAL=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMAL=warmelt-normal  >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMAL_BUILDMK >> $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMAL_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  meltbuild_info melt-build-script.tpl:209/92 generated stagezero makedep $MELT_ZERO_GENERATED_NORMAL_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMAL_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/93 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMAL_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normal \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/94 stage0 warmelt-normal did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/95 stage0 warmelt-normal module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/96 stage0 warmelt-normal fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/97 successfully build stage0 warmelt-normal
# end stage0  melt-build-script.tpl:231/98 base  warmelt-normal

  meltbuild_info making stage0 warmelt-normatch  melt-build-script.tpl:155/99

##  stage0 melt-build-script.tpl:157/100 symlink descriptor file warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/101 symlink melt/generated source code warmelt-normatch
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch.cc" ]; then
      meltbuild_info making stage0 warmelt-normatch symlinking sources melt-build-script.tpl:164/102
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/103 symlink stamp warmelt-normatch
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-normatch symlinking timestamp melt-build-script.tpl:173/104
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+melttime.h $GCCMELT_STAGE_ZERO/warmelt-normatch+melttime.h 
  fi

  MELT_ZERO_GENERATED_NORMATCH_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-normatch+meltdesc.c)


## manually generate the stage0 warmelt-normatch+meltbuild.mk file  melt-build-script.tpl:180/105
  MELT_ZERO_GENERATED_NORMATCH_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-normatch+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_NORMATCH_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/106 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-normatch"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_NORMATCH"  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-normatch melt-build-script.tpl:188/107' >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-normatch+meltdesc.c  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-normatch melt-build-script.tpl:196/108'  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch.$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-normatch._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_NORMATCH=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_NORMATCH=warmelt-normatch  >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_NORMATCH_BUILDMK >> $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_NORMATCH_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  meltbuild_info melt-build-script.tpl:209/109 generated stagezero makedep $MELT_ZERO_GENERATED_NORMATCH_BUILDMK
  ls -l $MELT_ZERO_GENERATED_NORMATCH_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/110 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-normatch \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/111 stage0 warmelt-normatch did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/112 stage0 warmelt-normatch module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/113 stage0 warmelt-normatch fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/114 successfully build stage0 warmelt-normatch
# end stage0  melt-build-script.tpl:231/115 base  warmelt-normatch

  meltbuild_info making stage0 warmelt-genobj  melt-build-script.tpl:155/116

##  stage0 melt-build-script.tpl:157/117 symlink descriptor file warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/118 symlink melt/generated source code warmelt-genobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj.cc" ]; then
      meltbuild_info making stage0 warmelt-genobj symlinking sources melt-build-script.tpl:164/119
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/120 symlink stamp warmelt-genobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-genobj symlinking timestamp melt-build-script.tpl:173/121
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-genobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_GENOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-genobj+meltdesc.c)


## manually generate the stage0 warmelt-genobj+meltbuild.mk file  melt-build-script.tpl:180/122
  MELT_ZERO_GENERATED_GENOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-genobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_GENOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/123 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-genobj"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_GENOBJ"  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-genobj melt-build-script.tpl:188/124' >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-genobj+meltdesc.c  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-genobj melt-build-script.tpl:196/125'  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj.$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-genobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_GENOBJ=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_GENOBJ=warmelt-genobj  >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_GENOBJ_BUILDMK >> $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_GENOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:209/126 generated stagezero makedep $MELT_ZERO_GENERATED_GENOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_GENOBJ_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/127 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-genobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/128 stage0 warmelt-genobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/129 stage0 warmelt-genobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/130 stage0 warmelt-genobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/131 successfully build stage0 warmelt-genobj
# end stage0  melt-build-script.tpl:231/132 base  warmelt-genobj

  meltbuild_info making stage0 warmelt-outobj  melt-build-script.tpl:155/133

##  stage0 melt-build-script.tpl:157/134 symlink descriptor file warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/135 symlink melt/generated source code warmelt-outobj
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj.cc" ]; then
      meltbuild_info making stage0 warmelt-outobj symlinking sources melt-build-script.tpl:164/136
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/137 symlink stamp warmelt-outobj
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-outobj symlinking timestamp melt-build-script.tpl:173/138
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+melttime.h $GCCMELT_STAGE_ZERO/warmelt-outobj+melttime.h 
  fi

  MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-outobj+meltdesc.c)


## manually generate the stage0 warmelt-outobj+meltbuild.mk file  melt-build-script.tpl:180/139
  MELT_ZERO_GENERATED_OUTOBJ_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-outobj+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/140 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-outobj"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_OUTOBJ"  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-outobj melt-build-script.tpl:188/141' >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-outobj+meltdesc.c  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-outobj melt-build-script.tpl:196/142'  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj.$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-outobj._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_OUTOBJ=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_OUTOBJ=warmelt-outobj  >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK >> $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  meltbuild_info melt-build-script.tpl:209/143 generated stagezero makedep $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK
  ls -l $MELT_ZERO_GENERATED_OUTOBJ_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/144 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-outobj \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/145 stage0 warmelt-outobj did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/146 stage0 warmelt-outobj module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/147 stage0 warmelt-outobj fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/148 successfully build stage0 warmelt-outobj
# end stage0  melt-build-script.tpl:231/149 base  warmelt-outobj

  meltbuild_info making stage0 warmelt-hooks  melt-build-script.tpl:155/150

##  stage0 melt-build-script.tpl:157/151 symlink descriptor file warmelt-hooks
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/152 symlink melt/generated source code warmelt-hooks
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks.cc" ]; then
      meltbuild_info making stage0 warmelt-hooks symlinking sources melt-build-script.tpl:164/153
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/154 symlink stamp warmelt-hooks
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-hooks+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-hooks symlinking timestamp melt-build-script.tpl:173/155
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+melttime.h $GCCMELT_STAGE_ZERO/warmelt-hooks+melttime.h 
  fi

  MELT_ZERO_GENERATED_HOOKS_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-hooks+meltdesc.c)


## manually generate the stage0 warmelt-hooks+meltbuild.mk file  melt-build-script.tpl:180/156
  MELT_ZERO_GENERATED_HOOKS_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-hooks+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_HOOKS_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/157 >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-hooks"  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_HOOKS"  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-hooks melt-build-script.tpl:188/158' >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-hooks.$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-hooks+meltdesc.c  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-hooks melt-build-script.tpl:196/159'  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-hooks.$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-hooks._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_HOOKS=$MELT_ZERO_GENERATED_HOOKS_CUMULMD5 >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_HOOKS=warmelt-hooks  >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_HOOKS_BUILDMK >> $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_HOOKS_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_HOOKS_BUILDMK
  meltbuild_info melt-build-script.tpl:209/160 generated stagezero makedep $MELT_ZERO_GENERATED_HOOKS_BUILDMK
  ls -l $MELT_ZERO_GENERATED_HOOKS_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/161 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-hooks \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_HOOKS_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-hooks \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/162 stage0 warmelt-hooks did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/163 stage0 warmelt-hooks module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/164 stage0 warmelt-hooks fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/165 successfully build stage0 warmelt-hooks
# end stage0  melt-build-script.tpl:231/166 base  warmelt-hooks

  meltbuild_info making stage0 warmelt-modes  melt-build-script.tpl:155/167

##  stage0 melt-build-script.tpl:157/168 symlink descriptor file warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c" ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c $GCCMELT_STAGE_ZERO/ 
  fi

##  stage0 melt-build-script.tpl:162/169 symlink melt/generated source code warmelt-modes
  if [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes.cc" ]; then
      meltbuild_info making stage0 warmelt-modes symlinking sources melt-build-script.tpl:164/170
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes.cc $GCCMELT_STAGE_ZERO/ 
      for f in $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+[0-9][0-9].cc ; do
	  meltbuild_symlink $f $GCCMELT_STAGE_ZERO/`basename $f`
      done
  fi

##  stage0 melt-build-script.tpl:171/171 symlink stamp warmelt-modes
  if  [ ! -f "$GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h" ]; then
      meltbuild_info making stage0 warmelt-modes symlinking timestamp melt-build-script.tpl:173/172
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+melttime.h $GCCMELT_STAGE_ZERO/warmelt-modes+melttime.h 
  fi

  MELT_ZERO_GENERATED_MODES_CUMULMD5=$($GAWK -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $2}' $GCCMELT_MELTSOURCEDIR/generated/warmelt-modes+meltdesc.c)


## manually generate the stage0 warmelt-modes+meltbuild.mk file  melt-build-script.tpl:180/173
  MELT_ZERO_GENERATED_MODES_BUILDMK=$GCCMELT_STAGE_ZERO/warmelt-modes+meltbuild.mk

  date +"# file $MELT_ZERO_GENERATED_MODES_BUILDMK script-generated %c" > $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "# generated " melt-build-script.tpl:184/174 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULENAME=$GCCMELT_STAGE_ZERO/warmelt-modes"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo "MELTGEN_MODULEIDENT=melt_stage_zero_MODES"  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$

  echo '# zerostage objects of warmelt-modes melt-build-script.tpl:188/175' >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o: $GCCMELT_STAGE_ZERO/warmelt-modes+meltdesc.c  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes.cc $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc; do
      echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
      echo $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o: $f >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done

  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '# zerostage module of warmelt-modes melt-build-script.tpl:196/176'  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so: \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes.$MELT_ZERO_GENERATED_MODES_CUMULMD5.descriptor.meltpic.o \\  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  for f in $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc; do
      echo " " $GCCMELT_STAGE_ZERO/`basename $f .cc`._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o \\ >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  done
  echo " " $GCCMELT_STAGE_ZERO/warmelt-modes._NOMDFIVESUM_.$GCCMELT_ZERO_FLAVOR.meltpic.o >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_CUMULATED_MD5SUM_melt_stage_zero_MODES=$MELT_ZERO_GENERATED_MODES_CUMULMD5 >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo MELTGENMOD_NAKED_NAME_melt_stage_zero_MODES=warmelt-modes  >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
  echo '#end of generated file ' $MELT_ZERO_GENERATED_MODES_BUILDMK >> $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$
##
  mv $MELT_ZERO_GENERATED_MODES_BUILDMK-tmp$$ $MELT_ZERO_GENERATED_MODES_BUILDMK
  meltbuild_info melt-build-script.tpl:209/177 generated stagezero makedep $MELT_ZERO_GENERATED_MODES_BUILDMK
  ls -l $MELT_ZERO_GENERATED_MODES_BUILDMK >&2

  $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
      GCCMELT_FROM=stagezero-melt-build-script.tpl:213/178 \
      GCCMELT_COMPILER="$GCCMELT_COMPILER" \
      GCCMELTGEN_BUILD=$GCCMELT_STAGE_ZERO/ \
      GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
      GCCMELT_MODULE_FLAVOR=$GCCMELT_ZERO_FLAVOR \
      GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
      GCCMELT_MODULE_SOURCEBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_CUMULATED_MD5=$MELT_ZERO_GENERATED_MODES_CUMULMD5 \
      GCCMELT_MODULE_BINARYBASE=$GCCMELT_STAGE_ZERO/warmelt-modes \
      GCCMELT_MODULE_DEPENDENCIES="$GCCMELT_CC1PLUS_DEPENDENCIES" \
      || meltbuild_error  melt-build-script.tpl:223/179 stage0 warmelt-modes did not build "(with $GCCMELT_MAKE  -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER cflags $GCCMELT_COMPILER_FLAGS

  meltbuild_info melt-build-script.tpl:225/180 stage0 warmelt-modes module 
  ls -l "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so" >&2 \
      || meltbuild_error  melt-build-script.tpl:227/181 stage0 warmelt-modes fail to build \
      "$GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so"

  meltbuild_info melt-build-script.tpl:230/182 successfully build stage0 warmelt-modes
# end stage0  melt-build-script.tpl:231/183 base  warmelt-modes

} ################ end of function meltbuild_do_stage_zero melt-build-script.tpl:233/184
################################################################

## stage0 stamp file melt-build-script.tpl:236/185
melt_stagezero_stamp=$GCCMELT_STAGE_ZERO/$GCCMELT_STAGE_ZERO.stamp

## test if stage0 should be skipped then do it  melt-build-script.tpl:239/186
if [ ! -f "$melt_stagezero_stamp" -o "$melt_stagezero_stamp" -ot "$GCCMELT_RUNTIME_DEPENDENCY" ]; then
   meltbuild_do_stage_zero
    melt_stagezero_stamptemp=$melt_stagezero_stamp-tmp$$
    echo MELT stagezero stampfile $GCCMELT_STAGE_ZERO.stamp for MELT $MELTGCCBUILTIN_VERSION_STRING from melt-build-script.tpl:243/187 >  $melt_stagezero_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/188 base  warmelt-first
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.cc $GCCMELT_STAGE_ZERO/warmelt-first+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-first.meltmod-$MELT_ZERO_GENERATED_FIRST_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/189 base  warmelt-base
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.cc $GCCMELT_STAGE_ZERO/warmelt-base+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-base.meltmod-$MELT_ZERO_GENERATED_BASE_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/190 base  warmelt-debug
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.cc $GCCMELT_STAGE_ZERO/warmelt-debug+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-debug.meltmod-$MELT_ZERO_GENERATED_DEBUG_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/191 base  warmelt-macro
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.cc $GCCMELT_STAGE_ZERO/warmelt-macro+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-macro.meltmod-$MELT_ZERO_GENERATED_MACRO_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/192 base  warmelt-normal
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.cc $GCCMELT_STAGE_ZERO/warmelt-normal+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normal.meltmod-$MELT_ZERO_GENERATED_NORMAL_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/193 base  warmelt-normatch
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.cc $GCCMELT_STAGE_ZERO/warmelt-normatch+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-normatch.meltmod-$MELT_ZERO_GENERATED_NORMATCH_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/194 base  warmelt-genobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.cc $GCCMELT_STAGE_ZERO/warmelt-genobj+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-genobj.meltmod-$MELT_ZERO_GENERATED_GENOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/195 base  warmelt-outobj
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.cc $GCCMELT_STAGE_ZERO/warmelt-outobj+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-outobj.meltmod-$MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/196 base  warmelt-hooks
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-hooks.cc $GCCMELT_STAGE_ZERO/warmelt-hooks+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-hooks.meltmod-$MELT_ZERO_GENERATED_HOOKS_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

#  stagezero stamp melt-build-script.tpl:246/197 base  warmelt-modes
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.cc $GCCMELT_STAGE_ZERO/warmelt-modes+[0-9][0-9].cc >> $melt_stagezero_stamptemp
    $MD5SUM $GCCMELT_STAGE_ZERO/warmelt-modes.meltmod-$MELT_ZERO_GENERATED_MODES_CUMULMD5.$GCCMELT_ZERO_FLAVOR.so  >> $melt_stagezero_stamptemp

    $GCCMELT_MOVE_IF_CHANGE $melt_stagezero_stamptemp $melt_stagezero_stamp
else
   meltbuild_info melt-build-script.tpl:252/198 skipped stage0 because of stamp file $melt_stagezero_stamp
fi

meltbuild_info melt-build-script.tpl:255/199 times after stagezero at `date '+%x %H:%M:%S'`: ;  times >&2


################################################################
## function to run MELT to emit C code  melt-build-script.tpl:259/200
function meltbuild_emit () {
    local meltfrom=$1
    local meltmode=$2
    local meltbase=$3
    local meltstage=$4
    local meltprevstage=$5
    local meltinit=$6
    local meltinclude=$7
    local meltbuildoption=$8
    local meltargs=$meltstage/$meltbase.args
    local meltsrc=$(realpath $GCCMELT_MELTSOURCEDIR/$meltbase.melt)
    meltbuild_info meltfrom=$meltfrom meltmode=$meltmode meltbase=$meltbase meltstage=$meltstage meltprevstage=$meltprevstage meltinit=$meltinit meltinclude=$meltinclude meltsrc=$meltsrc
    local meltsum
    local meltprevf
    if [ -z "$meltmode" ]; then
	meltbuild_error $meltfrom no MELT mode at stage $meltstage
    fi
    if [ ! -f "$meltsrc" ]; then
	meltbuild_error $meltfrom no MELT file $meltsrc at stage $meltstage base $meltbase
    fi
    if [ -z "$meltinit" ]; then
	meltbuild_error $meltfrom no MELT init  at stage $meltstage base $meltbase
    fi
    meltsum=$($MD5SUM $meltsrc | $GAWK '{print $1}')
    meltbuild_info $meltfrom emit C code for $meltbase of $meltstage
    echo -Wno-shadow -frandom-seed=$meltsum > $meltargs-$$-tmp
    ## various arguments
    echo " -DGCCMELT_FROM_ARG=\"$meltfrom\"" >>  $meltargs-$$-tmp
    meltbuild_arg mode=$meltmode >> $meltargs-$$-tmp
    meltbuild_arg arg=$meltsrc >>  $meltargs-$$-tmp
    meltbuild_arg output=$meltstage/$meltbase  >>  $meltargs-$$-tmp
    meltbuild_arg "module-make-command='$GCCMELT_MAKE'" >> $meltargs-$$-tmp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >> $meltargs-$$-tmp
    meltbuild_arg "module-cflags='$GCCMELT_INCLUDES -I. -I$meltstage -I$meltprevstage $GCCMELT_COMPILER_FLAGS'" >>  $meltargs-$$-tmp
    meltbuild_arg init=$meltinit >> $meltargs-$$-tmp
    meltbuild_arg workdir=meltbuild-workdir >> $meltargs-$$-tmp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltargs-$$-tmp
    meltbuild_arg source-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg module-path=$meltstage:$meltprevstage:. >> $meltargs-$$-tmp
    meltbuild_arg bootstrapping  >> $meltargs-$$-tmp
    meltbuild_arg generate-work-link  >> $meltargs-$$-tmp
    meltbuild_arg generated-c-file-list=$meltstage/$meltbase.cfilist  >> $meltargs-$$-tmp
    if [ -n "$meltbuildoption" ]; then
	echo "$meltbuildoption" >> $meltargs-$$-tmp
    fi
    ## final empty file
    echo meltbuild-empty-file.c >>  $meltargs-$$-tmp
    mv $meltargs-$$-tmp $meltargs
    meltbuild_info $meltfrom argument file $meltargs is
    cat  $meltargs < /dev/null >&2
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	$GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltargs || meltbuild_error $meltfrom failed with arguments @$meltargs
        ## remove obsolete secondary C files left previously in $meltstage 
	for meltcsecfil in $meltstage/$meltbase+[0-9][0-9].cc ; do
	    if grep -q `basename $meltcsecfil` "$meltstage/$meltbase.cfilist" ; then
		: # at  melt-build-script.tpl:315/201
	    else
		meltbuild_info $meltfrom removing obsolete $meltcsecfil
		rm -f "$meltcsecfil"
	    fi
	done
    else
	meltbuild_info $meltfrom skips emission of C code with  @$meltargs stage $meltstage prevstage $meltprevstage skipreason $GCCMELT_SKIPEMITC  melt-build-script.tpl:322/202 
	ls -l $meltprevstage/$meltbase*
	meltbuild_info $meltfrom symlinking previous stage $meltprevstage  melt-build-script.tpl:324/203 
	for meltprevf in $meltprevstage/$meltbase.cc  $meltprevstage/$meltbase+[0-9][0-9].cc  $meltprevstage/$meltbase+meltdesc.c  $meltprevstage/$meltbase+melttime.h   $meltprevstage/$meltbase+meltbuild.mk ; do
	    meltbuild_symlink $meltprevf $meltstage/`basename $meltprevf`
	done
	meltbuild_info $meltfrom symlinked previous stage $meltprevstage/$meltbase melt-build-script.tpl:328/204 
    fi
    GCCMELT_STAGE=$meltstage
    GCCMELT_BASE=$meltbase
} ################################ end function meltbuild_emit

################################################################
################################################################
#################@ before our stages melt-build-script.tpl:336/205 
### Our stages  
### are incrementally built, with the former modules of
### the current stage and the later modules of the previous stages
### used to emit the source of the current module in the current stage.
### This is a kind of "diagonalization".


################################################################
#### function to do a stage melt-build-script.tpl:345/206
function meltbuild_do_stage () {
    local meltfrom=$1
    local meltcurstagedir=$2
    local meltcurflavor=$3
    local meltprevstagedir=$4
    local meltprevflavor=$5
    local meltbuildoption=$6

    local meltchecksum_FIRST

    local meltchecksum_BASE

    local meltchecksum_DEBUG

    local meltchecksum_MACRO

    local meltchecksum_NORMAL

    local meltchecksum_NORMATCH

    local meltchecksum_GENOBJ

    local meltchecksum_OUTOBJ

    local meltchecksum_HOOKS

    local meltchecksum_MODES

    local meltstamp
    local meltstamptmp
####in meltbuild_do_stage melt-build-script.tpl:358/207
    meltbuild_notice "$meltcurstagedir+" starting  stage $meltcurstagedir flavor $meltcurflavor from $meltfrom
####in meltbuild_do_stage melt-build-script.tpl:360/208
    meltbuild_info $meltfrom starting stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor
    [ -d $meltcurstagedir ] || mkdir $meltcurstagedir
    if [ ! -d "$meltprevstagedir" -o ! -f "$meltprevstagedir/$meltprevstagedir.stamp" ]; then
	meltbuild_error $meltfrom previous stage "$meltprevstagedir/" without stamp file $meltprevstagedir/$meltprevstagedir.stamp
    fi



    #in meltbuild_do_stage melt-build-script.tpl:370/209 base warmelt-first
    meltbuild_info melt-build-script.tpl:371/210 from $meltfrom generating C code of warmelt-first in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/211 emit C code for warmelt-first
    meltbuild_emit melt-build-script.tpl:374/212-$meltfrom \
	translateinit \
	warmelt-first \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltprevstagedir/warmelt-first.$meltprevflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/213 checksum C code for warmelt-first
    meltchecksum_cumul_FIRST=$(cat "$meltcurstagedir"/warmelt-first.cc "$meltcurstagedir"/warmelt-first+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/214 perhaps compiling C code for warmelt-first
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/215-$meltfrom compiling module warmelt-first in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/216-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-first" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-first" \
	|| ( meltbuild_info melt-build-script.tpl:401/217-$meltfrom recompiling bad module warmelt-first in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/218-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-first" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-first" ; \
	    meltbuild_error  melt-build-script.tpl:410/219-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-first compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/220-$meltfrom NOT compiling module warmelt-first "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-first \
	    checksum $meltchecksum_cumul_FIRST skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/221 done base warmelt-first


    #in meltbuild_do_stage melt-build-script.tpl:370/222 base warmelt-base
    meltbuild_info melt-build-script.tpl:371/223 from $meltfrom generating C code of warmelt-base in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/224 emit C code for warmelt-base
    meltbuild_emit melt-build-script.tpl:374/225-$meltfrom \
	translatefile \
	warmelt-base \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltprevstagedir/warmelt-base.$meltprevflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/226 checksum C code for warmelt-base
    meltchecksum_cumul_BASE=$(cat "$meltcurstagedir"/warmelt-base.cc "$meltcurstagedir"/warmelt-base+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/227 perhaps compiling C code for warmelt-base
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/228-$meltfrom compiling module warmelt-base in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/229-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-base" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-base" \
	|| ( meltbuild_info melt-build-script.tpl:401/230-$meltfrom recompiling bad module warmelt-base in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/231-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-base" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-base" ; \
	    meltbuild_error  melt-build-script.tpl:410/232-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-base compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/233-$meltfrom NOT compiling module warmelt-base "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-base \
	    checksum $meltchecksum_cumul_BASE skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/234 done base warmelt-base


    #in meltbuild_do_stage melt-build-script.tpl:370/235 base warmelt-debug
    meltbuild_info melt-build-script.tpl:371/236 from $meltfrom generating C code of warmelt-debug in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/237 emit C code for warmelt-debug
    meltbuild_emit melt-build-script.tpl:374/238-$meltfrom \
	translatefile \
	warmelt-debug \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltprevstagedir/warmelt-debug.$meltprevflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/239 checksum C code for warmelt-debug
    meltchecksum_cumul_DEBUG=$(cat "$meltcurstagedir"/warmelt-debug.cc "$meltcurstagedir"/warmelt-debug+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/240 perhaps compiling C code for warmelt-debug
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/241-$meltfrom compiling module warmelt-debug in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/242-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-debug" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-debug" \
	|| ( meltbuild_info melt-build-script.tpl:401/243-$meltfrom recompiling bad module warmelt-debug in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/244-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-debug" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-debug" ; \
	    meltbuild_error  melt-build-script.tpl:410/245-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-debug compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/246-$meltfrom NOT compiling module warmelt-debug "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-debug \
	    checksum $meltchecksum_cumul_DEBUG skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/247 done base warmelt-debug


    #in meltbuild_do_stage melt-build-script.tpl:370/248 base warmelt-macro
    meltbuild_info melt-build-script.tpl:371/249 from $meltfrom generating C code of warmelt-macro in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/250 emit C code for warmelt-macro
    meltbuild_emit melt-build-script.tpl:374/251-$meltfrom \
	translatefile \
	warmelt-macro \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltprevstagedir/warmelt-macro.$meltprevflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/252 checksum C code for warmelt-macro
    meltchecksum_cumul_MACRO=$(cat "$meltcurstagedir"/warmelt-macro.cc "$meltcurstagedir"/warmelt-macro+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/253 perhaps compiling C code for warmelt-macro
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/254-$meltfrom compiling module warmelt-macro in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/255-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-macro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-macro" \
	|| ( meltbuild_info melt-build-script.tpl:401/256-$meltfrom recompiling bad module warmelt-macro in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/257-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-macro" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-macro" ; \
	    meltbuild_error  melt-build-script.tpl:410/258-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-macro compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/259-$meltfrom NOT compiling module warmelt-macro "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-macro \
	    checksum $meltchecksum_cumul_MACRO skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/260 done base warmelt-macro


    #in meltbuild_do_stage melt-build-script.tpl:370/261 base warmelt-normal
    meltbuild_info melt-build-script.tpl:371/262 from $meltfrom generating C code of warmelt-normal in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/263 emit C code for warmelt-normal
    meltbuild_emit melt-build-script.tpl:374/264-$meltfrom \
	translatefile \
	warmelt-normal \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltprevstagedir/warmelt-normal.$meltprevflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "warmelt-predef.melt" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/265 checksum C code for warmelt-normal
    meltchecksum_cumul_NORMAL=$(cat "$meltcurstagedir"/warmelt-normal.cc "$meltcurstagedir"/warmelt-normal+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/266 perhaps compiling C code for warmelt-normal
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/267-$meltfrom compiling module warmelt-normal in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/268-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normal" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normal" \
	|| ( meltbuild_info melt-build-script.tpl:401/269-$meltfrom recompiling bad module warmelt-normal in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/270-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normal" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normal" ; \
	    meltbuild_error  melt-build-script.tpl:410/271-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normal compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/272-$meltfrom NOT compiling module warmelt-normal "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normal \
	    checksum $meltchecksum_cumul_NORMAL skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/273 done base warmelt-normal


    #in meltbuild_do_stage melt-build-script.tpl:370/274 base warmelt-normatch
    meltbuild_info melt-build-script.tpl:371/275 from $meltfrom generating C code of warmelt-normatch in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/276 emit C code for warmelt-normatch
    meltbuild_emit melt-build-script.tpl:374/277-$meltfrom \
	translatefile \
	warmelt-normatch \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltprevstagedir/warmelt-normatch.$meltprevflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/278 checksum C code for warmelt-normatch
    meltchecksum_cumul_NORMATCH=$(cat "$meltcurstagedir"/warmelt-normatch.cc "$meltcurstagedir"/warmelt-normatch+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/279 perhaps compiling C code for warmelt-normatch
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/280-$meltfrom compiling module warmelt-normatch in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/281-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normatch" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normatch" \
	|| ( meltbuild_info melt-build-script.tpl:401/282-$meltfrom recompiling bad module warmelt-normatch in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/283-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-normatch" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-normatch" ; \
	    meltbuild_error  melt-build-script.tpl:410/284-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-normatch compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/285-$meltfrom NOT compiling module warmelt-normatch "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-normatch \
	    checksum $meltchecksum_cumul_NORMATCH skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/286 done base warmelt-normatch


    #in meltbuild_do_stage melt-build-script.tpl:370/287 base warmelt-genobj
    meltbuild_info melt-build-script.tpl:371/288 from $meltfrom generating C code of warmelt-genobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/289 emit C code for warmelt-genobj
    meltbuild_emit melt-build-script.tpl:374/290-$meltfrom \
	translatefile \
	warmelt-genobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltprevstagedir/warmelt-genobj.$meltprevflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/291 checksum C code for warmelt-genobj
    meltchecksum_cumul_GENOBJ=$(cat "$meltcurstagedir"/warmelt-genobj.cc "$meltcurstagedir"/warmelt-genobj+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/292 perhaps compiling C code for warmelt-genobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/293-$meltfrom compiling module warmelt-genobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/294-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-genobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-genobj" \
	|| ( meltbuild_info melt-build-script.tpl:401/295-$meltfrom recompiling bad module warmelt-genobj in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/296-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-genobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-genobj" ; \
	    meltbuild_error  melt-build-script.tpl:410/297-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-genobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/298-$meltfrom NOT compiling module warmelt-genobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-genobj \
	    checksum $meltchecksum_cumul_GENOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/299 done base warmelt-genobj


    #in meltbuild_do_stage melt-build-script.tpl:370/300 base warmelt-outobj
    meltbuild_info melt-build-script.tpl:371/301 from $meltfrom generating C code of warmelt-outobj in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/302 emit C code for warmelt-outobj
    meltbuild_emit melt-build-script.tpl:374/303-$meltfrom \
	translatefile \
	warmelt-outobj \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltprevstagedir/warmelt-outobj.$meltprevflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/304 checksum C code for warmelt-outobj
    meltchecksum_cumul_OUTOBJ=$(cat "$meltcurstagedir"/warmelt-outobj.cc "$meltcurstagedir"/warmelt-outobj+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/305 perhaps compiling C code for warmelt-outobj
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/306-$meltfrom compiling module warmelt-outobj in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/307-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-outobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-outobj" \
	|| ( meltbuild_info melt-build-script.tpl:401/308-$meltfrom recompiling bad module warmelt-outobj in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/309-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-outobj" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-outobj" ; \
	    meltbuild_error  melt-build-script.tpl:410/310-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-outobj compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/311-$meltfrom NOT compiling module warmelt-outobj "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-outobj \
	    checksum $meltchecksum_cumul_OUTOBJ skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/312 done base warmelt-outobj


    #in meltbuild_do_stage melt-build-script.tpl:370/313 base warmelt-hooks
    meltbuild_info melt-build-script.tpl:371/314 from $meltfrom generating C code of warmelt-hooks in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/315 emit C code for warmelt-hooks
    meltbuild_emit melt-build-script.tpl:374/316-$meltfrom \
	translatefile \
	warmelt-hooks \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltcurstagedir/warmelt-outobj.$meltcurflavor:$meltprevstagedir/warmelt-hooks.$meltprevflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/317 checksum C code for warmelt-hooks
    meltchecksum_cumul_HOOKS=$(cat "$meltcurstagedir"/warmelt-hooks.cc "$meltcurstagedir"/warmelt-hooks+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/318 perhaps compiling C code for warmelt-hooks
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/319-$meltfrom compiling module warmelt-hooks in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/320-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-hooks" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-hooks" \
	|| ( meltbuild_info melt-build-script.tpl:401/321-$meltfrom recompiling bad module warmelt-hooks in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/322-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-hooks" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-hooks" ; \
	    meltbuild_error  melt-build-script.tpl:410/323-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-hooks compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/324-$meltfrom NOT compiling module warmelt-hooks "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-hooks \
	    checksum $meltchecksum_cumul_HOOKS skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/325 done base warmelt-hooks


    #in meltbuild_do_stage melt-build-script.tpl:370/326 base warmelt-modes
    meltbuild_info melt-build-script.tpl:371/327 from $meltfrom generating C code of warmelt-modes in $meltcurstagedir

    #in meltbuild_do_stage melt-build-script.tpl:373/328 emit C code for warmelt-modes
    meltbuild_emit melt-build-script.tpl:374/329-$meltfrom \
	translatefile \
	warmelt-modes \
	"$meltcurstagedir" \
	"$meltprevstagedir" \
	$meltcurstagedir/warmelt-first.$meltcurflavor:$meltcurstagedir/warmelt-base.$meltcurflavor:$meltcurstagedir/warmelt-debug.$meltcurflavor:$meltcurstagedir/warmelt-macro.$meltcurflavor:$meltcurstagedir/warmelt-normal.$meltcurflavor:$meltcurstagedir/warmelt-normatch.$meltcurflavor:$meltcurstagedir/warmelt-genobj.$meltcurflavor:$meltcurstagedir/warmelt-outobj.$meltcurflavor:$meltcurstagedir/warmelt-hooks.$meltcurflavor:$meltprevstagedir/warmelt-modes.$meltprevflavor \
    "" \
    "$meltbuildoption"

    #in meltbuild_do_stage melt-build-script.tpl:387/330 checksum C code for warmelt-modes
    meltchecksum_cumul_MODES=$(cat "$meltcurstagedir"/warmelt-modes.cc "$meltcurstagedir"/warmelt-modes+[0-9][0-9].cc | $MD5SUM | cut -b 1-32)

    #in meltbuild_do_stage melt-build-script.tpl:390/331 perhaps compiling C code for warmelt-modes
    if [ -z "$GCCMELT_SKIPEMITC" ]; then
	meltbuild_info melt-build-script.tpl:392/332-$meltfrom compiling module warmelt-modes in "$meltcurstagedir"
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:394/333-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-modes" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-modes" \
	|| ( meltbuild_info melt-build-script.tpl:401/334-$meltfrom recompiling bad module warmelt-modes in "$meltcurstagedir" ; \
	$GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	    GCCMELT_FROM="melt-build-script.tpl:403/335-$meltfrom" \
	    GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	    GCCMELT_MODULE_FLAVOR="$meltcurflavor" \
	    GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	    GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS -DMELTGCC_NOLINENUMBERING" \
	    GCCMELT_MODULE_SOURCEBASE="$meltcurstagedir/warmelt-modes" \
	    GCCMELT_MODULE_BINARYBASE="$meltcurstagedir/warmelt-modes" ; \
	    meltbuild_error  melt-build-script.tpl:410/336-$meltfrom in "$meltcurstagedir/" \
                failed to make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" module warmelt-modes compiler "$GCCMELT_COMPILER" cflags "$GCCMELT_COMPILER_FLAGS" )
    else
	meltbuild_info melt-build-script.tpl:413/337-$meltfrom NOT compiling module warmelt-modes "in" \
	    "$meltcurstagedir/" but symlinking previous "$meltprevstagedir/" module warmelt-modes \
	    checksum $meltchecksum_cumul_MODES skipemitc=$GCCMELT_SKIPEMITC.
	meltbuild_symlink "$meltprevstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltprevflavor.so" \
	    "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"
    fi
    #in meltbuild_do_stage melt-build-script.tpl:419/338 done base warmelt-modes


    #in meltbuild_do_stage melt-build-script.tpl:422/339 generating the stampfile
    meltstamp=$meltcurstagedir/$meltcurstagedir.stamp
    meltstamptmp=$meltstamp-tmp$$
    echo "///timestamp file $meltstamp" > $meltstamptmp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-first.cc $meltcurstagedir/warmelt-first+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-first.meltmod-$meltchecksum_cumul_FIRST.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-base.cc $meltcurstagedir/warmelt-base+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-base.meltmod-$meltchecksum_cumul_BASE.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-debug.cc $meltcurstagedir/warmelt-debug+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-debug.meltmod-$meltchecksum_cumul_DEBUG.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-macro.cc $meltcurstagedir/warmelt-macro+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-macro.meltmod-$meltchecksum_cumul_MACRO.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normal.cc $meltcurstagedir/warmelt-normal+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normal.meltmod-$meltchecksum_cumul_NORMAL.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-normatch.cc $meltcurstagedir/warmelt-normatch+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-normatch.meltmod-$meltchecksum_cumul_NORMATCH.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-genobj.cc $meltcurstagedir/warmelt-genobj+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-genobj.meltmod-$meltchecksum_cumul_GENOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-outobj.cc $meltcurstagedir/warmelt-outobj+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-outobj.meltmod-$meltchecksum_cumul_OUTOBJ.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-hooks.cc $meltcurstagedir/warmelt-hooks+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-hooks.meltmod-$meltchecksum_cumul_HOOKS.$meltcurflavor.so"  >> $meltstamptmp

    $MD5SUM $meltcurstagedir/warmelt-modes.cc $meltcurstagedir/warmelt-modes+[0-9][0-9].cc  >> $meltstamptmp
    $MD5SUM "$meltcurstagedir/warmelt-modes.meltmod-$meltchecksum_cumul_MODES.$meltcurflavor.so"  >> $meltstamptmp

    echo "///end timestamp file $meltstamp"
    $GCCMELT_MOVE_IF_CHANGE $meltstamptmp $meltstamp

    #in meltbuild_do_stage melt-build-script.tpl:434/340 ending
    meltbuild_info $meltfrom done stage $meltcurstagedir flavor $meltcurflavor previous $meltprevstagedir previous flavor $meltprevflavor timestamp $meltstamp

}			#### end meltbuild_do_stage melt-build-script.tpl:437/341
################################################################

##### possibly run all our stages  melt-build-script.tpl:440/342

#@  melt-build-script.tpl:442/343 stagedir meltbuild-stage1
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage1/meltbuild-stage1.stamp -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage1/meltbuild-stage1.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:448/344 '++++++++++++++++' building stage meltbuild-stage1 '++++++++++++++++'
    ## building stage meltbuild-stage1 previous $GCCMELT_STAGE_ZERO  melt-build-script.tpl:449/345
    meltbuild_do_stage  melt-build-script.tpl:450/346 meltbuild-stage1 quicklybuilt $GCCMELT_STAGE_ZERO $GCCMELT_ZERO_FLAVOR "$GCCMELT_EMIT_OPTION_STAGE1"
else
    meltbuild_info  melt-build-script.tpl:452/347 skipping stage meltbuild-stage1
fi

##  melt-build-script.tpl:455/348
GCCMELT_LASTSTAGE=meltbuild-stage1


#@  melt-build-script.tpl:442/349 stagedir meltbuild-stage2
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage2/meltbuild-stage2.stamp -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage2/meltbuild-stage2.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:448/350 '++++++++++++++++' building stage meltbuild-stage2 '++++++++++++++++'
    ## building stage meltbuild-stage2 previous meltbuild-stage1  melt-build-script.tpl:449/351
    meltbuild_do_stage  melt-build-script.tpl:450/352 meltbuild-stage2 quicklybuilt meltbuild-stage1 quicklybuilt "$GCCMELT_EMIT_OPTION_STAGE2"
else
    meltbuild_info  melt-build-script.tpl:452/353 skipping stage meltbuild-stage2
fi

##  melt-build-script.tpl:455/354
GCCMELT_LASTSTAGE=meltbuild-stage2


#@  melt-build-script.tpl:442/355 stagedir meltbuild-stage3
GCCMELT_SKIPEMITC=
if [ ! -f meltbuild-stage3/meltbuild-stage3.stamp -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o meltbuild-stage3/meltbuild-stage3.stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 ]; then
    echo ; echo ; echo ; echo 
    meltbuild_info  melt-build-script.tpl:448/356 '++++++++++++++++' building stage meltbuild-stage3 '++++++++++++++++'
    ## building stage meltbuild-stage3 previous meltbuild-stage2  melt-build-script.tpl:449/357
    meltbuild_do_stage  melt-build-script.tpl:450/358 meltbuild-stage3 quicklybuilt meltbuild-stage2 quicklybuilt "$GCCMELT_EMIT_OPTION_STAGE3"
else
    meltbuild_info  melt-build-script.tpl:452/359 skipping stage meltbuild-stage3
fi

##  melt-build-script.tpl:455/360
GCCMELT_LASTSTAGE=meltbuild-stage3



################################################################


meltbuild_info melt-build-script.tpl:463/361 last stage $GCCMELT_LASTSTAGE

################################################################
################################################################
###########@ before generating meltbuild-sources melt-build-script.tpl:467/362

#### the meltbuild-sources is the final sources directory, to be
#### installed.  They are generated from the last stage, using the
#### modules inside it. Notice that in contrast from the intermediate
#### stages no "diagonalization" is involved.

[ -d meltbuild-sources ] || mkdir meltbuild-sources

#@ from  melt-build-script.tpl:476/363  compiling the modules
[ -d meltbuild-modules ] || mkdir meltbuild-modules

################################################################
function meltbuild_emit_translator_sources () {

  ## meltbuild_emit_source  melt-build-script.tpl:482/364 base warmelt-first
  meltbuild_info melt-build-script.tpl:483/365 generating C code of warmelt-first in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/366 \
      translateinit \
      warmelt-first \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/367 base warmelt-base
  meltbuild_info melt-build-script.tpl:483/368 generating C code of warmelt-base in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/369 \
      translatefile \
      warmelt-base \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/370 base warmelt-debug
  meltbuild_info melt-build-script.tpl:483/371 generating C code of warmelt-debug in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/372 \
      translatefile \
      warmelt-debug \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/373 base warmelt-macro
  meltbuild_info melt-build-script.tpl:483/374 generating C code of warmelt-macro in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/375 \
      translatefile \
      warmelt-macro \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/376 base warmelt-normal
  meltbuild_info melt-build-script.tpl:483/377 generating C code of warmelt-normal in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/378 \
      translatefile \
      warmelt-normal \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      "warmelt-predef.melt"

  ## meltbuild_emit_source  melt-build-script.tpl:482/379 base warmelt-normatch
  meltbuild_info melt-build-script.tpl:483/380 generating C code of warmelt-normatch in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/381 \
      translatefile \
      warmelt-normatch \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/382 base warmelt-genobj
  meltbuild_info melt-build-script.tpl:483/383 generating C code of warmelt-genobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/384 \
      translatefile \
      warmelt-genobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/385 base warmelt-outobj
  meltbuild_info melt-build-script.tpl:483/386 generating C code of warmelt-outobj in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/387 \
      translatefile \
      warmelt-outobj \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/388 base warmelt-hooks
  meltbuild_info melt-build-script.tpl:483/389 generating C code of warmelt-hooks in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/390 \
      translatefile \
      warmelt-hooks \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

  ## meltbuild_emit_source  melt-build-script.tpl:482/391 base warmelt-modes
  meltbuild_info melt-build-script.tpl:483/392 generating C code of warmelt-modes in meltbuild-sources
  meltbuild_emit melt-build-script.tpl:484/393 \
      translatefile \
      warmelt-modes \
      meltbuild-sources \
      "$GCCMELT_LASTSTAGE" \
      $GCCMELT_LASTSTAGE/warmelt-first.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-base.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-debug.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-macro.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normal.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-normatch.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-genobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-outobj.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-hooks.quicklybuilt:$GCCMELT_LASTSTAGE/warmelt-modes.quicklybuilt \
      ""

}  # end of function meltbuild_emit_translator_sources


################
function meltbuild_compile_translator_modules () {


  # in meltbuild_compile_translator_sources quicklybuilt melt-build-script.tpl:499/394
  meltbuild_info melt-build-script.tpl:500/395 compiling translator quicklybuilt


   #@ melt-build-script.tpl:503/396 flavor quicklybuilt base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/397 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:512/398 in meltbuild-modules failed to compile translator warmelt-first quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/399 flavor quicklybuilt base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/400 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:512/401 in meltbuild-modules failed to compile translator warmelt-base quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/402 flavor quicklybuilt base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/403 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:512/404 in meltbuild-modules failed to compile translator warmelt-debug quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/405 flavor quicklybuilt base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/406 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:512/407 in meltbuild-modules failed to compile translator warmelt-macro quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/408 flavor quicklybuilt base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/409 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:512/410 in meltbuild-modules failed to compile translator warmelt-normal quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/411 flavor quicklybuilt base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/412 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:512/413 in meltbuild-modules failed to compile translator warmelt-normatch quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/414 flavor quicklybuilt base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/415 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:512/416 in meltbuild-modules failed to compile translator warmelt-genobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/417 flavor quicklybuilt base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/418 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:512/419 in meltbuild-modules failed to compile translator warmelt-outobj quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/420 flavor quicklybuilt base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/421 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:512/422 in meltbuild-modules failed to compile translator warmelt-hooks quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/423 flavor quicklybuilt base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/424 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=quicklybuilt \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:512/425 in meltbuild-modules failed to compile translator warmelt-modes quicklybuilt make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources optimized melt-build-script.tpl:499/426
  meltbuild_info melt-build-script.tpl:500/427 compiling translator optimized


   #@ melt-build-script.tpl:503/428 flavor optimized base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/429 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:512/430 in meltbuild-modules failed to compile translator warmelt-first optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/431 flavor optimized base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/432 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:512/433 in meltbuild-modules failed to compile translator warmelt-base optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/434 flavor optimized base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/435 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:512/436 in meltbuild-modules failed to compile translator warmelt-debug optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/437 flavor optimized base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/438 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:512/439 in meltbuild-modules failed to compile translator warmelt-macro optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/440 flavor optimized base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/441 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:512/442 in meltbuild-modules failed to compile translator warmelt-normal optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/443 flavor optimized base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/444 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:512/445 in meltbuild-modules failed to compile translator warmelt-normatch optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/446 flavor optimized base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/447 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:512/448 in meltbuild-modules failed to compile translator warmelt-genobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/449 flavor optimized base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/450 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:512/451 in meltbuild-modules failed to compile translator warmelt-outobj optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/452 flavor optimized base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/453 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:512/454 in meltbuild-modules failed to compile translator warmelt-hooks optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/455 flavor optimized base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/456 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=optimized \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:512/457 in meltbuild-modules failed to compile translator warmelt-modes optimized make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS




  # in meltbuild_compile_translator_sources debugnoline melt-build-script.tpl:499/458
  meltbuild_info melt-build-script.tpl:500/459 compiling translator debugnoline


   #@ melt-build-script.tpl:503/460 flavor debugnoline base warmelt-first
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/461 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-first \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-first \
 || meltbuild_error  melt-build-script.tpl:512/462 in meltbuild-modules failed to compile translator warmelt-first debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/463 flavor debugnoline base warmelt-base
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/464 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-base \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-base \
 || meltbuild_error  melt-build-script.tpl:512/465 in meltbuild-modules failed to compile translator warmelt-base debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/466 flavor debugnoline base warmelt-debug
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/467 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-debug \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-debug \
 || meltbuild_error  melt-build-script.tpl:512/468 in meltbuild-modules failed to compile translator warmelt-debug debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/469 flavor debugnoline base warmelt-macro
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/470 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-macro \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-macro \
 || meltbuild_error  melt-build-script.tpl:512/471 in meltbuild-modules failed to compile translator warmelt-macro debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/472 flavor debugnoline base warmelt-normal
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/473 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normal \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normal \
 || meltbuild_error  melt-build-script.tpl:512/474 in meltbuild-modules failed to compile translator warmelt-normal debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/475 flavor debugnoline base warmelt-normatch
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/476 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-normatch \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-normatch \
 || meltbuild_error  melt-build-script.tpl:512/477 in meltbuild-modules failed to compile translator warmelt-normatch debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/478 flavor debugnoline base warmelt-genobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/479 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-genobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-genobj \
 || meltbuild_error  melt-build-script.tpl:512/480 in meltbuild-modules failed to compile translator warmelt-genobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/481 flavor debugnoline base warmelt-outobj
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/482 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-outobj \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-outobj \
 || meltbuild_error  melt-build-script.tpl:512/483 in meltbuild-modules failed to compile translator warmelt-outobj debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/484 flavor debugnoline base warmelt-hooks
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/485 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-hooks \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-hooks \
 || meltbuild_error  melt-build-script.tpl:512/486 in meltbuild-modules failed to compile translator warmelt-hooks debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS

   #@ melt-build-script.tpl:503/487 flavor debugnoline base warmelt-modes
   $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
     GCCMELT_FROM=melt-build-script.tpl:505/488 \
     GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
     GCCMELT_MODULE_FLAVOR=debugnoline \
     GCCMELT_COMPILER="$GCCMELT_COMPILER" \
     GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
     GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/warmelt-modes \
     GCCMELT_MODULE_BINARYBASE=meltbuild-modules/warmelt-modes \
 || meltbuild_error  melt-build-script.tpl:512/489 in meltbuild-modules failed to compile translator warmelt-modes debugnoline make "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler "$GCCMELT_COMPILER" cflags $GCCMELT_COMPILER_FLAGS



}     # end of function meltbuild_compile_translator_modules
################################################################


#################@ melt-build-script.tpl:520/490 
function meltbuild_symlink_melt_translator_sources () {


### symlinking the MELT translator code in meltbuild-sources for warmelt-first from melt-build-script.tpl:525/491

meltbuild_info melt-build-script.tpl:527/492 putting MELT translator code of warmelt-first in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-first.melt meltbuild-sources/warmelt-first.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-base from melt-build-script.tpl:525/493

meltbuild_info melt-build-script.tpl:527/494 putting MELT translator code of warmelt-base in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-base.melt meltbuild-sources/warmelt-base.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-debug from melt-build-script.tpl:525/495

meltbuild_info melt-build-script.tpl:527/496 putting MELT translator code of warmelt-debug in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt meltbuild-sources/warmelt-debug.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-macro from melt-build-script.tpl:525/497

meltbuild_info melt-build-script.tpl:527/498 putting MELT translator code of warmelt-macro in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt meltbuild-sources/warmelt-macro.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-normal from melt-build-script.tpl:525/499

meltbuild_info melt-build-script.tpl:527/500 putting MELT translator code of warmelt-normal in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt meltbuild-sources/warmelt-normal.melt
meltbuild_symlink warmelt-predef.melt meltbuild-sources/warmelt-predef.melt



### symlinking the MELT translator code in meltbuild-sources for warmelt-normatch from melt-build-script.tpl:525/501

meltbuild_info melt-build-script.tpl:527/502 putting MELT translator code of warmelt-normatch in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt meltbuild-sources/warmelt-normatch.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-genobj from melt-build-script.tpl:525/503

meltbuild_info melt-build-script.tpl:527/504 putting MELT translator code of warmelt-genobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt meltbuild-sources/warmelt-genobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-outobj from melt-build-script.tpl:525/505

meltbuild_info melt-build-script.tpl:527/506 putting MELT translator code of warmelt-outobj in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt meltbuild-sources/warmelt-outobj.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-hooks from melt-build-script.tpl:525/507

meltbuild_info melt-build-script.tpl:527/508 putting MELT translator code of warmelt-hooks in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt meltbuild-sources/warmelt-hooks.melt




### symlinking the MELT translator code in meltbuild-sources for warmelt-modes from melt-build-script.tpl:525/509

meltbuild_info melt-build-script.tpl:527/510 putting MELT translator code of warmelt-modes in meltbuild-sources

meltbuild_symlink $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt meltbuild-sources/warmelt-modes.melt



} 				# end of meltbuild_symlink_melt_translator_sources


################@ melt-build-script.tpl:536/511 
melt_final_translator_stamp=meltbuild-final-translator.stamp

if [ ! -f $melt_final_translator_stamp -o $melt_final_translator_stamp -ot $GCCMELT_RUNTIME_DEPENDENCY \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-first.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-base.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-debug.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-macro.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normal.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-normatch.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-genobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-outobj.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-hooks.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_MELTSOURCEDIR/warmelt-modes.melt \
 -o $melt_final_translator_stamp -ot $GCCMELT_LASTSTAGE/$GCCMELT_LASTSTAGE.stamp ]; then
    meltbuild_notice 'Emit Translator Source'  melt-build-script.tpl:542/512 emit then translate the MELT translator 
    meltbuild_info melt-build-script.tpl:543/513 emit then translate the compile translator for  $melt_final_translator_stamp
    meltbuild_emit_translator_sources
    meltbuild_symlink_melt_translator_sources
    meltbuild_compile_translator_modules
    melt_final_translator_stamptemp=$melt_final_translator_stamp-tmp$$
    echo "///MELT translator timestamp file $melt_final_translator_stamp" > $melt_final_translator_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $melt_final_translator_stamptemp

#@  melt-build-script.tpl:551/514 
    $MD5SUM meltbuild-sources/warmelt-first.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-first.cc meltbuild-sources/warmelt-first+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_FIRST_cumulmd5=$(cat  meltbuild-sources/warmelt-first.cc meltbuild-sources/warmelt-first+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/515 
    $MD5SUM meltbuild-sources/warmelt-base.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-base.cc meltbuild-sources/warmelt-base+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_BASE_cumulmd5=$(cat  meltbuild-sources/warmelt-base.cc meltbuild-sources/warmelt-base+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/516 
    $MD5SUM meltbuild-sources/warmelt-debug.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-debug.cc meltbuild-sources/warmelt-debug+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_DEBUG_cumulmd5=$(cat  meltbuild-sources/warmelt-debug.cc meltbuild-sources/warmelt-debug+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/517 
    $MD5SUM meltbuild-sources/warmelt-macro.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-macro.cc meltbuild-sources/warmelt-macro+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_MACRO_cumulmd5=$(cat  meltbuild-sources/warmelt-macro.cc meltbuild-sources/warmelt-macro+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/518 
    $MD5SUM meltbuild-sources/warmelt-normal.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-predef.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normal.cc meltbuild-sources/warmelt-normal+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_NORMAL_cumulmd5=$(cat  meltbuild-sources/warmelt-normal.cc meltbuild-sources/warmelt-normal+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/519 
    $MD5SUM meltbuild-sources/warmelt-normatch.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-normatch.cc meltbuild-sources/warmelt-normatch+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_NORMATCH_cumulmd5=$(cat  meltbuild-sources/warmelt-normatch.cc meltbuild-sources/warmelt-normatch+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/520 
    $MD5SUM meltbuild-sources/warmelt-genobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-genobj.cc meltbuild-sources/warmelt-genobj+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_GENOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-genobj.cc meltbuild-sources/warmelt-genobj+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/521 
    $MD5SUM meltbuild-sources/warmelt-outobj.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-outobj.cc meltbuild-sources/warmelt-outobj+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_OUTOBJ_cumulmd5=$(cat  meltbuild-sources/warmelt-outobj.cc meltbuild-sources/warmelt-outobj+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/522 
    $MD5SUM meltbuild-sources/warmelt-hooks.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-hooks.cc meltbuild-sources/warmelt-hooks+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_HOOKS_cumulmd5=$(cat  meltbuild-sources/warmelt-hooks.cc meltbuild-sources/warmelt-hooks+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

#@  melt-build-script.tpl:551/523 
    $MD5SUM meltbuild-sources/warmelt-modes.melt  >>  $melt_final_translator_stamptemp
  
    $MD5SUM meltbuild-sources/warmelt-modes.cc meltbuild-sources/warmelt-modes+[0-9][0-9].cc  >> $melt_final_translator_stamptemp
    melt_translator_MODES_cumulmd5=$(cat  meltbuild-sources/warmelt-modes.cc meltbuild-sources/warmelt-modes+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)

    echo "///end timestamp file $melt_final_translator_stamp"
    $GCCMELT_MOVE_IF_CHANGE $melt_final_translator_stamptemp $melt_final_translator_stamp
else
    meltbuild_info melt-build-script.tpl:562/524 skip final translation of translator stamp  $melt_final_translator_stamp
fi

################################################################
#@ melt-build-script.tpl:566/525 making the meltbuild-common.args file to make life easier
# I would often use that meltbuild-common.args for testing, etc.
meltcommon_args=meltbuild-common.args
meltbuild_info melt-build-script.tpl:569/526 making $meltcommon_args
meltcommon_argstemp=$meltcommon_args-tmp$$
echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:571/527"' > $meltcommon_argstemp
meltbuild_arg workdir=meltbuild-workdir >>  $meltcommon_argstemp
meltbuild_arg tempdir=meltbuild-tempdir >> $meltcommon_argstemp
meltbuild_arg source-path=meltbuild-sources:$GCCMELT_LASTSTAGE >> $meltcommon_argstemp
meltbuild_arg module-path=meltbuild-modules:$GCCMELT_LASTSTAGE >> $meltcommon_argstemp
meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcommon_argstemp
meltbuild_arg "module-makefile=\"$GCCMELT_MODULE_MK\""  >>  $meltcommon_argstemp

$GCCMELT_MOVE_IF_CHANGE $meltcommon_argstemp $meltcommon_args
meltbuild_info melt-build-script.tpl:580/528 $meltcommon_args is
cat $meltcommon_args < /dev/null >&2


################
### the warmelt modules lists  melt-build-script.tpl:585/529

if [ ! -f meltbuild-sources/warmelt.quicklybuilt.modlis \
    -o  meltbuild-sources/warmelt.quicklybuilt.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:589/530 warmelt module list quicklybuilt
  melt_modlis_temp="meltbuild-sources/warmelt.quicklybuilt.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-hooks.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.quicklybuilt.modlis"
fi

if [ ! -f meltbuild-sources/warmelt.optimized.modlis \
    -o  meltbuild-sources/warmelt.optimized.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:589/531 warmelt module list optimized
  melt_modlis_temp="meltbuild-sources/warmelt.optimized.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-hooks.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.optimized.modlis"
fi

if [ ! -f meltbuild-sources/warmelt.debugnoline.modlis \
    -o  meltbuild-sources/warmelt.debugnoline.modlis -ot  "$melt_final_translator_stamp" ]; then 
  #  melt-build-script.tpl:589/532 warmelt module list debugnoline
  melt_modlis_temp="meltbuild-sources/warmelt.debugnoline.modlis-tmp$$"
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-hooks.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/warmelt.debugnoline.modlis"
fi


################################################################
#@ melt-build-script.tpl:600/533
if [ "$melt_overall_goal" = "translator" ]; then
    meltbuild_info melt-build-script.tpl:602/534 done translation overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

################
#@ melt-build-script.tpl:607/535 before application xtramelt* modules
################################################################
meltbuild_info melt-build-script.tpl:609/536 before applications GCCMELT_SKIPEMITC=$GCCMELT_SKIPEMITC.

meltbuild_info melt-build-script.tpl:611/537 times before applications at `date '+%x %H:%M:%S'`: ;  times >&2
 
melt_final_application_stamp=meltbuild-final-application.stamp

function meltbuild_do_applications () {
meltbuild_notice 'doing applications'  melt-build-script.tpl:616/538 doing applications 



  ## meltbuild_do_applications xtramelt-ana-base melt-build-script.tpl:620/539
  if [ ! -f meltbuild-sources/xtramelt-ana-base.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-base.melt meltbuild-sources/xtramelt-ana-base.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-base melt-build-script.tpl:624/540
  if [ ! -f meltbuild-sources/xtramelt-ana-base.cc -o  ! -f meltbuild-sources/xtramelt-ana-base+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-base.melt \
 ]; then
      meltbuild_info melt-build-script.tpl:630/541 emit application C code for xtramelt-ana-base
      meltbuild_emit melt-build-script.tpl:631/542 \
	  translatefile \
	  xtramelt-ana-base \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/543 failed to generate C code of application xtramelt-ana-base
  else
      meltbuild_info melt-build-script.tpl:640/544 DONT emit application C code for xtramelt-ana-base
  fi
  local meltapp_ANA_BASE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-base.cc meltbuild-sources/xtramelt-ana-base+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-base.cc \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/545 compiling application module for xtramelt-ana-base quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/546 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:657/547 in meltbuild-modules failed to compile application xtramelt-ana-base quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/548 not compiling application module for xtramelt-ana-base quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-base.cc \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/549 compiling application module for xtramelt-ana-base optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/550 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:657/551 in meltbuild-modules failed to compile application xtramelt-ana-base optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/552 not compiling application module for xtramelt-ana-base optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-base.cc \
      -o  meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-base+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/553 compiling application module for xtramelt-ana-base debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/554 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-base \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-base \
	  || meltbuild_error  melt-build-script.tpl:657/555 in meltbuild-modules failed to compile application xtramelt-ana-base debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/556 not compiling application module for xtramelt-ana-base debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-tree melt-build-script.tpl:620/557
  if [ ! -f meltbuild-sources/xtramelt-ana-tree.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-tree.melt meltbuild-sources/xtramelt-ana-tree.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-tree melt-build-script.tpl:624/558
  if [ ! -f meltbuild-sources/xtramelt-ana-tree.cc -o  ! -f meltbuild-sources/xtramelt-ana-tree+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-tree.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-tree+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:630/559 emit application C code for xtramelt-ana-tree
      meltbuild_emit melt-build-script.tpl:631/560 \
	  translatefile \
	  xtramelt-ana-tree \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/561 failed to generate C code of application xtramelt-ana-tree
  else
      meltbuild_info melt-build-script.tpl:640/562 DONT emit application C code for xtramelt-ana-tree
  fi
  local meltapp_ANA_TREE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-tree.cc meltbuild-sources/xtramelt-ana-tree+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-tree.cc \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/563 compiling application module for xtramelt-ana-tree quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/564 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:657/565 in meltbuild-modules failed to compile application xtramelt-ana-tree quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/566 not compiling application module for xtramelt-ana-tree quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-tree.cc \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/567 compiling application module for xtramelt-ana-tree optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/568 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:657/569 in meltbuild-modules failed to compile application xtramelt-ana-tree optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/570 not compiling application module for xtramelt-ana-tree optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-tree.cc \
      -o  meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-tree+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/571 compiling application module for xtramelt-ana-tree debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/572 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-tree \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-tree \
	  || meltbuild_error  melt-build-script.tpl:657/573 in meltbuild-modules failed to compile application xtramelt-ana-tree debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/574 not compiling application module for xtramelt-ana-tree debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-gimple melt-build-script.tpl:620/575
  if [ ! -f meltbuild-sources/xtramelt-ana-gimple.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-gimple.melt meltbuild-sources/xtramelt-ana-gimple.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-gimple melt-build-script.tpl:624/576
  if [ ! -f meltbuild-sources/xtramelt-ana-gimple.cc -o  ! -f meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-gimple.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-ana-gimple+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:630/577 emit application C code for xtramelt-ana-gimple
      meltbuild_emit melt-build-script.tpl:631/578 \
	  translatefile \
	  xtramelt-ana-gimple \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/579 failed to generate C code of application xtramelt-ana-gimple
  else
      meltbuild_info melt-build-script.tpl:640/580 DONT emit application C code for xtramelt-ana-gimple
  fi
  local meltapp_ANA_GIMPLE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-gimple.cc meltbuild-sources/xtramelt-ana-gimple+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-gimple.cc \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/581 compiling application module for xtramelt-ana-gimple quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/582 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:657/583 in meltbuild-modules failed to compile application xtramelt-ana-gimple quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/584 not compiling application module for xtramelt-ana-gimple quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-gimple.cc \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/585 compiling application module for xtramelt-ana-gimple optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/586 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:657/587 in meltbuild-modules failed to compile application xtramelt-ana-gimple optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/588 not compiling application module for xtramelt-ana-gimple optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-gimple.cc \
      -o  meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-gimple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/589 compiling application module for xtramelt-ana-gimple debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/590 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-gimple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-gimple \
	  || meltbuild_error  melt-build-script.tpl:657/591 in meltbuild-modules failed to compile application xtramelt-ana-gimple debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/592 not compiling application module for xtramelt-ana-gimple debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-probe melt-build-script.tpl:620/593
  if [ ! -f meltbuild-sources/xtramelt-probe.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt meltbuild-sources/xtramelt-probe.melt
  fi
  ## meltbuild_do_applications xtramelt-probe melt-build-script.tpl:624/594
  if [ ! -f meltbuild-sources/xtramelt-probe.cc -o  ! -f meltbuild-sources/xtramelt-probe+meltdesc.c \
       -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot  meltbuild-sources/xtramelt-probe.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-probe+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:630/595 emit application C code for xtramelt-probe
      meltbuild_emit melt-build-script.tpl:631/596 \
	  translatefile \
	  xtramelt-probe \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/597 failed to generate C code of application xtramelt-probe
  else
      meltbuild_info melt-build-script.tpl:640/598 DONT emit application C code for xtramelt-probe
  fi
  local meltapp_PROBE_cumulmd5=$(cat  meltbuild-sources/xtramelt-probe.cc meltbuild-sources/xtramelt-probe+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe.cc \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/599 compiling application module for xtramelt-probe quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/600 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:657/601 in meltbuild-modules failed to compile application xtramelt-probe quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/602 not compiling application module for xtramelt-probe quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe.cc \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/603 compiling application module for xtramelt-probe optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/604 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:657/605 in meltbuild-modules failed to compile application xtramelt-probe optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/606 not compiling application module for xtramelt-probe optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe.cc \
      -o  meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-probe+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/607 compiling application module for xtramelt-probe debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/608 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-probe \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-probe \
	  || meltbuild_error  melt-build-script.tpl:657/609 in meltbuild-modules failed to compile application xtramelt-probe debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/610 not compiling application module for xtramelt-probe debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-ana-simple melt-build-script.tpl:620/611
  if [ ! -f meltbuild-sources/xtramelt-ana-simple.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt meltbuild-sources/xtramelt-ana-simple.melt
  fi
  ## meltbuild_do_applications xtramelt-ana-simple melt-build-script.tpl:624/612
  if [ ! -f meltbuild-sources/xtramelt-ana-simple.cc -o  ! -f meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
       -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot  meltbuild-sources/xtramelt-ana-simple.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-ana-simple+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:630/613 emit application C code for xtramelt-ana-simple
      meltbuild_emit melt-build-script.tpl:631/614 \
	  translatefile \
	  xtramelt-ana-simple \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt:xtramelt-probe.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/615 failed to generate C code of application xtramelt-ana-simple
  else
      meltbuild_info melt-build-script.tpl:640/616 DONT emit application C code for xtramelt-ana-simple
  fi
  local meltapp_ANA_SIMPLE_cumulmd5=$(cat  meltbuild-sources/xtramelt-ana-simple.cc meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/617 compiling application module for xtramelt-ana-simple quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/618 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:657/619 in meltbuild-modules failed to compile application xtramelt-ana-simple quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/620 not compiling application module for xtramelt-ana-simple quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/621 compiling application module for xtramelt-ana-simple optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/622 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:657/623 in meltbuild-modules failed to compile application xtramelt-ana-simple optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/624 not compiling application module for xtramelt-ana-simple optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple.cc \
      -o  meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-ana-simple+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/625 compiling application module for xtramelt-ana-simple debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/626 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-ana-simple \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-ana-simple \
	  || meltbuild_error  melt-build-script.tpl:657/627 in meltbuild-modules failed to compile application xtramelt-ana-simple debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/628 not compiling application module for xtramelt-ana-simple debugnoline
  fi
 


  ## meltbuild_do_applications xtramelt-playground melt-build-script.tpl:620/629
  if [ ! -f meltbuild-sources/xtramelt-playground.melt ]; then
      meltbuild_symlink $GCCMELT_MELTSOURCEDIR/xtramelt-playground.melt meltbuild-sources/xtramelt-playground.melt
  fi
  ## meltbuild_do_applications xtramelt-playground melt-build-script.tpl:624/630
  if [ ! -f meltbuild-sources/xtramelt-playground.cc -o  ! -f meltbuild-sources/xtramelt-playground+meltdesc.c \
       -o meltbuild-sources/xtramelt-playground+meltdesc.c -ot meltbuild-final-translator.stamp \
       -o meltbuild-sources/xtramelt-playground+meltdesc.c -ot  meltbuild-sources/xtramelt-playground.melt \
 -o meltbuild-sources/xtramelt-ana-base+meltdesc.c -ot meltbuild-sources/xtramelt-playground+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-tree+meltdesc.c -ot meltbuild-sources/xtramelt-playground+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-gimple+meltdesc.c -ot meltbuild-sources/xtramelt-playground+meltdesc.c \
 -o meltbuild-sources/xtramelt-probe+meltdesc.c -ot meltbuild-sources/xtramelt-playground+meltdesc.c \
 -o meltbuild-sources/xtramelt-ana-simple+meltdesc.c -ot meltbuild-sources/xtramelt-playground+meltdesc.c \
 ]; then
      meltbuild_info melt-build-script.tpl:630/631 emit application C code for xtramelt-playground
      meltbuild_emit melt-build-script.tpl:631/632 \
	  translatefile \
	  xtramelt-playground \
	  meltbuild-sources \
	  meltbuild-modules \
	  warmelt-first.optimized:warmelt-base.optimized:warmelt-debug.optimized:warmelt-macro.optimized:warmelt-normal.optimized:warmelt-normatch.optimized:warmelt-genobj.optimized:warmelt-outobj.optimized:warmelt-hooks.optimized:warmelt-modes.optimized:xtramelt-ana-base.quicklybuilt:xtramelt-ana-tree.quicklybuilt:xtramelt-ana-gimple.quicklybuilt:xtramelt-probe.quicklybuilt:xtramelt-ana-simple.quicklybuilt \
    "" \
	  || meltbuild_error melt-build-script.tpl:638/633 failed to generate C code of application xtramelt-playground
  else
      meltbuild_info melt-build-script.tpl:640/634 DONT emit application C code for xtramelt-playground
  fi
  local meltapp_PLAYGROUND_cumulmd5=$(cat  meltbuild-sources/xtramelt-playground.cc meltbuild-sources/xtramelt-playground+[0-9][0-9].cc  | $MD5SUM | cut -b 1-32)
 
  if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.quicklybuilt.so \
      -o meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-playground.cc \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.quicklybuilt.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/635 compiling application module for xtramelt-playground quicklybuilt
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/636 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=quicklybuilt \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
	  || meltbuild_error  melt-build-script.tpl:657/637 in meltbuild-modules failed to compile application xtramelt-playground quicklybuilt "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/638 not compiling application module for xtramelt-playground quicklybuilt
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.optimized.so \
      -o meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-playground.cc \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.optimized.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/639 compiling application module for xtramelt-playground optimized
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/640 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=optimized \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
	  || meltbuild_error  melt-build-script.tpl:657/641 in meltbuild-modules failed to compile application xtramelt-playground optimized "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/642 not compiling application module for xtramelt-playground optimized
  fi
 
  if [ ! -f meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.debugnoline.so \
      -o meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-final-translator.stamp \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-playground.cc \
      -o  meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.debugnoline.so -ot  meltbuild-sources/xtramelt-playground+meltdesc.c ]; then
      meltbuild_info melt-build-script.tpl:648/643 compiling application module for xtramelt-playground debugnoline
      $GCCMELT_MAKE -f $GCCMELT_MODULE_MK melt_module \
	  GCCMELT_FROM=melt-build-script.tpl:650/644 \
	  GCCMELT_MODULE_WORKSPACE=meltbuild-workdir \
	  GCCMELT_MODULE_FLAVOR=debugnoline \
	  GCCMELT_COMPILER="$GCCMELT_COMPILER" \
	  GCCMELT_CFLAGS="$GCCMELT_COMPILER_FLAGS" \
	  GCCMELT_MODULE_SOURCEBASE=meltbuild-sources/xtramelt-playground \
	  GCCMELT_MODULE_BINARYBASE=meltbuild-modules/xtramelt-playground \
	  || meltbuild_error  melt-build-script.tpl:657/645 in meltbuild-modules failed to compile application xtramelt-playground debugnoline "($GCCMELT_MAKE -f $GCCMELT_MODULE_MK)" compiler $GCCMELT_COMPILER_FLAGS cflags $GCCMELT_COMPILER_FLAGS
  else
      meltbuild_info melt-build-script.tpl:659/646 not compiling application module for xtramelt-playground debugnoline
  fi
 

  ## meltbuild_do_applications  melt-build-script.tpl:663/647
  local meltappstamptemp=$melt_final_application_stamp-tmp$$
  echo "///MELT application time stamp $melt_final_application_stamp" > $meltappstamptemp
  echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >>  $meltappstamptemp

  $MD5SUM meltbuild-sources/xtramelt-ana-base.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-base.cc meltbuild-sources/xtramelt-ana-base+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-base.meltmod-$meltapp_ANA_BASE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-tree.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-tree.cc meltbuild-sources/xtramelt-ana-tree+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-tree.meltmod-$meltapp_ANA_TREE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-gimple.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-gimple.cc meltbuild-sources/xtramelt-ana-gimple+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-gimple.meltmod-$meltapp_ANA_GIMPLE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-probe.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-probe.cc meltbuild-sources/xtramelt-probe+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-probe.meltmod-$meltapp_PROBE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-ana-simple.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-ana-simple.cc meltbuild-sources/xtramelt-ana-simple+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-ana-simple.meltmod-$meltapp_ANA_SIMPLE_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  $MD5SUM meltbuild-sources/xtramelt-playground.melt >>  $meltappstamptemp
  $MD5SUM meltbuild-sources/xtramelt-playground.cc meltbuild-sources/xtramelt-playground+[0-9][0-9].cc  >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.quicklybuilt.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.optimized.so >> $meltappstamptemp
 
  $MD5SUM meltbuild-modules/xtramelt-playground.meltmod-$meltapp_PLAYGROUND_cumulmd5.debugnoline.so >> $meltappstamptemp
 

  echo "///end stamp $melt_final_application_stamp"  >> $meltappstamptemp
  $GCCMELT_MOVE_IF_CHANGE $meltappstamptemp  $melt_final_application_stamp
meltbuild_info melt-build-script.tpl:676/648 times after applications at `date '+%x %H:%M:%S'`: ;  times >&2
} ## end meltbuild_do_applications  melt-build-script.tpl:677/649

if [ ! -f  "$melt_final_application_stamp" \
     -o "$melt_final_application_stamp" -ot "$melt_final_translator_stamp" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-base.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-tree.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-gimple.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-probe.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-ana-simple.melt" \
 -o "$melt_final_application_stamp" -ot "$GCCMELT_MELTSOURCEDIR/xtramelt-playground.melt" \
 ]; then
    meltbuild_info melt-build-script.tpl:683/650 building MELT applications
    meltbuild_do_applications
else
    meltbuild_info melt-build-script.tpl:686/651 not building MELT applications because of applstamp  "$melt_final_application_stamp"
fi

################################################################
#@ melt-build-script.tpl:690/652
if [ "$melt_overall_goal" = "applications" ]; then
    meltbuild_info melt-build-script.tpl:692/653 done applications overall goal with stamp  $melt_final_translator_stamp
    meltbuild_notice 'Done applications' melt-build-script.tpl:693/654 applications overall goal 
    exit 0
fi
################################################################
################################################################
### the modules lists melt-build-script.tpl:698/655

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:703/656 module list quicklybuilt
  meltbuild_info  melt-build-script.tpl:704/657 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-base.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-debug.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-macro.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normal.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-normatch.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-genobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-outobj.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-hooks.quicklybuilt >> $melt_modlis_temp
  
  echo warmelt-modes.quicklybuilt >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:711/658
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-probe.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.quicklybuilt >> $melt_modlis_temp
 
  echo xtramelt-playground.quicklybuilt >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"
else
  meltbuild_info  melt-build-script.tpl:718/659 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:703/660 module list optimized
  meltbuild_info  melt-build-script.tpl:704/661 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.optimized >> $melt_modlis_temp
  
  echo warmelt-base.optimized >> $melt_modlis_temp
  
  echo warmelt-debug.optimized >> $melt_modlis_temp
  
  echo warmelt-macro.optimized >> $melt_modlis_temp
  
  echo warmelt-normal.optimized >> $melt_modlis_temp
  
  echo warmelt-normatch.optimized >> $melt_modlis_temp
  
  echo warmelt-genobj.optimized >> $melt_modlis_temp
  
  echo warmelt-outobj.optimized >> $melt_modlis_temp
  
  echo warmelt-hooks.optimized >> $melt_modlis_temp
  
  echo warmelt-modes.optimized >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:711/662
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.optimized >> $melt_modlis_temp
 
  echo xtramelt-probe.optimized >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.optimized >> $melt_modlis_temp
 
  echo xtramelt-playground.optimized >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"
else
  meltbuild_info  melt-build-script.tpl:718/663 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis"  
fi

if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_translator_stamp \
    -o "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" -ot $melt_final_application_stamp ]; then
  #  melt-build-script.tpl:703/664 module list debugnoline
  meltbuild_info  melt-build-script.tpl:704/665 generating module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
  melt_modlis_temp="meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis-tmp$$"
  echo "# MELT module list file $MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis" >> $melt_modlis_temp
  echo "# MELT translator modules:" >> $melt_modlis_temp
  
  echo warmelt-first.debugnoline >> $melt_modlis_temp
  
  echo warmelt-base.debugnoline >> $melt_modlis_temp
  
  echo warmelt-debug.debugnoline >> $melt_modlis_temp
  
  echo warmelt-macro.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normal.debugnoline >> $melt_modlis_temp
  
  echo warmelt-normatch.debugnoline >> $melt_modlis_temp
  
  echo warmelt-genobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-outobj.debugnoline >> $melt_modlis_temp
  
  echo warmelt-hooks.debugnoline >> $melt_modlis_temp
  
  echo warmelt-modes.debugnoline >> $melt_modlis_temp
 
  #@  melt-build-script.tpl:711/666
  echo "# MELT application modules:" >> $melt_modlis_temp
 
  echo xtramelt-ana-base.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-tree.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-gimple.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-probe.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-ana-simple.debugnoline >> $melt_modlis_temp
 
  echo xtramelt-playground.debugnoline >> $melt_modlis_temp
 
  $GCCMELT_MOVE_IF_CHANGE $melt_modlis_temp  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"
else
  meltbuild_info  melt-build-script.tpl:718/667 keeping module list  "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.debugnoline.modlis"  
fi


#@ melt-build-script.tpl:722/668
if [ ! -f "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis" ]; then
   meltbuild_symlink "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.optimized.modlis" "meltbuild-sources/$MELTGCCBUILTIN_DEFAULT_MODLIS.modlis"
fi

################################################################
#@ melt-build-script.tpl:728/669 module lists
if [ "$melt_overall_goal" = "modlists" ]; then
    meltbuild_info melt-build-script.tpl:730/670 done modlists overall goal with stamp  $melt_final_application_stamp
    exit 0
fi




################################################################
#@ melt-build-script.tpl:738/671 runtime self check

##  melt-build-script.tpl:740/672 FIXME: should skip that when cross-compiler MELT plugin..

if [ -z "$GCCMELT_RUNTIME_CC" ]; then 
    meltbuild_error melt-build-script.tpl:743/673 failed because no GCCMELT_RUNTIME_CC shell variable
    exit 1
fi

meltcheckruntime_stamp=meltbuild-checkruntime.stamp
if [ ! -f $meltcheckruntime_stamp -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_ARGS" \
    -o $meltcheckruntime_stamp -ot "$GCCMELT_RUNTIME_CC" \
    -o $meltcheckruntime_stamp -ot $melt_final_application_stamp ]; then
    #@ melt-build-script.tpl:751/674 checkruntime
    if [ -f melt-no-check-runtime -o -n "$MELTGCC_NO_CHECK_RUNTIME" -o ! -f melt-runtime.i ]; then
	meltbuild_info melt-build-script.tpl:753/675 skipping check of MELT runtime
    else
	meltcheckruntime_args=meltbuild-checkruntime.args 
	meltcheckruntime_argstemp=$meltcheckruntime_args-tmp$$
	echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:757/676"' ' -DGCCMELT_CHECKMELTRUNTIME' > $meltcheckruntime_argstemp
	meltbuild_arg mode=meltframe >> $meltcheckruntime_argstemp
	meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckruntime_argstemp
	meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckruntime_argstemp
	meltbuild_arg source-path=meltbuild-sources >> $meltcheckruntime_argstemp
	meltbuild_arg module-path=meltbuild-modules >> $meltcheckruntime_argstemp
	meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckruntime_argstemp
	meltbuild_arg bootstrapping  >> $meltcheckruntime_argstemp
	echo ' -o /dev/null' >> $meltcheckruntime_argstemp
	echo melt-runtime.i >> $meltcheckruntime_argstemp
	$GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_argstemp $meltcheckruntime_args
	[ -f "$meltcheckruntime_args" ] || meltbuild_error  melt-build-script.tpl:768/677 missing check runtime args  "$meltcheckruntime_args"
	meltbuild_info melt-build-script.tpl:769/678 $meltcheckruntime_args  is
	cat $meltcheckruntime_args < /dev/null >&2
	if [ -n "$MELTGCCBUILTIN_BUILD_WITH_CXX" ]; then
	    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:773/679 failed  $GCCMELT_CC1PLUS with arguments @$meltcheckruntime_args
	else
	    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckruntime_args \
		|| meltbuild_error melt-build-script.tpl:776/680 failed  $GCCMELT_CC1PLUS with arguments @$meltcheckruntime_args
	fi
	meltbuild_info melt-build-script.tpl:778/681 done check runtime with $meltcheckruntime_args
    fi

   #@ melt-build-script.tpl:781/682 checkhello
    meltcheckhelloworld_args=meltbuild-checkhelloworld.args 
    meltcheckhelloworld_argstemp=$meltcheckhelloworld_args-tmp$$
    echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:784/683"' > $meltcheckhelloworld_argstemp
    meltbuild_arg mode=runfile >> $meltcheckhelloworld_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltcheckhelloworld_argstemp
    meltbuild_arg module-makefile=$GCCMELT_MODULE_MK >>  $meltcheckhelloworld_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltcheckhelloworld_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltcheckhelloworld_argstemp
    meltbuild_arg module-path=meltbuild-modules >> $meltcheckhelloworld_argstemp
    meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltcheckhelloworld_argstemp
    date +'(code_chunk hello%j #{puts("hello world from MELT %F @" __TIME__"\n")}#)' > meltbuild-hello.melt-tmp$$
    $GCCMELT_MOVE_IF_CHANGE meltbuild-hello.melt-tmp$$  meltbuild-hello.melt
    meltbuild_arg arg=meltbuild-hello.melt >> $meltcheckhelloworld_argstemp
    echo ' meltbuild-empty-file.c -o /dev/null' >> $meltcheckhelloworld_argstemp
    cat $GCCMELT_HELLOWORLD_ARGS < /dev/null >>  $meltcheckhelloworld_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckhelloworld_argstemp $meltcheckhelloworld_args
    [ -f "$meltcheckhelloworld_args" ] || meltbuild_error  melt-build-script.tpl:798/684 missing check helloworld args  "$meltcheckhelloworld_args"
   meltbuild_info melt-build-script.tpl:799/685 $meltcheckhelloworld_args  is
   cat $meltcheckhelloworld_args < /dev/null >&2
    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltcheckhelloworld_args \
	|| meltbuild_error melt-build-script.tpl:802/686 running helloworld failed with arguments @$meltcheckhelloworld_args
   meltbuild_info melt-build-script.tpl:803/687 done check helloworld with $meltcheckhelloworld_args
   #@ melt-build-script.tpl:804/688 runtime stamp
    meltcheckruntime_stamptemp=$meltcheckruntime_stamp-tmp$$
    [ -f "$GCCMELT_RUNTIME_CC" ] || meltbuild_error melt-build-script.tpl:806/689 missing MELT runtime C++ file $GCCMELT_RUNTIME_CC
    echo "/// MELT check runtime timestamp file $meltcheckruntime_stamp" > $meltcheckruntime_stamptemp
    echo $GCCMELT_RUNTIME_DEPENDENCY_MD5SUM $GCCMELT_RUNTIME_DEPENDENCY >> $meltcheckruntime_stamptemp
    $MD5SUM $GCCMELT_RUNTIME_CC < /dev/null >>  $meltcheckruntime_stamptemp
    $MD5SUM meltbuild-hello.melt < /dev/null >>  $meltcheckruntime_stamptemp
    [ -f "$melt_final_translator_stamp" ] || meltbuild_error melt-build-script.tpl:811/690 missing final translator stamp "$melt_final_translator_stamp"
    [ -f "$melt_final_application_stamp" ] || meltbuild_error melt-build-script.tpl:812/691 missing final application stamp "$melt_final_application_stamp"
    grep meltbuild-modules/ "$melt_final_translator_stamp" "$melt_final_application_stamp" < /dev/null >>   $meltcheckruntime_stamptemp
    echo "///end timestamp file $meltcheckruntime_stamp" >>   $meltcheckruntime_stamptemp
    $GCCMELT_MOVE_IF_CHANGE  $meltcheckruntime_stamptemp $meltcheckruntime_stamp
    meltbuild_info melt-build-script.tpl:816/692 done check runtime  $meltcheckruntime_stamp
else
    meltbuild_info melt-build-script.tpl:818/693 keeping runtime checks  $meltcheckruntime_stamp
fi

if [ "$melt_overall_goal" = "checkruntime" ]; then
    meltbuild_info melt-build-script.tpl:822/694 done checkruntime overall goal with stamp  $meltcheckruntime_stamp
    exit 0
fi
################################################################
################################################################
#@ melt-build-script.tpl:827/695
if [ "$melt_overall_goal" = "regenerate" ]; then
    meltbuild_notice regenerating runtime support melt-build-script.tpl:829/696 
    [ -d meltbuild-sources/generated ] || mkdir meltbuild-sources/generated
    meltregen_args=meltbuild-regen.args
    meltregen_argstemp="$meltregen_args-tmp$$"
    echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:833/697"' > $meltregen_argstemp
   meltbuild_arg mode=runtypesupport >> $meltregen_argstemp
    meltbuild_arg output=meltbuild-sources/generated/meltrunsup >> $meltregen_argstemp
    meltbuild_arg workdir=meltbuild-workdir >>  $meltregen_argstemp
    meltbuild_arg tempdir=meltbuild-tempdir >> $meltregen_argstemp
    meltbuild_arg source-path=meltbuild-sources >> $meltregen_argstemp
    meltbuild_arg module-path=meltbuild-modules >> $meltregen_argstemp
    meltbuild_arg bootstrapping  >> $meltregen_argstemp
    echo meltbuild-empty-file.c >> $meltregen_argstemp
    $GCCMELT_MOVE_IF_CHANGE  $meltregen_argstemp $meltregen_args
   meltbuild_info melt-build-script.tpl:843/698 $meltregen_args  is
   cat $meltregen_args < /dev/null >&2
    $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @$meltregen_args \
	|| meltbuild_error melt-build-script.tpl:846/699 failed with arguments @$meltregen_args
    meltbuild_info melt-build-script.tpl:847/700 done regenerate overall goal
    exit 0
fi

################################################################
################################################################
### the generated documentation meltgendoc.texi melt-build-script.tpl:853/701

if [   ! -f meltgendoc.texi  -o meltbuild-sources/warmelt-first.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-debug.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-macro.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normal.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-normatch.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-genobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-outobj.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-hooks.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/warmelt-modes.melt -nt meltgendoc.texi  \
  -o meltbuild-sources/xtramelt-ana-base.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-tree.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-gimple.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-probe.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-ana-simple.melt -nt meltgendoc.texi  \
 -o meltbuild-sources/xtramelt-playground.melt -nt meltgendoc.texi   ]; then
   meltbuild_info melt-build-script.tpl:857/702 generating meltgendoc.texi
   meltgen_args=meltbuild-gendoc.args-tmp$$
   echo ' -DGCCMELT_FROM_ARG="melt-build-script.tpl:859/703"' > $meltgen_args
   meltbuild_arg mode=makedoc >> $meltgen_args
   meltbuild_arg output=meltgendoc.texi >> $meltgen_args
   meltbuild_arg init=@$MELTGCCBUILTIN_DEFAULT_MODLIS.quicklybuilt >> $meltgen_args
   meltbuild_arg workdir=meltbuild-workdir >>  $meltgen_args
   meltbuild_arg tempdir=meltbuild-tempdir >> $meltgen_args
   meltbuild_arg source-path=meltbuild-sources >> $meltgen_args
   meltbuild_arg module-path=meltbuild-modules >> $meltgen_args
meltbuild_arg "module-cflags=\"$GCCMELT_COMPILER_FLAGS\"" >> $meltgen_args
meltbuild_arg "module-makefile=\"$GCCMELT_MODULE_MK\""  >>  $meltgen_args
   meltbuild_arg bootstrapping  >> $meltgen_args 
   meltbuild_arg arglist=warmelt-first.melt,warmelt-base.melt,warmelt-debug.melt,warmelt-macro.melt,warmelt-normal.melt,warmelt-normatch.melt,warmelt-genobj.melt,warmelt-outobj.melt,warmelt-hooks.melt,warmelt-modes.melt,xtramelt-ana-base.melt,xtramelt-ana-tree.melt,xtramelt-ana-gimple.melt,xtramelt-probe.melt,xtramelt-ana-simple.melt,xtramelt-playground.melt  >> $meltgen_args 
   echo meltbuild-empty-file.c >> $meltgen_args
   $GCCMELT_MOVE_IF_CHANGE  $meltgen_args meltbuild-gendoc.args
   meltbuild_info melt-build-script.tpl:873/704  meltbuild-gendoc.args is
   cat meltbuild-gendoc.args < /dev/null >&2
   $GCCMELT_CC1PLUS_PREFIX $GCCMELT_CC1PLUS @meltbuild-gendoc.args \
     || meltbuild_error melt-build-script.tpl:876/705 failed with arguments @meltbuild-gendoc.args
else
   meltbuild_info melt-build-script.tpl:878/706 keeping meltgendoc.texi
fi

################
meltbuild_info melt-build-script.tpl:882/707 successfully done with times at `date '+%x %H:%M:%S'`: ; times >&2

################################################################
#@ melt-build-script.tpl:885/708
if [ "$melt_overall_goal" = "gendoc" ]; then
    meltbuild_info melt-build-script.tpl:887/709 done gendoc overall goal with stamp  $melt_final_translator_stamp
    exit 0
fi

## #@ melt-build-script.tpl:891/710 if we get here something is wrong in this script
meltbuild_error  melt-build-script.tpl:892/711 unexpected MELT overall goal "$melt_overall_goal" buggy melt-build-script.tpl
#@ eof melt-build-script.tpl:893/712 end of generated melt-build-script.sh
