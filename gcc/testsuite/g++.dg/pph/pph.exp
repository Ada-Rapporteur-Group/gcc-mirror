# Copyright (C) 2011 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# GCC testsuite for preparsed header interaction.

# Contributed by Diego Novillo <dnovillo@google.com>
# Adapted to new command-driven scheme by Lawrence Crowl <crowl@google.com>

# Load support procs.
load_lib "g++-dg.exp"
load_lib dg-pph.exp

# Initialize `dg'.
dg-init

# FIXME set scenarios [list "" "-g" "-O"]
set scenarios [list "" ]

set hdr_tests [lsort [glob -nocomplain $srcdir/$subdir/\[cdepxyz\]*.h]]
set neg_tests [lsort [glob -nocomplain $srcdir/$subdir/\[dy\]*.cc]]
set pos_tests [lsort [glob -nocomplain $srcdir/$subdir/\[cepxz\]*.cc]]

exec ls $srcdir/$subdir | sed -e /^\[cpdxy\].*\.h$/!d -e s/.*/&\t&/ -e s/\.h$/\.pph/ > pph.map
exec echo "math.h	math.pph" >> pph.map
exec echo "stdio.h	stdio.pph" >> pph.map
exec echo "stdlib.h	stdlib.pph" >> pph.map
exec echo "string.h	string.pph" >> pph.map
exec echo "sys/types.h	types.pph" >> pph.map

set mapflag -fpph-map=pph.map

foreach scenario $scenarios {

    set old_dg_do_what_default "${dg-do-what-default}"

    #system headers
    dg-pph-hdr $subdir /usr/include/math.h $scenario "" ".pph"
    dg-pph-hdr $subdir /usr/include/stdio.h $scenario "" ".pph"
    dg-pph-hdr $subdir /usr/include/stdlib.h $scenario "" ".pph"
    dg-pph-hdr $subdir /usr/include/string.h $scenario "" ".pph"
    dg-pph-hdr $subdir /usr/include/sys/types.h $scenario "" ".pph"

    # Header file loop.
    # Each pph header must include only pph headers
    # that are lexicographically earlier than itself.
    foreach test $hdr_tests {
        dg-pph-hdr $subdir $test $scenario $mapflag ".pph"
    }

    # Source file loop for negative tests.
    foreach test $neg_tests {
        dg-pph-neg $subdir $test $scenario $mapflag ".pph"
    }

    # Source file loop for positive tests.
    foreach test $pos_tests {
        dg-pph-pos $subdir $test $scenario $mapflag ".pph"
    }

    set dg-do-what-default "$old_dg_do_what_default"

}

# All done.
dg-finish
