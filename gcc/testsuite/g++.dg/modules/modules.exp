# Copyright (C) 2017 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.
#
# Contributed by Nathan Sidwell <nathan@acm.org>


# Test C++ modules, which requires multiple TUs
#
# A test case might consist of multiple source files, each is compiled
# separately, in a well-defined order. The resulting object files might
# be optionally linked and optionally executed. Grouping is indicated by
# naming files '*_[a-z].C'

load_lib g++-dg.exp
load_lib mpx-dg.exp

# If a testcase doesn't have special options, use these.
global DEFAULT_CXXFLAGS
set DEFAULT_MODFLAGS $DEFAULT_CXXFLAGS
lappend DEFAULT_MODFLAGS "-fmodules"

dg-init

# not grouped tests, sadly tcl doesn't have negated glob
foreach src [prune [lsort [find $srcdir/$subdir "*.C"]] \
	     "$srcdir/$subdir/*_?.C"] {
    g++-dg-runtest $src "" $DEFAULT_MODFLAGS
}

# grouped tests
foreach src [lsort [find $srcdir/$subdir "*_a.C"]] {
    # use the FOO_a.C name as the parallelization key
    if [runtest_file_p $runtests $src] {
	set srcs [lsort [find [file dirname $src] \
			 [regsub {_a.C$} [file tail $src] {_[a-z].C}]]]
	verbose "Modules $srcs" 1
	foreach test $srcs {
	    dg-test -keep-output $test "" $DEFAULT_MODFLAGS
	}
	# FIXME: deal with deleting module files
    }
}

dg-finish
