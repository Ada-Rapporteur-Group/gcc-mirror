2012-02-13   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x7dynarray5.cc: Add expected failure due to
	type canonical mismatch.

2012-02-06   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x0string-escapes.h: New.
	* g++.dg/pph/x1string-escapes.h: New.
	* g++.dg/pph/x2string-escapes.cc: New.

2012-02-01   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x4structover1.cc: Mark fixed.
	* g++.dg/pph/a0incomplete2.hi: New.
	* g++.dg/pph/a0incomplete3.hi: New.
	* g++.dg/pph/a0incomplete4.cci: New.
	* g++.dg/pph/x0incomplete1.h: New.
	* g++.dg/pph/x0incomplete2.h: New.
	* g++.dg/pph/x0incomplete3.h: New.
	* g++.dg/pph/x1incomplete3.h: New.
	* g++.dg/pph/x1incomplete4.cc: New.
	* g++.dg/pph/x2incomplete4.cc: New.
	* g++.dg/pph/x3incomplete412.cc: New.
	* g++.dg/pph/x3incomplete413.cc: New.
	* g++.dg/pph/x4incomplete4123.cc: New.
	* g++.dg/pph/x4incomplete4321.cc: New.

2012-02-01   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/c0struct.h: Rename to c0struct2.h.
	* g++.dg/pph/c0struct1.h: New.  Has no typedefs.
	* g++.dg/pph/c1struct.cc: Rename to c1struct2.cc.
	* g++.dg/pph/c1struct1.cc: New.  Has no typedefs.
	* g++.dg/pph/x0struct0.h: Rename to x0struct2.h.
	* g++.dg/pph/x0struct1.h: New.  Has no typedefs.
	* g++.dg/pph/x1struct2.h: Rename to x1struct3.h.
	* g++.dg/pph/x1struct1.h: Rename to x1struct2.h.
	* g++.dg/pph/x1struct1.h: New.  Has no typedefs.
	* g++.dg/pph/x2struct2.cc: Rename to x2struct3.cc.
	* g++.dg/pph/x2struct1.cc: Rename to x2struct2.cc.
	* g++.dg/pph/x2struct1.cc: New.  Has no typedefs.

2012-01-31   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1namespace-alias2.cc: Mark fixed.
	* g++.dg/pph/x6dynarray4.cc: Remove expected ICE.
	* g++.dg/pph/x7dynarray5.cc: Remove expected ICE.

2012-01-27   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/pph.exp: Remove PPH images before running the tests.
	* g++.dg/pph/x1circular.h: New.
	* g++.dg/pph/x2circular.h: New.
	* g++.dg/pph/x3circular.cc: New.

2012-01-26   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x1tmplclass1.cc: Mark passing.
	* g++.dg/pph/x1tmplclass2.cc: Mark okay.
	* g++.dg/pph/x4tmplclass1.cc: Mark okay.
	* g++.dg/pph/x4tmplclass2.cc: Change failure.
	* g++.dg/pph/z4tmplclass1.cc: Change failure.
	* g++.dg/pph/z4tmplclass2.cc: Change failure.

2012-01-26   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x0multiple-include.h: New.
	* g++.dg/pph/x1multiple-include.h: New.
	* g++.dg/pph/x2multiple-include.h: New.
	* g++.dg/pph/x3multiple-include.h: New.
	* g++.dg/pph/x4multiple-include.cc: New.

2012-01-24   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x0samename3.h: New passing.
	* g++.dg/pph/x1samename.cc: New passing.
	* g++.dg/pph/x4samename.cc: Mark passing.
	* g++.dg/pph/x4resolve1.cc: Change passing assembler diff code.
	* g++.dg/pph/x4resolve2.cc: Change passing assembler diff code.
	* g++.dg/pph/x6dynarray3.cc: Remove two bogus errors.
	* g++.dg/pph/x5dynarray7.h: Add one bogus error.
	* g++.dg/pph/x6dynarray6.h: Add one bogus error.

2012-01-24   Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp: Add an asm 'xokay' for benign assembly differences.
	* g++.dg/pph/x4keyno.cc: Bug fixed, now xokay.
	* g++.dg/pph/x4keyed.cc: Bug fixed, now xokay.
	* g++.dg/pph/x4keyex.cc: Mark xokay.
	* g++.dg/pph/x4tmplclass1.cc: Mark xokay.
	* g++.dg/pph/x1tmplclass2.cc: Clarify failure.
	* g++.dg/pph/x4tmplclass2.cc: Clarify failure.

2012-01-20   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1namespace-alias2.cc: Remove expected ICE.
	Document assembly difference.

2011-01-20   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x4overset1.cc: Make passing.
	* g++.dg/pph/x4overset2.cc: Make wanted assembly diff.
	* g++.dg/pph/x4overset3.cc: Make passing.
	* g++.dg/pph/x4overset4.cc: Make wanted assembly diff.
	* g++.dg/pph/x6dynarray3.cc: Change xfail signature.

2012-01-18   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/d0include-next.h: New.

2011-01-17   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x6dynarray3.cc: Add expected overload failures.
	* g++.dg/pph/x4namespace.cc: Remove expected failures.
	* g++.dg/pph/x4overset1.cc: Add expected overload asm diff failure.
	* g++.dg/pph/x4overset2.cc: Likewise.
	* g++.dg/pph/x4overset3.cc: Likewise.
	* g++.dg/pph/x4overset4.cc: Likewise.
	* g++.dg/pph/x0namespace.h: Add spacing.
	* g++.dg/pph/x0namespace2.h: Likewise.

2012-01-16   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1deepincl4.h: New.
	* g++.dg/pph/c2deepincl3.h: Include it.
	* g++.dg/pph/c2deepincl.cc: Use b4.

2011-12-09   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/d1symnotinc.cc: Expect warning.
	* g++.dg/pph/y8inc-nmspc.cc: Likewise.

2011-12-05   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1namespace-alias1.cc: Rename from x1namespace-alias.cc
	* g++.dg/pph/x1namespace-alias1.h: New.
	* g++.dg/pph/x1namespace-alias2.cc: New.
	* g++.dg/pph/x1namespace-alias2.h: New.

2011-12-05   Diego Novillo  <dnovillo@google.com>

	g++.dg/pph/x0namespace-alias.h: New.
	g++.dg/pph/x1namespace-alias.cc: New.

2011-11-30   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/c0anticipated.h: New.
	* g++.dg/pph/c1anticipated.cc: New.
	* g++.dg/pph/x0samename1.h: New.
	* g++.dg/pph/x0samename2.h: New.
	* g++.dg/pph/x4samename.cc: New.

2011-11-22   Diego Novillo  <dnovillo@google.com>

	* lib/dg-pph.exp: Set dg-final-code to "".

2011-11-22   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x4tmplfuncinln.cc: Do not expect excess errors.
	* g++.dg/pph/x4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/z4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/z4tmplfuncninl.cc: Likewise.

2011-11-07   Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Recognize bogus errors.
	* g++.dg/pph/x0namespace2.h: New.
	* g++.dg/pph/x4namespace.cc: New.

2011-10-29   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1keyed.cc: Mark fixed.
	* g++.dg/pph/x1keyno.cc: Likewise.
	* g++.dg/pph/x6rtti.cc: Remove ICE failure.  Document operator match
	problem.
	* g++.dg/pph/x7rtti.cc: Likewise.
	* g++.dg/pph/x1tmplclass2.cc: Document asm diff to out-of-order diff.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.
	* g++.dg/pph/x4keyex.cc: Likewise.
	* g++.dg/pph/x4keyed.cc: Change failure to typeinfo redefinition.
	* g++.dg/pph/x4keyno.cc: Likewise.

2011-10-26   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c4inline.cc: Mark fixed.
	* g++.dg/pph/x4tmplclass1.cc: Likewise.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplclass1.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.
	* g++.dg/pph/x4tmplfuncinln.cc: Change expected failure.
	* g++.dg/pph/x4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/z4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/z4tmplfuncninl.cc: Likewise.

2011-10-22   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1limits-externalid.cc: Mark fixed.

2011-10-17   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x6dynarray4.cc: Also expect an ICE.
	* g++.dg/pph/x7dynarray5.cc: Likewise.

2011-10-16   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/c4inline.cc: Change to ICE in cgraph.
	* g++.dg/pph/x1keyed.cc: Likewise.
	* g++.dg/pph/x1keyno.cc: Likewise.
	* g++.dg/pph/x4keyed.cc: Likewise.
	* g++.dg/pph/x4keyex.cc: Likewise.
	* g++.dg/pph/x4keyno.cc: Likewise.
	* g++.dg/pph/x4tmplclass1.cc: Likewise.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/x4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/x4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/x6rtti.cc: Likewise.
	* g++.dg/pph/x7rtti.cc: Likewise.
	* g++.dg/pph/z4tmplclass1.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/z4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/x1tmplclass2.cc: Change to missing function.
	* g++.dg/pph/x0overset0.cc: New.
	* g++.dg/pph/x1overset1.cc: New.
	* g++.dg/pph/x1overset2.cc: New.
	* g++.dg/pph/x2overset1.cc: New.
	* g++.dg/pph/x2overset2.cc: New.
	* g++.dg/pph/x4overset1.cc: New.
	* g++.dg/pph/x4overset2.cc: New.
	* g++.dg/pph/x4overset3.cc: New.
	* g++.dg/pph/x4overset4.cc: New.

2011-10-16   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x4tmplfuncinln.cc: Change failure to ICE.
	* g++.dg/pph/x4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/z4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/z4tmplfuncninl.cc: Likewise.

2011-10-16   Diego Novillo  <dnovillo@google.com>

	* gcc.dg/plugin/selfassign.c (check_self_assign): Rename
	from warn_self_assign.
	* g++.dg/plugin/selfassign.c (check_self_assign): Likewise.

2011-10-14   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/c3variables.cc: Mark fixed.
	* g++.dg/pph/c4vardef.cc: Mark fixed.
	* g++.dg/pph/e4variables.cc: Mark fixed.
	* g++.dg/pph/z4nontrivinit.cc: Mark with fewer failures.

2011-10-14   Diego Novillo  <dnovillo@google.com>

	* testsuite/g++.dg/pph/c1limits-externalid.cc: Restore timeout.

2011-10-13   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1limits-externalid.cc: Mark fixed.

2011-10-13   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/README: Put z files in regular expression.
	* g++.dg/pph/x3hardorder.cc: Mark passing.
	* g++.dg/pph/c1limits-externalid.cc: Add triage comment.
	* g++.dg/pph/e4variables.cc: Likewise.
	* g++.dg/pph/x1tmplclass1.cc: Likewise.
	* g++.dg/pph/x1tmplclass2.cc: Likewise.
	* g++.dg/pph/x4keyed.cc: Likewise.
	* g++.dg/pph/x4keyex.cc: Likewise.
	* g++.dg/pph/x4keyno.cc: Likewise.
	* g++.dg/pph/x4resolve1.cc: Likewise.
	* g++.dg/pph/x4resolve2.cc: Likewise.
	* g++.dg/pph/x4structover1.cc: Likewise.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/x4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/x4tmplfuncninl.cc: Likewise.
	* g++.dg/pph/x6dynarray3.cc: Likewise.
	* g++.dg/pph/x6dynarray4.cc: Likewise.
	* g++.dg/pph/x6rtti.cc: Likewise.
	* g++.dg/pph/x7dynarray5.cc: Likewise.
	* g++.dg/pph/x7rtti.cc: Likewise.
	* g++.dg/pph/z4nontrivinit.cc: Likewise.
	* g++.dg/pph/z4tmplclass1.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplfuncinln.cc: Likewise.
	* g++.dg/pph/z4tmplfuncninl.cc: Likewise.

2011-10-13   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/p2pr36533.cc: Mark fixed.
	* g++.dg/pph/p4mean.cc: Likewise.
	* g++.dg/pph/p4pr36533.cc: Likewise.

2011-10-13   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1limits-externalid.cc: Add shorter timeout.
	Document failure mode.

2011-10-12   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/p2pr36533.cc: Mark expected fail on unexpanded intrinsic.
	* g++.dg/pph/p4pr36533.cc: Likewise.
	* g++.dg/pph/p4mean.cc: Likewise.
	* g++.dg/pph/c3variables.cc: Comment on reason for fail.
	* g++.dg/pph/c4vardef.cc: Likewise.

2011-10-11   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/d1symnotinc.cc: Change expected error.
	* g++.dg/pph/x7dynarray6.cc: Likewise.
	* g++.dg/pph/x7dynarray7.cc: Likewise.
	* g++.dg/pph/x5dynarray7.h: Mark fixed.
	* g++.dg/pph/x6dynarray6.h: Mark fixed.

2011-10-06   Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/c4inline.cc: Clarify failure.
	* g++.dg/pph/x4keyno.cc: Clarify failure.
	* g++.dg/pph/x4keyex.cc: Clarify failure.
	* g++.dg/pph/x4keyed.cc: Clarify failure.
	* g++.dg/pph/x0tmplclass23.h: Fix header guard variables.

2011-10-05   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1tmplclass1.cc: Document likely cause of asm difference.
	* g++.dg/pph/x1tmplclass2.cc: Likewise.
	* g++.dg/pph/x4tmplclass1.cc: Likewise.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplclass1.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.

2011-10-05   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/y9overlaad.cc: Add comment on expected
	diagnostic.

2011-10-05   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1tmplclass2.cc: Mark partially fixed.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.

2011-10-03   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x6dynarray4.cc: Mark partially fixed.
	* g++.dg/pph/x7dynarray5.cc: Mark partially fixed.

2011-10-01   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/p4mean.cc: Remove XFAILs.  Add -w -fpermissive flags.

2011-09-27   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x0asm1.h: New.
	* g++.dg/pph/x1asm1.cc: New.

2011-09-12   Lawrence Crowl  <crowl@google.com>

        * lib/dg-pph.exp: Restore -fno-dwarf2-cfi-asm option for
        stability across platforms.

2011-09-11   Diego Novillo  <dnovillo@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Do not compile base cases with
	dg-test.  Use g++-dg-test and g++-dg-prune to build base cases.

2011-09-09   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x6dynarray3.cc: Change failure from ICE to asm diff.
	* g++.dg/pph/x6dynarray4.cc: Change expected failure.
	* g++.dg/pph/x6dynarray5.h: Mark fixed.
	* g++.dg/pph/x6dynarray6.h: Mark fixed.
	* g++.dg/pph/x7dynarray5.cc: Change expected failure.

2011-09-07   Lawrence Crowl  <crowl@google.com>

	* a0vardef.h: New.
	* c0vardef1.h: New.
	* x4structover1.cc: New.
	* c0vardef2.h: New.
	* x0structover1.h: New.
	* c4vardef.cc: New.
	* x4structover2.cc: New.
	* x0structover2.h: New.
	* x4resolve1.cc: Add more overloaded calls.
	* x4resolve2.cc: Add more overloaded calls.

2011-08-29   Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp: Move -fno-dwarf2-cfi-asm to end of command line.
	Add recognition of "pph asm xwant" when we desire assembly differences
	between pph and non-pph.
	* g++.dg/pph/x0keyno1.h: Correct test to not have a key method.
	* g++.dg/pph/x0keyno2.h: Likewise.
	* g++.dg/pph/x1keyno.cc: Likewise.
	* g++.dg/pph/x4keyno.cc: Likewise.
	* g++.dg/pph/x4keyex.cc: New.  Add test to capture the broken behavior
	in the original key4no.cc.
	* g++.dg/pph/x7rtti.cc: Eliminate an unresolved test by turning off
	dg-run until the compilation problems are fixed.
	* g++.dg/pph/x0resolve1.h: New test for overload behavior.
	* g++.dg/pph/x0resolve2.h: Likewise.
	* g++.dg/pph/x1resolve1.cc: Likewise.
	* g++.dg/pph/x1resolve2.cc: Likewise.
	* g++.dg/pph/x4resolve1.cc: Likewise.
	* g++.dg/pph/x4resolve2.cc: Likewise.

2011-08-26   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x7rtti.cc: Adjust line numbers for expected errors.

2011-08-25   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/pph.exp: Do not create a PPH image for sys/types.h.
	* g++.dg/pph/y8inc-nmspc.cc: Mark fixed.

2011-08-25   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x7rtti.cc: Make it executable.

2011-08-25   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1keyed.cc: Mark fixed.
	* g++.dg/pph/x1keyno.cc: Mark fixed.
	* g++.dg/pph/x4keyno.cc: Change asm diff signature.  Document
	source of difference.

2011-08-23  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/p4eabi1.h: Remove fixed FIXME.

2011-08-22   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1dynarray1.cc: Mark fixed.
	* g++.dg/pph/x1dynarray2a.cc: Mark fixed.
	* g++.dg/pph/x1dynarray2b.cc: Mark fixed.

2011-08-19  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/p4eabi1.cc: Remove asm xdiff.
	* g++.dg/pph/x4keyed.cc: Changed line info for expected failure.
	* g++.dg/pph/x7rtti.cc: Changed line info for expected failures.

2011-08-18  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c2deepincl.cc: Remove asm xdiff.

2011-08-16  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c0deepincl1.h: New.
	* g++.dg/pph/c1deepincl2.h: New.
	* g++.dg/pph/c2deepincl3.h: New.
	* g++.dg/pph/c2deepincl.cc: New asm xdiff.

2011-08-15   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1tmplclass2.cc: Update expected ICE.
	* g++.dg/pph/x4tmplclass2.cc: Update expected ICE.
	* g++.dg/pph/z4tmplclass2.cc: Update expected ICE.

2011-08-10   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1tmplclass2.cc: Update expected ICE message.
	* g++.dg/pph/x4tmplclass2.cc: Likewise.
	* g++.dg/pph/z4tmplclass2.cc: Likewise.

2011-08-10  Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp: Compile with -fno-dwarf2-cfi-asm to reduce
	environmental differences.
	* g++.dg/pph/z0expinstnin1.h: Remove in favor of new tests.
	* g++.dg/pph/x0tmplfuncninl3.h: New.
	* g++.dg/pph/x0tmplclass12.h: New.
	* g++.dg/pph/a0tmplfuncninl_u.h: New.
	* g++.dg/pph/x4tmplfuncninl.cc: New.
	* g++.dg/pph/z4tmplfuncninl.cc: New.
	* g++.dg/pph/x0tmplclass2.h: Remove in favor of new tests.
	* g++.dg/pph/x1tmplfunc.cc: Remove in favor of new tests.
	* g++.dg/pph/x0tmplfunc.h: Remove in favor of new tests.
	* g++.dg/pph/x0tmplfuncinln3.h: New.
	* g++.dg/pph/x0template2.h: Remove in favor of new tests.
	* g++.dg/pph/z4expinstinl.cc: Remove in favor of new tests.
	* g++.dg/pph/x0tmplclass21.h: New.
	* g++.dg/pph/a0tmplfuncinln_u.h: New.
	* g++.dg/pph/x4tmplfuncinln.cc: New.
	* g++.dg/pph/z4tmplfuncinln.cc: New.
	* g++.dg/pph/z0expinstnin2.h: Remove in favor of new tests.
	* g++.dg/pph/a0template.h: Remove in favor of new tests.
	* g++.dg/pph/pph.exp: Enable e and z tests.
	* g++.dg/pph/z4tmplclass2.cc: New.
	* g++.dg/pph/x0tmplfuncninl4.h: New.
	* g++.dg/pph/a0tmplclass2_g.h: New.
	* g++.dg/pph/x0tmplclass13.h: New.
	* g++.dg/pph/x1template.cc: Remove in favor of new tests.
	* g++.dg/pph/a0tmplclass2_s.h: New.
	* g++.dg/pph/a0tmplclass1_u.h: New.
	* g++.dg/pph/x4tmplclass1.cc: New.
	* g++.dg/pph/x0tmplfuncinln4.h: New.
	* g++.dg/pph/x1tmplclass.cc: Remove in favor of new tests.
	* g++.dg/pph/a0expinstinl.h: Remove in favor of new tests.
	* g++.dg/pph/x0tmplclass22.h: New.
	* g++.dg/pph/x1tmplfuncninl.cc: New.
	* g++.dg/pph/a0tmplclass.h: Remove in favor of new tests.
	* g++.dg/pph/x4template.cc: Remove in favor of new tests.
	* g++.dg/pph/x1tmplclass1.cc: New.
	* g++.dg/pph/z4nontrivinit.cc: Add xdiff.
	* g++.dg/pph/e4variables.cc: Add xdiff.
	* g++.dg/pph/a0tmplfuncninl_g.h: New.
	* g++.dg/pph/x0tmplfuncninl1.h: New.
	* g++.dg/pph/z4expinstnin.cc: Remove in favor of new tests.
	* g++.dg/pph/a0tmplfuncninl_s.h: New.
	* g++.dg/pph/x0tmplclass14.h: New.
	* g++.dg/pph/a0expinstnin.h: Remove in favor of new tests.
	* g++.dg/pph/x1tmplfuncinln.cc: New.
	* g++.dg/pph/z0expinstinl1.h: Remove in favor of new tests.
	* g++.dg/pph/a0tmplfuncinln_g.h: New.
	* g++.dg/pph/x0tmplfuncinln1.h: New.
	* g++.dg/pph/a0tmplfuncinln_s.h: New.
	* g++.dg/pph/x0tmplclass23.h: New.
	* g++.dg/pph/x4tmplclass2.cc: New.
	* g++.dg/pph/x0tmplfuncninl2.h: New.
	* g++.dg/pph/a0tmplclass1_g.h: New.
	* g++.dg/pph/x0tmplclass11.h: New.
	* g++.dg/pph/e4noninline.cc: Remove xdiff.
	* g++.dg/pph/a0tmplclass1_s.h: New.
	* g++.dg/pph/z0expinstinl2.h: Remove in favor of new tests.
	* g++.dg/pph/a0tmplclass2_u.h: New.
	* g++.dg/pph/x0tmplclass1.h: Remove in favor of new tests.
	* g++.dg/pph/x1tmplclass2.cc: New.
	* g++.dg/pph/z4tmplclass1.cc: New.
	* g++.dg/pph/x0tmplfuncinln2.h: New.
	* g++.dg/pph/x0template1.h: Remove in favor of new tests.
	* g++.dg/pph/x0tmplclass24.h: New.

2011-08-10  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/x5dynarray7.h: Remove 2 bogus errors.
	* g++.dg/pph/x6dynarray6.h: Remove 2 bogus errors.
	Add 2 bogus errors.
	* g++.dg/pph/x7dynarray5.cc: Remove 2 bogus errors.
	* g++.dg/pph/x7dynarray6.cc: Remove 2 bogus errors.
	* g++.dg/pph/x7dynarray7.cc: Remove 2 bogus errors.

2011-08-09   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c4inline.cc: Update asm diff checksum.
	* g++.dg/pph/x1keyed.cc: Likewise.
	* g++.dg/pph/x1keyno.cc: Likewise.
	* g++.dg/pph/x4keyno.cc: Likewise.
	* g++.dg/pph/x4template.cc: Likewise.
	* g++.dg/pph/x6dynarray3.cc: Update expected ICE location.

2011-08-08  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x6dynarray4.cc: Remove dg-prune-output.
	* g++.dg/pph/x4keyed.cc: Adjust line numbers to conflicting commit.
	Remove 'previously defined' match.
	* g++.dg/pph/c3rawstruct.s: Remove inadvertently committed temporary
	file.
	* g++.dg/pph/x6dynarray5.h: Add bogus error.
        * g++.dg/pph/x6rtti.cc: Remove dg-bogus lines.  (The errors are
	present and bogus, but matching is not working.)
	* g++.dg/pph/x7rtti.cc: Adjust line numbers to conflicting commit.

2011-08-08  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/x0hardorder1.h: New.
	* g++.dg/pph/x3hardorder2.h: New.
	* g++.dg/pph/x3hardorder.cc: New.

2011-08-04  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/README: Add new file types.
	* g++.dg/pph/a0expinstinl.h: New.
	* g++.dg/pph/a0expinstnin.h: New.
	* g++.dg/pph/a0inline.h: New.
	* g++.dg/pph/a0keyed.h: New.
	* g++.dg/pph/a0keyno.h: New.
	* g++.dg/pph/a0noninline.h: New.
	* g++.dg/pph/a0nontrivinit.h: New.
	* g++.dg/pph/a0rawstruct.h: New.
	* g++.dg/pph/a0rtti.h: New.
	* g++.dg/pph/a0template.h: New.
	* g++.dg/pph/a0tmplclass.h: New.
	* g++.dg/pph/a0typedef.h: New.
	* g++.dg/pph/a0variables1.h: New.
	* g++.dg/pph/a0variables2.h: New.
	* g++.dg/pph/c0inline1.h: New.
	* g++.dg/pph/c0inline2.h: New.
	* g++.dg/pph/c0rawstruct1.h: New.
	* g++.dg/pph/c0rawstruct2.h: New.
	* g++.dg/pph/c0typedef1.h: New.
	* g++.dg/pph/c0typedef2.h: New.
	* g++.dg/pph/c0variables.h: Contents to a0variables.h.
	Renamed to c0variables1.h.
	* g++.dg/pph/c0variables1.h: New.
	* g++.dg/pph/c0variables2.h: New.
	* g++.dg/pph/c0variables3.h: New.
	* g++.dg/pph/c0variables4.h: New.
	* g++.dg/pph/c1variables.cc: Handle renaming.
	* g++.dg/pph/c3rawstruct.cc: New.
	* g++.dg/pph/c3rawstruct.s: New.
	* g++.dg/pph/c3typedef.cc: New.
	* g++.dg/pph/c3variables.cc: New.
	* g++.dg/pph/c4inline.cc: New.
	* g++.dg/pph/e0noninline1.h: New.
	* g++.dg/pph/e0noninline2.h: New.
	* g++.dg/pph/e4noninline.cc: New.
	* g++.dg/pph/e4variables.cc: New.
	* g++.dg/pph/pph.exp: Add FIXME.
	* g++.dg/pph/x0keyed1.h: New.
	* g++.dg/pph/x0keyed2.h: New.
	* g++.dg/pph/x0keyno1.h: New.
	* g++.dg/pph/x0keyno2.h: New.
	* g++.dg/pph/x0nontrivinit.h: Contents to a0nontrivinit.h.
	Renamed to x0nontrivinit1.h.
	* g++.dg/pph/x0nontrivinit1.h: Renamed from x0nontrivinit.h.
	* g++.dg/pph/x0nontrivinit2.h: New.
	* g++.dg/pph/x0template.h: Contents to a0template.h.
	Renamed to x0template1.h.
	* g++.dg/pph/x0template1.h: Renamed from x0template.
	* g++.dg/pph/x0template2.h: New.
	* g++.dg/pph/x0tmplclass.h: Contents to a0tmplclass.h.
	Renamed to x0tmplclass1.h.
	* g++.dg/pph/x0tmplclass1.h: Renamed from x0tmplclass.h.
	* g++.dg/pph/x0tmplclass2.h: New.
	* g++.dg/pph/x1keyed.cc: New.
	* g++.dg/pph/x1keyno.cc: New.
	* g++.dg/pph/x1nontrivinit.cc: Handle renaming.
	* g++.dg/pph/x1template.cc: Handle renaming.
	* g++.dg/pph/x1tmplclass.cc: Handle renaming.
	* g++.dg/pph/x1variables.h: Handle renaming.
	* g++.dg/pph/x4keyed.cc: New.
	* g++.dg/pph/x4keyno.cc: New.
	* g++.dg/pph/x4template.cc: New.
	* g++.dg/pph/x5rtti1.h: New.
	* g++.dg/pph/x5rtti2.h: New.
	* g++.dg/pph/x6rtti.cc: New.
	* g++.dg/pph/x7rtti.cc: New.
	* g++.dg/pph/z0expinstinl1.h: New.
	* g++.dg/pph/z0expinstinl2.h: New.
	* g++.dg/pph/z0expinstnin1.h: New.
	* g++.dg/pph/z0expinstnin2.h: New.
	* g++.dg/pph/z4expinstinl.cc: New.
	* g++.dg/pph/z4expinstnin.cc: New.
	* g++.dg/pph/z4nontrivinit.cc: New.

2011-08-04   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1pr44948-1a.cc: Use the same flags as the header file.
	Mark fixed.

2011-07-25  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x1tmplclass.cc: Remove expected failure.

2011-07-22  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1eabi1.cc: Change expected diff checksum.
	* g++.dg/pph/p4eabi1.cc: Change expected diff checksum.
	* lib/dg-pph.exp (dg-pph-pos): Ignore line numbers in diff checksum.
	Split long output message, using sumMessage, to respect 80 cols limit.

2011-07-18  Gabriel Charette  <gchare@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Output actualSum on unexpected diff.
	Use native TCL functions instead of exec calls to tr and cut.

2011-07-18  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1builtin-integral.cc: Don't expect asm diff.
	Pass in -ffinite-math-only -fno-math-errno flags when compiling C file.

2011-07-15  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1builtin-integral.cc: Add expected diff checksum.
	* g++.dg/pph/c1eabi1.cc: Add expected diff checksum.
	* g++.dg/pph/p4eabi1.cc: Add expected diff checksum.
	* lib/dg-pph.exp (dg-pph-pos): Expect checksums for pph asm xdiff.

2011-07-14  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1pr44948-1a.cc: Adjust expected failure.
	* g++.dg/pph/x0hardlookup.h: Add new symbol in global namespace.
	* g++.dg/pph/c4meteor-contest.cc: Mark fixed.
	* g++.dg/pph/c1attr-warn-unused.cc: Likewise.
	* g++.dg/pph/x1globalref.cc: Likewise.
	* g++.dg/pph/x1hardlookup.cc: Likewise.

2011-07-12  Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Add support for link tests.
	(dg-pph-neg): Remove incorrect -fpph-gen option.
	Delete unneeded assembly files.
	(dg-pph-hdr): Delete unneeded assembly files.
	* g++.dg/pph/pph.exp: Autogenerate pph.map instead of manual tracking.
	Recognise headers with any prefix in [cdpxy].
	* g++.dg/pph/pph.map: Remove.
	* g++.dg/pph/c1pr36533.h: Rename to p1pr36533.h; edit deps.
	* g++.dg/pph/c1pr36533.cc: Rename to p1pr36533.cc.
	* g++.dg/pph/c4eabi1.h: Rename to p4eabi1.h; edit deps.
	* g++.dg/pph/c4eabi1.cc: Rename to p4eabi1.cc.
	* g++.dg/pph/c4meteor-contest.h: Rename to p4meteor-contest.h;
	edit deps.
	* g++.dg/pph/c4meteor-contest.cc: Rename to p4meteor-contest.cc.
	* g++.dg/pph/c4pr36533.h: Rename to p4pr36533.h; edit deps.
	* g++.dg/pph/c4pr36533.cc: Rename to p4pr36533.cc.
	* g++.dg/pph/c1eabi1.cc: Correct test expectation.
	* g++.dg/pph/x1dynarray1.cc: Make link test; correct test expectation.
	* g++.dg/pph/x1dynarray2a.cc: Make link test; correct test expectation.
	* g++.dg/pph/x1dynarray2b.cc: Make link test; correct test expectation.
	* g++.dg/pph/x6dynarray3.cc: Correct test expectation.
	* g++.dg/pph/x6dynarray4.cc: Correct test expectation.
	* g++.dg/pph/x6dynarray5.cc: Correct test expectation.

2011-07-12  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1pr44948-1a.cc: Mark fixed.
	* g++.dg/pph/c2pr36533.cc: Mark fixed.
	* g++.dg/pph/x2functions.cc: Mark fixed.

2011-07-12  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c4pr36533.cc: Mark fixed.

2011-07-11  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/README: Explain new naming scheme.
	* g++.dg/pph/c120060625-1.cc: Rename to c1-20060625-1.cc.
	* g++.dg/pph/c120060625-1.h: Rename to c0-20060625-1.h; edit deps.
	* g++.dg/pph/c1altinc.cc: Rename to c3altinc.cc.
	* g++.dg/pph/c1altinc1.h: Rename to c0altinc1.h; edit deps.
	* g++.dg/pph/c1altinc2.h: Rename to c3altinc2.h; edit deps.
	* g++.dg/pph/c1attr-warn-unused-result.cc: Rename to
	c1attr-warn-unused.cc.
	* g++.dg/pph/c1attr-warn-unused-result.h: Rename to
	c0attr-warn-unused.h; edit deps.
	* g++.dg/pph/x1autometh.h: Rename to x0autometh.h; edit deps.
	* g++.dg/pph/c1builtin-integral-1.cc: Rename to c1builtin-integral.cc.
	* g++.dg/pph/c1builtin-integral-1.h: Rename to c0builtin-integral.h;
	edit deps.
	* g++.dg/pph/c1builtin-object-size-2.cc: Rename to c1builtin-objsize.cc.
	* g++.dg/pph/c1builtin-object-size-2.h: Rename to c0builtin-objsize.h;
	edit deps.
	* g++.dg/pph/c2builtin1.cc: Rename to c3builtin1.cc.
	* g++.dg/pph/c2builtin1.h: Rename to c0builtin1.h; edit deps.
	* g++.dg/pph/c2builtin2.cc: Rename to c3builtin2.cc.
	* g++.dg/pph/c2builtin2.h: Rename to c1builtin2.h; edit deps.
	* g++.dg/pph/c2builtin3.h: Rename to c1builtin3.h; edit deps.
	* g++.dg/pph/a2builtin4.h: Rename to a0builtin4.h; edit deps.
	* g++.dg/pph/c2builtin5.h: Rename to c0builtin5.h; edit deps.
	* g++.dg/pph/c2builtin6.h: Rename to c0builtin6.h; edit deps.
	* g++.dg/pph/c1chained1.h: Rename to c0chained1.h; edit deps.
	* g++.dg/pph/c1chained2.h: Rename to c0chained2.h; edit deps.
	* g++.dg/pph/d2dupguard.cc: Rename to d8dupguard.cc.
	* g++.dg/pph/c2dupguard1.h: Rename to c0dupguard1.h; edit deps.
	* g++.dg/pph/c2dupguard2.h: Rename to c0dupguard2.h; edit deps.
	* g++.dg/pph/a1dynarray-dcl1.hi: Rename to a0dynarray-dcl1.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dcl2a.hi: Rename to a0dynarray-dcl2a.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dcl2b.hi: Rename to a0dynarray-dcl2b.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dcl3.hi: Rename to a0dynarray-dcl3.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dcl4.hi: Rename to a0dynarray-dcl4.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn1a.hi: Rename to a0dynarray-dfn1a.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn1b.hi: Rename to a0dynarray-dfn1b.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn2a.hi: Rename to a0dynarray-dfn2a.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn2b.hi: Rename to a0dynarray-dfn2b.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn2c.hi: Rename to a0dynarray-dfn2c.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn3a.hi: Rename to a0dynarray-dfn3a.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn3b.hi: Rename to a0dynarray-dfn3b.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-dfn3c.hi: Rename to a0dynarray-dfn3c.hi;
	edit deps.
	* g++.dg/pph/a1dynarray-hlp1.cci: Rename to a0dynarray-hlp1.cci.
	* g++.dg/pph/a1dynarray-use1.cci: Rename to a0dynarray-use1.cci.
	* g++.dg/pph/a1dynarray-use2.cci: Rename to a0dynarray-use2.cci.
	* g++.dg/pph/a1dynarray-use3a.cci: Rename to a0dynarray-use3a.cci.
	* g++.dg/pph/a1dynarray-use3b.cci: Rename to a0dynarray-use3b.cci.
	* g++.dg/pph/a1dynarray-use4a.cci: Rename to a0dynarray-use4a.cci.
	* g++.dg/pph/a1dynarray-use4b.cci: Rename to a0dynarray-use4b.cci.
	* g++.dg/pph/x1dynarray1.h: Rename to x0dynarray1.h; edit deps.
	* g++.dg/pph/x1dynarray2.h: Rename to x0dynarray2.h; edit deps.
	* g++.dg/pph/x1dynarray3.cc: Rename to x6dynarray3.cc.
	* g++.dg/pph/x1dynarray3.h: Rename to x5dynarray3.h; edit deps.
	* g++.dg/pph/x1dynarray4.cc: Rename to x6dynarray4.cc.
	* g++.dg/pph/x1dynarray4.h: Rename to x0dynarray4.h; edit deps.
	* g++.dg/pph/x1dynarray5.cc: Rename to x7dynarray5.cc.
	* g++.dg/pph/x1dynarray5.h: Rename to x6dynarray5.h; edit deps.
	* g++.dg/pph/x1dynarray6.cc: Rename to x7dynarray6.cc.
	* g++.dg/pph/x1dynarray6.h: Rename to x6dynarray6.h; edit deps.
	* g++.dg/pph/x1dynarray7.cc: Rename to x7dynarray7.cc.
	* g++.dg/pph/x1dynarray7.h: Rename to x5dynarray7.h; edit deps.
	* g++.dg/pph/c1eabi1.h: Rename to c0eabi1.h; edit deps.
	* g++.dg/pph/c2eabi1.cc: Rename to c4eabi1.cc.
	* g++.dg/pph/c2eabi1.h: Rename to c4eabi1.h; edit deps.
	* g++.dg/pph/c1empty.h: Rename to c0empty.h; edit deps.
	* g++.dg/pph/c1field.h: Rename to c0field.h; edit deps.
	* g++.dg/pph/c1funcmac.h: Rename to c0funcmac.h; edit deps.
	* g++.dg/pph/c1funcstatic.h: Rename to c0funcstatic.h; edit deps.
	* g++.dg/pph/x1functions.cc: Rename to x2functions.cc.
	* g++.dg/pph/c1functions.h: Rename to c0functions.h; edit deps.
	* g++.dg/pph/x1globalref.h: Rename to x0globalref.h; edit deps.
	* g++.dg/pph/c1guarded.cc: Rename to c3guarded.cc.
	* g++.dg/pph/c1guarded1.h: Rename to c0guarded1.h; edit deps.
	* g++.dg/pph/x1hardlookup.h: Rename to x0hardlookup.h; edit deps.
	* g++.dg/pph/a1integer.h: Rename to a0integer.h; edit deps.
	* g++.dg/pph/c1limits-externalid.h: Rename to c0limits-externalid.h;
	edit deps.
	* g++.dg/pph/p1mean.cc: Rename to p4mean.cc.
	* g++.dg/pph/c2meteor-contest.cc: Rename to c4meteor-contest.cc.
	* g++.dg/pph/c1meteor-contest.h: Rename to c0meteor-contest.h;
	edit deps.
	* g++.dg/pph/c2meteor-contest.h: Rename to c4meteor-contest.h;
	edit deps.
	* g++.dg/pph/c1multinc.cc: Rename to c3multinc.cc.
	* g++.dg/pph/c1multinc1.h: Rename to c0multinc1.h; edit deps.
	* g++.dg/pph/c1multinc2.h: Rename to c3multinc2.h; edit deps.
	* g++.dg/pph/x1namespace.h: Rename to x0namespace.h; edit deps.
	* g++.dg/pph/x2nontrivinit.cc: Rename to x1nontrivinit.cc.
	* g++.dg/pph/x2nontrivinit.h: Rename to x0nontrivinit.h; edit deps.
	* g++.dg/pph/d2null.h: Rename to d0null.h; edit deps.
	* g++.dg/pph/y2overload.cc: Rename to y9overload.cc.
	* g++.dg/pph/x2overload1.h: Rename to x0overload1.h; edit deps.
	* g++.dg/pph/x2overload2.h: Rename to x0overload2.h; edit deps.
	* g++.dg/pph/x2overload3.h: Rename to x1overload3.h; edit deps.
	* g++.dg/pph/c2paste.cc: Rename to c1paste.cc.
	* g++.dg/pph/c2paste.h: Rename to c0paste.h; edit deps.
	* g++.dg/pph/a0pr36533.h: New.
	* g++.dg/pph/c1pr36533.cc: Rename to c2pr36533.cc.
	* g++.dg/pph/c4pr36533.cc: New.
	* g++.dg/pph/c4pr36533.h: New.
	* g++.dg/pph/c1pr44948-1a.h: Rename to c0pr44948-1a.h; edit deps.
	* g++.dg/pph/c1return-5.h: Rename to c0return-5.h; edit deps.
	* g++.dg/pph/c1simple.cc: Rename to c2simple.cc.
	* g++.dg/pph/c1simple1.h: Rename to c0simple1.h; edit deps.
	* g++.dg/pph/y2smother.cc: Rename to y8inc-nmspc.cc.
	* g++.dg/pph/x1special.h: Rename to x0special.h; edit deps.
	* g++.dg/pph/c1struct.h: Rename to c0struct.h; edit deps.
	* g++.dg/pph/x1struct0.h: Rename to x0struct0.h; edit deps.
	* g++.dg/pph/x1struct1.cc: Rename to x2struct1.cc.
	* g++.dg/pph/x1struct2.cc: Rename to x2struct2.cc.
	* g++.dg/pph/d1symnotinc.h: Rename to d0symnotinc.h; edit deps.
	* g++.dg/pph/x1template.h: Rename to x0template.h; edit deps.
	* g++.dg/pph/x1ten-hellos.h: Rename to x0ten-hellos.h; edit deps.
	* g++.dg/pph/x1tmplclass.h: Rename to x0tmplclass.h; edit deps.
	* g++.dg/pph/x1tmplfunc.h: Rename to x0tmplfunc.h; edit deps.
	* g++.dg/pph/x1typerefs.cc: Rename to x2typerefs.cc.
	* g++.dg/pph/c1typerefs.h: Rename to c0typerefs.h; edit deps.
	* g++.dg/pph/d1unguarded.h: Rename to d0unguarded.h; edit deps.
	* g++.dg/pph/x1variables.cc: Rename to x2variables.cc.
	* g++.dg/pph/c1variables.h: Rename to c0variables.h; edit deps.
	* g++.dg/pph/c1varorder.h: Rename to c0varorder.h; edit deps.

2011-07-07  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c2eabi1.cc: Remove XFAIL markers.  Expect an
	assembly difference.
	* g++.dg/pph/c2meteor-contest.cc: Likewise.
	* g++.dg/pph/x1namespace.cc: Mark fixed.

2011-07-05  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x2nontrivinit.cc: Mark fixed.

2011-07-04   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/pph.map: Sort.

2011-07-04  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1meteor-contest.cc: Make executable.
	Move function main() from c1meteor-contest.h.
	* g++.dg/pph/c1meteor-contest.h: Do not include stdlib.h nor
	stdio.h.
	Add prototype for system functions qsort, printf and atoi.
	* g++.dg/pph/c2meteor-contest.cc: New.
	* g++.dg/pph/c2meteor-contest.h: New.
	* g++.dg/pph/pph.map: Add c2meteor-contest.h

2011-07-04   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1eabi1.h: Surround system function prototypes with
	extern "C" {}.
	* g++.dg/pph/x1ten-hellos.cc (main): Tidy.
	Assert that i is 10 at the end of the loop.
	Call exit instead of 'return 0'.
	* g++.dg/pph/x1ten-hellos.h: Do not include stdio.h.

2011-07-04   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1eabi1.cc: Move main from c1eabi1.h
	Remove timeout.
	Add expected asm difference.
	* g++.dg/pph/c1eabi1.h: Do not include stdio.h, stdlib.h nor math.h.
	Declare abort, abs, exit, fabs and printf.
	* g++.dg/pph/c2eabi1.cc: New.
	* g++.dg/pph/c2eabi1.h: New.
	* g++.dg/pph/pph.map: Add c2eabi1.h.

2011-07-04  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c120060625-1.cc: Expect no asm difference.
	* g++.dg/pph/c1struct.cc: Likewise.
	* g++.dg/pph/c1variables.cc: Likewise.
	* g++.dg/pph/c1varorder.cc: Likewise.
	* g++.dg/pph/c2builtin1.cc: Likewise.
	* g++.dg/pph/c2builtin2.cc: Likewise.
	* g++.dg/pph/x1struct2.cc: Likewise.
	* g++.dg/pph/x1variables.cc: Likewise.

2011-07-01  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/a1dynarray-dcl1.hi: New.
	* g++.dg/pph/a1dynarray-dcl2a.hi: New.
	* g++.dg/pph/a1dynarray-dcl2b.hi: New.
	* g++.dg/pph/a1dynarray-dcl3.hi: New.
	* g++.dg/pph/a1dynarray-dcl4.hi: New.
	* g++.dg/pph/a1dynarray-dfn1a.hi: New.
	* g++.dg/pph/a1dynarray-dfn1b.hi: New.
	* g++.dg/pph/a1dynarray-dfn2a.hi: New.
	* g++.dg/pph/a1dynarray-dfn2b.hi: New.
	* g++.dg/pph/a1dynarray-dfn2c.hi: New.
	* g++.dg/pph/a1dynarray-dfn3a.hi: New.
	* g++.dg/pph/a1dynarray-dfn3b.hi: New.
	* g++.dg/pph/a1dynarray-dfn3c.hi: New.
	* g++.dg/pph/a1dynarray-hlp1.cci: New.
	* g++.dg/pph/a1dynarray-use1.cci: New.
	* g++.dg/pph/a1dynarray-use2.cci: New.
	* g++.dg/pph/a1dynarray-use3a.cci: New.
	* g++.dg/pph/a1dynarray-use3b.cci: New.
	* g++.dg/pph/a1dynarray-use4a.cci: New.
	* g++.dg/pph/a1dynarray-use4b.cci: New.
	* g++.dg/pph/a1integer.h: New.
	* g++.dg/pph/x1dynarray0.cc: Removed.
	* g++.dg/pph/x1dynarray1.cc: Removed.
	* g++.dg/pph/x1dynarray1.h: Removed.
	* g++.dg/pph/x1dynarray2.cc: Removed.
	* g++.dg/pph/x1dynarray2.h: Removed.
	* g++.dg/pph/x1dynarray1.cc: New. (Name reused.)
	* g++.dg/pph/x1dynarray1.h: New. (Name reused.)
	* g++.dg/pph/x1dynarray2.h: New. (Name reused.)
	* g++.dg/pph/x1dynarray2a.cc: New.
	* g++.dg/pph/x1dynarray2b.cc: New.
	* g++.dg/pph/x1dynarray3.cc: New.
	* g++.dg/pph/x1dynarray3.h: New.
	* g++.dg/pph/x1dynarray4.cc: New.
	* g++.dg/pph/x1dynarray4.h: New.
	* g++.dg/pph/x1dynarray5.cc: New.
	* g++.dg/pph/x1dynarray5.h: New.
	* g++.dg/pph/x1dynarray6.cc: New.
	* g++.dg/pph/x1dynarray6.h: New.
	* g++.dg/pph/x1dynarray7.cc: New.
	* g++.dg/pph/x1dynarray7.h: New.

2011-07-01  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1varorder.cc: Moved pph asm xdiff comment to top.
	* lib/dg-pph.exp (proc): Fixed executable test detection.

2011-06-29  Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp: Run pph executables when normal executables run.
	Change (assembly identical) and (assembly mismatch) to (assembly
	comparison) to avoid false "disappeared" test
	reports.
	* g++.dg/pph/x1dynarray1.h: Simplfy test to avoid more complicated
	language features: namespaces, exceptions, placement new, and explicit
	destructor calls.
	* g++.dg/pph/x1dynarray1.cc: Strip out namespaces.
	* g++.dg/pph/x1dynarray0.cc: New.  An even simpler use.
	* g++.dg/pph/x1dynarray2.h: New.  Add back the full test.
	* g++.dg/pph/x1dynarray2.cc: New.  Add back the full test.

2011-06-29  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1dynarray1.cc: Adjust xfail.
	* g++.dg/pph/x1namespace.cc: Likewise.
	* g++.dg/pph/x1template.cc: Mark fixed.

2011-06-29  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1attr-warn-unused-result.cc: Remove xfail marker.

2011-06-28  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1attr-warn-unused-result.cc: Expect an ICE.
	* g++.dg/pph/x1template.cc: Likewise.
	* g++.dg/pph/c1builtin-object-size-2.cc: Expect no asm difference.
	* g++.dg/pph/c1funcstatic.cc: Likewise.
	* g++.dg/pph/c1return-5.cc: Likewise.
	* g++.dg/pph/c1simple.cc: Likewise.
	* g++.dg/pph/x1autometh.cc: Likewise.
	* g++.dg/pph/x1funcstatic.cc: Likewise.
	* g++.dg/pph/x1struct1.cc: Likewise.
	* g++.dg/pph/x1ten-hellos.cc: Likewise.
	* g++.dg/pph/x1tmplfunc.cc: Likewise.
	* g++.dg/pph/c1meteor-contest.cc: Adjust timeout.
	* g++.dg/pph/x1dynarray1.cc: Adjust expected ICE.
	* g++.dg/pph/x1namespace.cc: Likewise.
	* lib/dg-pph.exp: Do not compare assembly output if the test
	is marked 'dg-do run'.

2011-06-28  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/x1typerefs.cc: Remove xfail.

2011-06-28  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/c1limits-externalid.cc: Remove pph asm xdiff.
	* g++.dg/pph/c1varorder.cc: New.
	* g++.dg/pph/c1varorder.h: New.
	* g++.dg/pph/pph.map: Add c1varorder.h

2011-06-27  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/pph.map: Add missing PPH mappings.
	* g++.dg/pph/c1funcstatic.cc: Add expected asm diff.
	* g++.dg/pph/c1eabi1.cc: Add xfail-if; remove expected asm diff.
	* g++.dg/pph/c2builtin2.cc: Add expected asm diff.
	* g++.dg/pph/x1funcstatic.cc: Add expected asm diff.
	* g++.dg/pph/x1template.h: Remove use of namespace.
	* g++.dg/pph/x1template.cc: Remove use of namespace; now passing.
	* g++.dg/pph/x1namespace.h: New, copy of old x1template.h.
	* g++.dg/pph/x1namespace.cc: New, copy of old x1template.cc.
	* g++.dg/pph/x1dynarray1.h: New executable program, but it fails.
	* g++.dg/pph/x1dynarray1.cc: New executable program, but it fails.

2011-06-27  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/x1ten-hellos.cc: New.
	* g++.dg/pph/x1ten-hellos.h: New.
	* g++.dg/pph/pph.map: Add x1ten-hellos.h

2011-06-27   Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/pph.map: Add entries for c120060625-1.cc,
	c1attr-warn-unused-result.cc, c1builtin-integral-1.cc,
	c1builtin-object-size-2.cc, c1eabi1.cc, c1eabi1.h,
	c1limits-externalid.cc, c1meteor-contest.cc, c1pr36533.cc,
	c1pr44948-1a.cc, c1return-5.cc, and x1template.cc.
	* g++.dg/pph/c120060625-1.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1attr-warn-unused-result.cc: Adjust XFAIL
	patterns.
	* g++.dg/pph/c1builtin-integral-1.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1builtin-object-size-2.cc: Adjust XFAIL
	patterns.
	* g++.dg/pph/c1eabi1.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1eabi1.h: Adjust XFAIL patterns.
	* g++.dg/pph/c1limits-externalid.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1meteor-contest.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1pr36533.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1pr44948-1a.cc: Adjust XFAIL patterns.
	* g++.dg/pph/c1return-5.cc: Adjust XFAIL patterns.
	* g++.dg/pph/x1template.cc: Adjust XFAIL patterns.

2011-06-27  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/x1functions.cc: Fixed bogus, now asm diff.
	* g++.dg/pph/x1variables.cc: Fixed bogus, now asm diff.

2011-06-14  Lawrence Crowl <crowl@google.com>

	* g++.dg/pph/x1tmplfunc.cc: Replace ICE xfail with an assembly diff
        xfail.

2011-06-13  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1eabi1.h: Remove XFAIL markers.
	* g++.dg/pph/c1eabi1.cc: Likewise.
	Add assembly mis-comparison expectation.

2011-06-10  Diego Novillo  <dnovillo@google.com>

	* lib/dg-pph.exp (dg-pph-hdr): Use -fpph-gen.
	(dg-pph-neg): Likewise.

2011-06-08  Lawrence Crowl <crowl@google.com>

	* g++.dg/pph/c120060625-1.h: Make expected pass.
	* g++.dg/pph/c120060625-1.cc: Make expected pass.

2011-06-08  Lawrence Crowl <crowl@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Stop redundantly reporting a missing
	pph assembly as an xfail when its compile xfails.
	* g++.dg/pph/x1typerefs.cc: Replace ICE xfail with a bogus error xfail.
	* g++.dg/pph/x1tmplclass.cc: Likewise.
	* g++.dg/pph/x1autometh.cc: Replace ICE xfail with an assembly diff
	xfail.
	* g++.dg/pph/x1special.cc: Remove ICE xfail.
	* g++.dg/pph/x1functions.cc: Correct xfail to BOGUS rather than ERROR.
	Remove leftover pruning from previous ICE.
	* g++.dg/pph/x1template.cc: Update line number of ICE.
	* g++.dg/pph/x1variables.cc: Update line number of BOGUS.

2011-06-06  Gabriel Charette  <gchare@google.com>

	* g++.dg/pph/x1functions.cc (dg-xfail-if "ICE"): Remove.
	(dg-xfail-if "ERROR"): Add.

2011-06-06  Gabriel Charette  <gchare@google.com>

	* gcc/testsuite/g++.dg/pth/*: Remove.
	* gcc/testsuite/lib/dg-pth.exp: Remove. Update all users.

2011-06-05  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/x1special.cc: Change to new ICE.
	* g++.dg/pph/x1template.cc: Change old ICE to new location.
	* g++.dg/pph/x1tmplfunc.cc: Change to new ICE.

2011-06-05  Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp (dg-pph-hdr): Add blank lines to logfile.
	Format if statements and calls consistently.
	(dg-pph-neg): Remove extraneous assembly files. Add blank
	lines to logfile. Format if statements and calls consistently.
	(dg-pph-pos): Stop test when a compilation fails. Recognize
	expected failing compilations. Recognize expected assembly
	miscompares. Parenthesize failure notes. Remove extraneous
	assembly files. Add blank lines to logfile. Format if
	statements and calls consistently.
	* g++.dg/pph/c1simple.cc: Add comment "pph asm xdiff"
	indicating expected assembly difference failure. Add line
	spacing to test.
	* g++.dg/pph/c1struct.cc: Likewise.
	* g++.dg/pph/c1variables.cc: Likewise.
	* g++.dg/pph/c2builtin1.cc: Likewise.
	* g++.dg/pph/x1globalref.cc: Likewise.
	* g++.dg/pph/x1hardlookup.cc: Likewise.
	* g++.dg/pph/x1struct1.cc: Likewise.
	* g++.dg/pph/x1struct2.cc: Likewise.
	* g++.dg/pph/x2nontrivinit.cc: Likewise.
	* c120060625-1.h: Add dg-xfail-if for -fpph-map. Add bogus
	message for ICE. Prune output. Add line spacing to text.
	* g++.dg/pph/c120060625-1.cc: Likewise.
	* g++.dg/pph/c1eabi1.h: Likewise.
	* g++.dg/pph/c1eabi1.cc: Likewise.
	* g++.dg/pph/x1autometh.cc: Likewise.
	* g++.dg/pph/x1functions.cc: Likewise.
	* g++.dg/pph/x1special.cc: Likewise.
	* g++.dg/pph/x1template.cc: Likewise.
	* g++.dg/pph/x1tmplclass.cc: Likewise.
	* g++.dg/pph/x1tmplfunc.cc: Likewise.
	* g++.dg/pph/x1typerefs.cc: Likewise.
	* g++.dg/pph/x1variables.cc: Likewise.
	* g++.dg/pph/p1mean.cc: Change syntax error preventing infinite
	recursion to a dg-timeout. Add dg-xfail-if for -fpph-map.
	* g++.dg/pph/c1return-5.h: Remove dg-final as we do not generate
	assembly on compiling headers. Change dg directive location.
	* g++.dg/pph/c1return-5.cc: Add dg-final as we _do_ generate
	assembly on compiling sources. Copy up dg-options from
	c1return-5.h as well.

2011-06-01  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c120060625-1.cc: New.
	* g++.dg/pph/c120060625-1.h: New.

2011-06-01  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1return-5.cc: New.
	* g++.dg/pph/c1return-5.h: New.

2011-05-27  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1attr-warn-unused-result.cc: New.
	* g++.dg/pph/c1attr-warn-unused-result.h: New.
	* g++.dg/pph/c1builtin-integral-1.cc: New.
	* g++.dg/pph/c1builtin-integral-1.h: New.
	* g++.dg/pph/c1builtin-object-size-2.cc: New.
	* g++.dg/pph/c1builtin-object-size-2.h: New.
	* g++.dg/pph/c1eabi1.cc: New.
	* g++.dg/pph/c1eabi1.h: New.
	* g++.dg/pph/c1meteor-contest.cc: New.
	* g++.dg/pph/c1meteor-contest.h: New.
	* g++.dg/pph/c1pr36533.cc: New.
	* g++.dg/pph/c1pr36533.h: New.
	* g++.dg/pph/c1pr44948-1a.cc: New.
	* g++.dg/pph/c1pr44948-1a.h: New.

2011-05-27  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/c1limits-externalid.cc: New.
	* g++.dg/pph/c1limits-externalid.h: New.

2011-05-20  Lawrence Crowl  <crowl@google.com>

	* x1funcstatic.h: Rename to c1funcstatic.h, as contents are C only.
	* x1funcstatic.c: Use c1funcstatic.h instead of x1funcstatic.h.
	* c1funcstatic.c: Add to test C functionality.

2011-04-29  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/pph.exp: Copy pph map file to avoid absolute paths in
	test commands.

2011-04-15  Lawrence Crowl  <crowl@google.com>

	* lib/dg-pph.exp (dg-pph-pos): Stop on first failure.  Change names of
	assembly files to be clear on which is with and without PPH.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/p1mean.cc: Force syntax error.

2011-04-12  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/y2smother.cc: New.

2011-04-06  Lawrence Crowl  <crowl@google.com>

	* g++.dg/pph/p1mean.cc: Now pass validation.
	* g++.dg/pph/p1stdlib.cc: Likewise.
	* g++.dg/pph/d1symnotinc.cc: Failure to read is now not fatal.
        * g++.dg/pph/d1chained.cc: Miscategorized as a failure, ...
        * g++.dg/pph/c1chained.cc: so it has been renamed.

2011-03-09  Diego Novillo  <dnovillo@google.com>

	* lib/dg-pth.exp: New.
	* g++.dg/dg.exp: Call it.
	* g++.dg/pth: New directory.
	* g++.dg/pth/pth.exp: New.
	* g++.dg/pth/staticmbrvar.cc: New.
	* g++.dg/pth/typerefs.cc: New.
	* g++.dg/pth/tmplclass.cc: New.
	* g++.dg/pth/system-include.cc: New.
	* g++.dg/pth/variables.cc: New.
	* g++.dg/pth/trivial.cc: New.
	* g++.dg/pth/where.cc: New.
	* g++.dg/pth/template.cc: New.
	* g++.dg/pth/cflow.h: New.
	* g++.dg/pth/simple1.h: New.
	* g++.dg/pth/simple2.h: New.
	* g++.dg/pth/chained1.h: New.
	* g++.dg/pth/meth2.cc: New.
	* g++.dg/pth/chained2.h: New.
	* g++.dg/pth/mean.cc: New.
	* g++.dg/pth/special.cc: New.
	* g++.dg/pth/nontrivinit.cc: New.
	* g++.dg/pth/emptyclass.cc: New.
	* g++.dg/pth/simplecall.cc: New.
	* g++.dg/pth/autometh.cc: New.
	* g++.dg/pth/tmplfunc.cc: New.
	* g++.dg/pth/simple.cc: New.
	* g++.dg/pth/builtin1.h: New.
	* g++.dg/pth/builtin2.h: New.
	* g++.dg/pth/invoke.cc: New.
	* g++.dg/pth/chained.cc: New.
	* g++.dg/pth/usearray.cc: New.
	* g++.dg/pth/builtin3.h: New.
	* g++.dg/pth/globalref.cc: New.
	* g++.dg/pth/invoke.h: New.
	* g++.dg/pth/meth.cc: New.
	* g++.dg/pth/usearray.h: New.
	* g++.dg/pth/guarded1.h: New.
	* g++.dg/pth/guarded2.h: New.
	* g++.dg/pth/guarded3.h: New.
	* g++.dg/pth/funcstatic.cc: New.
	* g++.dg/pth/builtin.cc: New.
	* g++.dg/pth/hardlookup.cc: New.
	* g++.dg/pth/functions.cc: New.
	* g++.dg/pth/incmod.cc: New.
	* g++.dg/pth/cflow.cc: New.
	* g++.dg/pth/guarded.cc: New.
	* g++.dg/pth/incmod.h: New.
	* g++.dg/pth/paste.cc: New.
	* g++.dg/pth/incsame.cc: New.
	* g++.dg/pth/sys-types.cc: New.
	* g++.dg/pth/incsame.h: New.
	* g++.dg/pth/field.cc: New.
	* g++.dg/pth/classshort.cc: New.
	* g++.dg/pth/variable.cc: New.
	* g++.dg/pth/tmplsimple.cc: New.
	* g++.dg/pth/inif.h: New.

2011-03-04  Lawrence Crowl <crowl@google.com>

	* g++.dg/pph/p1mean.cc: Mark expected failure for macro validation.
	* g++.dg/pph/d2dupguard.cc: Mark expected failure for macro validation.
	* g++.dg/pph/d1chained.cc: Mark expected failure for macro validation.

2011-02-24  Lawrence Crowl <crowl@google.com>

	* g++.dg/pph/d1unguarded.h: Add test for non-null unguarded header.
        * g++.dg/pph/d2null.h: Unguarded header error now expected.

2011-02-15  Lawrence Crowl <crowl@google.com>

	* lib/dg-pph.exp: Restructure for command-driven PPH.
	* lib/gcc-dg.exp (gcc-dg-test-1): Add "preparse" compilation type.
	* g++.dg/pph/README: Add.
	* g++.dg/pph/a2builtin4.h: Add.
	* g++.dg/pph/autometh.cc: Remove.
	* g++.dg/pph/builtin.cc: Remove.
	* g++.dg/pph/builtin1.h: Remove.
	* g++.dg/pph/builtin2.h: Remove.
	* g++.dg/pph/builtin3.h: Remove.
	* g++.dg/pph/c1altinc.cc: Add.
	* g++.dg/pph/c1altinc1.h: Add.
	* g++.dg/pph/c1altinc2.h: Add.
	* g++.dg/pph/c1chained1.h: Add.
	* g++.dg/pph/c1chained2.h: Add.
	* g++.dg/pph/c1empty.cc: Add.
	* g++.dg/pph/c1empty.h: Add.
	* g++.dg/pph/c1field.cc: Add.
	* g++.dg/pph/c1field.h: Add.
	* g++.dg/pph/c1funcmac.cc: Add.
	* g++.dg/pph/c1funcmac.h: Add.
	* g++.dg/pph/c1functions.cc: Add.
	* g++.dg/pph/c1functions.h: Add.
	* g++.dg/pph/c1guarded.cc: Add.
	* g++.dg/pph/c1guarded1.h: Add.
	* g++.dg/pph/c1guarded2.h: Add.
	* g++.dg/pph/c1guarded3.h: Add.
	* g++.dg/pph/c1multinc.cc: Add.
	* g++.dg/pph/c1multinc1.h: Add.
	* g++.dg/pph/c1multinc2.h: Add.
	* g++.dg/pph/c1simple.cc: Add.
	* g++.dg/pph/c1simple1.h: Add.
	* g++.dg/pph/c1simple2.h: Add.
	* g++.dg/pph/c1struct.cc: Add.
	* g++.dg/pph/c1struct.h: Add.
	* g++.dg/pph/c1typerefs.cc: Add.
	* g++.dg/pph/c1typerefs.h: Add.
	* g++.dg/pph/c1variables.cc: Add.
	* g++.dg/pph/c1variables.h: Add.
	* g++.dg/pph/c2builtin1.cc: Add.
	* g++.dg/pph/c2builtin1.h: Add.
	* g++.dg/pph/c2builtin2.cc: Add.
	* g++.dg/pph/c2builtin2.h: Add.
	* g++.dg/pph/c2builtin3.h: Add.
	* g++.dg/pph/c2builtin5.h: Add.
	* g++.dg/pph/c2builtin6.h: Add.
	* g++.dg/pph/c2dupguard1.h: Add.
	* g++.dg/pph/c2dupguard2.h: Add.
	* g++.dg/pph/c2paste.cc: Add.
	* g++.dg/pph/c2paste.h: Add.
	* g++.dg/pph/cflow.cc: Remove.
	* g++.dg/pph/cflow.h: Remove.
	* g++.dg/pph/chained.cc: Remove.
	* g++.dg/pph/chained1.h: Remove.
	* g++.dg/pph/chained2.h: Remove.
	* g++.dg/pph/classshort.cc: Remove.
	* g++.dg/pph/d1chained.cc: Add.
	* g++.dg/pph/d1symnotinc.cc: Add.
	* g++.dg/pph/d1symnotinc.h: Add.
	* g++.dg/pph/d2dupguard.cc: Add.
	* g++.dg/pph/d2null.h: Add.
	* g++.dg/pph/emptyclass.cc: Remove.
	* g++.dg/pph/field.cc: Remove.
	* g++.dg/pph/funcstatic.cc: Remove.
	* g++.dg/pph/functions.cc: Remove.
	* g++.dg/pph/globalref.cc: Remove.
	* g++.dg/pph/guarded.cc: Remove.
	* g++.dg/pph/guarded1.h: Remove.
	* g++.dg/pph/guarded2.h: Remove.
	* g++.dg/pph/guarded3.h: Remove.
	* g++.dg/pph/hardlookup.cc: Remove.
	* g++.dg/pph/incmod.cc: Remove.
	* g++.dg/pph/incmod.h: Remove.
	* g++.dg/pph/incsame.cc: Remove.
	* g++.dg/pph/incsame.h: Remove.
	* g++.dg/pph/inif.h: Remove.
	* g++.dg/pph/invoke.cc: Remove.
	* g++.dg/pph/invoke.h: Remove.
	* g++.dg/pph/mean.cc: Remove.
	* g++.dg/pph/meth.cc: Remove.
	* g++.dg/pph/meth2.cc: Remove.
	* g++.dg/pph/nontrivinit.cc: Remove.
	* g++.dg/pph/p1mean.cc: Add.
	* g++.dg/pph/p1stdlib.cc: Add.
	* g++.dg/pph/p1systypes.cc: Add.
	* g++.dg/pph/paste.cc: Remove.
	* g++.dg/pph/pph.exp: Add.
	* g++.dg/pph/pph.map: Add.
	* g++.dg/pph/simple.cc: Remove.
	* g++.dg/pph/simple1.h: Remove.
	* g++.dg/pph/simple2.h: Remove.
	* g++.dg/pph/simplecall.cc: Remove.
	* g++.dg/pph/special.cc: Remove.
	* g++.dg/pph/staticmbrvar.cc: Remove.
	* g++.dg/pph/sys-types.cc: Remove.
	* g++.dg/pph/system-include.cc: Remove.
	* g++.dg/pph/template.cc: Remove.
	* g++.dg/pph/tmplclass.cc: Remove.
	* g++.dg/pph/tmplfunc.cc: Remove.
	* g++.dg/pph/tmplsimple.cc: Remove.
	* g++.dg/pph/trivial.cc: Remove.
	* g++.dg/pph/typerefs.cc: Remove.
	* g++.dg/pph/usearray.cc: Remove.
	* g++.dg/pph/usearray.h: Remove.
	* g++.dg/pph/variable.cc: Remove.
	* g++.dg/pph/variables.cc: Remove.
	* g++.dg/pph/where.cc: Remove.
	* g++.dg/pph/x1autometh.cc: Add.
	* g++.dg/pph/x1autometh.h: Add.
	* g++.dg/pph/x1funcstatic.cc: Add.
	* g++.dg/pph/x1funcstatic.h: Add.
	* g++.dg/pph/x1functions.cc: Add.
	* g++.dg/pph/x1functions.h: Add.
	* g++.dg/pph/x1globalref.cc: Add.
	* g++.dg/pph/x1globalref.h: Add.
	* g++.dg/pph/x1hardlookup.cc: Add.
	* g++.dg/pph/x1hardlookup.h: Add.
	* g++.dg/pph/x1special.cc: Add.
	* g++.dg/pph/x1special.h: Add.
	* g++.dg/pph/x1struct0.h: Add.
	* g++.dg/pph/x1struct1.cc: Add.
	* g++.dg/pph/x1struct1.h: Add.
	* g++.dg/pph/x1struct2.cc: Add.
	* g++.dg/pph/x1struct2.h: Add.
	* g++.dg/pph/x1template.cc: Add.
	* g++.dg/pph/x1template.h: Add.
	* g++.dg/pph/x1tmplclass.cc: Add.
	* g++.dg/pph/x1tmplclass.h: Add.
	* g++.dg/pph/x1tmplfunc.cc: Add.
	* g++.dg/pph/x1tmplfunc.h: Add.
	* g++.dg/pph/x1typerefs.cc: Add.
	* g++.dg/pph/x1typerefs.h: Add.
	* g++.dg/pph/x1variables.cc: Add.
	* g++.dg/pph/x1variables.h: Add.
	* g++.dg/pph/x2nontrivinit.cc: Add.
	* g++.dg/pph/x2nontrivinit.h: Add.
	* g++.dg/pph/x2overload1.h: Add.
	* g++.dg/pph/x2overload2.h: Add.
	* g++.dg/pph/x2overload3.h: Add.
	* g++.dg/pph/y2overload.cc: Add.


2011-01-27  Diego Novillo  <dnovillo@google.com>

	* g++.dg/pph/system-include.cc: xfail for invalid hunks.
	* g++.dg/pph/mean.cc: Likewise.
	* g++.dg/pph/sys-types.cc: Likewise.
	* g++.dg/pph/variables.cc: Fix error about initializing an
	extern.

2011-01-06  Diego Novillo  <dnovillo@google.com>

	* lib/dg-pph.exp: New.
	* g++.dg/dg.exp: Execute tests in pph directory.
	* g++.dg/pph: New directory.
	* g++.dg/pph/pph.exp: New.
	* g++.dg/pph/staticmbrvar.cc: New.
	* g++.dg/pph/typerefs.cc: New.
	* g++.dg/pph/tmplclass.cc: New.
	* g++.dg/pph/system-include.cc: New.
	* g++.dg/pph/variables.cc: New.
	* g++.dg/pph/trivial.cc: New.
	* g++.dg/pph/where.cc: New.
	* g++.dg/pph/template.cc: New.
	* g++.dg/pph/cflow.h: New.
	* g++.dg/pph/simple1.h: New.
	* g++.dg/pph/simple2.h: New.
	* g++.dg/pph/chained1.h: New.
	* g++.dg/pph/meth2.cc: New.
	* g++.dg/pph/chained2.h: New.
	* g++.dg/pph/mean.cc: New.
	* g++.dg/pph/special.cc: New.
	* g++.dg/pph/nontrivinit.cc: New.
	* g++.dg/pph/emptyclass.cc: New.
	* g++.dg/pph/simplecall.cc: New.
	* g++.dg/pph/autometh.cc: New.
	* g++.dg/pph/tmplfunc.cc: New.
	* g++.dg/pph/simple.cc: New.
	* g++.dg/pph/builtin1.h: New.
	* g++.dg/pph/builtin2.h: New.
	* g++.dg/pph/invoke.cc: New.
	* g++.dg/pph/chained.cc: New.
	* g++.dg/pph/usearray.cc: New.
	* g++.dg/pph/builtin3.h: New.
	* g++.dg/pph/globalref.cc: New.
	* g++.dg/pph/invoke.h: New.
	* g++.dg/pph/meth.cc: New.
	* g++.dg/pph/usearray.h: New.
	* g++.dg/pph/guarded1.h: New.
	* g++.dg/pph/guarded2.h: New.
	* g++.dg/pph/guarded3.h: New.
	* g++.dg/pph/funcstatic.cc: New.
	* g++.dg/pph/builtin.cc: New.
	* g++.dg/pph/hardlookup.cc: New.
	* g++.dg/pph/functions.cc: New.
	* g++.dg/pph/incmod.cc: New.
	* g++.dg/pph/cflow.cc: New.
	* g++.dg/pph/guarded.cc: New.
	* g++.dg/pph/incmod.h: New.
	* g++.dg/pph/paste.cc: New.
	* g++.dg/pph/incsame.cc: New.
	* g++.dg/pph/sys-types.cc: New.
	* g++.dg/pph/incsame.h: New.
	* g++.dg/pph/field.cc: New.
	* g++.dg/pph/classshort.cc: New.
	* g++.dg/pph/variable.cc: New.
	* g++.dg/pph/tmplsimple.cc: New.
	* g++.dg/pph/inif.h: New.


Copyright (C) 2011 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
