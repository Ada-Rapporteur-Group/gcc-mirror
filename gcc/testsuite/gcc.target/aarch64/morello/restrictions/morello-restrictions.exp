#  Specific regression driver for AArch64 Morello.
#  Copyright (C) 2021 Free Software Foundation, Inc.
#
#  This file is part of GCC.
#
#  GCC is free software; you can redistribute it and/or modify it
#  under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 3, or (at your option)
#  any later version.
#
#  GCC is distributed in the hope that it will be useful, but
#  WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#  General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with GCC; see the file COPYING3.  If not see
#  <http://www.gnu.org/licenses/>.  */

# Exit immediately if this isn't an AArch64 target.
if {![istarget aarch64*-*-*] } then {
  return
}

# Load support procs.
load_lib gcc-dg.exp
load_lib c-torture.exp

# Initialize `dg'.
dg-init

# We define a different proc to be used by the testcases so we can use
# `dg-shouldfail` without relying on looking for specific flags.  Sometimes we
# compile purecap by default, sometimes we don't, hence can't use flags.
if { [check_effective_target_cheri_capability_pure] } {
  set capability_flags ""
  proc dg-shouldfail-purecap { args } {
    upvar dg-do-what dg-do-what
    dg-shouldfail "morello bounds"
  }
} else {
  set capability_flags "-mfake-capability"
  proc dg-shouldfail-purecap { args } { }
}

torture-init

set-torture-options "$C_TORTURE_OPTIONS"

# Main loop.
gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/*.\[cCS\]]] \
    "" "$capability_flags"

# Delete the proc now we don't need it.
rename dg-shouldfail-purecap ""
torture-finish
# All done.
dg-finish
