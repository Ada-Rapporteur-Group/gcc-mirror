; -*- lisp -*-
;; file tmatch-5.melt

#| run in buildir/gcc
 ln -s $GCCMELT_SOURCE/gcc/testsuite/melt/tmatch-5.melt 
 gccmelt_cflags="$(grep fmelt-module-cflags meltbuild-checkruntime.args)" 
 ./cc1 -fmelt-mode=runfile  -fmelt-module-path=meltbuild-stage3:meltbuild-modules \
    -fmelt-source-path=meltbuild-stage3:meltbuild-sources \
    -fmelt-module-makefile=$GCCMELT_SOURCE/gcc/melt-module.mk \
    -fmelt-workdir=meltbuild-workdir \
    -fmelt-tempdir=meltbuild-tempdir \
    -fmelt-keep-temporary-files \
    -fmelt-init=@warmelt.quicklybuilt \
    -fmelt-option=match_graphic:/tmp/meltupgraph \
    -fmelt-arg=tmatch-5.melt \
     "$gccmelt_cflags" \
    -fmelt-debug empty-file-for-melt.c
|#


(defun ttinymicro5 (x g)
  (matchalt x
   (
    ?(instance class_reference 
	       :referenced_value ?xxx)
     (g xxx))
   ))

	 
(defun tmicro5 (x g)
  (matchalt x
   (
    ?(and ?xx
	   ?(instance class_reference 
		      :referenced_value ?xx)
      )
      (g xx))
   ))

#|
(defun tmini5 (x g)
  (matchalt 
   x
   ( ?(instance 
       class_reference 
       :referenced_value 
       ?(integerbox_of ?bx))
      (g x bx)
      )

   (
    ?(and ?xx
	   ?(instance class_reference 
		      :referenced_value ?xx)
      )
      (g xx))

   ))

(defun tmatch5 (curexp)
    (match 
     curexp 
     (?(instance 
        class_source_definition 
        :sdef_name ?dnam
        :sdef_doc 
        ?(as ?doc 
  	   ?(instance class_sexpr 
  		      ; :loca_location ?loc 
  		      ; :sexp_contents ?docl
  		      )
  	   )
        )
       (debug_msg dnam "makedoc_docmd dnam")
       (debug_msg doc "makedoc_docmd doc")
       )
     )
    )

|#  
;; eof tmatch-5.melt
