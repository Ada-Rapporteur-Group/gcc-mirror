work054.patch017:
2021-06-04  Michael Meissner  <meissner@linux.ibm.com>

	PR target/99293
	* gcc.target/powerpc/pr99293.c: New test.

work054.patch016:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	PR target/93230
	* gcc.target/powerpc/fold-vec-extract-char.p8.c: Adjust
	instruction counts.
	* gcc.target/powerpc/fold-vec-extract-int.p8.c: Adjust
	instruction counts.
	* gcc.target/powerpc/fold-vec-extract-short.p8.c: Adjust
	instruction counts.
	* gcc.target/powerpc/pcrel-opt-inc-di.c: Fix typo.

work054.patch015:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	PR target/100809
	* gcc.target/powerpc/p10-vdiv-vmod.c: New test.

work054.patch014:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/float128-constant.c: New test.

work054.patch013:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/vec-splat-constant-sf.c: Update insn count.
	* gcc.target/powerpc/vec-splat-constant-df.c: Update insn count.
	* gcc.target/powerpc/vec-splat-constant-v2df.c: Update insn
	count.

work054.patch012:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/vec-splat-constant-sf.c: New test.
	* gcc.target/powerpc/vec-splat-constant-df.c: New test.
	* gcc.target/powerpc/vec-splat-constant-v2df.c: New test.

work054.patch011:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/pr86731-fwrapv.c: Turn off power10 code
	generation.
	* gcc.target/powerpc/vec-splati-runnable.c: Update insn counts.
	* gcc.target/powerpc/vec-splat-constant-v4sf.c: New test.
	* gcc.target/powerpc/vec-splat-constant-v4si.c: New test.
	* gcc.target/powerpc/vec-splat-constant-v8hi.c: New test.

work054.patch010:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	PR testsuite/100166
	* gcc.dg/pr56727-2.c: Add support for PC-relative calls.
	* gcc.target/powerpc/fold-vec-div-longlong.c:
	* gcc.target/powerpc/fold-vec-mult-longlong.c: Disable power10
	code generation.
	* gcc.target/powerpc/ppc-eq0-1.c: Add support for the setbc
	instruction.
	* gcc.target/powerpc/ppc-ne0-1.c: Disable power10 code
	generation.

work054.patch009:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	PR testsuite/100166
	* gcc/testsuite/gcc.dg/vect/costmodel/ppc/costmodel-bb-slp-9a-pr63175.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-char.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-double.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-float.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-int.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-longlong.c:
	* gcc.target/powerpc/fold-vec-load-builtin_vec_xl-short.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-char.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-double.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-float.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-int.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-longlong.c:
	* gcc.target/powerpc/fold-vec-load-vec_vsx_ld-short.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-char.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-double.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-float.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-int.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-longlong.c:
	* gcc.target/powerpc/fold-vec-load-vec_xl-short.c:
	* gcc.target/powerpc/fold-vec-splat-floatdouble.c:
	* gcc.target/powerpc/fold-vec-splat-longlong.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-char.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-double.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-float.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-int.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-longlong.c:
	* gcc.target/powerpc/fold-vec-store-builtin_vec_xst-short.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-char.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-double.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-float.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-int.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-longlong.c:
	* gcc.target/powerpc/fold-vec-store-vec_vsx_st-short.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-char.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-double.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-float.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-int.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-longlong.c:
	* gcc.target/powerpc/fold-vec-store-vec_xst-short.c:
	* gcc.target/powerpc/lvsl-lvsr.c:
	* gcc/testsuite/gcc.target/powerpc/pr86731-fwrapv-longlong.c:
	Update insn counts to account for power10 prefixed loads and
	stores.

work054.patch008:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/vec-splati-runnable.c: Run test with -O2
	optimization.  Do not check what XXSPLTIDP generates if the value
	is undefined.

work054.patch003:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	PR target/70117
	* gcc.target/powerpc/pr70117.c: Force the long double type to use
	the IBM 128-bit format.
	* c-c++-common/dfp/convert-bfp-11.c: Force using IBM 128-bit long
	double.  Remove check for 64-bit long double.
	* lib/target-supports.exp
	(add_options_for_ppc_long_double_override_ibm128): New function.
	(check_effective_target_ppc_long_double_override_ibm128): New
	function.
	(add_options_for_ppc_long_double_override_ieee128): New function.
	(check_effective_target_ppc_long_double_override_ieee128): New
	function.
	(add_options_for_ppc_long_double_override_64bit): New function.
	(check_effective_target_ppc_long_double_override_64bit): New
	function.

work054.patch002:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

        * gcc.target/powerpc/float128-cmove.c: New test.
        * gcc.target/powerpc/float128-minmax-3.c: New test.

work054.patch001:
2021-06-03  Michael Meissner  <meissner@linux.ibm.com>

	* gcc.target/powerpc/float128-minmax-2.c: New test.
	* gcc.target/powerpc/float128-minmax.c: Turn off power10 code
	generation.

2021-06-03   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch
