# Copyright (C) 2011 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with GCC; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# Contributed by Diego Novillo <dnovillo@google.com>
# Adapted to new command-driven scheme by Lawrence Crowl <crowl@google.com>

load_lib copy-file.exp

proc dg-pph-hdr { subdir test options mapflag suffix } {

    global runtests dg-do-what-default

    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $test] {
	return
    }

    set nshort "$subdir/[file tail $test]"
    set bname "[file rootname [file tail $nshort]]"
    verbose "Testing $nshort, $options" 1
    set dg-do-what-default preparse
    dg-test -keep-output $test "$options $mapflag -I." ""

}

proc dg-pph-neg { subdir test options mapflag suffix } {

    global runtests dg-do-what-default

    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $test] {
	return
    }

    set nshort "$subdir/[file tail $test]"
    set bname "[file rootname [file tail $nshort]]"
    verbose "Testing $nshort, $options" 1
    set dg-do-what-default compile
    dg-test -keep-output $test "$options $mapflag -I." ""
    file_on_host delete "$bname.s"
}

proc dg-pph-pos { subdir test options mapflag suffix } {

    global runtests dg-do-what-default

    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $test] {
	return
    }

    set nshort "$subdir/[file tail $test]"
    set bname "[file rootname [file tail $nshort]]"
    verbose "Testing $nshort, $options" 1
    set dg-do-what-default compile

    set have_errs [llength [grep $test "{\[ \t\]\+dg-error\[ \t\]\+.*\[ \t\]\+}"]]
    # Compile the file the first time for a base case.
    dg-test -keep-output $test "$options -I." ""

    if { $have_errs } {
	verbose -log "regular compilation failed"
	fail "$nshort $options, regular compilation failed"
        return
    }

    if { ! [ file_on_host exists "$bname.s" ] } {
	verbose -log "assembly file '$bname.s' missing"
	fail "$nshort $options, assembly comparison"
        return
    }

    # Rename the .s file into .s-pph to compare it after the second build.
    remote_upload host "$bname.s" "$bname.s-pph"
    remote_download host "$bname.s-pph"

    # Compile a second time using the pph files.
    dg-test -keep-output $test "$options $mapflag -I." ""
    remote_upload host "$bname.s"

    # Compare the two assembly files.  They should be identical.
    set tmp [ diff "$bname.s" "$bname.s-pph" ]
    if { $tmp == 0 } {
        verbose -log "assembly file '$bname.s', '$bname.s-pph' comparison error"
        fail "$nshort $options assembly comparison"
    } elseif { $tmp == 1 } {
        pass "$nshort $options assembly comparison"
    } else {
        fail "$nshort $options assembly comparison"
    }
    file_on_host delete "$bname.s"
    file_on_host delete "$bname.s-pph"

}
