#   Copyright (C) 2007, 2008, 2009, 2010
#   Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; see the file COPYING3.  If not see
# <http://www.gnu.org/licenses/>.

# Test the functionality of programs compiled with profile-directed structure
# rearrangement using -fprofile-generate followed by -fprofile-use.

load_lib gcc-dg.exp
load_lib target-supports.exp

# Initialize `dg'.
dg-init
torture-init

set STRUCT_REORG_TORTURE_OPTIONS [list \
        { -O1 } \
        { -O1 -g } \
        { -O2 } \
        { -O2 -g } \
        { -O3 -fomit-frame-pointer -funroll-loops -fpeel-loops -ftracer -finline-functions } \
        { -O3 -g } \
        { -Os } ]


set-torture-options $STRUCT_REORG_TORTURE_OPTIONS {{}} $LTO_TORTURE_OPTIONS

gcc-dg-runtest [lsort [glob -nocomplain $srcdir/$subdir/wo_prof_*.c]] "" "-fipa-struct-reorg -fdump-ipa-all -fwhole-program"

torture-finish
dg-final

# Some targets don't support tree profiling.
if { ![check_profiling_available ""] } {
    return
}

# The procedures in profopt.exp need these parameters.
set tool gcc
set prof_ext "gcda"

# Override the list defined in profopt.exp.
set PROFOPT_OPTIONS [list {}]

if $tracelevel then {
    strace $tracelevel
}

# Load support procs.
load_lib profopt.exp

# These are globals used by profopt-execute.  The first is options
# needed to generate profile data, the second is options to use the
# profile data.
set common "-O3 -fwhole-program"
set profile_option [concat $common " -fprofile-generate"]
set feedback_option [concat $common " -fprofile-use -fipa-struct-reorg -fdump-ipa-all"]

foreach src [lsort [glob -nocomplain $srcdir/$subdir/w_prof_*.c]] {
    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $src] then {
        continue
    }
    profopt-execute $src
}

set feedback_option [concat $feedback_option " --param struct-reorg-cold-struct-ratio=30"]

foreach src [lsort [glob -nocomplain $srcdir/$subdir/w_ratio_*.c]] {
    # If we're only testing specific files and this isn't one of them, skip it.
    if ![runtest_file_p $runtests $src] then {
        continue
    }
    profopt-execute $src
}
