/* GCC MELT GENERATED C++ FILE warmelt-debug.cc - DO NOT EDIT - see http://gcc-melt.org/ */

/***+ warmelt-debug without options +***/
#include "melt-run.h"


/* used hash from melt-run.h when compiling this file: */
MELT_EXTERN const char meltrun_used_md5_melt[] = MELT_RUN_HASHMD5 /* from melt-run.h */;


/**** warmelt-debug declarations ****/
/**** MELT GENERATED DECLARATIONS for warmelt-debug ** DO NOT EDIT ; see gcc-melt.org ****/

/****++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
***
    Copyright 2009 - 2014  Free Software Foundation, Inc.
    Contributed by Basile Starynkevitch <basile@starynkevitch.net>

    This file is part of GCC.

    GCC is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3, or (at your option)
    any later version.

    GCC is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with GCC; see the file COPYING3.  If not see
    <http://www.gnu.org/licenses/>.
***
----------------------------------------------------------------****/


/** ordinary MELT module meltbuild-sources/warmelt-debug**/
#define MELT_HAS_INITIAL_ENVIRONMENT 1 /*usualmodule*/



class Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647; // forward declaration fromline 6691
typedef Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647 Melt_InitialFrame;
/**** no MELT module variables ****/

/*** 4 MELT called hook declarations ***/

/*declare MELT called hook #0 HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER **/
MELT_EXTERN melt_ptr_t melthook_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER (melt_ptr_t melthookdatap, melt_ptr_t meltinp0_PREVENV, const char* meltinp1_MODULNAME);

/*declare MELT called hook #1 HOOK_SYMBOL_IMPORTER **/
MELT_EXTERN melt_ptr_t melthook_HOOK_SYMBOL_IMPORTER (melt_ptr_t melthookdatap, const char* meltinp0_SYMNAMESTR, const char* meltinp1_MODULENAMESTR, melt_ptr_t meltinp2_PARENV);

/*declare MELT called hook #2 HOOK_SYMBOL_IMPORTER **/
MELT_EXTERN melt_ptr_t melthook_HOOK_SYMBOL_IMPORTER (melt_ptr_t melthookdatap, const char* meltinp0_SYMNAMESTR, const char* meltinp1_MODULENAMESTR, melt_ptr_t meltinp2_PARENV);

/*declare MELT called hook #3 HOOK_VALUE_EXPORTER **/
MELT_EXTERN void melthook_HOOK_VALUE_EXPORTER (melt_ptr_t melthookdatap, melt_ptr_t meltinp0_SYM, melt_ptr_t meltinp1_VAL, melt_ptr_t meltinp2_CONTENV);

/*** end of 4 MELT called hook declarations ***/

/*** no extra MELT c-headers ***/




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_8_WARMELTmiDEBUG_DBG_OUTOBJECT(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_9_WARMELTmiDEBUG_DBG_OUT(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_10_WARMELTmiDEBUG_DBGOUT_FIELDS(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_11_WARMELTmiDEBUG_DBGOUTAGAIN_FIELDS(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_12_WARMELTmiDEBUG_DBGOUT_NULL_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_13_WARMELTmiDEBUG_DBGOUT_STRING_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_14_WARMELTmiDEBUG_DBGOUT_STRBUF_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_15_WARMELTmiDEBUG_DBGOUT_INTEGER_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_16_WARMELTmiDEBUG_DBGOUT_DOUBLE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_17_WARMELTmiDEBUG_DBGOUT_MIXINT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_18_WARMELTmiDEBUG_DBGOUT_MIXLOC_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_19_WARMELTmiDEBUG_DBGOUT_MIXBIGINT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_20_WARMELTmiDEBUG_DBGOUT_MULTIPLE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_21_WARMELTmiDEBUG_DBGOUT_ROUTINE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_22_WARMELTmiDEBUG_LAMBDA_cl1(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_23_WARMELTmiDEBUG_DBGOUT_HOOK_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_24_WARMELTmiDEBUG_LAMBDA_cl2(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_25_WARMELTmiDEBUG_DBGOUT_CLOSURE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_26_WARMELTmiDEBUG_DBGOUT_LIST_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_27_WARMELTmiDEBUG_DBGOUT_PAIR_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_28_WARMELTmiDEBUG_DBGOUT_MAPOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_29_WARMELTmiDEBUG_LAMBDA_cl3(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_30_WARMELTmiDEBUG_LAMBDA_cl4(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_31_WARMELTmiDEBUG_LAMBDA_cl5(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_32_WARMELTmiDEBUG_DBGOUT_MAPSTRING_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_33_WARMELTmiDEBUG_LAMBDA_cl6(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_34_WARMELTmiDEBUG_LAMBDA_cl7(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_35_WARMELTmiDEBUG_DBGOUT_BUCKETLONG_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_36_WARMELTmiDEBUG_DBGOUT_JSONOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_37_WARMELTmiDEBUG_DBGOUT_ANYOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_38_WARMELTmiDEBUG_DBGOUT_ANYRECV_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_39_WARMELTmiDEBUG_DBGOUTAGAIN_ANYOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_40_WARMELTmiDEBUG_DBGOUT_NAMEDOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_41_WARMELTmiDEBUG_DBGOUTAGAIN_NAMEDOBJECT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_42_WARMELTmiDEBUG_DBGOUTAGAIN_SYMBOL_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_43_WARMELTmiDEBUG_DBGOUT_SYMBOL_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_44_WARMELTmiDEBUG_DBGOUT_CLASS_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_45_WARMELTmiDEBUG_DBGOUTAGAIN_KEYWORD_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_46_WARMELTmiDEBUG_DBGOUT_KEYWORD_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_47_WARMELTmiDEBUG_DBGOUTAGAIN_CLONED_SYMBOL_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_48_WARMELTmiDEBUG_DBGOUT_CLONED_SYMBOL_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_49_WARMELTmiDEBUG_DBGOUT_ENVIRONMENT_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_50_WARMELTmiDEBUG_DBGOUTAGAIN_CTYPE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_51_WARMELTmiDEBUG_DBGOUT_CTYPE_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_52_WARMELTmiDEBUG_DBGOUT_ANYBINDING_METHOD(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_53_WARMELTmiDEBUG_DEBUG_LESS_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_54_WARMELTmiDEBUG_DEBUG_MORE_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);




MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY meltrout_55_WARMELTmiDEBUG_DISPLAY_DEBUG_MESSAGE(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_);


MELT_EXTERN MELT_LOW_OPTIMIZATION void* melt_start_this_module (void*); /*mandatory start of module*/

MELT_EXTERN const char melt_module_is_gpl_compatible[];

/*declare opaque initial frame: */

typedef Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647 /*opaqueinitialclassy*/ meltinitial_frame_t;


/* define different names when debugging or not */
#if MELT_HAVE_DEBUG
MELT_EXTERN const char meltmodule_WARMELTmiDEBUG__melt_have_debug_enabled[];
#define melt_have_debug_string meltmodule_WARMELTmiDEBUG__melt_have_debug_enabled
#else /*!MELT_HAVE_DEBUG*/
MELT_EXTERN const char meltmodule_WARMELTmiDEBUG__melt_have_debug_disabled[];
#define melt_have_debug_string meltmodule_WARMELTmiDEBUG__melt_have_debug_disabled
#endif /*!MELT_HAVE_DEBUG*/



void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_0 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_1 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_2 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_3 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_4 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_5 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_6 (meltinitial_frame_t*, char*); //declare

void MELT_MODULE_VISIBILITY MELT_LOW_OPTIMIZATION meltmod__WARMELTmiDEBUG__initialmeltchunk_7 (meltinitial_frame_t*, char*); //declare



/**** warmelt-debug implementations ****/
/**** MELT GENERATED IMPLEMENTATIONS for warmelt-debug ** DO NOT EDIT ; see gcc-melt.org ****/
/*** no extra MELT implementations ***/




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN)) {};
        MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN


    /** end of frame for meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN */
    MeltFrame_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_TREE_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:111:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:116:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:118:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:118:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:118:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:119:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:116:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:111:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:111:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_TREE_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN)) {};
        MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN


    /** end of frame for meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN */
    MeltFrame_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_GIMPLE_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:124:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:129:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:131:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:131:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:131:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:132:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:129:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:124:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:124:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_GIMPLE_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN)) {};
        MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN


    /** end of frame for meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN */
    MeltFrame_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_GIMPLESEQ_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:137:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:142:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:144:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:144:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:144:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:145:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:142:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:137:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:137:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_GIMPLESEQ_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN)) {};
        MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN


    /** end of frame for meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN */
    MeltFrame_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_EDGE_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:150:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:155:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:157:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:157:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:157:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:158:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:155:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:150:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:150:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_EDGE_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN)) {};
        MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN


    /** end of frame for meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN */
    MeltFrame_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_BASICBLOCK_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:163:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:168:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:170:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:170:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:170:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:171:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:168:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:163:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:163:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_BASICBLOCK_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    long current_blocklevel_signals_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<4>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[3];
        /*classy others*/
        long _meltsparel;
        void melt_mark_stuff (void)
        {
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<4> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN)) {};
        MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<4> (fil,lin, sizeof(MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN


    /** end of frame for meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN */
    MeltFrame_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("REGISTER_LOOP_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:176:/ getarg");
    /*_.F__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {

        MELT_LOCATION("warmelt-debug.melt:181:/ quasiblock");


        /*^cond*/
        /*cond*/
        if (
            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
        ) /*then*/
            {
                /*^cond.then*/
                /*^getslot*/
                {
                    melt_ptr_t slot=NULL, obj=NULL;
                    obj = (melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0])) /*=obj*/;
                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                    /*_.OLDCONT__V4*/
                    meltfptr[3] = slot;
                };
                ;
            }
        else    /*^cond.else*/
            {

                /*_.OLDCONT__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
            }
        ;

        MELT_CHECK_SIGNAL();
        ;
        /*^compute*/
        /*_#NULL__L1*/
        meltfnum[0] =
            (/*null*/(/*_.F__V2*/ meltfptr[1]) == NULL);;
        MELT_LOCATION("warmelt-debug.melt:183:/ cond");
        /*cond*/
        if (/*_#NULL__L1*/ meltfnum[0]) /*then*/
            {
                /*^cond.then*/
                /*_#OR___L2*/ meltfnum[1] = /*_#NULL__L1*/ meltfnum[0];;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:183:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_#IS_CLOSURE__L3*/ meltfnum[2] =
                        (melt_magic_discr((melt_ptr_t)(/*_.F__V2*/ meltfptr[1])) == MELTOBMAG_CLOSURE);;
                    /*^compute*/
                    /*_#OR___L2*/
                    meltfnum[1] = /*_#IS_CLOSURE__L3*/ meltfnum[2];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:183:/ clear");
                    /*clear*/ /*_#IS_CLOSURE__L3*/
                    meltfnum[2] = 0 ;
                }
                ;
            }
        ;
        /*^cond*/
        /*cond*/
        if (/*_#OR___L2*/ meltfnum[1]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {


                    MELT_CHECK_SIGNAL();
                    ;
                    MELT_LOCATION("warmelt-debug.melt:184:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*^putslot*/
                                /*putslot*/
                                melt_assertmsg("checkobj putslot  _ @REFERENCED_VALUE", melt_magic_discr((melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0]))) == MELTOBMAG_OBJECT);
                                melt_putfield_object(((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0])), (0), (/*_.F__V2*/ meltfptr[1]), "REFERENCED_VALUE");
                                ;
                                /*^touch*/
                                meltgc_touch((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0]));
                                ;
                                /*^touchobj*/

                                melt_dbgtrace_written_object ((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[0]), "put-fields");
                                ;
                                /*epilog*/
                            }
                            ;
                        } /*noelse*/
                    ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*_.LET___V3*/
        meltfptr[2] = /*_.OLDCONT__V4*/ meltfptr[3];;

        MELT_LOCATION("warmelt-debug.melt:181:/ clear");
        /*clear*/ /*_.OLDCONT__V4*/
        meltfptr[3] = 0 ;
        /*^clear*/
        /*clear*/ /*_#NULL__L1*/
        meltfnum[0] = 0 ;
        /*^clear*/
        /*clear*/ /*_#OR___L2*/
        meltfnum[1] = 0 ;
        MELT_LOCATION("warmelt-debug.melt:176:/ quasiblock");


        /*_._RETVAL___V1*/
        meltfptr[0] = /*_.LET___V3*/ meltfptr[2];;

        {
            MELT_LOCATION("warmelt-debug.melt:176:/ locexp");
            /*ochecknores compilobj_nrep_return*/
#if MELT_HAVE_DEBUG
            if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
                melt_warn_for_no_expected_secondary_results();
            /* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG*/
            ;
        }
        ;
        /*^finalreturn*/
        ;
        /*finalret*/
        goto meltlabend_rout ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.LET___V3*/
        meltfptr[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("REGISTER_LOOP_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN*/






melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[], union meltparam_un *meltxargtab_,
        const melt_argdescr_cell_t meltxresdescr_[], union meltparam_un *meltxrestab_)
{
    /*variadic*/ int variad_MELT_DEBUG_FUN_ix = 0, variad_MELT_DEBUG_FUN_len = melt_argdescr_length (meltxargdescr_);
#define melt_variadic_length  (0+variad_MELT_DEBUG_FUN_len)
#define melt_variadic_index variad_MELT_DEBUG_FUN_ix

    long current_blocklevel_signals_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN_melt =  melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using OUTPUT_CURFRAME_DECLSTRUCT @warmelt-outobj.melt:1538

    /* start of frame for routine meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN fromline 1752 */

    /** start of frame for meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN of CLASS_PROCROUTINEOBJ from 1555**/

    /*curframdeclclassy*/ class MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN// fromline 1568
        : public Melt_CallFrameWithValues<70>
    {
    public: /* fromline 1572*/
        long mcfr_varnum[37];
        /*classy others*/
        const char* loc_CSTRING__o0;
        const char* loc_CSTRING__o1;
        const char* loc_CSTRING__o2;
        tree loc_TREE__o3;
        gimple loc_GIMPLE__o4;
        gimple_seq loc_GIMPLE_SEQ__o5;
        edge loc_EDGE__o6;
        loop_p loc_LOOP__o7;
        tree loc_TREE__o8;
        gimple loc_GIMPLE__o9;
        gimple_seq loc_GIMPLE_SEQ__o10;
        edge loc_EDGE__o11;
        basic_block loc_BASIC_BLOCK__o12;
        loop_p loc_LOOP__o13;
        long _meltsparel;
        void melt_mark_stuff (void)
        {
            /*marking tree*/
            /*:tree marker*/ gt_ggc_mx_tree_node (loc_TREE__o3);
            /*marking gimple*/
            /*:gimple marker*/
            gt_ggc_mx_gimple_statement_d (loc_GIMPLE__o4);
            /*marking gimple_seq*/
            /*:gimple_seq marker, really gimple marker*/
            gt_ggc_mx_gimple_statement_d (loc_GIMPLE_SEQ__o5);
            /*marking edge*/
            /*:edge marker*/
            gt_ggc_mx_edge_def (loc_EDGE__o6);
            /*marking loop_p*/
            /*:loop marker*/
            gt_ggc_mx_loop (loc_LOOP__o7);
            /*marking tree*/
            /*:tree marker*/
            gt_ggc_mx_tree_node (loc_TREE__o8);
            /*marking gimple*/
            /*:gimple marker*/
            gt_ggc_mx_gimple_statement_d (loc_GIMPLE__o9);
            /*marking gimple_seq*/
            /*:gimple_seq marker, really gimple marker*/
            gt_ggc_mx_gimple_statement_d (loc_GIMPLE_SEQ__o10);
            /*marking edge*/
            /*:edge marker*/
            gt_ggc_mx_edge_def (loc_EDGE__o11);
            /*marking basic_block*/
            /*:basic_block marker*/
            gt_ggc_mx_basic_block_def (loc_BASIC_BLOCK__o12);
            /*marking loop_p*/
            /*:loop marker*/
            gt_ggc_mx_loop (loc_LOOP__o13);
        } /*end melt_mark_stuff*/
        virtual void melt_mark_ggc_data (void)
        {
            melt_mark_values ();
            melt_mark_stuff ();
        }; /*end melt_mark_ggc_data*/
        MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN(meltclosure_ptr_t clos) //the closure constructor fromline 1630
            : Melt_CallFrameWithValues<70> (
#if ENABLE_CHECKING /*fromline 1634*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
                sizeof(MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN), clos) {};
        MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN() //the constructor fromline 1642
            : Melt_CallFrameWithValues<70> (
#if ENABLE_CHECKING /*fromline 1646*/
                __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
                sizeof(MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN)) {};
#if ENABLE_CHECKING /*fromline 1654*/
        MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN(const char*fil, int lin) //the constructor fromline 1656
            : Melt_CallFrameWithValues<70> (fil,lin, sizeof(MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN)) {};
        MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN(const char*fil, int lin, meltclosure_ptr_t clos) //the closure constructor fromline 1661
            : Melt_CallFrameWithValues<70> (fil,lin, sizeof(MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN), clos) {};
#endif /* ENABLE_CHECKING fromline 1666*/

    }; // end  class MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN


    /** end of frame for meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN fromline 1697**/

    /* end of frame for routine meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN fromline 1756 */

    /* classy proc frame meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN */
    MeltFrame_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyprocarg meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN fromline 1785*/
#if ENABLE_CHECKING
    (__FILE__, __LINE__, meltclosp_) /* fromline 1789*/
#else /*ENABLE_CHECKING */
    (meltclosp_) /* fromline 1793*/
#endif /*ENABLE_CHECKING */

    ;
#define meltframe meltfram__

    melt_trace_start("MELT_DEBUG_FUN", meltcallcount);
    /*use arguments*/
    (void) meltclosp_;
    (void)meltfirstargp_;
    (void)meltxargdescr_;
    (void)meltxargtab_;
    (void)meltxresdescr_;
    (void)meltxrestab_;
    /*getargs*/

    /*getarg#0*/
    MELT_LOCATION("warmelt-debug.melt:199:/ getarg");
    /*_.NOTHING__V2*/
    meltfptr[1] = (melt_ptr_t) meltfirstargp_;

    /*getarg#1*/
    /*^getarg*/
    if (meltxargdescr_[0] != MELTBPAR_LONG)   /*getargrest*/
        {
            variad_MELT_DEBUG_FUN_ix = variad_MELT_DEBUG_FUN_len;
            goto meltlab_endgetargs;
        }
    variad_MELT_DEBUG_FUN_ix = 1;
    /*_#COUNT__L1*/
    meltfnum[0] = meltxargtab_[0].meltbp_long;

    /*getarg#2*/
    /*^getarg*/
    if (meltxargdescr_[1] != MELTBPAR_CSTRING)   /*getargrest*/
        {
            variad_MELT_DEBUG_FUN_ix = variad_MELT_DEBUG_FUN_len;
            goto meltlab_endgetargs;
        }
    variad_MELT_DEBUG_FUN_ix = 2;
    /*_?*/
    meltfram__.loc_CSTRING__o0 = meltxargtab_[1].meltbp_cstring;

    /*getarg#3*/
    /*^getarg*/
    if (meltxargdescr_[2] != MELTBPAR_LONG)   /*getargrest*/
        {
            variad_MELT_DEBUG_FUN_ix = variad_MELT_DEBUG_FUN_len;
            goto meltlab_endgetargs;
        }
    variad_MELT_DEBUG_FUN_ix = 3;
    /*_#LINENO__L2*/
    meltfnum[1] = meltxargtab_[2].meltbp_long;
    ;
    goto meltlab_endgetargs;
meltlab_endgetargs:
    ;
    /*body*/
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*_#MELT_HAS_FLAG_DEBUG_SET__L3*/
        meltfnum[2] =
            /*MELT_HAS_FLAG_DEBUG_SET*/ melt_flag_debug;;
        MELT_LOCATION("warmelt-debug.melt:200:/ cond");
        /*cond*/
        if (/*_#MELT_HAS_FLAG_DEBUG_SET__L3*/ meltfnum[2]) /*then*/
            {
                /*^cond.then*/
                /*^block*/
                /*anyblock*/
                {

                    MELT_LOCATION("warmelt-debug.melt:201:/ quasiblock");


                    /*_#DBGCOUNTER__L4*/
                    meltfnum[3] = 0;;
                    MELT_LOCATION("warmelt-debug.melt:202:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!INITIAL_SYSTEM_DATA*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_SYSTEM_DATA*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^getslot*/
                            {
                                melt_ptr_t slot=NULL, obj=NULL;
                                obj = (melt_ptr_t)((/*!INITIAL_SYSTEM_DATA*/ meltfrout->tabval[0])) /*=obj*/;
                                melt_object_get_field(slot,obj, 8, "SYSDATA_DUMPFILE");
                                /*_.DUMPF__V3*/
                                meltfptr[2] = slot;
                            };
                            ;
                        }
                    else    /*^cond.else*/
                        {

                            /*_.DUMPF__V3*/ meltfptr[2] =  /*reallynil*/ NULL ;;
                        }
                    ;
                    MELT_LOCATION("warmelt-debug.melt:203:/ cond");
                    /*cond*/
                    if (
                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!INITIAL_SYSTEM_DATA*/ meltfrout->tabval[0])),
                                                      (melt_ptr_t)((/*!CLASS_SYSTEM_DATA*/ meltfrout->tabval[1])))
                    ) /*then*/
                        {
                            /*^cond.then*/
                            /*^getslot*/
                            {
                                melt_ptr_t slot=NULL, obj=NULL;
                                obj = (melt_ptr_t)((/*!INITIAL_SYSTEM_DATA*/ meltfrout->tabval[0])) /*=obj*/;
                                melt_object_get_field(slot,obj, 7, "SYSDATA_STDERR");
                                /*_.STDERRF__V4*/
                                meltfptr[3] = slot;
                            };
                            ;
                        }
                    else    /*^cond.else*/
                        {

                            /*_.STDERRF__V4*/ meltfptr[3] =  /*reallynil*/ NULL ;;
                        }
                    ;
                    /*^compute*/
                    /*_.OUT__V5*/
                    meltfptr[4] = /*_.DUMPF__V3*/ meltfptr[2];;
                    /*^compute*/
                    /*_.OCCMAP__V6*/
                    meltfptr[5] =
                        (meltgc_new_mapobjects( (meltobject_ptr_t) ((/*!DISCR_MAP_OBJECTS*/ meltfrout->tabval[2])), (50)));;
                    /*^compute*/
                    /*_#DEBUG_DEPTH__L5*/
                    meltfnum[4] =
                        (long) (melt_debug_depth ());;
                    /*^compute*/
                    /*_.BOXEDMAXDEPTH__V7*/
                    meltfptr[6] =
                        (meltgc_new_int((meltobject_ptr_t)((/*!DISCR_INTEGER*/ meltfrout->tabval[3])), (/*_#DEBUG_DEPTH__L5*/ meltfnum[4])));;

                    {
                        MELT_LOCATION("warmelt-debug.melt:208:/ locexp");
                        /* melt_debug_fun GETDBGCOUNTER__1*/ /*_#DBGCOUNTER__L4*/
                        meltfnum[3] = melt_dbgcounter ;
                        ;
                    }
                    ;

                    {
                        MELT_LOCATION("warmelt-debug.melt:214:/ locexp");
                        /* melt_debug_fun ENSUREGOODOUT_CHK__1*/
                        {
                            static int nbwarn		;
                            if (melt_get_file ((melt_ptr_t) /*_.OUT__V5*/ meltfptr[4]) == NULL)
                                {
                                    gcc_assert (melt_get_file ((melt_ptr_t) /*_.STDERRF__V4*/ meltfptr[3]) == stderr) ;
                                    /*_.OUT__V5*/
                                    meltfptr[4] = /*_.STDERRF__V4*/ meltfptr[3] ;
                                    if (nbwarn++ <= 0)
                                        {
                                            inform (UNKNOWN_LOCATION,
                                                    "MELT debug output goes to stderr because we have no dump_file.") ;
                                        }
                                }
                        } /* end melt_debug_fun ENSUREGOODOUT_CHK__1*/ ;
                    }
                    ;

                    MELT_CHECK_SIGNAL();
                    ;
                    /*_#NULL__L6*/
                    meltfnum[5] =
                        (/*null*/(/*_.OUT__V5*/ meltfptr[4]) == NULL);;
                    MELT_LOCATION("warmelt-debug.melt:226:/ cond");
                    /*cond*/
                    if (/*_#NULL__L6*/ meltfnum[5]) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                MELT_LOCATION("warmelt-debug.melt:227:/ compute");
                                /*_.OUT__V5*/
                                meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] = /*_.STDERRF__V4*/ meltfptr[3];;
                                /*_._IF___V8*/
                                meltfptr[7] = /*_.SETQ___V9*/ meltfptr[8];;
                                /*epilog*/

                                MELT_LOCATION("warmelt-debug.melt:226:/ clear");
                                /*clear*/ /*_.SETQ___V9*/
                                meltfptr[8] = 0 ;
                            }
                            ;
                        }
                    else    /*^cond.else*/
                        {

                            /*_._IF___V8*/ meltfptr[7] =  /*reallynil*/ NULL ;;
                        }
                    ;

                    MELT_CHECK_SIGNAL();
                    ;
                    /*^compute*/
                    /*_#NULL__L7*/
                    meltfnum[6] =
                        (/*null*/(/*_.OUT__V5*/ meltfptr[4]) == NULL);;
                    MELT_LOCATION("warmelt-debug.melt:231:/ cond");
                    /*cond*/
                    if (/*_#NULL__L7*/ meltfnum[6]) /*then*/
                        {
                            /*^cond.then*/
                            /*^block*/
                            /*anyblock*/
                            {

                                /*_.MAKE_STRBUF__V11*/ meltfptr[10] =
                                    (melt_ptr_t) meltgc_new_strbuf((meltobject_ptr_t)((/*!DISCR_STRBUF*/ meltfrout->tabval[4])), (const char*)0);;
                                MELT_LOCATION("warmelt-debug.melt:232:/ compute");
                                /*_.OUT__V5*/
                                meltfptr[4] = /*_.SETQ___V12*/ meltfptr[11] = /*_.MAKE_STRBUF__V11*/ meltfptr[10];;
                                /*_._IF___V10*/
                                meltfptr[8] = /*_.SETQ___V12*/ meltfptr[11];;
                                /*epilog*/

                                MELT_LOCATION("warmelt-debug.melt:231:/ clear");
                                /*clear*/ /*_.MAKE_STRBUF__V11*/
                                meltfptr[10] = 0 ;
                                /*^clear*/
                                /*clear*/ /*_.SETQ___V12*/
                                meltfptr[11] = 0 ;
                            }
                            ;
                        }
                    else    /*^cond.else*/
                        {

                            /*_._IF___V10*/ meltfptr[8] =  /*reallynil*/ NULL ;;
                        }
                    ;

#if MELT_HAVE_DEBUG
                    MELT_LOCATION("warmelt-debug.melt:233:/ cppif.then");
                    /*^block*/
                    /*anyblock*/
                    {


                        MELT_CHECK_SIGNAL();
                        ;
                        /*_#IS_OUT__L8*/
                        meltfnum[7] =
                            (melt_is_out ((melt_ptr_t) /*_.OUT__V5*/ meltfptr[4])) ;;
                        MELT_LOCATION("warmelt-debug.melt:233:/ cond");
                        /*cond*/
                        if (/*_#IS_OUT__L8*/ meltfnum[7]) /*then*/
                            {
                                /*^cond.then*/
                                /*_._IFELSE___V14*/ meltfptr[11] = (/*nil*/NULL);;
                            }
                        else
                            {
                                MELT_LOCATION("warmelt-debug.melt:233:/ cond.else");

                                /*^block*/
                                /*anyblock*/
                                {


                                    MELT_CHECK_SIGNAL();
                                    ;
                                    /*^apply*/
                                    /*apply*/
                                    {
                                        union meltparam_un argtab[4];
                                        memset(&argtab, 0, sizeof(argtab));
                                        /*^apply.arg*/
                                        argtab[0].meltbp_cstring =  "check good out";
                                        /*^apply.arg*/
                                        argtab[1].meltbp_cstring =  "warmelt-debug.melt";
                                        /*^apply.arg*/
                                        argtab[2].meltbp_long = 233;
                                        /*^apply.arg*/
                                        argtab[3].meltbp_aptr = (melt_ptr_t*) &/*_.OUT__V5*/ meltfptr[4];
                                        /*_.MELT_ASSERT_FAILURE_FUN__V15*/
                                        meltfptr[14] =  melt_apply ((meltclosure_ptr_t)((/*!MELT_ASSERT_FAILURE_FUN*/ meltfrout->tabval[5])), (melt_ptr_t)((/*nil*/NULL)), (MELTBPARSTR_CSTRING MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
                                    }
                                    ;
                                    /*_._IFELSE___V14*/
                                    meltfptr[11] = /*_.MELT_ASSERT_FAILURE_FUN__V15*/ meltfptr[14];;
                                    /*epilog*/

                                    MELT_LOCATION("warmelt-debug.melt:233:/ clear");
                                    /*clear*/ /*_.MELT_ASSERT_FAILURE_FUN__V15*/
                                    meltfptr[14] = 0 ;
                                }
                                ;
                            }
                        ;
                        /*_.IFCPP___V13*/
                        meltfptr[10] = /*_._IFELSE___V14*/ meltfptr[11];;
                        /*epilog*/

                        MELT_LOCATION("warmelt-debug.melt:233:/ clear");
                        /*clear*/ /*_#IS_OUT__L8*/
                        meltfnum[7] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_._IFELSE___V14*/
                        meltfptr[11] = 0 ;
                    }

#else /*MELT_HAVE_DEBUG*/
                    /*^cppif.else*/
                    /*_.IFCPP___V13*/ meltfptr[10] = (/*nil*/NULL);
#endif /*MELT_HAVE_DEBUG*/
                    ;

#if MELT_HAVE_DEBUG
                    MELT_LOCATION("warmelt-debug.melt:234:/ cppif.then");
                    /*^block*/
                    /*anyblock*/
                    {


                        MELT_CHECK_SIGNAL();
                        ;
                        /*_#GET_INT__L9*/
                        meltfnum[7] =
                            (melt_get_int((melt_ptr_t)(/*_.BOXEDMAXDEPTH__V7*/ meltfptr[6])));;
                        /*^compute*/
                        /*_#gtI__L10*/
                        meltfnum[9] =
                            ((/*_#GET_INT__L9*/ meltfnum[7]) > (1));;
                        MELT_LOCATION("warmelt-debug.melt:234:/ cond");
                        /*cond*/
                        if (/*_#gtI__L10*/ meltfnum[9]) /*then*/
                            {
                                /*^cond.then*/
                                /*_._IFELSE___V17*/ meltfptr[11] = (/*nil*/NULL);;
                            }
                        else
                            {
                                MELT_LOCATION("warmelt-debug.melt:234:/ cond.else");

                                /*^block*/
                                /*anyblock*/
                                {


                                    MELT_CHECK_SIGNAL();
                                    ;
                                    /*^apply*/
                                    /*apply*/
                                    {
                                        union meltparam_un argtab[4];
                                        memset(&argtab, 0, sizeof(argtab));
                                        /*^apply.arg*/
                                        argtab[0].meltbp_cstring =  "check boxedmaxdepth";
                                        /*^apply.arg*/
                                        argtab[1].meltbp_cstring =  "warmelt-debug.melt";
                                        /*^apply.arg*/
                                        argtab[2].meltbp_long = 234;
                                        /*^apply.arg*/
                                        argtab[3].meltbp_aptr = (melt_ptr_t*) &/*_.BOXEDMAXDEPTH__V7*/ meltfptr[6];
                                        /*_.MELT_ASSERT_FAILURE_FUN__V18*/
                                        meltfptr[17] =  melt_apply ((meltclosure_ptr_t)((/*!MELT_ASSERT_FAILURE_FUN*/ meltfrout->tabval[5])), (melt_ptr_t)((/*nil*/NULL)), (MELTBPARSTR_CSTRING MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
                                    }
                                    ;
                                    /*_._IFELSE___V17*/
                                    meltfptr[11] = /*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17];;
                                    /*epilog*/

                                    MELT_LOCATION("warmelt-debug.melt:234:/ clear");
                                    /*clear*/ /*_.MELT_ASSERT_FAILURE_FUN__V18*/
                                    meltfptr[17] = 0 ;
                                }
                                ;
                            }
                        ;
                        /*_.IFCPP___V16*/
                        meltfptr[14] = /*_._IFELSE___V17*/ meltfptr[11];;
                        /*epilog*/

                        MELT_LOCATION("warmelt-debug.melt:234:/ clear");
                        /*clear*/ /*_#GET_INT__L9*/
                        meltfnum[7] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#gtI__L10*/
                        meltfnum[9] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_._IFELSE___V17*/
                        meltfptr[11] = 0 ;
                    }

#else /*MELT_HAVE_DEBUG*/
                    /*^cppif.else*/
                    /*_.IFCPP___V16*/ meltfptr[14] = (/*nil*/NULL);
#endif /*MELT_HAVE_DEBUG*/
                    ;
                    /*citerblock BLOCK_SIGNALS*/
                    {
                        /* block_signals meltcit1__BLKSIGNAL start */
                        long meltcit1__BLKSIGNAL_lev = melt_blocklevel_signals;
                        melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev + 1;



                        MELT_LOCATION("warmelt-debug.melt:239:/ quasiblock");



                        MELT_CHECK_SIGNAL();
                        ;
                        MELT_LOCATION("warmelt-debug.melt:240:/ quasiblock");


                        /*^rawallocobj*/
                        /*rawallocobj*/
                        {
                            melt_ptr_t newobj = 0;
                            melt_raw_object_create(newobj,(melt_ptr_t)((/*!CLASS_DEBUG_INFORMATION*/ meltfrout->tabval[6])), (3), "CLASS_DEBUG_INFORMATION");
                            /*_.INST__V20*/
                            meltfptr[11] =
                                newobj;
                        };
                        ;
                        /*^putslot*/
                        /*putslot*/
                        melt_assertmsg("checkobj putslot  _ @DBGI_OUT", melt_magic_discr((melt_ptr_t)(/*_.INST__V20*/ meltfptr[11])) == MELTOBMAG_OBJECT);
                        melt_putfield_object((/*_.INST__V20*/ meltfptr[11]), (0), (/*_.OUT__V5*/ meltfptr[4]), "DBGI_OUT");
                        ;
                        /*^putslot*/
                        /*putslot*/
                        melt_assertmsg("checkobj putslot  _ @DBGI_OCCMAP", melt_magic_discr((melt_ptr_t)(/*_.INST__V20*/ meltfptr[11])) == MELTOBMAG_OBJECT);
                        melt_putfield_object((/*_.INST__V20*/ meltfptr[11]), (1), (/*_.OCCMAP__V6*/ meltfptr[5]), "DBGI_OCCMAP");
                        ;
                        /*^putslot*/
                        /*putslot*/
                        melt_assertmsg("checkobj putslot  _ @DBGI_MAXDEPTH", melt_magic_discr((melt_ptr_t)(/*_.INST__V20*/ meltfptr[11])) == MELTOBMAG_OBJECT);
                        melt_putfield_object((/*_.INST__V20*/ meltfptr[11]), (2), (/*_.BOXEDMAXDEPTH__V7*/ meltfptr[6]), "DBGI_MAXDEPTH");
                        ;
                        /*^touchobj*/

                        melt_dbgtrace_written_object (/*_.INST__V20*/ meltfptr[11], "newly made instance");
                        ;
                        /*_.DBGI__V19*/
                        meltfptr[17] = /*_.INST__V20*/ meltfptr[11];;
                        /*^compute*/
                        /*_#FRAMDEPTH__L11*/
                        meltfnum[7] =
                            (melt_curframdepth());;
                        /*^compute*/
                        /*_#OUTLEN__L12*/
                        meltfnum[9] =
                            melt_output_length ((melt_ptr_t)/*_.OUT__V5*/ meltfptr[4]);;
                        /*^compute*/
                        /*_#LASTSTROUTLEN__L13*/
                        meltfnum[12] = /*_#OUTLEN__L12*/ meltfnum[9];;
                        /*^compute*/
                        /*_#INITOUTLEN__L14*/
                        meltfnum[13] = /*_#OUTLEN__L12*/ meltfnum[9];;

                        MELT_CHECK_SIGNAL();
                        ;
                        /*^compute*/
                        /*_#pcIRAW__L15*/
                        meltfnum[14] =
                            ((/*_#DBGCOUNTER__L4*/ meltfnum[3]) % (512));;
                        /*^compute*/
                        /*_#NOT__L16*/
                        meltfnum[15] =
                            (!(/*_#pcIRAW__L15*/ meltfnum[14]));;
                        MELT_LOCATION("warmelt-debug.melt:249:/ cond");
                        /*cond*/
                        if (/*_#NOT__L16*/ meltfnum[15]) /*then*/
                            {
                                /*^cond.then*/
                                /*^block*/
                                /*anyblock*/
                                {


                                    {
                                        MELT_LOCATION("warmelt-debug.melt:250:/ locexp");
                                        /* melt_debug_fun GETTIME_CHK__1 start */
                                        char GETTIME_CHK__1timbuf[32];
                                        static char GETTIME_CHK__1buf[64];
                                        time_t GETTIME_CHK__1now = 0;
                                        time (& GETTIME_CHK__1now);
                                        strftime (GETTIME_CHK__1timbuf, sizeof(GETTIME_CHK__1timbuf),
                                                  "%T", localtime(& GETTIME_CHK__1now));
                                        snprintf (GETTIME_CHK__1buf, sizeof(GETTIME_CHK__1buf),
                                                  "%s, %.3f cpu, %.3f real sec.",
                                                  GETTIME_CHK__1timbuf, clock() * 1.0e-6,
                                                  (double) melt_relative_time_millisec() * 1.0e-3);
                                        /*^block*/
                                        /*anyblock*/
                                        {

                                            /*_?*/ meltfram__.loc_CSTRING__o1 =
                                                /*melt_debug_fun TIMESTR_CHK__1*/
                                                GETTIME_CHK__1buf ;;

                                            MELT_CHECK_SIGNAL();
                                            ;
                                            MELT_LOCATION("warmelt-debug.melt:264:/ apply");
                                            /*apply*/
                                            {
                                                union meltparam_un argtab[3];
                                                memset(&argtab, 0, sizeof(argtab));
                                                /*^apply.arg*/
                                                argtab[0].meltbp_cstring =  "\n!!!!++++++++@~.@~.@~.@~.@~.@~.@~.@~. ";
                                                /*^apply.arg*/
                                                argtab[1].meltbp_cstring = /*_?*/ meltfram__.loc_CSTRING__o1;
                                                /*^apply.arg*/
                                                argtab[2].meltbp_cstring =  "\n";
                                                /*_.ADD2OUT__V21*/
                                                meltfptr[20] =  melt_apply ((meltclosure_ptr_t)((/*!ADD2OUT*/ meltfrout->tabval[7])), (melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (MELTBPARSTR_CSTRING MELTBPARSTR_CSTRING MELTBPARSTR_CSTRING ""), argtab, "", (union meltparam_un*)0);
                                            }
                                            ;

                                            {
                                                MELT_LOCATION("warmelt-debug.melt:269:/ locexp");
                                                /*void*/
                                                (void)0;
                                            }
                                            ;
                                            MELT_LOCATION("warmelt-debug.melt:263:/ quasiblock");


                                            /*epilog*/

                                            MELT_LOCATION("warmelt-debug.melt:250:/ clear");
                                            /*clear*/ /*_?*/
                                            meltfram__.loc_CSTRING__o1 = 0 ;
                                            /*^clear*/
                                            /*clear*/ /*_.ADD2OUT__V21*/
                                            meltfptr[20] = 0 ;
                                        }

                                        /* melt_debug_fun GETTIME_CHK__1 end */
                                        ;
                                    }
                                    ;
                                    MELT_LOCATION("warmelt-debug.melt:249:/ quasiblock");


                                    /*epilog*/
                                }
                                ;
                            } /*noelse*/
                        ;
                        /*_#miI__L17*/
                        meltfnum[16] =
                            ((/*_#FRAMDEPTH__L11*/ meltfnum[7]) - (1));;

                        MELT_CHECK_SIGNAL();
                        ;
                        MELT_LOCATION("warmelt-debug.melt:272:/ apply");
                        /*apply*/
                        {
                            union meltparam_un argtab[5];
                            memset(&argtab, 0, sizeof(argtab));
                            /*^apply.arg*/
                            argtab[0].meltbp_cstring =  "!!!!****####";
                            /*^apply.arg*/
                            argtab[1].meltbp_long = /*_#DBGCOUNTER__L4*/ meltfnum[3];
                            /*^apply.arg*/
                            argtab[2].meltbp_cstring =  "#^";
                            /*^apply.arg*/
                            argtab[3].meltbp_long = /*_#miI__L17*/ meltfnum[16];
                            /*^apply.arg*/
                            argtab[4].meltbp_cstring =  ":";
                            /*_.ADD2OUT__V22*/
                            meltfptr[20] =  melt_apply ((meltclosure_ptr_t)((/*!ADD2OUT*/ meltfrout->tabval[7])), (melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab, "", (union meltparam_un*)0);
                        }
                        ;

                        MELT_CHECK_SIGNAL();
                        ;
                        MELT_LOCATION("warmelt-debug.melt:273:/ cond");
                        /*cond*/
                        if (/*_?*/ meltfram__.loc_CSTRING__o0) /*then*/
                            {
                                /*^cond.then*/
                                /*^block*/
                                /*anyblock*/
                                {


                                    MELT_CHECK_SIGNAL();
                                    ;
                                    MELT_LOCATION("warmelt-debug.melt:274:/ apply");
                                    /*apply*/
                                    {
                                        union meltparam_un argtab[4];
                                        memset(&argtab, 0, sizeof(argtab));
                                        /*^apply.arg*/
                                        argtab[0].meltbp_cstring = /*_?*/ meltfram__.loc_CSTRING__o0;
                                        /*^apply.arg*/
                                        argtab[1].meltbp_cstring =  ":";
                                        /*^apply.arg*/
                                        argtab[2].meltbp_long = /*_#LINENO__L2*/ meltfnum[1];
                                        /*^apply.arg*/
                                        argtab[3].meltbp_cstring =  ":";
                                        /*_.ADD2OUT__V24*/
                                        meltfptr[23] =  melt_apply ((meltclosure_ptr_t)((/*!ADD2OUT*/ meltfrout->tabval[7])), (melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (MELTBPARSTR_CSTRING MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab, "", (union meltparam_un*)0);
                                    }
                                    ;
                                    /*_._IF___V23*/
                                    meltfptr[22] = /*_.ADD2OUT__V24*/ meltfptr[23];;
                                    /*epilog*/

                                    MELT_LOCATION("warmelt-debug.melt:273:/ clear");
                                    /*clear*/ /*_.ADD2OUT__V24*/
                                    meltfptr[23] = 0 ;
                                }
                                ;
                            }
                        else    /*^cond.else*/
                            {

                                /*_._IF___V23*/ meltfptr[22] =  /*reallynil*/ NULL ;;
                            }
                        ;

                        MELT_CHECK_SIGNAL();
                        ;
                        /*^compute*/
                        /*_#gtI__L18*/
                        meltfnum[17] =
                            ((/*_#COUNT__L1*/ meltfnum[0]) > (0));;
                        MELT_LOCATION("warmelt-debug.melt:275:/ cond");
                        /*cond*/
                        if (/*_#gtI__L18*/ meltfnum[17]) /*then*/
                            {
                                /*^cond.then*/
                                /*^block*/
                                /*anyblock*/
                                {


                                    MELT_CHECK_SIGNAL();
                                    ;
                                    MELT_LOCATION("warmelt-debug.melt:276:/ apply");
                                    /*apply*/
                                    {
                                        union meltparam_un argtab[3];
                                        memset(&argtab, 0, sizeof(argtab));
                                        /*^apply.arg*/
                                        argtab[0].meltbp_cstring =  " !";
                                        /*^apply.arg*/
                                        argtab[1].meltbp_long = /*_#COUNT__L1*/ meltfnum[0];
                                        /*^apply.arg*/
                                        argtab[2].meltbp_cstring =  ": ";
                                        /*_.ADD2OUT__V26*/
                                        meltfptr[25] =  melt_apply ((meltclosure_ptr_t)((/*!ADD2OUT*/ meltfrout->tabval[7])), (melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab, "", (union meltparam_un*)0);
                                    }
                                    ;
                                    MELT_LOCATION("warmelt-debug.melt:275:/ quasiblock");


                                    /*_.PROGN___V27*/
                                    meltfptr[26] = /*_.ADD2OUT__V26*/ meltfptr[25];;
                                    /*^compute*/
                                    /*_._IF___V25*/
                                    meltfptr[23] = /*_.PROGN___V27*/ meltfptr[26];;
                                    /*epilog*/

                                    MELT_LOCATION("warmelt-debug.melt:275:/ clear");
                                    /*clear*/ /*_.ADD2OUT__V26*/
                                    meltfptr[25] = 0 ;
                                    /*^clear*/
                                    /*clear*/ /*_.PROGN___V27*/
                                    meltfptr[26] = 0 ;
                                }
                                ;
                            }
                        else    /*^cond.else*/
                            {

                                /*_._IF___V25*/ meltfptr[23] =  /*reallynil*/ NULL ;;
                            }
                        ;
                        MELT_LOCATION("warmelt-debug.melt:278:/ loop");
                        /*loop*/
                        {
meltlabloop_ARGLOOP_1:;/*^loopbody*/

                            /*^block*/
                            /*anyblock*/
                            {


                                MELT_CHECK_SIGNAL();
                                ;
                                MELT_LOCATION("warmelt-debug.melt:281:/ cond");
                                /*cond*/
                                if (/*ifvariadic nomore*/ variad_MELT_DEBUG_FUN_ix == variad_MELT_DEBUG_FUN_len) /*then*/
                                    {
                                        /*^cond.then*/
                                        /*^block*/
                                        /*anyblock*/
                                        {

                                            /*^compute*/

                                            /*consume variadic  !*/ variad_MELT_DEBUG_FUN_ix += 0;;
                                            MELT_LOCATION("warmelt-debug.melt:282:/ quasiblock");


                                            /*^compute*/
                                            /*_.ARGLOOP__V29*/
                                            meltfptr[26] =  /*reallynil*/ NULL ;;

                                            /*^exit*/
                                            /*exit*/
                                            {
                                                goto meltlabexit_ARGLOOP_1;
                                            }
                                            ;
                                            /*epilog*/
                                        }
                                        ;
                                    }
                                else
                                    {
                                        MELT_LOCATION("warmelt-debug.melt:281:/ cond.else");

                                        /*^block*/
                                        /*anyblock*/
                                        {

                                            MELT_LOCATION("warmelt-debug.melt:283:/ cond");
                                            /*cond*/
                                            if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_LONG) /*then*/
                                                {
                                                    /*^cond.then*/
                                                    /*^block*/
                                                    /*anyblock*/
                                                    {

                                                        /*^compute*/
                                                        /*_#L__L19*/ meltfnum[18] =
                                                            /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_long;;
                                                        /*^compute*/

                                                        /*consume variadic LONG !*/
                                                        variad_MELT_DEBUG_FUN_ix += 1;;

                                                        {
                                                            MELT_LOCATION("warmelt-debug.melt:284:/ locexp");
                                                            meltgc_add_out_dec((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (/*_#L__L19*/ meltfnum[18]));
                                                        }
                                                        ;
                                                        /*epilog*/

                                                        MELT_LOCATION("warmelt-debug.melt:283:/ clear");
                                                        /*clear*/ /*_#L__L19*/
                                                        meltfnum[18] = 0 ;
                                                    }
                                                    ;
                                                }
                                            else    /*^cond.else*/
                                                {

                                                    /*^block*/
                                                    /*anyblock*/
                                                    {

                                                        MELT_LOCATION("warmelt-debug.melt:285:/ cond");
                                                        /*cond*/
                                                        if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_CSTRING) /*then*/
                                                            {
                                                                /*^cond.then*/
                                                                /*^block*/
                                                                /*anyblock*/
                                                                {

                                                                    /*^compute*/
                                                                    /*_?*/ meltfram__.loc_CSTRING__o2 =
                                                                        /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_cstring;;
                                                                    /*^compute*/

                                                                    /*consume variadic CSTRING !*/
                                                                    variad_MELT_DEBUG_FUN_ix += 1;;
                                                                    MELT_LOCATION("warmelt-debug.melt:286:/ quasiblock");


                                                                    /*_#CUROUTLEN__L20*/
                                                                    meltfnum[18] =
                                                                        melt_output_length ((melt_ptr_t)/*_.OUT__V5*/ meltfptr[4]);;

                                                                    MELT_CHECK_SIGNAL();
                                                                    ;
                                                                    MELT_LOCATION("warmelt-debug.melt:288:/ block");
                                                                    /*anyblock*/
                                                                    {

                                                                        /*^objgoto*/
                                                                        /*objgoto*/ goto mtch1_0;
                                                                        ;

                                                                        /*objlabel*/
mtch1_0:
                                                                        ;
                                                                        MELT_LOCATION("warmelt-debug.melt:289:/ objlabel");
                                                                        /* objlabel */
#if MELTDEBUG_MATCHING
                                                                        static long meltlab_count_1;
                                                                        meltlab_count_1++;
                                                                        debugeprintf("objlabel_1 mtch1_*CLASS_NORMTESTER_MATCHER/32ec7060. *CLASS_OBJLABELINSTR/2f85c3cf. %ld", meltlab_count_1);
#endif

                                                                        ;
                                                                        /*^cond*/
                                                                        /*cond*/
                                                                        if (
                                                                            /* cstring_prefixed STRPREFIXED_mtch1__1 test*/ (/*_?*/ meltfram__.loc_CSTRING__o2 &&  " " && !strncmp(/*_?*/ meltfram__.loc_CSTRING__o2,  " ", strlen ( " "))) ) /*then*/
                                                                            {
                                                                                /*^cond.then*/
                                                                                /*^block*/
                                                                                /*anyblock*/
                                                                                {


                                                                                    {
                                                                                        /*^locexp*/
                                                                                        ;
                                                                                    }
                                                                                    ;
                                                                                    /*^objgoto*/
                                                                                    /*objgoto*/
                                                                                    goto mtch1_1;
                                                                                    ;
                                                                                }
                                                                                ;
                                                                            }
                                                                        else    /*^cond.else*/
                                                                            {

                                                                                /*^block*/
                                                                                /*anyblock*/
                                                                                {

                                                                                    MELT_LOCATION("warmelt-debug.melt:292:/ objgoto");
                                                                                    /*objgoto*/
                                                                                    goto mtch1_2;
                                                                                    ;
                                                                                }
                                                                                ;
                                                                            }
                                                                        ;

                                                                        /*objlabel*/
mtch1_1:
                                                                        ;
                                                                        MELT_LOCATION("warmelt-debug.melt:289:/ objlabel");
                                                                        /* objlabel */
#if MELTDEBUG_MATCHING
                                                                        static long meltlab_count_2;
                                                                        meltlab_count_2++;
                                                                        debugeprintf("objlabel_2 mtch1_*CLASS_NORMTESTER_SUCCESS/2cda9763. *CLASS_OBJLABELINSTR/2064825d. %ld", meltlab_count_2);
#endif

                                                                        ;
                                                                        /*^quasiblock*/



                                                                        MELT_CHECK_SIGNAL();
                                                                        ;
                                                                        /*_#plI__L21*/
                                                                        meltfnum[20] =
                                                                            ((/*_#LASTSTROUTLEN__L13*/ meltfnum[12]) + (70));;
                                                                        /*^compute*/
                                                                        /*_#gtI__L22*/
                                                                        meltfnum[21] =
                                                                            ((/*_#CUROUTLEN__L20*/ meltfnum[18]) > (/*_#plI__L21*/ meltfnum[20]));;
                                                                        MELT_LOCATION("warmelt-debug.melt:290:/ cond");
                                                                        /*cond*/
                                                                        if (/*_#gtI__L22*/ meltfnum[21]) /*then*/
                                                                            {
                                                                                /*^cond.then*/
                                                                                /*^block*/
                                                                                /*anyblock*/
                                                                                {


                                                                                    {
                                                                                        MELT_LOCATION("warmelt-debug.melt:291:/ locexp");
                                                                                        meltgc_out_add_indent((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (0), 0);;
                                                                                    }
                                                                                    ;
                                                                                    /*epilog*/
                                                                                }
                                                                                ;
                                                                            } /*noelse*/
                                                                        ;

                                                                        MELT_LOCATION("warmelt-debug.melt:289:/ clear");
                                                                        /*clear*/ /*_#plI__L21*/
                                                                        meltfnum[20] = 0 ;
                                                                        /*^clear*/
                                                                        /*clear*/ /*_#gtI__L22*/
                                                                        meltfnum[21] = 0 ;
                                                                        /*^objgoto*/
                                                                        /*objgoto*/
                                                                        goto mtch1__end /*endmatch*/;
                                                                        ;

                                                                        /*objlabel*/
mtch1_2:
                                                                        ;
                                                                        MELT_LOCATION("warmelt-debug.melt:292:/ objlabel");
                                                                        /* objlabel */
#if MELTDEBUG_MATCHING
                                                                        static long meltlab_count_3;
                                                                        meltlab_count_3++;
                                                                        debugeprintf("objlabel_3 mtch1_*CLASS_NORMTESTER_SUCCESS/3efa513c. *CLASS_OBJLABELINSTR/12eaf53a. %ld", meltlab_count_3);
#endif

                                                                        ;
                                                                        /*^quasiblock*/



                                                                        {
                                                                            /*^locexp*/
                                                                            /*void*/(void)0;
                                                                        }
                                                                        ;

                                                                        /*^objgoto*/
                                                                        /*objgoto*/
                                                                        goto mtch1__end /*endmatch*/;
                                                                        ;

                                                                        /*objlabel*/
mtch1__end:
                                                                        ;
                                                                        MELT_LOCATION("warmelt-debug.melt:288:/ objlabel");
                                                                        /* objlabel */
#if MELTDEBUG_MATCHING
                                                                        static long meltlab_count_4;
                                                                        meltlab_count_4++;
                                                                        debugeprintf("objlabel_4 mtch1__end_h81269952 *CLASS_OBJLABELINSTR/4d814c0. %ld", meltlab_count_4);
#endif

                                                                        ;
                                                                    }
                                                                    ;

                                                                    MELT_LOCATION("warmelt-debug.melt:286:/ clear");
                                                                    /*clear*/ /*_#CUROUTLEN__L20*/
                                                                    meltfnum[18] = 0 ;
                                                                    /*_#OUTPUT_LENGTH__L23*/
                                                                    meltfnum[20] =
                                                                        melt_output_length ((melt_ptr_t)/*_.OUT__V5*/ meltfptr[4]);;
                                                                    MELT_LOCATION("warmelt-debug.melt:294:/ compute");
                                                                    /*_#LASTSTROUTLEN__L13*/
                                                                    meltfnum[12] = /*_#SETQ___L24*/ meltfnum[21] = /*_#OUTPUT_LENGTH__L23*/ meltfnum[20];;

                                                                    {
                                                                        MELT_LOCATION("warmelt-debug.melt:295:/ locexp");
                                                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (/*_?*/ meltfram__.loc_CSTRING__o2));
                                                                    }
                                                                    ;

                                                                    MELT_CHECK_SIGNAL();
                                                                    ;
                                                                    /*epilog*/

                                                                    MELT_LOCATION("warmelt-debug.melt:285:/ clear");
                                                                    /*clear*/ /*_?*/
                                                                    meltfram__.loc_CSTRING__o2 = 0 ;
                                                                    /*^clear*/
                                                                    /*clear*/ /*_#OUTPUT_LENGTH__L23*/
                                                                    meltfnum[20] = 0 ;
                                                                    /*^clear*/
                                                                    /*clear*/ /*_#SETQ___L24*/
                                                                    meltfnum[21] = 0 ;
                                                                }
                                                                ;
                                                            }
                                                        else    /*^cond.else*/
                                                            {

                                                                /*^block*/
                                                                /*anyblock*/
                                                                {

                                                                    MELT_LOCATION("warmelt-debug.melt:297:/ cond");
                                                                    /*cond*/
                                                                    if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_PTR) /*then*/
                                                                        {
                                                                            /*^cond.then*/
                                                                            /*^block*/
                                                                            /*anyblock*/
                                                                            {

                                                                                /*^compute*/
                                                                                /*_.VAL__V30*/ meltfptr[29] =
                                                                                    /*variadic argument value*/ ((meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_aptr) ? (*(meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_aptr)) : NULL);;
                                                                                /*^compute*/

                                                                                /*consume variadic Value !*/
                                                                                variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                {
                                                                                    MELT_LOCATION("warmelt-debug.melt:298:/ locexp");
                                                                                    meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " "));
                                                                                }
                                                                                ;

                                                                                MELT_CHECK_SIGNAL();
                                                                                ;
                                                                                /*_#NULL__L25*/
                                                                                meltfnum[18] =
                                                                                    (/*null*/(/*_.VAL__V30*/ meltfptr[29]) == NULL);;
                                                                                MELT_LOCATION("warmelt-debug.melt:300:/ cond");
                                                                                /*cond*/
                                                                                if (/*_#NULL__L25*/ meltfnum[18]) /*then*/
                                                                                    {
                                                                                        /*^cond.then*/
                                                                                        /*^block*/
                                                                                        /*anyblock*/
                                                                                        {


                                                                                            {
                                                                                                MELT_LOCATION("warmelt-debug.melt:301:/ locexp");
                                                                                                meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( "(**nil**)"));
                                                                                            }
                                                                                            ;
                                                                                            /*epilog*/
                                                                                        }
                                                                                        ;
                                                                                    }
                                                                                else
                                                                                    {
                                                                                        MELT_LOCATION("warmelt-debug.melt:300:/ cond.else");

                                                                                        /*^block*/
                                                                                        /*anyblock*/
                                                                                        {


                                                                                            MELT_CHECK_SIGNAL();
                                                                                            ;
                                                                                            /*_.DISCRIM__V31*/
                                                                                            meltfptr[30] =
                                                                                                ((melt_ptr_t) (melt_discr((melt_ptr_t)(/*_.VAL__V30*/ meltfptr[29]))));;
                                                                                            /*^compute*/
                                                                                            /*_#eqeq__L26*/
                                                                                            meltfnum[20] =
                                                                                                ((/*_.DISCRIM__V31*/ meltfptr[30]) == ((/*!DISCR_DEBUG_CLOSURE*/ meltfrout->tabval[9])));;
                                                                                            MELT_LOCATION("warmelt-debug.melt:302:/ cond");
                                                                                            /*cond*/
                                                                                            if (/*_#eqeq__L26*/ meltfnum[20]) /*then*/
                                                                                                {
                                                                                                    /*^cond.then*/
                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {

                                                                                                        MELT_LOCATION("warmelt-debug.melt:304:/ cond");
                                                                                                        /*cond*/
                                                                                                        if (/*ifvariadic nomore*/ variad_MELT_DEBUG_FUN_ix == variad_MELT_DEBUG_FUN_len) /*then*/
                                                                                                            {
                                                                                                                /*^cond.then*/
                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {

                                                                                                                    /*^compute*/

                                                                                                                    /*consume variadic  !*/ variad_MELT_DEBUG_FUN_ix += 0;;

                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                    ;
                                                                                                                    MELT_LOCATION("warmelt-debug.melt:307:/ apply");
                                                                                                                    /*apply*/
                                                                                                                    {
                                                                                                                        union meltparam_un argtab[2];
                                                                                                                        memset(&argtab, 0, sizeof(argtab));
                                                                                                                        /*^apply.arg*/
                                                                                                                        argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_.DBGI__V19*/ meltfptr[17];
                                                                                                                        /*^apply.arg*/
                                                                                                                        argtab[1].meltbp_long = 0;
                                                                                                                        /*_.DBG_OUT__V32*/
                                                                                                                        meltfptr[31] =  melt_apply ((meltclosure_ptr_t)((/*!DBG_OUT*/ meltfrout->tabval[10])), (melt_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (MELTBPARSTR_PTR MELTBPARSTR_LONG ""), argtab, "", (union meltparam_un*)0);
                                                                                                                    }
                                                                                                                    ;
                                                                                                                    /*epilog*/

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:304:/ clear");
                                                                                                                    /*clear*/ /*_.DBG_OUT__V32*/
                                                                                                                    meltfptr[31] = 0 ;
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        else    /*^cond.else*/
                                                                                                            {

                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:309:/ cond");
                                                                                                                    /*cond*/
                                                                                                                    if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_PTR) /*then*/
                                                                                                                        {
                                                                                                                            /*^cond.then*/
                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {

                                                                                                                                /*^compute*/
                                                                                                                                /*_.VV__V33*/ meltfptr[31] =
                                                                                                                                    /*variadic argument value*/ ((meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_aptr) ? (*(meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_aptr)) : NULL);;
                                                                                                                                /*^compute*/

                                                                                                                                /*consume variadic Value !*/
                                                                                                                                variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                MELT_CHECK_SIGNAL();
                                                                                                                                ;
                                                                                                                                MELT_LOCATION("warmelt-debug.melt:310:/ apply");
                                                                                                                                /*apply*/
                                                                                                                                {
                                                                                                                                    union meltparam_un argtab[1];
                                                                                                                                    memset(&argtab, 0, sizeof(argtab));
                                                                                                                                    /*^apply.arg*/
                                                                                                                                    argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_.VV__V33*/ meltfptr[31];
                                                                                                                                    /*_.VAL__V34*/
                                                                                                                                    meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                }
                                                                                                                                ;
                                                                                                                                /*epilog*/

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:309:/ clear");
                                                                                                                                /*clear*/ /*_.VV__V33*/
                                                                                                                                meltfptr[31] = 0 ;
                                                                                                                                /*^clear*/
                                                                                                                                /*clear*/ /*_.VAL__V34*/
                                                                                                                                meltfptr[33] = 0 ;
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    else    /*^cond.else*/
                                                                                                                        {

                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:311:/ cond");
                                                                                                                                /*cond*/
                                                                                                                                if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_LONG) /*then*/
                                                                                                                                    {
                                                                                                                                        /*^cond.then*/
                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {

                                                                                                                                            /*^compute*/
                                                                                                                                            /*_#LL__L27*/ meltfnum[21] =
                                                                                                                                                /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_long;;
                                                                                                                                            /*^compute*/

                                                                                                                                            /*consume variadic LONG !*/
                                                                                                                                            variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                            MELT_CHECK_SIGNAL();
                                                                                                                                            ;
                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:312:/ apply");
                                                                                                                                            /*apply*/
                                                                                                                                            {
                                                                                                                                                union meltparam_un argtab[1];
                                                                                                                                                memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                /*^apply.arg*/
                                                                                                                                                argtab[0].meltbp_long = /*_#LL__L27*/ meltfnum[21];
                                                                                                                                                /*_.VAL__V35*/
                                                                                                                                                meltfptr[31] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_LONG ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                            }
                                                                                                                                            ;
                                                                                                                                            /*epilog*/

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:311:/ clear");
                                                                                                                                            /*clear*/ /*_#LL__L27*/
                                                                                                                                            meltfnum[21] = 0 ;
                                                                                                                                            /*^clear*/
                                                                                                                                            /*clear*/ /*_.VAL__V35*/
                                                                                                                                            meltfptr[31] = 0 ;
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                else    /*^cond.else*/
                                                                                                                                    {

                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:313:/ cond");
                                                                                                                                            /*cond*/
                                                                                                                                            if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_TREE) /*then*/
                                                                                                                                                {
                                                                                                                                                    /*^cond.then*/
                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {

                                                                                                                                                        /*^compute*/
                                                                                                                                                        /*_?*/ meltfram__.loc_TREE__o3 =
                                                                                                                                                            /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_tree;;
                                                                                                                                                        /*^compute*/

                                                                                                                                                        /*consume variadic TREE !*/
                                                                                                                                                        variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                        ;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:314:/ apply");
                                                                                                                                                        /*apply*/
                                                                                                                                                        {
                                                                                                                                                            union meltparam_un argtab[1];
                                                                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                            argtab[0].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o3;
                                                                                                                                                            /*_.VAL__V36*/
                                                                                                                                                            meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_TREE ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        /*epilog*/

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:313:/ clear");
                                                                                                                                                        /*clear*/ /*_?*/
                                                                                                                                                        meltfram__.loc_TREE__o3 = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_.VAL__V36*/
                                                                                                                                                        meltfptr[33] = 0 ;
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            else    /*^cond.else*/
                                                                                                                                                {

                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:315:/ cond");
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_GIMPLE) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {

                                                                                                                                                                    /*^compute*/
                                                                                                                                                                    /*_?*/ meltfram__.loc_GIMPLE__o4 =
                                                                                                                                                                        /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_gimple;;
                                                                                                                                                                    /*^compute*/

                                                                                                                                                                    /*consume variadic GIMPLE !*/
                                                                                                                                                                    variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                                                                    ;
                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:316:/ apply");
                                                                                                                                                                    /*apply*/
                                                                                                                                                                    {
                                                                                                                                                                        union meltparam_un argtab[1];
                                                                                                                                                                        memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                                        /*^apply.arg*/
                                                                                                                                                                        argtab[0].meltbp_gimple = /*_?*/ meltfram__.loc_GIMPLE__o4;
                                                                                                                                                                        /*_.VAL__V37*/
                                                                                                                                                                        meltfptr[31] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_GIMPLE ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                                    }
                                                                                                                                                                    ;
                                                                                                                                                                    /*epilog*/

                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:315:/ clear");
                                                                                                                                                                    /*clear*/ /*_?*/
                                                                                                                                                                    meltfram__.loc_GIMPLE__o4 = 0 ;
                                                                                                                                                                    /*^clear*/
                                                                                                                                                                    /*clear*/ /*_.VAL__V37*/
                                                                                                                                                                    meltfptr[31] = 0 ;
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else    /*^cond.else*/
                                                                                                                                                            {

                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {

                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:317:/ cond");
                                                                                                                                                                    /*cond*/
                                                                                                                                                                    if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_GIMPLESEQ) /*then*/
                                                                                                                                                                        {
                                                                                                                                                                            /*^cond.then*/
                                                                                                                                                                            /*^block*/
                                                                                                                                                                            /*anyblock*/
                                                                                                                                                                            {

                                                                                                                                                                                /*^compute*/
                                                                                                                                                                                /*_?*/ meltfram__.loc_GIMPLE_SEQ__o5 =
                                                                                                                                                                                    /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_gimpleseq;;
                                                                                                                                                                                /*^compute*/

                                                                                                                                                                                /*consume variadic GIMPLE_SEQ !*/
                                                                                                                                                                                variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                                                                MELT_CHECK_SIGNAL();
                                                                                                                                                                                ;
                                                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:318:/ apply");
                                                                                                                                                                                /*apply*/
                                                                                                                                                                                {
                                                                                                                                                                                    union meltparam_un argtab[1];
                                                                                                                                                                                    memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                                                    /*^apply.arg*/
                                                                                                                                                                                    argtab[0].meltbp_gimpleseq = /*_?*/ meltfram__.loc_GIMPLE_SEQ__o5;
                                                                                                                                                                                    /*_.VAL__V38*/
                                                                                                                                                                                    meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_GIMPLESEQ ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                                                }
                                                                                                                                                                                ;
                                                                                                                                                                                /*epilog*/

                                                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:317:/ clear");
                                                                                                                                                                                /*clear*/ /*_?*/
                                                                                                                                                                                meltfram__.loc_GIMPLE_SEQ__o5 = 0 ;
                                                                                                                                                                                /*^clear*/
                                                                                                                                                                                /*clear*/ /*_.VAL__V38*/
                                                                                                                                                                                meltfptr[33] = 0 ;
                                                                                                                                                                            }
                                                                                                                                                                            ;
                                                                                                                                                                        }
                                                                                                                                                                    else    /*^cond.else*/
                                                                                                                                                                        {

                                                                                                                                                                            /*^block*/
                                                                                                                                                                            /*anyblock*/
                                                                                                                                                                            {

                                                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:319:/ cond");
                                                                                                                                                                                /*cond*/
                                                                                                                                                                                if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_EDGE) /*then*/
                                                                                                                                                                                    {
                                                                                                                                                                                        /*^cond.then*/
                                                                                                                                                                                        /*^block*/
                                                                                                                                                                                        /*anyblock*/
                                                                                                                                                                                        {

                                                                                                                                                                                            /*^compute*/
                                                                                                                                                                                            /*_?*/ meltfram__.loc_EDGE__o6 =
                                                                                                                                                                                                /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_edge;;
                                                                                                                                                                                            /*^compute*/

                                                                                                                                                                                            /*consume variadic EDGE !*/
                                                                                                                                                                                            variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                                                                            MELT_CHECK_SIGNAL();
                                                                                                                                                                                            ;
                                                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:320:/ apply");
                                                                                                                                                                                            /*apply*/
                                                                                                                                                                                            {
                                                                                                                                                                                                union meltparam_un argtab[1];
                                                                                                                                                                                                memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                                                                /*^apply.arg*/
                                                                                                                                                                                                argtab[0].meltbp_edge = /*_?*/ meltfram__.loc_EDGE__o6;
                                                                                                                                                                                                /*_.VAL__V39*/
                                                                                                                                                                                                meltfptr[31] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_EDGE ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                                                            }
                                                                                                                                                                                            ;
                                                                                                                                                                                            /*epilog*/

                                                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:319:/ clear");
                                                                                                                                                                                            /*clear*/ /*_?*/
                                                                                                                                                                                            meltfram__.loc_EDGE__o6 = 0 ;
                                                                                                                                                                                            /*^clear*/
                                                                                                                                                                                            /*clear*/ /*_.VAL__V39*/
                                                                                                                                                                                            meltfptr[31] = 0 ;
                                                                                                                                                                                        }
                                                                                                                                                                                        ;
                                                                                                                                                                                    }
                                                                                                                                                                                else    /*^cond.else*/
                                                                                                                                                                                    {

                                                                                                                                                                                        /*^block*/
                                                                                                                                                                                        /*anyblock*/
                                                                                                                                                                                        {

                                                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:321:/ cond");
                                                                                                                                                                                            /*cond*/
                                                                                                                                                                                            if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_LOOP) /*then*/
                                                                                                                                                                                                {
                                                                                                                                                                                                    /*^cond.then*/
                                                                                                                                                                                                    /*^block*/
                                                                                                                                                                                                    /*anyblock*/
                                                                                                                                                                                                    {

                                                                                                                                                                                                        /*^compute*/
                                                                                                                                                                                                        /*_?*/ meltfram__.loc_LOOP__o7 =
                                                                                                                                                                                                            /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_loop;;
                                                                                                                                                                                                        /*^compute*/

                                                                                                                                                                                                        /*consume variadic LOOP !*/
                                                                                                                                                                                                        variad_MELT_DEBUG_FUN_ix += 1;;

                                                                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                                                                        ;
                                                                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:322:/ apply");
                                                                                                                                                                                                        /*apply*/
                                                                                                                                                                                                        {
                                                                                                                                                                                                            union meltparam_un argtab[1];
                                                                                                                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                                                                            argtab[0].meltbp_loop = /*_?*/ meltfram__.loc_LOOP__o7;
                                                                                                                                                                                                            /*_.VAL__V40*/
                                                                                                                                                                                                            meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_LOOP ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                                                                        }
                                                                                                                                                                                                        ;
                                                                                                                                                                                                        /*epilog*/

                                                                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:321:/ clear");
                                                                                                                                                                                                        /*clear*/ /*_?*/
                                                                                                                                                                                                        meltfram__.loc_LOOP__o7 = 0 ;
                                                                                                                                                                                                        /*^clear*/
                                                                                                                                                                                                        /*clear*/ /*_.VAL__V40*/
                                                                                                                                                                                                        meltfptr[33] = 0 ;
                                                                                                                                                                                                    }
                                                                                                                                                                                                    ;
                                                                                                                                                                                                } /*noelse*/
                                                                                                                                                                                            ;
                                                                                                                                                                                            /*epilog*/
                                                                                                                                                                                        }
                                                                                                                                                                                        ;
                                                                                                                                                                                    }
                                                                                                                                                                                ;
                                                                                                                                                                                /*epilog*/
                                                                                                                                                                            }
                                                                                                                                                                            ;
                                                                                                                                                                        }
                                                                                                                                                                    ;
                                                                                                                                                                    /*epilog*/
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        ;
                                                                                                                                                        /*epilog*/
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            ;
                                                                                                                                            /*epilog*/
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                ;
                                                                                                                                /*epilog*/
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    ;
                                                                                                                    /*epilog*/
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        ;

                                                                                                        {
                                                                                                            MELT_LOCATION("warmelt-debug.melt:324:/ locexp");
                                                                                                            /*void*/
                                                                                                            (void)0;
                                                                                                        }
                                                                                                        ;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:302:/ quasiblock");


                                                                                                        /*epilog*/
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            else    /*^cond.else*/
                                                                                                {

                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {


                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                        ;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:327:/ apply");
                                                                                                        /*apply*/
                                                                                                        {
                                                                                                            union meltparam_un argtab[2];
                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                            /*^apply.arg*/
                                                                                                            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_.DBGI__V19*/ meltfptr[17];
                                                                                                            /*^apply.arg*/
                                                                                                            argtab[1].meltbp_long = 0;
                                                                                                            /*_.DBG_OUT__V41*/
                                                                                                            meltfptr[31] =  melt_apply ((meltclosure_ptr_t)((/*!DBG_OUT*/ meltfrout->tabval[10])), (melt_ptr_t)(/*_.VAL__V30*/ meltfptr[29]), (MELTBPARSTR_PTR MELTBPARSTR_LONG ""), argtab, "", (union meltparam_un*)0);
                                                                                                        }
                                                                                                        ;

                                                                                                        {
                                                                                                            MELT_LOCATION("warmelt-debug.melt:328:/ locexp");
                                                                                                            /*void*/
                                                                                                            (void)0;
                                                                                                        }
                                                                                                        ;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:326:/ quasiblock");


                                                                                                        /*epilog*/

                                                                                                        MELT_LOCATION("warmelt-debug.melt:302:/ clear");
                                                                                                        /*clear*/ /*_.DBG_OUT__V41*/
                                                                                                        meltfptr[31] = 0 ;
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            ;
                                                                                            /*epilog*/

                                                                                            MELT_LOCATION("warmelt-debug.melt:300:/ clear");
                                                                                            /*clear*/ /*_.DISCRIM__V31*/
                                                                                            meltfptr[30] = 0 ;
                                                                                            /*^clear*/
                                                                                            /*clear*/ /*_#eqeq__L26*/
                                                                                            meltfnum[20] = 0 ;
                                                                                        }
                                                                                        ;
                                                                                    }
                                                                                ;

                                                                                MELT_CHECK_SIGNAL();
                                                                                ;
                                                                                /*epilog*/

                                                                                MELT_LOCATION("warmelt-debug.melt:297:/ clear");
                                                                                /*clear*/ /*_.VAL__V30*/
                                                                                meltfptr[29] = 0 ;
                                                                                /*^clear*/
                                                                                /*clear*/ /*_#NULL__L25*/
                                                                                meltfnum[18] = 0 ;
                                                                            }
                                                                            ;
                                                                        }
                                                                    else    /*^cond.else*/
                                                                        {

                                                                            /*^block*/
                                                                            /*anyblock*/
                                                                            {

                                                                                MELT_LOCATION("warmelt-debug.melt:330:/ cond");
                                                                                /*cond*/
                                                                                if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_TREE) /*then*/
                                                                                    {
                                                                                        /*^cond.then*/
                                                                                        /*^block*/
                                                                                        /*anyblock*/
                                                                                        {

                                                                                            /*^compute*/
                                                                                            /*_?*/ meltfram__.loc_TREE__o8 =
                                                                                                /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_tree;;
                                                                                            /*^compute*/

                                                                                            /*consume variadic TREE !*/
                                                                                            variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                            MELT_LOCATION("warmelt-debug.melt:331:/ quasiblock");


                                                                                            /*^cond*/
                                                                                            /*cond*/
                                                                                            if (
                                                                                                /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[11])),
                                                                                                                              (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                            ) /*then*/
                                                                                                {
                                                                                                    /*^cond.then*/
                                                                                                    /*^getslot*/
                                                                                                    {
                                                                                                        melt_ptr_t slot=NULL, obj=NULL;
                                                                                                        obj = (melt_ptr_t)((/*!TREE_DEBUG_FUNCONT*/ meltfrout->tabval[11])) /*=obj*/;
                                                                                                        melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                        /*_.TDF__V43*/
                                                                                                        meltfptr[31] = slot;
                                                                                                    };
                                                                                                    ;
                                                                                                }
                                                                                            else    /*^cond.else*/
                                                                                                {

                                                                                                    /*_.TDF__V43*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                }
                                                                                            ;

                                                                                            MELT_CHECK_SIGNAL();
                                                                                            ;
                                                                                            /*^compute*/
                                                                                            /*_#IS_CLOSURE__L28*/
                                                                                            meltfnum[21] =
                                                                                                (melt_magic_discr((melt_ptr_t)(/*_.TDF__V43*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                            MELT_LOCATION("warmelt-debug.melt:333:/ cond");
                                                                                            /*cond*/
                                                                                            if (/*_#IS_CLOSURE__L28*/ meltfnum[21]) /*then*/
                                                                                                {
                                                                                                    /*^cond.then*/
                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {


                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                        ;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:334:/ apply");
                                                                                                        /*apply*/
                                                                                                        {
                                                                                                            union meltparam_un argtab[1];
                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                            /*^apply.arg*/
                                                                                                            argtab[0].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o8;
                                                                                                            /*_.TDF__V45*/
                                                                                                            meltfptr[29] =  melt_apply ((meltclosure_ptr_t)(/*_.TDF__V43*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_TREE ""), argtab, "", (union meltparam_un*)0);
                                                                                                        }
                                                                                                        ;
                                                                                                        /*_._IFELSE___V44*/
                                                                                                        meltfptr[30] = /*_.TDF__V45*/ meltfptr[29];;
                                                                                                        /*epilog*/

                                                                                                        MELT_LOCATION("warmelt-debug.melt:333:/ clear");
                                                                                                        /*clear*/ /*_.TDF__V45*/
                                                                                                        meltfptr[29] = 0 ;
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            else    /*^cond.else*/
                                                                                                {

                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {


                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                        ;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:335:/ cond");
                                                                                                        /*cond*/
                                                                                                        if (/*_?*/ meltfram__.loc_TREE__o8) /*then*/
                                                                                                            {
                                                                                                                /*^cond.then*/
                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {




                                                                                                                    {
                                                                                                                        MELT_LOCATION("warmelt-debug.melt:336:/ locexp");
                                                                                                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*tree*?"));
                                                                                                                    }
                                                                                                                    ;
                                                                                                                    /*clear*/ /*_._IFELSE___V44*/
                                                                                                                    meltfptr[30] = 0 ;
                                                                                                                    /*epilog*/
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        else
                                                                                                            {
                                                                                                                MELT_LOCATION("warmelt-debug.melt:335:/ cond.else");

                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {




                                                                                                                    {
                                                                                                                        MELT_LOCATION("warmelt-debug.melt:337:/ locexp");
                                                                                                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*nulltree*?"));
                                                                                                                    }
                                                                                                                    ;
                                                                                                                    /*clear*/ /*_._IFELSE___V44*/
                                                                                                                    meltfptr[30] = 0 ;
                                                                                                                    /*epilog*/
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        ;
                                                                                                        /*epilog*/
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            ;
                                                                                            /*^compute*/
                                                                                            /*_.LET___V42*/
                                                                                            meltfptr[33] = /*_._IFELSE___V44*/ meltfptr[30];;

                                                                                            MELT_LOCATION("warmelt-debug.melt:331:/ clear");
                                                                                            /*clear*/ /*_.TDF__V43*/
                                                                                            meltfptr[31] = 0 ;
                                                                                            /*^clear*/
                                                                                            /*clear*/ /*_#IS_CLOSURE__L28*/
                                                                                            meltfnum[21] = 0 ;
                                                                                            /*^clear*/
                                                                                            /*clear*/ /*_._IFELSE___V44*/
                                                                                            meltfptr[30] = 0 ;
                                                                                            /*epilog*/

                                                                                            MELT_LOCATION("warmelt-debug.melt:330:/ clear");
                                                                                            /*clear*/ /*_?*/
                                                                                            meltfram__.loc_TREE__o8 = 0 ;
                                                                                            /*^clear*/
                                                                                            /*clear*/ /*_.LET___V42*/
                                                                                            meltfptr[33] = 0 ;
                                                                                        }
                                                                                        ;
                                                                                    }
                                                                                else    /*^cond.else*/
                                                                                    {

                                                                                        /*^block*/
                                                                                        /*anyblock*/
                                                                                        {

                                                                                            MELT_LOCATION("warmelt-debug.melt:338:/ cond");
                                                                                            /*cond*/
                                                                                            if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_GIMPLE) /*then*/
                                                                                                {
                                                                                                    /*^cond.then*/
                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {

                                                                                                        /*^compute*/
                                                                                                        /*_?*/ meltfram__.loc_GIMPLE__o9 =
                                                                                                            /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_gimple;;
                                                                                                        /*^compute*/

                                                                                                        /*consume variadic GIMPLE !*/
                                                                                                        variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:339:/ quasiblock");


                                                                                                        /*^cond*/
                                                                                                        /*cond*/
                                                                                                        if (
                                                                                                            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[13])),
                                                                                                                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                                        ) /*then*/
                                                                                                            {
                                                                                                                /*^cond.then*/
                                                                                                                /*^getslot*/
                                                                                                                {
                                                                                                                    melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                    obj = (melt_ptr_t)((/*!GIMPLE_DEBUG_FUNCONT*/ meltfrout->tabval[13])) /*=obj*/;
                                                                                                                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                                    /*_.GDF__V47*/
                                                                                                                    meltfptr[31] = slot;
                                                                                                                };
                                                                                                                ;
                                                                                                            }
                                                                                                        else    /*^cond.else*/
                                                                                                            {

                                                                                                                /*_.GDF__V47*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                            }
                                                                                                        ;

                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                        ;
                                                                                                        /*^compute*/
                                                                                                        /*_#IS_CLOSURE__L29*/
                                                                                                        meltfnum[20] =
                                                                                                            (melt_magic_discr((melt_ptr_t)(/*_.GDF__V47*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                                        MELT_LOCATION("warmelt-debug.melt:341:/ cond");
                                                                                                        /*cond*/
                                                                                                        if (/*_#IS_CLOSURE__L29*/ meltfnum[20]) /*then*/
                                                                                                            {
                                                                                                                /*^cond.then*/
                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {


                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                    ;
                                                                                                                    MELT_LOCATION("warmelt-debug.melt:342:/ apply");
                                                                                                                    /*apply*/
                                                                                                                    {
                                                                                                                        union meltparam_un argtab[1];
                                                                                                                        memset(&argtab, 0, sizeof(argtab));
                                                                                                                        /*^apply.arg*/
                                                                                                                        argtab[0].meltbp_gimple = /*_?*/ meltfram__.loc_GIMPLE__o9;
                                                                                                                        /*_.GDF__V49*/
                                                                                                                        meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.GDF__V47*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_GIMPLE ""), argtab, "", (union meltparam_un*)0);
                                                                                                                    }
                                                                                                                    ;
                                                                                                                    /*_._IFELSE___V48*/
                                                                                                                    meltfptr[30] = /*_.GDF__V49*/ meltfptr[33];;
                                                                                                                    /*epilog*/

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:341:/ clear");
                                                                                                                    /*clear*/ /*_.GDF__V49*/
                                                                                                                    meltfptr[33] = 0 ;
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        else    /*^cond.else*/
                                                                                                            {

                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {


                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                    ;
                                                                                                                    MELT_LOCATION("warmelt-debug.melt:343:/ cond");
                                                                                                                    /*cond*/
                                                                                                                    if (/*_?*/ meltfram__.loc_GIMPLE__o9) /*then*/
                                                                                                                        {
                                                                                                                            /*^cond.then*/
                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {




                                                                                                                                {
                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:344:/ locexp");
                                                                                                                                    meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*gimple*?"));
                                                                                                                                }
                                                                                                                                ;
                                                                                                                                /*clear*/ /*_._IFELSE___V48*/
                                                                                                                                meltfptr[30] = 0 ;
                                                                                                                                /*epilog*/
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    else
                                                                                                                        {
                                                                                                                            MELT_LOCATION("warmelt-debug.melt:343:/ cond.else");

                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {




                                                                                                                                {
                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:345:/ locexp");
                                                                                                                                    meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*nullgimple*?"));
                                                                                                                                }
                                                                                                                                ;
                                                                                                                                /*clear*/ /*_._IFELSE___V48*/
                                                                                                                                meltfptr[30] = 0 ;
                                                                                                                                /*epilog*/
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    ;
                                                                                                                    /*epilog*/
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        ;
                                                                                                        /*^compute*/
                                                                                                        /*_.LET___V46*/
                                                                                                        meltfptr[29] = /*_._IFELSE___V48*/ meltfptr[30];;

                                                                                                        MELT_LOCATION("warmelt-debug.melt:339:/ clear");
                                                                                                        /*clear*/ /*_.GDF__V47*/
                                                                                                        meltfptr[31] = 0 ;
                                                                                                        /*^clear*/
                                                                                                        /*clear*/ /*_#IS_CLOSURE__L29*/
                                                                                                        meltfnum[20] = 0 ;
                                                                                                        /*^clear*/
                                                                                                        /*clear*/ /*_._IFELSE___V48*/
                                                                                                        meltfptr[30] = 0 ;
                                                                                                        /*epilog*/

                                                                                                        MELT_LOCATION("warmelt-debug.melt:338:/ clear");
                                                                                                        /*clear*/ /*_?*/
                                                                                                        meltfram__.loc_GIMPLE__o9 = 0 ;
                                                                                                        /*^clear*/
                                                                                                        /*clear*/ /*_.LET___V46*/
                                                                                                        meltfptr[29] = 0 ;
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            else    /*^cond.else*/
                                                                                                {

                                                                                                    /*^block*/
                                                                                                    /*anyblock*/
                                                                                                    {

                                                                                                        MELT_LOCATION("warmelt-debug.melt:346:/ cond");
                                                                                                        /*cond*/
                                                                                                        if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_GIMPLESEQ) /*then*/
                                                                                                            {
                                                                                                                /*^cond.then*/
                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {

                                                                                                                    /*^compute*/
                                                                                                                    /*_?*/ meltfram__.loc_GIMPLE_SEQ__o10 =
                                                                                                                        /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_gimpleseq;;
                                                                                                                    /*^compute*/

                                                                                                                    /*consume variadic GIMPLE_SEQ !*/
                                                                                                                    variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                                                    MELT_LOCATION("warmelt-debug.melt:347:/ quasiblock");


                                                                                                                    /*^cond*/
                                                                                                                    /*cond*/
                                                                                                                    if (
                                                                                                                        /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[14])),
                                                                                                                                                      (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                                                    ) /*then*/
                                                                                                                        {
                                                                                                                            /*^cond.then*/
                                                                                                                            /*^getslot*/
                                                                                                                            {
                                                                                                                                melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                obj = (melt_ptr_t)((/*!GIMPLESEQ_DEBUG_FUNCONT*/ meltfrout->tabval[14])) /*=obj*/;
                                                                                                                                melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                                                /*_.GSDF__V51*/
                                                                                                                                meltfptr[31] = slot;
                                                                                                                            };
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    else    /*^cond.else*/
                                                                                                                        {

                                                                                                                            /*_.GSDF__V51*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                                        }
                                                                                                                    ;

                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                    ;
                                                                                                                    /*^compute*/
                                                                                                                    /*_#IS_CLOSURE__L30*/
                                                                                                                    meltfnum[18] =
                                                                                                                        (melt_magic_discr((melt_ptr_t)(/*_.GSDF__V51*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                                                    MELT_LOCATION("warmelt-debug.melt:349:/ cond");
                                                                                                                    /*cond*/
                                                                                                                    if (/*_#IS_CLOSURE__L30*/ meltfnum[18]) /*then*/
                                                                                                                        {
                                                                                                                            /*^cond.then*/
                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {


                                                                                                                                MELT_CHECK_SIGNAL();
                                                                                                                                ;
                                                                                                                                MELT_LOCATION("warmelt-debug.melt:350:/ apply");
                                                                                                                                /*apply*/
                                                                                                                                {
                                                                                                                                    union meltparam_un argtab[1];
                                                                                                                                    memset(&argtab, 0, sizeof(argtab));
                                                                                                                                    /*^apply.arg*/
                                                                                                                                    argtab[0].meltbp_gimpleseq = /*_?*/ meltfram__.loc_GIMPLE_SEQ__o10;
                                                                                                                                    /*_.GSDF__V53*/
                                                                                                                                    meltfptr[29] =  melt_apply ((meltclosure_ptr_t)(/*_.GSDF__V51*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_GIMPLESEQ ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                }
                                                                                                                                ;
                                                                                                                                /*_._IFELSE___V52*/
                                                                                                                                meltfptr[30] = /*_.GSDF__V53*/ meltfptr[29];;
                                                                                                                                /*epilog*/

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:349:/ clear");
                                                                                                                                /*clear*/ /*_.GSDF__V53*/
                                                                                                                                meltfptr[29] = 0 ;
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    else    /*^cond.else*/
                                                                                                                        {

                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {


                                                                                                                                MELT_CHECK_SIGNAL();
                                                                                                                                ;
                                                                                                                                MELT_LOCATION("warmelt-debug.melt:351:/ cond");
                                                                                                                                /*cond*/
                                                                                                                                if (/*_?*/ meltfram__.loc_GIMPLE_SEQ__o10) /*then*/
                                                                                                                                    {
                                                                                                                                        /*^cond.then*/
                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {




                                                                                                                                            {
                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:352:/ locexp");
                                                                                                                                                meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*gimpleseq*?"));
                                                                                                                                            }
                                                                                                                                            ;
                                                                                                                                            /*clear*/ /*_._IFELSE___V52*/
                                                                                                                                            meltfptr[30] = 0 ;
                                                                                                                                            /*epilog*/
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                else
                                                                                                                                    {
                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:351:/ cond.else");

                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {




                                                                                                                                            {
                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:353:/ locexp");
                                                                                                                                                meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*nullgimpleseq*?"));
                                                                                                                                            }
                                                                                                                                            ;
                                                                                                                                            /*clear*/ /*_._IFELSE___V52*/
                                                                                                                                            meltfptr[30] = 0 ;
                                                                                                                                            /*epilog*/
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                ;
                                                                                                                                /*epilog*/
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    ;
                                                                                                                    /*^compute*/
                                                                                                                    /*_.LET___V50*/
                                                                                                                    meltfptr[33] = /*_._IFELSE___V52*/ meltfptr[30];;

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:347:/ clear");
                                                                                                                    /*clear*/ /*_.GSDF__V51*/
                                                                                                                    meltfptr[31] = 0 ;
                                                                                                                    /*^clear*/
                                                                                                                    /*clear*/ /*_#IS_CLOSURE__L30*/
                                                                                                                    meltfnum[18] = 0 ;
                                                                                                                    /*^clear*/
                                                                                                                    /*clear*/ /*_._IFELSE___V52*/
                                                                                                                    meltfptr[30] = 0 ;
                                                                                                                    /*epilog*/

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:346:/ clear");
                                                                                                                    /*clear*/ /*_?*/
                                                                                                                    meltfram__.loc_GIMPLE_SEQ__o10 = 0 ;
                                                                                                                    /*^clear*/
                                                                                                                    /*clear*/ /*_.LET___V50*/
                                                                                                                    meltfptr[33] = 0 ;
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        else    /*^cond.else*/
                                                                                                            {

                                                                                                                /*^block*/
                                                                                                                /*anyblock*/
                                                                                                                {

                                                                                                                    MELT_LOCATION("warmelt-debug.melt:354:/ cond");
                                                                                                                    /*cond*/
                                                                                                                    if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_EDGE) /*then*/
                                                                                                                        {
                                                                                                                            /*^cond.then*/
                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {

                                                                                                                                /*^compute*/
                                                                                                                                /*_?*/ meltfram__.loc_EDGE__o11 =
                                                                                                                                    /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_edge;;
                                                                                                                                /*^compute*/

                                                                                                                                /*consume variadic EDGE !*/
                                                                                                                                variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                                                                MELT_LOCATION("warmelt-debug.melt:355:/ quasiblock");


                                                                                                                                /*^cond*/
                                                                                                                                /*cond*/
                                                                                                                                if (
                                                                                                                                    /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[15])),
                                                                                                                                                                  (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                                                                ) /*then*/
                                                                                                                                    {
                                                                                                                                        /*^cond.then*/
                                                                                                                                        /*^getslot*/
                                                                                                                                        {
                                                                                                                                            melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                            obj = (melt_ptr_t)((/*!EDGE_DEBUG_FUNCONT*/ meltfrout->tabval[15])) /*=obj*/;
                                                                                                                                            melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                                                            /*_.EDF__V55*/
                                                                                                                                            meltfptr[31] = slot;
                                                                                                                                        };
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                else    /*^cond.else*/
                                                                                                                                    {

                                                                                                                                        /*_.EDF__V55*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                                                    }
                                                                                                                                ;

                                                                                                                                MELT_CHECK_SIGNAL();
                                                                                                                                ;
                                                                                                                                /*^compute*/
                                                                                                                                /*_#IS_CLOSURE__L31*/
                                                                                                                                meltfnum[21] =
                                                                                                                                    (melt_magic_discr((melt_ptr_t)(/*_.EDF__V55*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                                                                MELT_LOCATION("warmelt-debug.melt:357:/ cond");
                                                                                                                                /*cond*/
                                                                                                                                if (/*_#IS_CLOSURE__L31*/ meltfnum[21]) /*then*/
                                                                                                                                    {
                                                                                                                                        /*^cond.then*/
                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {


                                                                                                                                            MELT_CHECK_SIGNAL();
                                                                                                                                            ;
                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:358:/ apply");
                                                                                                                                            /*apply*/
                                                                                                                                            {
                                                                                                                                                union meltparam_un argtab[1];
                                                                                                                                                memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                /*^apply.arg*/
                                                                                                                                                argtab[0].meltbp_edge = /*_?*/ meltfram__.loc_EDGE__o11;
                                                                                                                                                /*_.EDF__V57*/
                                                                                                                                                meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.EDF__V55*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_EDGE ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                            }
                                                                                                                                            ;
                                                                                                                                            /*_._IFELSE___V56*/
                                                                                                                                            meltfptr[30] = /*_.EDF__V57*/ meltfptr[33];;
                                                                                                                                            /*epilog*/

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:357:/ clear");
                                                                                                                                            /*clear*/ /*_.EDF__V57*/
                                                                                                                                            meltfptr[33] = 0 ;
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                else    /*^cond.else*/
                                                                                                                                    {

                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {


                                                                                                                                            MELT_CHECK_SIGNAL();
                                                                                                                                            ;
                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:359:/ cond");
                                                                                                                                            /*cond*/
                                                                                                                                            if (/*_?*/ meltfram__.loc_EDGE__o11) /*then*/
                                                                                                                                                {
                                                                                                                                                    /*^cond.then*/
                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {




                                                                                                                                                        {
                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:360:/ locexp");
                                                                                                                                                            meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*edge*?"));
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        /*clear*/ /*_._IFELSE___V56*/
                                                                                                                                                        meltfptr[30] = 0 ;
                                                                                                                                                        /*epilog*/
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            else
                                                                                                                                                {
                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:359:/ cond.else");

                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {




                                                                                                                                                        {
                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:361:/ locexp");
                                                                                                                                                            meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*nulledge*?"));
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        /*clear*/ /*_._IFELSE___V56*/
                                                                                                                                                        meltfptr[30] = 0 ;
                                                                                                                                                        /*epilog*/
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            ;
                                                                                                                                            /*epilog*/
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                ;
                                                                                                                                /*^compute*/
                                                                                                                                /*_.LET___V54*/
                                                                                                                                meltfptr[29] = /*_._IFELSE___V56*/ meltfptr[30];;

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:355:/ clear");
                                                                                                                                /*clear*/ /*_.EDF__V55*/
                                                                                                                                meltfptr[31] = 0 ;
                                                                                                                                /*^clear*/
                                                                                                                                /*clear*/ /*_#IS_CLOSURE__L31*/
                                                                                                                                meltfnum[21] = 0 ;
                                                                                                                                /*^clear*/
                                                                                                                                /*clear*/ /*_._IFELSE___V56*/
                                                                                                                                meltfptr[30] = 0 ;
                                                                                                                                /*epilog*/

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:354:/ clear");
                                                                                                                                /*clear*/ /*_?*/
                                                                                                                                meltfram__.loc_EDGE__o11 = 0 ;
                                                                                                                                /*^clear*/
                                                                                                                                /*clear*/ /*_.LET___V54*/
                                                                                                                                meltfptr[29] = 0 ;
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    else    /*^cond.else*/
                                                                                                                        {

                                                                                                                            /*^block*/
                                                                                                                            /*anyblock*/
                                                                                                                            {

                                                                                                                                MELT_LOCATION("warmelt-debug.melt:362:/ cond");
                                                                                                                                /*cond*/
                                                                                                                                if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_BB) /*then*/
                                                                                                                                    {
                                                                                                                                        /*^cond.then*/
                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {

                                                                                                                                            /*^compute*/
                                                                                                                                            /*_?*/ meltfram__.loc_BASIC_BLOCK__o12 =
                                                                                                                                                /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_bb;;
                                                                                                                                            /*^compute*/

                                                                                                                                            /*consume variadic BASIC_BLOCK !*/
                                                                                                                                            variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:363:/ quasiblock");


                                                                                                                                            /*^cond*/
                                                                                                                                            /*cond*/
                                                                                                                                            if (
                                                                                                                                                /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[16])),
                                                                                                                                                                              (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                                                                            ) /*then*/
                                                                                                                                                {
                                                                                                                                                    /*^cond.then*/
                                                                                                                                                    /*^getslot*/
                                                                                                                                                    {
                                                                                                                                                        melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                                        obj = (melt_ptr_t)((/*!BASICBLOCK_DEBUG_FUNCONT*/ meltfrout->tabval[16])) /*=obj*/;
                                                                                                                                                        melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                                                                        /*_.BDF__V59*/
                                                                                                                                                        meltfptr[31] = slot;
                                                                                                                                                    };
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            else    /*^cond.else*/
                                                                                                                                                {

                                                                                                                                                    /*_.BDF__V59*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                                                                }
                                                                                                                                            ;

                                                                                                                                            MELT_CHECK_SIGNAL();
                                                                                                                                            ;
                                                                                                                                            /*^compute*/
                                                                                                                                            /*_#IS_CLOSURE__L32*/
                                                                                                                                            meltfnum[20] =
                                                                                                                                                (melt_magic_discr((melt_ptr_t)(/*_.BDF__V59*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:365:/ cond");
                                                                                                                                            /*cond*/
                                                                                                                                            if (/*_#IS_CLOSURE__L32*/ meltfnum[20]) /*then*/
                                                                                                                                                {
                                                                                                                                                    /*^cond.then*/
                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {


                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                        ;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:366:/ apply");
                                                                                                                                                        /*apply*/
                                                                                                                                                        {
                                                                                                                                                            union meltparam_un argtab[1];
                                                                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                            argtab[0].meltbp_bb = /*_?*/ meltfram__.loc_BASIC_BLOCK__o12;
                                                                                                                                                            /*_.BDF__V61*/
                                                                                                                                                            meltfptr[29] =  melt_apply ((meltclosure_ptr_t)(/*_.BDF__V59*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_BB ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        /*_._IFELSE___V60*/
                                                                                                                                                        meltfptr[30] = /*_.BDF__V61*/ meltfptr[29];;
                                                                                                                                                        /*epilog*/

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:365:/ clear");
                                                                                                                                                        /*clear*/ /*_.BDF__V61*/
                                                                                                                                                        meltfptr[29] = 0 ;
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            else    /*^cond.else*/
                                                                                                                                                {

                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {


                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                        ;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:367:/ cond");
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (/*_?*/ meltfram__.loc_BASIC_BLOCK__o12) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {




                                                                                                                                                                    {
                                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:368:/ locexp");
                                                                                                                                                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*basicblock*?"));
                                                                                                                                                                    }
                                                                                                                                                                    ;
                                                                                                                                                                    /*clear*/ /*_._IFELSE___V60*/
                                                                                                                                                                    meltfptr[30] = 0 ;
                                                                                                                                                                    /*epilog*/
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else
                                                                                                                                                            {
                                                                                                                                                                MELT_LOCATION("warmelt-debug.melt:367:/ cond.else");

                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {




                                                                                                                                                                    {
                                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:369:/ locexp");
                                                                                                                                                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*nullbasicblock*?"));
                                                                                                                                                                    }
                                                                                                                                                                    ;
                                                                                                                                                                    /*clear*/ /*_._IFELSE___V60*/
                                                                                                                                                                    meltfptr[30] = 0 ;
                                                                                                                                                                    /*epilog*/
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        ;
                                                                                                                                                        /*epilog*/
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            ;
                                                                                                                                            /*^compute*/
                                                                                                                                            /*_.LET___V58*/
                                                                                                                                            meltfptr[33] = /*_._IFELSE___V60*/ meltfptr[30];;

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:363:/ clear");
                                                                                                                                            /*clear*/ /*_.BDF__V59*/
                                                                                                                                            meltfptr[31] = 0 ;
                                                                                                                                            /*^clear*/
                                                                                                                                            /*clear*/ /*_#IS_CLOSURE__L32*/
                                                                                                                                            meltfnum[20] = 0 ;
                                                                                                                                            /*^clear*/
                                                                                                                                            /*clear*/ /*_._IFELSE___V60*/
                                                                                                                                            meltfptr[30] = 0 ;
                                                                                                                                            /*epilog*/

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:362:/ clear");
                                                                                                                                            /*clear*/ /*_?*/
                                                                                                                                            meltfram__.loc_BASIC_BLOCK__o12 = 0 ;
                                                                                                                                            /*^clear*/
                                                                                                                                            /*clear*/ /*_.LET___V58*/
                                                                                                                                            meltfptr[33] = 0 ;
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                else    /*^cond.else*/
                                                                                                                                    {

                                                                                                                                        /*^block*/
                                                                                                                                        /*anyblock*/
                                                                                                                                        {

                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:370:/ cond");
                                                                                                                                            /*cond*/
                                                                                                                                            if (/*ifvariadic arg#1*/ variad_MELT_DEBUG_FUN_ix>=0 && variad_MELT_DEBUG_FUN_ix + 1 <= variad_MELT_DEBUG_FUN_len && meltxargdescr_[variad_MELT_DEBUG_FUN_ix]== MELTBPAR_LOOP) /*then*/
                                                                                                                                                {
                                                                                                                                                    /*^cond.then*/
                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {

                                                                                                                                                        /*^compute*/
                                                                                                                                                        /*_?*/ meltfram__.loc_LOOP__o13 =
                                                                                                                                                            /*variadic argument stuff*/ meltxargtab_[variad_MELT_DEBUG_FUN_ix + 0].meltbp_loop;;
                                                                                                                                                        /*^compute*/

                                                                                                                                                        /*consume variadic LOOP !*/
                                                                                                                                                        variad_MELT_DEBUG_FUN_ix += 1;;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:371:/ quasiblock");


                                                                                                                                                        /*^cond*/
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (
                                                                                                                                                            /*ifisa*/ melt_is_instance_of((melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[17])),
                                                                                                                                                                                          (melt_ptr_t)((/*!CLASS_REFERENCE*/ meltfrout->tabval[12])))
                                                                                                                                                        ) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^getslot*/
                                                                                                                                                                {
                                                                                                                                                                    melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                                                    obj = (melt_ptr_t)((/*!LOOP_DEBUG_FUNCONT*/ meltfrout->tabval[17])) /*=obj*/;
                                                                                                                                                                    melt_object_get_field(slot,obj, 0, "REFERENCED_VALUE");
                                                                                                                                                                    /*_.LDF__V63*/
                                                                                                                                                                    meltfptr[31] = slot;
                                                                                                                                                                };
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else    /*^cond.else*/
                                                                                                                                                            {

                                                                                                                                                                /*_.LDF__V63*/ meltfptr[31] =  /*reallynil*/ NULL ;;
                                                                                                                                                            }
                                                                                                                                                        ;

                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                        ;
                                                                                                                                                        /*^compute*/
                                                                                                                                                        /*_#IS_CLOSURE__L33*/
                                                                                                                                                        meltfnum[18] =
                                                                                                                                                            (melt_magic_discr((melt_ptr_t)(/*_.LDF__V63*/ meltfptr[31])) == MELTOBMAG_CLOSURE);;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:373:/ cond");
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (/*_#IS_CLOSURE__L33*/ meltfnum[18]) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {


                                                                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                                                                    ;
                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:374:/ apply");
                                                                                                                                                                    /*apply*/
                                                                                                                                                                    {
                                                                                                                                                                        union meltparam_un argtab[1];
                                                                                                                                                                        memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                                        /*^apply.arg*/
                                                                                                                                                                        argtab[0].meltbp_loop = /*_?*/ meltfram__.loc_LOOP__o13;
                                                                                                                                                                        /*_.LDF__V65*/
                                                                                                                                                                        meltfptr[33] =  melt_apply ((meltclosure_ptr_t)(/*_.LDF__V63*/ meltfptr[31]), (melt_ptr_t)(/*_.DBGI__V19*/ meltfptr[17]), (MELTBPARSTR_LOOP ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                                    }
                                                                                                                                                                    ;
                                                                                                                                                                    /*_._IFELSE___V64*/
                                                                                                                                                                    meltfptr[30] = /*_.LDF__V65*/ meltfptr[33];;
                                                                                                                                                                    /*epilog*/

                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:373:/ clear");
                                                                                                                                                                    /*clear*/ /*_.LDF__V65*/
                                                                                                                                                                    meltfptr[33] = 0 ;
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else    /*^cond.else*/
                                                                                                                                                            {

                                                                                                                                                                /*^block*/
                                                                                                                                                                /*anyblock*/
                                                                                                                                                                {


                                                                                                                                                                    MELT_CHECK_SIGNAL();
                                                                                                                                                                    ;
                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:375:/ cond");
                                                                                                                                                                    /*cond*/
                                                                                                                                                                    if (/*_?*/ meltfram__.loc_LOOP__o13) /*then*/
                                                                                                                                                                        {
                                                                                                                                                                            /*^cond.then*/
                                                                                                                                                                            /*^block*/
                                                                                                                                                                            /*anyblock*/
                                                                                                                                                                            {




                                                                                                                                                                                {
                                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:376:/ locexp");
                                                                                                                                                                                    meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*loop*?"));
                                                                                                                                                                                }
                                                                                                                                                                                ;
                                                                                                                                                                                /*clear*/ /*_._IFELSE___V64*/
                                                                                                                                                                                meltfptr[30] = 0 ;
                                                                                                                                                                                /*epilog*/
                                                                                                                                                                            }
                                                                                                                                                                            ;
                                                                                                                                                                        }
                                                                                                                                                                    else
                                                                                                                                                                        {
                                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:375:/ cond.else");

                                                                                                                                                                            /*^block*/
                                                                                                                                                                            /*anyblock*/
                                                                                                                                                                            {




                                                                                                                                                                                {
                                                                                                                                                                                    MELT_LOCATION("warmelt-debug.melt:377:/ locexp");
                                                                                                                                                                                    meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " ?*loop*?"));
                                                                                                                                                                                }
                                                                                                                                                                                ;
                                                                                                                                                                                /*clear*/ /*_._IFELSE___V64*/
                                                                                                                                                                                meltfptr[30] = 0 ;
                                                                                                                                                                                /*epilog*/
                                                                                                                                                                            }
                                                                                                                                                                            ;
                                                                                                                                                                        }
                                                                                                                                                                    ;
                                                                                                                                                                    /*epilog*/
                                                                                                                                                                }
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        ;
                                                                                                                                                        /*^compute*/
                                                                                                                                                        /*_.LET___V62*/
                                                                                                                                                        meltfptr[29] = /*_._IFELSE___V64*/ meltfptr[30];;

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:371:/ clear");
                                                                                                                                                        /*clear*/ /*_.LDF__V63*/
                                                                                                                                                        meltfptr[31] = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_#IS_CLOSURE__L33*/
                                                                                                                                                        meltfnum[18] = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_._IFELSE___V64*/
                                                                                                                                                        meltfptr[30] = 0 ;
                                                                                                                                                        /*epilog*/

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:370:/ clear");
                                                                                                                                                        /*clear*/ /*_?*/
                                                                                                                                                        meltfram__.loc_LOOP__o13 = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_.LET___V62*/
                                                                                                                                                        meltfptr[29] = 0 ;
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            else    /*^cond.else*/
                                                                                                                                                {

                                                                                                                                                    /*^block*/
                                                                                                                                                    /*anyblock*/
                                                                                                                                                    {

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:379:/ quasiblock");


                                                                                                                                                        /*_.VCTYP__V67*/
                                                                                                                                                        meltfptr[31] =
                                                                                                                                                            /*variadic_type_code*/
#ifdef melt_variadic_index
                                                                                                                                                            (((melt_variadic_index + 0) >= 0
                                                                                                                                                              && (melt_variadic_index + 0) < melt_variadic_length)
                                                                                                                                                             ?  melt_code_to_ctype (meltxargdescr_[melt_variadic_index + 0]
                                                                                                                                                                                    & MELT_ARGDESCR_MAX)
                                                                                                                                                             : NULL)
#else
                                                                                                                                                            NULL /* no variadic_ctype outside of variadic functions */
#endif /*melt_variadic_index*/
                                                                                                                                                            ;;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:380:/ cond");
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (
                                                                                                                                                            /*ifisa*/ melt_is_instance_of((melt_ptr_t)(/*_.VCTYP__V67*/ meltfptr[31]),
                                                                                                                                                                                          (melt_ptr_t)((/*!CLASS_NAMED*/ meltfrout->tabval[18])))
                                                                                                                                                        ) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^getslot*/
                                                                                                                                                                {
                                                                                                                                                                    melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                                                    obj = (melt_ptr_t)(/*_.VCTYP__V67*/ meltfptr[31]) /*=obj*/;
                                                                                                                                                                    melt_object_get_field(slot,obj, 1, "NAMED_NAME");
                                                                                                                                                                    /*_.VCTYPNAME__V68*/
                                                                                                                                                                    meltfptr[30] = slot;
                                                                                                                                                                };
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else    /*^cond.else*/
                                                                                                                                                            {

                                                                                                                                                                /*_.VCTYPNAME__V68*/ meltfptr[30] =  /*reallynil*/ NULL ;;
                                                                                                                                                            }
                                                                                                                                                        ;

                                                                                                                                                        {
                                                                                                                                                            MELT_LOCATION("warmelt-debug.melt:382:/ locexp");
                                                                                                                                                            /* WARNBADCTYPE__1 */
                                                                                                                                                            warning (0,
                                                                                                                                                                     "MELT invalid ctype %s in (DEBUG ...) file %s line %d",
                                                                                                                                                                     melt_string_str ((melt_ptr_t) /*_.VCTYPNAME__V68*/ meltfptr[30]),
                                                                                                                                                                     /*_?*/ meltfram__.loc_CSTRING__o0, (int) /*_#LINENO__L2*/ meltfnum[1]) ;
                                                                                                                                                            ;
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:388:/ cond");
                                                                                                                                                        /*cond*/
                                                                                                                                                        if (
                                                                                                                                                            /*ifisa*/ melt_is_instance_of((melt_ptr_t)(/*_.VCTYP__V67*/ meltfptr[31]),
                                                                                                                                                                                          (melt_ptr_t)((/*!CLASS_QUASI_CTYPE*/ meltfrout->tabval[19])))
                                                                                                                                                        ) /*then*/
                                                                                                                                                            {
                                                                                                                                                                /*^cond.then*/
                                                                                                                                                                /*^getslot*/
                                                                                                                                                                {
                                                                                                                                                                    melt_ptr_t slot=NULL, obj=NULL;
                                                                                                                                                                    obj = (melt_ptr_t)(/*_.VCTYP__V67*/ meltfptr[31]) /*=obj*/;
                                                                                                                                                                    melt_object_get_field(slot,obj, 2, "CTYPE_KEYWORD");
                                                                                                                                                                    /*_.CTYPE_KEYWORD__V69*/
                                                                                                                                                                    meltfptr[29] = slot;
                                                                                                                                                                };
                                                                                                                                                                ;
                                                                                                                                                            }
                                                                                                                                                        else    /*^cond.else*/
                                                                                                                                                            {

                                                                                                                                                                /*_.CTYPE_KEYWORD__V69*/ meltfptr[29] =  /*reallynil*/ NULL ;;
                                                                                                                                                            }
                                                                                                                                                        ;

                                                                                                                                                        MELT_CHECK_SIGNAL();
                                                                                                                                                        ;
                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:388:/ apply");
                                                                                                                                                        /*apply*/
                                                                                                                                                        {
                                                                                                                                                            union meltparam_un argtab[3];
                                                                                                                                                            memset(&argtab, 0, sizeof(argtab));
                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                            argtab[0].meltbp_cstring =  "??:";
                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_.CTYPE_KEYWORD__V69*/ meltfptr[29];
                                                                                                                                                            /*^apply.arg*/
                                                                                                                                                            argtab[2].meltbp_cstring =  "?? ";
                                                                                                                                                            /*_.ADD2OUT__V70*/
                                                                                                                                                            meltfptr[69] =  melt_apply ((meltclosure_ptr_t)((/*!ADD2OUT*/ meltfrout->tabval[7])), (melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (MELTBPARSTR_CSTRING MELTBPARSTR_PTR MELTBPARSTR_CSTRING ""), argtab, "", (union meltparam_un*)0);
                                                                                                                                                        }
                                                                                                                                                        ;
                                                                                                                                                        /*_.LET___V66*/
                                                                                                                                                        meltfptr[33] = /*_.ADD2OUT__V70*/ meltfptr[69];;

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:379:/ clear");
                                                                                                                                                        /*clear*/ /*_.VCTYP__V67*/
                                                                                                                                                        meltfptr[31] = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_.VCTYPNAME__V68*/
                                                                                                                                                        meltfptr[30] = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_.CTYPE_KEYWORD__V69*/
                                                                                                                                                        meltfptr[29] = 0 ;
                                                                                                                                                        /*^clear*/
                                                                                                                                                        /*clear*/ /*_.ADD2OUT__V70*/
                                                                                                                                                        meltfptr[69] = 0 ;
                                                                                                                                                        /*epilog*/

                                                                                                                                                        MELT_LOCATION("warmelt-debug.melt:370:/ clear");
                                                                                                                                                        /*clear*/ /*_.LET___V66*/
                                                                                                                                                        meltfptr[33] = 0 ;
                                                                                                                                                    }
                                                                                                                                                    ;
                                                                                                                                                }
                                                                                                                                            ;
                                                                                                                                            /*epilog*/
                                                                                                                                        }
                                                                                                                                        ;
                                                                                                                                    }
                                                                                                                                ;
                                                                                                                                /*epilog*/
                                                                                                                            }
                                                                                                                            ;
                                                                                                                        }
                                                                                                                    ;
                                                                                                                    /*epilog*/
                                                                                                                }
                                                                                                                ;
                                                                                                            }
                                                                                                        ;
                                                                                                        /*epilog*/
                                                                                                    }
                                                                                                    ;
                                                                                                }
                                                                                            ;
                                                                                            /*epilog*/
                                                                                        }
                                                                                        ;
                                                                                    }
                                                                                ;
                                                                                /*epilog*/
                                                                            }
                                                                            ;
                                                                        }
                                                                    ;
                                                                    /*epilog*/
                                                                }
                                                                ;
                                                            }
                                                        ;
                                                        /*epilog*/
                                                    }
                                                    ;
                                                }
                                            ;
                                            /*epilog*/
                                        }
                                        ;
                                    }
                                ;
                                /*_#OUTPUT_LENGTH__L34*/
                                meltfnum[21] =
                                    melt_output_length ((melt_ptr_t)/*_.OUT__V5*/ meltfptr[4]);;
                                MELT_LOCATION("warmelt-debug.melt:390:/ compute");
                                /*_#OUTLEN__L12*/
                                meltfnum[9] = /*_#SETQ___L35*/ meltfnum[20] = /*_#OUTPUT_LENGTH__L34*/ meltfnum[21];;

                                MELT_CHECK_SIGNAL();
                                ;
                                /*epilog*/

                                MELT_LOCATION("warmelt-debug.melt:278:/ clear");
                                /*clear*/ /*_#OUTPUT_LENGTH__L34*/
                                meltfnum[21] = 0 ;
                                /*^clear*/
                                /*clear*/ /*_#SETQ___L35*/
                                meltfnum[20] = 0 ;
                            }
                            ;
                            ;
                            goto meltlabloop_ARGLOOP_1;
meltlabexit_ARGLOOP_1:;/*^loopepilog*/
                            /*loopepilog*/
                            /*_.FOREVER___V28*/
                            meltfptr[25] = /*_.ARGLOOP__V29*/ meltfptr[26];;
                        }
                        ;

                        MELT_CHECK_SIGNAL();
                        ;
                        /*^compute*/
                        /*_#plI__L36*/
                        meltfnum[18] =
                            ((/*_#INITOUTLEN__L14*/ meltfnum[13]) + (200));;
                        /*^compute*/
                        /*_#gtI__L37*/
                        meltfnum[21] =
                            ((/*_#OUTLEN__L12*/ meltfnum[9]) > (/*_#plI__L36*/ meltfnum[18]));;
                        MELT_LOCATION("warmelt-debug.melt:394:/ cond");
                        /*cond*/
                        if (/*_#gtI__L37*/ meltfnum[21]) /*then*/
                            {
                                /*^cond.then*/
                                /*^block*/
                                /*anyblock*/
                                {


                                    {
                                        MELT_LOCATION("warmelt-debug.melt:395:/ locexp");
                                        meltgc_add_out((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), ( " .##."));
                                    }
                                    ;

                                    {
                                        MELT_LOCATION("warmelt-debug.melt:396:/ locexp");
                                        meltgc_out_add_indent((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (0), 0);;
                                    }
                                    ;
                                    MELT_LOCATION("warmelt-debug.melt:394:/ quasiblock");


                                    /*epilog*/
                                }
                                ;
                            } /*noelse*/
                        ;

                        {
                            MELT_LOCATION("warmelt-debug.melt:397:/ locexp");
                            meltgc_out_add_indent((melt_ptr_t)(/*_.OUT__V5*/ meltfptr[4]), (0), 0);;
                        }
                        ;

                        {
                            MELT_LOCATION("warmelt-debug.melt:399:/ locexp");
                            /* melt_debug_fun FINALFLUSH_CHK__1 */
                            melt_flush (melt_get_file (/*_.OUT__V5*/ meltfptr[4]));
                            ;
                        }
                        ;

                        MELT_LOCATION("warmelt-debug.melt:239:/ clear");
                        /*clear*/ /*_.DBGI__V19*/
                        meltfptr[17] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#FRAMDEPTH__L11*/
                        meltfnum[7] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#OUTLEN__L12*/
                        meltfnum[9] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#LASTSTROUTLEN__L13*/
                        meltfnum[12] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#INITOUTLEN__L14*/
                        meltfnum[13] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#pcIRAW__L15*/
                        meltfnum[14] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#NOT__L16*/
                        meltfnum[15] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#miI__L17*/
                        meltfnum[16] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_.ADD2OUT__V22*/
                        meltfptr[20] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_._IF___V23*/
                        meltfptr[22] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#gtI__L18*/
                        meltfnum[17] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_._IF___V25*/
                        meltfptr[23] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_.FOREVER___V28*/
                        meltfptr[25] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#plI__L36*/
                        meltfnum[18] = 0 ;
                        /*^clear*/
                        /*clear*/ /*_#gtI__L37*/
                        meltfnum[21] = 0 ;
                        /* block_signals meltcit1__BLKSIGNAL end */
                        melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev;
                        MELT_CHECK_SIGNAL();


                        /*citerepilog*/
                    } /*endciterblock BLOCK_SIGNALS*/
                    ;

                    MELT_LOCATION("warmelt-debug.melt:201:/ clear");
                    /*clear*/ /*_#DBGCOUNTER__L4*/
                    meltfnum[3] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.DUMPF__V3*/
                    meltfptr[2] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.STDERRF__V4*/
                    meltfptr[3] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.OUT__V5*/
                    meltfptr[4] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.OCCMAP__V6*/
                    meltfptr[5] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_#DEBUG_DEPTH__L5*/
                    meltfnum[4] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.BOXEDMAXDEPTH__V7*/
                    meltfptr[6] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_#NULL__L6*/
                    meltfnum[5] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_._IF___V8*/
                    meltfptr[7] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_#NULL__L7*/
                    meltfnum[6] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_._IF___V10*/
                    meltfptr[8] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.IFCPP___V13*/
                    meltfptr[10] = 0 ;
                    /*^clear*/
                    /*clear*/ /*_.IFCPP___V16*/
                    meltfptr[14] = 0 ;
                    /*epilog*/
                }
                ;
            } /*noelse*/
        ;
        /*epilog*/

        MELT_LOCATION("warmelt-debug.melt:199:/ clear");
        /*clear*/ /*_#MELT_HAS_FLAG_DEBUG_SET__L3*/
        meltfnum[2] = 0 ;
    }

    ;
    goto meltlabend_rout;
meltlabend_rout:
    melt_trace_end("MELT_DEBUG_FUN", meltcallcount);
    melt_blocklevel_signals = current_blocklevel_signals_meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN_melt;
    return (melt_ptr_t)(/*noretval*/ NULL);
#undef melt_variadic_length
#undef melt_variadic_index

#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /*end meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN*/







/****** emitted syntax checking for C generating devices *****/
#if MELT_HAVE_DEBUG

/* generated syntax checking routine for 4 C generating devices */
MELT_EXTERN void MELT_MODULE_VISIBILITY melt_syntax_tester_WARMELTmiDEBUG (void);

void
melt_syntax_tester_WARMELTmiDEBUG (void)
{
    if (1) return;
#define meltcallcount -1L /* in melt_syntax_tester_WARMELTmiDEBUG */


    /* generating device #1 */
    /*primitive-syntax DEBUG_DEPTH*/
    {
        long primres_0 =
            (long) (melt_debug_depth ());
        if (primres_0) return;
    } /*end primitive-syntax DEBUG_DEPTH*/



    /* generating device #2 */
    /*primitive-syntax MELT_REALLY_NEED_DEBUG*/
    {
        long meltprimf_0_DEPTH =0;
        long primres_1 =
            /*MELT_REALLY_NEED_DEBUG*/ (melt_need_debug ((int) meltprimf_0_DEPTH));
        if (primres_1) return;
    } /*end primitive-syntax MELT_REALLY_NEED_DEBUG*/



    /* generating device #3 */
    /*primitive-syntax MELT_HAS_FLAG_DEBUG_SET*/
    {
        long primres_2 =
            /*MELT_HAS_FLAG_DEBUG_SET*/ melt_flag_debug;
        if (primres_2) return;
    } /*end primitive-syntax MELT_HAS_FLAG_DEBUG_SET*/



    /* generating device #4 */
    /*primitive-syntax MELT_REALLY_NEED_DBGLIM*/
    {
        long meltprimf_0_DEPTH =0;
        long meltprimf_1_LIMIT =0;
        long primres_3 =
            ( /*MELT_REALLY_NEED_DBGLIM*/ melt_need_debug_limit ((int) meltprimf_0_DEPTH, (int) meltprimf_1_LIMIT));
        if (primres_3) return;
    } /*end primitive-syntax MELT_REALLY_NEED_DBGLIM*/


} /* end generated melt_syntax_tester_WARMELTmiDEBUG */
#endif /*MELT_HAVE_DEBUG syntaxcheck*/




const char melt_module_is_gpl_compatible[]= "warmelt-debug: GPLv3+";

/* the frame for initial routine */
/** start of frame for melt_start_this_module of CLASS_INITIAL_MODULE_ROUTINEOBJ from 1555**/

/*curframdeclclassy*/
class Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647// fromline 1568
    : public Melt_CallFrameWithValues<444>
{
public: /* fromline 1572*/
// no classy longs
    /*classy others*/
    long _meltsparel;
    void melt_mark_stuff (void)
    {
    } /*end melt_mark_stuff*/
    virtual void melt_mark_ggc_data (void)
    {
        melt_mark_values ();
        melt_mark_stuff ();
    }; /*end melt_mark_ggc_data*/
    Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647(meltclosure_ptr_t clos) //the closure constructor fromline 1630
        : Melt_CallFrameWithValues<444> (
#if ENABLE_CHECKING /*fromline 1634*/
            __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1638*/
            sizeof(Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647), clos) {};
    Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647() //the constructor fromline 1642
        : Melt_CallFrameWithValues<444> (
#if ENABLE_CHECKING /*fromline 1646*/
            __FILE__, __LINE__,
#endif /* ENABLE_CHECKING fromline 1650*/
            sizeof(Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647)) {};
#if ENABLE_CHECKING /*fromline 1654*/
    Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647(const char*fil, int lin) //the constructor fromline 1656
        : Melt_CallFrameWithValues<444> (fil,lin, sizeof(Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647)) {};
#endif /* ENABLE_CHECKING fromline 1666*/

}; // end  class Melt_InitialClassyFrame_WARMELTmiDEBUG_h640816647


/** end of frame for melt_start_this_module fromline 1697**/



static void melt_initialize_module_meltdata_WARMELTmiDEBUG (meltinitial_frame_t *iniframp__, char meltpredefinited[])
{
#define meltfram__  (*iniframp__)

    /* curframe_cdat_struct */ struct meltcdata_st
    {
        void* meltcdata_inigap[2]; /* could help debugging */

        struct MELT_OBJECT_STRUCT(3) dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
        struct MELT_STRING_STRUCT(38) dstr_2__HOOK_FRESH_ENVIRONMENT_R;
        struct MELT_OBJECT_STRUCT(3) dsym_3__CLASS_DEBUG_INFORMATION;
        struct MELT_STRING_STRUCT(23) dstr_4__CLASS_DEBUG_INFORMATION;
        struct MELT_OBJECT_STRUCT(3) dsym_5__CLASS_ROOT;
        struct MELT_STRING_STRUCT(10) dstr_6__CLASS_ROOT;
        struct MELT_OBJECT_STRUCT(8) dobj_7__CLASS_DEBUG_INFORMATION;
        struct MELT_STRING_STRUCT(23) dstr_8__CLASS_DEBUG_INFORMATION;
        struct MELT_MULTIPLE_STRUCT(1) dtup_9_syCLASS_DEBUG_INFORMATION;
        struct MELT_MULTIPLE_STRUCT(3) dtup_10_syCLASS_DEBUG_INFORMATION;
        struct MELT_OBJECT_STRUCT(3) dsym_11__DBGI_OUT;
        struct MELT_STRING_STRUCT(8) dstr_12__DBGI_OUT;
        struct MELT_OBJECT_STRUCT(4) dobj_13__DBGI_OUT;
        struct MELT_STRING_STRUCT(8) dstr_14__DBGI_OUT;
        struct MELT_OBJECT_STRUCT(3) dsym_15__DBGI_OCCMAP;
        struct MELT_STRING_STRUCT(11) dstr_16__DBGI_OCCMAP;
        struct MELT_OBJECT_STRUCT(4) dobj_17__DBGI_OCCMAP;
        struct MELT_STRING_STRUCT(11) dstr_18__DBGI_OCCMAP;
        struct MELT_OBJECT_STRUCT(3) dsym_19__DBGI_MAXDEPTH;
        struct MELT_STRING_STRUCT(13) dstr_20__DBGI_MAXDEPTH;
        struct MELT_OBJECT_STRUCT(4) dobj_21__DBGI_MAXDEPTH;
        struct MELT_STRING_STRUCT(13) dstr_22__DBGI_MAXDEPTH;
        struct MELT_OBJECT_STRUCT(3) dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION;
        struct MELT_STRING_STRUCT(30) dstr_24__CLASS_DEBUG_OUTPUT_INFOR;
        struct MELT_OBJECT_STRUCT(8) dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION;
        struct MELT_STRING_STRUCT(30) dstr_26__CLASS_DEBUG_OUTPUT_INFOR;
        struct MELT_MULTIPLE_STRUCT(2) dtup_27_syCLASS_DEBUG_OUTPUT_INFORMATION;
        struct MELT_MULTIPLE_STRUCT(3) dtup_28_syCLASS_DEBUG_OUTPUT_INFORMATION;
        struct MELT_OBJECT_STRUCT(3) dsym_29__DEBUG_DEPTH;
        struct MELT_STRING_STRUCT(11) dstr_30__DEBUG_DEPTH;
        struct MELT_OBJECT_STRUCT(5) dobj_31__DEBUG_DEPTH;
        struct MELT_MULTIPLE_STRUCT(1) dtup_32_syDEBUG_DEPTH;
        struct MELT_MULTIPLE_STRUCT(0) dtup_33_syDEBUG_DEPTH;
        struct MELT_STRING_STRUCT(28) dstr_34__long_melt_debug_depth;
        struct MELT_STRING_STRUCT(11) dstr_35__DEBUG_DEPTH;
        struct MELT_OBJECT_STRUCT(3) dsym_36__MELT_REALLY_NEED_DEBUG;
        struct MELT_STRING_STRUCT(22) dstr_37__MELT_REALLY_NEED_DEBUG;
        struct MELT_OBJECT_STRUCT(5) dobj_38__MELT_REALLY_NEED_DEBUG;
        struct MELT_MULTIPLE_STRUCT(3) dtup_39_syMELT_REALLY_NEED_DEBUG;
        struct MELT_MULTIPLE_STRUCT(1) dtup_40_syMELT_REALLY_NEED_DEBUG;
        struct MELT_OBJECT_STRUCT(3) dsym_41__DEPTH;
        struct MELT_STRING_STRUCT(5) dstr_42__DEPTH;
        struct MELT_OBJECT_STRUCT(2) dobj_43;
        struct MELT_STRING_STRUCT(51) dstr_44__MELT_REALLY_NEED_DEBUG;
        struct MELT_STRING_STRUCT(2) dstr_45__;
        struct MELT_STRING_STRUCT(22) dstr_46__MELT_REALLY_NEED_DEBUG;
        struct MELT_OBJECT_STRUCT(3) dsym_47__MELT_HAS_FLAG_DEBUG_SET;
        struct MELT_STRING_STRUCT(23) dstr_48__MELT_HAS_FLAG_DEBUG_SET;
        struct MELT_OBJECT_STRUCT(5) dobj_49__MELT_HAS_FLAG_DEBUG_SET;
        struct MELT_MULTIPLE_STRUCT(1) dtup_50_syMELT_HAS_FLAG_DEBUG_SET;
        struct MELT_MULTIPLE_STRUCT(0) dtup_51_syMELT_HAS_FLAG_DEBUG_SET;
        struct MELT_STRING_STRUCT(43) dstr_52__MELT_HAS_FLAG_DEBUG_SE;
        struct MELT_STRING_STRUCT(23) dstr_53__MELT_HAS_FLAG_DEBUG_SET;
        struct MELT_OBJECT_STRUCT(3) dsym_54__MELT_REALLY_NEED_DBGLIM;
        struct MELT_STRING_STRUCT(23) dstr_55__MELT_REALLY_NEED_DBGLIM;
        struct MELT_OBJECT_STRUCT(5) dobj_56__MELT_REALLY_NEED_DBGLIM;
        struct MELT_MULTIPLE_STRUCT(5) dtup_57_syMELT_REALLY_NEED_DBGLIM;
        struct MELT_MULTIPLE_STRUCT(2) dtup_58_syMELT_REALLY_NEED_DBGLIM;
        struct MELT_OBJECT_STRUCT(2) dobj_59;
        struct MELT_OBJECT_STRUCT(3) dsym_60__LIMIT;
        struct MELT_STRING_STRUCT(5) dstr_61__LIMIT;
        struct MELT_OBJECT_STRUCT(2) dobj_62;
        struct MELT_STRING_STRUCT(59) dstr_63__MELT_REALLY_NEED_DBG;
        struct MELT_STRING_STRUCT(8) dstr_64__int_;
        struct MELT_STRING_STRUCT(2) dstr_65__;
        struct MELT_STRING_STRUCT(23) dstr_66__MELT_REALLY_NEED_DBGLIM;
        struct MELT_OBJECT_STRUCT(3) dsym_67__DBG_OUTPUT;
        struct MELT_STRING_STRUCT(10) dstr_68__DBG_OUTPUT;
        struct MELT_OBJECT_STRUCT(3) dsym_69__CLASS_SELECTOR;
        struct MELT_STRING_STRUCT(14) dstr_70__CLASS_SELECTOR;
        struct MELT_OBJECT_STRUCT(3) dsym_71__RECV;
        struct MELT_STRING_STRUCT(4) dstr_72__RECV;
        struct MELT_OBJECT_STRUCT(2) dobj_73;
        struct MELT_OBJECT_STRUCT(3) dsym_74__DBGINFO;
        struct MELT_STRING_STRUCT(7) dstr_75__DBGINFO;
        struct MELT_OBJECT_STRUCT(2) dobj_76;
        struct MELT_OBJECT_STRUCT(2) dobj_77;
        struct MELT_MULTIPLE_STRUCT(3) dtup_78_syDBG_OUTPUT;
        struct MELT_OBJECT_STRUCT(4) dobj_79__DBG_OUTPUT;
        struct MELT_STRING_STRUCT(10) dstr_80__DBG_OUTPUT;
        struct MELT_OBJECT_STRUCT(3) dsym_81__DBG_OUTPUTAGAIN;
        struct MELT_STRING_STRUCT(15) dstr_82__DBG_OUTPUTAGAIN;
        struct MELT_OBJECT_STRUCT(2) dobj_83;
        struct MELT_OBJECT_STRUCT(2) dobj_84;
        struct MELT_OBJECT_STRUCT(2) dobj_85;
        struct MELT_MULTIPLE_STRUCT(3) dtup_86_syDBG_OUTPUTAGAIN;
        struct MELT_OBJECT_STRUCT(4) dobj_87__DBG_OUTPUTAGAIN;
        struct MELT_STRING_STRUCT(15) dstr_88__DBG_OUTPUTAGAIN;
        struct MELT_OBJECT_STRUCT(3) dsym_89__TREE_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(18) dstr_90__TREE_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(3) dsym_91__CLASS_REFERENCE;
        struct MELT_STRING_STRUCT(15) dstr_92__CLASS_REFERENCE;
        struct MELT_OBJECT_STRUCT(1) dobj_93__TREE_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_94__REGISTER_TREE_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_95__REGISTER_TREE_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_96__GIMPLE_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(20) dstr_97__GIMPLE_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(1) dobj_98__GIMPLE_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_99__REGISTER_GIMPLE_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_100__REGISTER_GIMPLE_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_101__GIMPLESEQ_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(23) dstr_102__GIMPLESEQ_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(1) dobj_103__GIMPLESEQ_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_105__REGISTER_GIMPLESEQ_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_106__EDGE_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(18) dstr_107__EDGE_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(1) dobj_108__EDGE_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_109__REGISTER_EDGE_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_110__REGISTER_EDGE_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_111__BASICBLOCK_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(24) dstr_112__BASICBLOCK_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(1) dobj_113__BASICBLOCK_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_114__REGISTER_BASICBLOCK_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_115__REGISTER_BASICBLOCK_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_116__LOOP_DEBUG_FUNCONT;
        struct MELT_STRING_STRUCT(18) dstr_117__LOOP_DEBUG_FUNCONT;
        struct MELT_OBJECT_STRUCT(1) dobj_118__LOOP_DEBUG_FUNCONT;
        struct MELT_ROUTINE_STRUCT(2) drout_119__REGISTER_LOOP_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_120__REGISTER_LOOP_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_121__DISCR_DEBUG_CLOSURE;
        struct MELT_STRING_STRUCT(19) dstr_122__DISCR_DEBUG_CLOSURE;
        struct MELT_OBJECT_STRUCT(3) dsym_123__CLASS_DISCRIMINANT;
        struct MELT_STRING_STRUCT(18) dstr_124__CLASS_DISCRIMINANT;
        struct MELT_OBJECT_STRUCT(5) dobj_125__DISCR_DEBUG_CLOSURE;
        struct MELT_OBJECT_STRUCT(3) dsym_126__DISCR_CLOSURE;
        struct MELT_STRING_STRUCT(13) dstr_127__DISCR_CLOSURE;
        struct MELT_STRING_STRUCT(19) dstr_128__DISCR_DEBUG_CLOSURE;
        struct MELT_ROUTINE_STRUCT(20) drout_129__MELT_DEBUG_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_130__MELT_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_131__INITIAL_SYSTEM_DATA;
        struct MELT_STRING_STRUCT(19) dstr_132__INITIAL_SYSTEM_DATA;
        struct MELT_OBJECT_STRUCT(3) dsym_133__CLASS_SYSTEM_DATA;
        struct MELT_STRING_STRUCT(17) dstr_134__CLASS_SYSTEM_DATA;
        struct MELT_OBJECT_STRUCT(3) dsym_135__DISCR_MAP_OBJECTS;
        struct MELT_STRING_STRUCT(17) dstr_136__DISCR_MAP_OBJECTS;
        struct MELT_OBJECT_STRUCT(3) dsym_137__DISCR_INTEGER;
        struct MELT_STRING_STRUCT(13) dstr_138__DISCR_INTEGER;
        struct MELT_OBJECT_STRUCT(3) dsym_139__DISCR_STRBUF;
        struct MELT_STRING_STRUCT(12) dstr_140__DISCR_STRBUF;
        struct MELT_OBJECT_STRUCT(3) dsym_141__MELT_ASSERT_FAILURE_FUN;
        struct MELT_STRING_STRUCT(23) dstr_142__MELT_ASSERT_FAILURE_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_143__ADD2OUT;
        struct MELT_STRING_STRUCT(7) dstr_144__ADD2OUT;
        struct MELT_OBJECT_STRUCT(3) dsym_145__CSTRING_PREFIXED;
        struct MELT_STRING_STRUCT(16) dstr_146__CSTRING_PREFIXED;
        struct MELT_OBJECT_STRUCT(3) dsym_147__CLASS_NAMED;
        struct MELT_STRING_STRUCT(11) dstr_148__CLASS_NAMED;
        struct MELT_OBJECT_STRUCT(3) dsym_149__CLASS_QUASI_CTYPE;
        struct MELT_STRING_STRUCT(17) dstr_150__CLASS_QUASI_CTYPE;
        struct MELT_ROUTINE_STRUCT(5) drout_151__DBG_OUTOBJECT;
        struct MELT_CLOSURE_STRUCT(0) dclo_152__DBG_OUTOBJECT;
        struct MELT_ROUTINE_STRUCT(4) drout_153__DBG_OUT;
        struct MELT_CLOSURE_STRUCT(0) dclo_154__DBG_OUT;
        struct MELT_ROUTINE_STRUCT(3) drout_155__DBGOUT_FIELDS;
        struct MELT_CLOSURE_STRUCT(0) dclo_156__DBGOUT_FIELDS;
        struct MELT_ROUTINE_STRUCT(4) drout_157__DBGOUTAGAIN_FIELDS;
        struct MELT_CLOSURE_STRUCT(0) dclo_158__DBGOUTAGAIN_FIELDS;
        struct MELT_ROUTINE_STRUCT(2) drout_159__DBGOUT_NULL_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_160__DBGOUT_NULL_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_161__INSTALL_METHOD;
        struct MELT_STRING_STRUCT(14) dstr_162__INSTALL_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_163__DISCR_NULL_RECEIVER;
        struct MELT_STRING_STRUCT(19) dstr_164__DISCR_NULL_RECEIVER;
        struct MELT_ROUTINE_STRUCT(4) drout_165__DBGOUT_STRING_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_166__DBGOUT_STRING_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_167__DISCR_STRING;
        struct MELT_STRING_STRUCT(12) dstr_168__DISCR_STRING;
        struct MELT_OBJECT_STRUCT(3) dsym_169__DISCR_VERBATIM_STRING;
        struct MELT_STRING_STRUCT(21) dstr_170__DISCR_VERBATIM_STRING;
        struct MELT_ROUTINE_STRUCT(4) drout_171__DBGOUT_STRBUF_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_172__DBGOUT_STRBUF_METHOD;
        struct MELT_ROUTINE_STRUCT(5) drout_173__DBGOUT_INTEGER_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_174__DBGOUT_INTEGER_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_175__DISCR_CONSTANT_INTEGER;
        struct MELT_STRING_STRUCT(22) dstr_176__DISCR_CONSTANT_INTEGER;
        struct MELT_ROUTINE_STRUCT(5) drout_177__DBGOUT_DOUBLE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_178__DBGOUT_DOUBLE_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_179__DISCR_DOUBLE;
        struct MELT_STRING_STRUCT(12) dstr_180__DISCR_DOUBLE;
        struct MELT_OBJECT_STRUCT(3) dsym_181__DISCR_CONSTANT_DOUBLE;
        struct MELT_STRING_STRUCT(21) dstr_182__DISCR_CONSTANT_DOUBLE;
        struct MELT_ROUTINE_STRUCT(5) drout_183__DBGOUT_MIXINT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_184__DBGOUT_MIXINT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_185__DISCR_MIXED_INTEGER;
        struct MELT_STRING_STRUCT(19) dstr_186__DISCR_MIXED_INTEGER;
        struct MELT_ROUTINE_STRUCT(3) drout_187__DBGOUT_MIXLOC_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_188__DBGOUT_MIXLOC_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_189__DISCR_MIXED_LOCATION;
        struct MELT_STRING_STRUCT(20) dstr_190__DISCR_MIXED_LOCATION;
        struct MELT_ROUTINE_STRUCT(3) drout_191__DBGOUT_MIXBIGINT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_192__DBGOUT_MIXBIGINT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_193__DISCR_MIXED_BIGINT;
        struct MELT_STRING_STRUCT(18) dstr_194__DISCR_MIXED_BIGINT;
        struct MELT_ROUTINE_STRUCT(4) drout_195__DBGOUT_MULTIPLE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_196__DBGOUT_MULTIPLE_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_197__DISCR_MULTIPLE;
        struct MELT_STRING_STRUCT(14) dstr_198__DISCR_MULTIPLE;
        struct MELT_ROUTINE_STRUCT(7) drout_199__DBGOUT_ROUTINE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_200__DBGOUT_ROUTINE_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_201__DISCR_ROUTINE;
        struct MELT_STRING_STRUCT(13) dstr_202__DISCR_ROUTINE;
        struct MELT_OBJECT_STRUCT(3) dsym_203__ROUTINE_EVERY;
        struct MELT_STRING_STRUCT(13) dstr_204__ROUTINE_EVERY;
        struct MELT_ROUTINE_STRUCT(1) drout_205__LAMBDA_;
        struct MELT_ROUTINE_STRUCT(9) drout_206__DBGOUT_HOOK_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_207__DBGOUT_HOOK_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_208__HOOK_EVERY;
        struct MELT_STRING_STRUCT(10) dstr_209__HOOK_EVERY;
        struct MELT_ROUTINE_STRUCT(2) drout_210__LAMBDA_;
        struct MELT_OBJECT_STRUCT(3) dsym_211__DISCR_HOOK;
        struct MELT_STRING_STRUCT(10) dstr_212__DISCR_HOOK;
        struct MELT_ROUTINE_STRUCT(5) drout_213__DBGOUT_CLOSURE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_214__DBGOUT_CLOSURE_METHOD;
        struct MELT_ROUTINE_STRUCT(5) drout_215__DBGOUT_LIST_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_216__DBGOUT_LIST_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_217__DISCR_LIST;
        struct MELT_STRING_STRUCT(10) dstr_218__DISCR_LIST;
        struct MELT_ROUTINE_STRUCT(5) drout_219__DBGOUT_PAIR_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_220__DBGOUT_PAIR_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_221__DISCR_PAIR;
        struct MELT_STRING_STRUCT(10) dstr_222__DISCR_PAIR;
        struct MELT_ROUTINE_STRUCT(18) drout_223__DBGOUT_MAPOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_224__DBGOUT_MAPOBJECT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_225__MAPOBJECT_EVERY;
        struct MELT_STRING_STRUCT(15) dstr_226__MAPOBJECT_EVERY;
        struct MELT_ROUTINE_STRUCT(1) drout_227__LAMBDA_;
        struct MELT_OBJECT_STRUCT(3) dsym_228__MULTIPLE_SORT;
        struct MELT_STRING_STRUCT(13) dstr_229__MULTIPLE_SORT;
        struct MELT_ROUTINE_STRUCT(4) drout_230__LAMBDA_;
        struct MELT_OBJECT_STRUCT(3) dsym_231__COMPARE_OBJ_RANKED;
        struct MELT_STRING_STRUCT(18) dstr_232__COMPARE_OBJ_RANKED;
        struct meltint_st dint_233__;
        struct meltint_st dint_234__;
        struct meltint_st dint_235__;
        struct MELT_OBJECT_STRUCT(3) dsym_236__MULTIPLE_EVERY;
        struct MELT_STRING_STRUCT(14) dstr_237__MULTIPLE_EVERY;
        struct MELT_ROUTINE_STRUCT(3) drout_238__LAMBDA_;
        struct MELT_ROUTINE_STRUCT(14) drout_239__DBGOUT_MAPSTRING_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_240__DBGOUT_MAPSTRING_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_241__MAPSTRING_EVERY;
        struct MELT_STRING_STRUCT(15) dstr_242__MAPSTRING_EVERY;
        struct MELT_ROUTINE_STRUCT(1) drout_243__LAMBDA_;
        struct MELT_ROUTINE_STRUCT(4) drout_244__LAMBDA_;
        struct meltint_st dint_245__;
        struct meltint_st dint_246__;
        struct meltint_st dint_247__;
        struct MELT_OBJECT_STRUCT(3) dsym_248__DISCR_MAP_STRINGS;
        struct MELT_STRING_STRUCT(17) dstr_249__DISCR_MAP_STRINGS;
        struct MELT_ROUTINE_STRUCT(6) drout_250__DBGOUT_BUCKETLONG_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_251__DBGOUT_BUCKETLONG_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_252__DISCR_BUCKET_LONGS;
        struct MELT_STRING_STRUCT(18) dstr_253__DISCR_BUCKET_LONGS;
        struct MELT_ROUTINE_STRUCT(5) drout_254__DBGOUT_JSONOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_255__DBGOUT_JSONOBJECT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_256__DISCR_JSONOBJECT;
        struct MELT_STRING_STRUCT(16) dstr_257__DISCR_JSONOBJECT;
        struct MELT_ROUTINE_STRUCT(3) drout_258__DBGOUT_ANYOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_259__DBGOUT_ANYOBJECT_METHOD;
        struct MELT_ROUTINE_STRUCT(3) drout_260__DBGOUT_ANYRECV_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_261__DBGOUT_ANYRECV_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_262__DISCR_ANY_RECEIVER;
        struct MELT_STRING_STRUCT(18) dstr_263__DISCR_ANY_RECEIVER;
        struct MELT_ROUTINE_STRUCT(2) drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_265__DBGOUTAGAIN_ANYOBJECT_METHOD;
        struct MELT_ROUTINE_STRUCT(5) drout_266__DBGOUT_NAMEDOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_267__DBGOUT_NAMEDOBJECT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_268__DBGOUT_NAMEDOBJECT_METHOD;
        struct MELT_STRING_STRUCT(25) dstr_269__DBGOUT_NAMEDOBJECT_METHO;
        struct MELT_ROUTINE_STRUCT(3) drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_271__DBGOUTAGAIN_NAMEDOBJECT_METHOD;
        struct MELT_ROUTINE_STRUCT(3) drout_272__DBGOUTAGAIN_SYMBOL_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_273__DBGOUTAGAIN_SYMBOL_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_274__CLASS_SYMBOL;
        struct MELT_STRING_STRUCT(12) dstr_275__CLASS_SYMBOL;
        struct MELT_ROUTINE_STRUCT(5) drout_276__DBGOUT_SYMBOL_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_277__DBGOUT_SYMBOL_METHOD;
        struct MELT_ROUTINE_STRUCT(5) drout_278__DBGOUT_CLASS_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_279__DBGOUT_CLASS_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_280__CLASS_CLASS;
        struct MELT_STRING_STRUCT(11) dstr_281__CLASS_CLASS;
        struct MELT_ROUTINE_STRUCT(3) drout_282__DBGOUTAGAIN_KEYWORD_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_283__DBGOUTAGAIN_KEYWORD_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_284__CLASS_KEYWORD;
        struct MELT_STRING_STRUCT(13) dstr_285__CLASS_KEYWORD;
        struct MELT_ROUTINE_STRUCT(5) drout_286__DBGOUT_KEYWORD_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_287__DBGOUT_KEYWORD_METHOD;
        struct MELT_ROUTINE_STRUCT(0) drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_289__DBGOUTAGAIN_CLONED_SYMBOL_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_290__CLASS_CLONED_SYMBOL;
        struct MELT_STRING_STRUCT(19) dstr_291__CLASS_CLONED_SYMBOL;
        struct MELT_ROUTINE_STRUCT(5) drout_292__DBGOUT_CLONED_SYMBOL_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_293__DBGOUT_CLONED_SYMBOL_METHOD;
        struct MELT_ROUTINE_STRUCT(10) drout_294__DBGOUT_ENVIRONMENT_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_295__DBGOUT_ENVIRONMENT_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_296__CLASS_ENVIRONMENT;
        struct MELT_STRING_STRUCT(17) dstr_297__CLASS_ENVIRONMENT;
        struct MELT_OBJECT_STRUCT(3) dsym_298__ENV_PREV;
        struct MELT_STRING_STRUCT(8) dstr_299__ENV_PREV;
        struct MELT_OBJECT_STRUCT(3) dsym_300__CLASS_DESCRIBED_ENVIRONMENT;
        struct MELT_STRING_STRUCT(27) dstr_301__CLASS_DESCRIBED_ENVIRONM;
        struct MELT_ROUTINE_STRUCT(0) drout_302__DBGOUTAGAIN_CTYPE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_303__DBGOUTAGAIN_CTYPE_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_304__CLASS_CTYPE;
        struct MELT_STRING_STRUCT(11) dstr_305__CLASS_CTYPE;
        struct MELT_ROUTINE_STRUCT(5) drout_306__DBGOUT_CTYPE_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_307__DBGOUT_CTYPE_METHOD;
        struct MELT_ROUTINE_STRUCT(5) drout_308__DBGOUT_ANYBINDING_METHOD;
        struct MELT_CLOSURE_STRUCT(0) dclo_309__DBGOUT_ANYBINDING_METHOD;
        struct MELT_OBJECT_STRUCT(3) dsym_310__CLASS_ANY_BINDING;
        struct MELT_STRING_STRUCT(17) dstr_311__CLASS_ANY_BINDING;
        struct MELT_ROUTINE_STRUCT(3) drout_312__DEBUG_LESS_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_313__DEBUG_LESS_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_314__DEBUG_LESS;
        struct MELT_STRING_STRUCT(10) dstr_315__DEBUG_LESS;
        struct MELT_ROUTINE_STRUCT(6) drout_316__DEBUG_MORE_FUN;
        struct MELT_CLOSURE_STRUCT(0) dclo_317__DEBUG_MORE_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_318__DEBUG_MORE;
        struct MELT_STRING_STRUCT(10) dstr_319__DEBUG_MORE;
        struct MELT_ROUTINE_STRUCT(5) drout_320__DISPLAY_DEBUG_MESSAGE;
        struct MELT_CLOSURE_STRUCT(0) dclo_321__DISPLAY_DEBUG_MESSAGE;
        struct MELT_OBJECT_STRUCT(3) dsym_322__DBG_OUT;
        struct MELT_STRING_STRUCT(7) dstr_323__DBG_OUT;
        struct MELT_OBJECT_STRUCT(3) dsym_324__DBG_OUTOBJECT;
        struct MELT_STRING_STRUCT(13) dstr_325__DBG_OUTOBJECT;
        struct MELT_OBJECT_STRUCT(3) dsym_326__DBGOUT_FIELDS;
        struct MELT_STRING_STRUCT(13) dstr_327__DBGOUT_FIELDS;
        struct MELT_OBJECT_STRUCT(3) dsym_328__DBGOUTAGAIN_FIELDS;
        struct MELT_STRING_STRUCT(18) dstr_329__DBGOUTAGAIN_FIELDS;
        struct MELT_OBJECT_STRUCT(3) dsym_330__DISPLAY_DEBUG_MESSAGE;
        struct MELT_STRING_STRUCT(21) dstr_331__DISPLAY_DEBUG_MESSAGE;
        struct MELT_OBJECT_STRUCT(3) dsym_332__MELT_DEBUG_FUN;
        struct MELT_STRING_STRUCT(14) dstr_333__MELT_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN;
        struct MELT_STRING_STRUCT(29) dstr_335__REGISTER_BASICBLOCK_DEBU;
        struct MELT_OBJECT_STRUCT(3) dsym_336__REGISTER_EDGE_DEBUG_FUN;
        struct MELT_STRING_STRUCT(23) dstr_337__REGISTER_EDGE_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_338__REGISTER_GIMPLE_DEBUG_FUN;
        struct MELT_STRING_STRUCT(25) dstr_339__REGISTER_GIMPLE_DEBUG_FU;
        struct MELT_OBJECT_STRUCT(3) dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN;
        struct MELT_STRING_STRUCT(28) dstr_341__REGISTER_GIMPLESEQ_DEBUG;
        struct MELT_OBJECT_STRUCT(3) dsym_342__REGISTER_LOOP_DEBUG_FUN;
        struct MELT_STRING_STRUCT(23) dstr_343__REGISTER_LOOP_DEBUG_FUN;
        struct MELT_OBJECT_STRUCT(3) dsym_344__REGISTER_TREE_DEBUG_FUN;
        struct MELT_STRING_STRUCT(23) dstr_345__REGISTER_TREE_DEBUG_FUN;
        long spare_;
    } *meltcdat = NULL;
    dbgprintf ("start melt_initialize_module_meltdata_WARMELTmiDEBUG iniframp__=%p", (void*) iniframp__);
    (void) meltpredefinited; /* avoid warning if non-used. */
    /*curframe_cdat_fill */
    meltcdat = (struct meltcdata_st*) meltgc_allocate(sizeof(*meltcdat),0);
    melt_prohibit_garbcoll = TRUE;
    /*initial routine predef*/
    /*initial routine fill*/


    /*iniobj dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V58*/ meltfptr[57])
        /*_._VALDATA___V58*/ meltfptr[57] = (melt_ptr_t )&meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.obj_hash = 824058733;
    meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.obj_len = 3;


    /*inistring dstr_2__HOOK_FRESH_ENVIRONMENT_R*/
    /*_._VALSTR___V59*/
    meltfptr[58] = (melt_ptr_t) &meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R;
    meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.val, "HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER", sizeof (meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.val)-1);
    meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.val[38] = (char)0 ;
    meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.slen = 38 ;


    /*iniobj dsym_3__CLASS_DEBUG_INFORMATION*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V60*/ meltfptr[59])
        /*_._VALDATA___V60*/ meltfptr[59] = (melt_ptr_t )&meltcdat->dsym_3__CLASS_DEBUG_INFORMATION;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_3__CLASS_DEBUG_INFORMATION", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_3__CLASS_DEBUG_INFORMATION", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_3__CLASS_DEBUG_INFORMATION.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_3__CLASS_DEBUG_INFORMATION.obj_hash = 190162903;
    meltcdat->dsym_3__CLASS_DEBUG_INFORMATION.obj_len = 3;


    /*inistring dstr_4__CLASS_DEBUG_INFORMATION*/
    /*_._VALSTR___V61*/
    meltfptr[60] = (melt_ptr_t) &meltcdat->dstr_4__CLASS_DEBUG_INFORMATION;
    meltcdat->dstr_4__CLASS_DEBUG_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_4__CLASS_DEBUG_INFORMATION.val, "CLASS_DEBUG_INFORMATION", sizeof (meltcdat->dstr_4__CLASS_DEBUG_INFORMATION.val)-1);
    meltcdat->dstr_4__CLASS_DEBUG_INFORMATION.val[23] = (char)0 ;
    meltcdat->dstr_4__CLASS_DEBUG_INFORMATION.slen = 23 ;


    /*iniobj dsym_5__CLASS_ROOT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V62*/ meltfptr[61])
        /*_._VALDATA___V62*/ meltfptr[61] = (melt_ptr_t )&meltcdat->dsym_5__CLASS_ROOT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_5__CLASS_ROOT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_5__CLASS_ROOT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_5__CLASS_ROOT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_5__CLASS_ROOT.obj_hash = 60568825;
    meltcdat->dsym_5__CLASS_ROOT.obj_len = 3;


    /*inistring dstr_6__CLASS_ROOT*/
    /*_._VALSTR___V63*/
    meltfptr[62] = (melt_ptr_t) &meltcdat->dstr_6__CLASS_ROOT;
    meltcdat->dstr_6__CLASS_ROOT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_6__CLASS_ROOT.val, "CLASS_ROOT", sizeof (meltcdat->dstr_6__CLASS_ROOT.val)-1);
    meltcdat->dstr_6__CLASS_ROOT.val[10] = (char)0 ;
    meltcdat->dstr_6__CLASS_ROOT.slen = 10 ;

    MELT_LOCATION("warmelt-debug.melt:42:/ iniobj");

    /*iniobj dobj_7__CLASS_DEBUG_INFORMATION*/
    /*_._VALDATA___V64*/
    meltfptr[63] = (melt_ptr_t )&meltcdat->dobj_7__CLASS_DEBUG_INFORMATION;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_7__CLASS_DEBUG_INFORMATION", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_7__CLASS_DEBUG_INFORMATION", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_7__CLASS_DEBUG_INFORMATION.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS))));
    meltcdat->dobj_7__CLASS_DEBUG_INFORMATION.obj_num = MELTOBMAG_OBJECT;
    meltcdat->dobj_7__CLASS_DEBUG_INFORMATION.obj_hash = 918061638;
    meltcdat->dobj_7__CLASS_DEBUG_INFORMATION.obj_len = 8;


    /*inistring dstr_8__CLASS_DEBUG_INFORMATION*/
    /*_._VALSTR___V65*/
    meltfptr[64] = (melt_ptr_t) &meltcdat->dstr_8__CLASS_DEBUG_INFORMATION;
    meltcdat->dstr_8__CLASS_DEBUG_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_8__CLASS_DEBUG_INFORMATION.val, "CLASS_DEBUG_INFORMATION", sizeof (meltcdat->dstr_8__CLASS_DEBUG_INFORMATION.val)-1);
    meltcdat->dstr_8__CLASS_DEBUG_INFORMATION.val[23] = (char)0 ;
    meltcdat->dstr_8__CLASS_DEBUG_INFORMATION.slen = 23 ;

    /*inimult dtup_9_syCLASS_DEBUG_INFORMATION*/
    /*_._VALTUP___V66*/
    meltfptr[65] = (melt_ptr_t) &meltcdat->dtup_9_syCLASS_DEBUG_INFORMATION;
    meltcdat->dtup_9_syCLASS_DEBUG_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLASS_SEQUENCE))));
    meltcdat->dtup_9_syCLASS_DEBUG_INFORMATION.nbval = 1;
    /*inimult dtup_10_syCLASS_DEBUG_INFORMATION*/
    /*_._VALTUP___V73*/
    meltfptr[72] = (melt_ptr_t) &meltcdat->dtup_10_syCLASS_DEBUG_INFORMATION;
    meltcdat->dtup_10_syCLASS_DEBUG_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_FIELD_SEQUENCE))));
    meltcdat->dtup_10_syCLASS_DEBUG_INFORMATION.nbval = 3;

    /*iniobj dsym_11__DBGI_OUT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V74*/ meltfptr[73])
        /*_._VALDATA___V74*/ meltfptr[73] = (melt_ptr_t )&meltcdat->dsym_11__DBGI_OUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_11__DBGI_OUT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_11__DBGI_OUT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_11__DBGI_OUT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_11__DBGI_OUT.obj_hash = 639486128;
    meltcdat->dsym_11__DBGI_OUT.obj_len = 3;


    /*inistring dstr_12__DBGI_OUT*/
    /*_._VALSTR___V75*/
    meltfptr[74] = (melt_ptr_t) &meltcdat->dstr_12__DBGI_OUT;
    meltcdat->dstr_12__DBGI_OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_12__DBGI_OUT.val, "DBGI_OUT", sizeof (meltcdat->dstr_12__DBGI_OUT.val)-1);
    meltcdat->dstr_12__DBGI_OUT.val[8] = (char)0 ;
    meltcdat->dstr_12__DBGI_OUT.slen = 8 ;

    /*^iniobj*/

    /*iniobj dobj_13__DBGI_OUT*/
    /*_._VALDATA___V67*/
    meltfptr[66] = (melt_ptr_t )&meltcdat->dobj_13__DBGI_OUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_13__DBGI_OUT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_13__DBGI_OUT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_13__DBGI_OUT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))));
    meltcdat->dobj_13__DBGI_OUT.obj_num = 0;
    meltcdat->dobj_13__DBGI_OUT.obj_hash = 158660297;
    meltcdat->dobj_13__DBGI_OUT.obj_len = 4;


    /*inistring dstr_14__DBGI_OUT*/
    /*_._VALSTR___V68*/
    meltfptr[67] = (melt_ptr_t) &meltcdat->dstr_14__DBGI_OUT;
    meltcdat->dstr_14__DBGI_OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_14__DBGI_OUT.val, "DBGI_OUT", sizeof (meltcdat->dstr_14__DBGI_OUT.val)-1);
    meltcdat->dstr_14__DBGI_OUT.val[8] = (char)0 ;
    meltcdat->dstr_14__DBGI_OUT.slen = 8 ;


    /*iniobj dsym_15__DBGI_OCCMAP*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V76*/ meltfptr[75])
        /*_._VALDATA___V76*/ meltfptr[75] = (melt_ptr_t )&meltcdat->dsym_15__DBGI_OCCMAP;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_15__DBGI_OCCMAP", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_15__DBGI_OCCMAP", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_15__DBGI_OCCMAP.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_15__DBGI_OCCMAP.obj_hash = 701804047;
    meltcdat->dsym_15__DBGI_OCCMAP.obj_len = 3;


    /*inistring dstr_16__DBGI_OCCMAP*/
    /*_._VALSTR___V77*/
    meltfptr[76] = (melt_ptr_t) &meltcdat->dstr_16__DBGI_OCCMAP;
    meltcdat->dstr_16__DBGI_OCCMAP.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_16__DBGI_OCCMAP.val, "DBGI_OCCMAP", sizeof (meltcdat->dstr_16__DBGI_OCCMAP.val)-1);
    meltcdat->dstr_16__DBGI_OCCMAP.val[11] = (char)0 ;
    meltcdat->dstr_16__DBGI_OCCMAP.slen = 11 ;

    /*^iniobj*/

    /*iniobj dobj_17__DBGI_OCCMAP*/
    /*_._VALDATA___V69*/
    meltfptr[68] = (melt_ptr_t )&meltcdat->dobj_17__DBGI_OCCMAP;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_17__DBGI_OCCMAP", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_17__DBGI_OCCMAP", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_17__DBGI_OCCMAP.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))));
    meltcdat->dobj_17__DBGI_OCCMAP.obj_num = 1;
    meltcdat->dobj_17__DBGI_OCCMAP.obj_hash = 323846956;
    meltcdat->dobj_17__DBGI_OCCMAP.obj_len = 4;


    /*inistring dstr_18__DBGI_OCCMAP*/
    /*_._VALSTR___V70*/
    meltfptr[69] = (melt_ptr_t) &meltcdat->dstr_18__DBGI_OCCMAP;
    meltcdat->dstr_18__DBGI_OCCMAP.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_18__DBGI_OCCMAP.val, "DBGI_OCCMAP", sizeof (meltcdat->dstr_18__DBGI_OCCMAP.val)-1);
    meltcdat->dstr_18__DBGI_OCCMAP.val[11] = (char)0 ;
    meltcdat->dstr_18__DBGI_OCCMAP.slen = 11 ;


    /*iniobj dsym_19__DBGI_MAXDEPTH*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V78*/ meltfptr[77])
        /*_._VALDATA___V78*/ meltfptr[77] = (melt_ptr_t )&meltcdat->dsym_19__DBGI_MAXDEPTH;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_19__DBGI_MAXDEPTH", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_19__DBGI_MAXDEPTH", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_19__DBGI_MAXDEPTH.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_19__DBGI_MAXDEPTH.obj_hash = 732580240;
    meltcdat->dsym_19__DBGI_MAXDEPTH.obj_len = 3;


    /*inistring dstr_20__DBGI_MAXDEPTH*/
    /*_._VALSTR___V79*/
    meltfptr[78] = (melt_ptr_t) &meltcdat->dstr_20__DBGI_MAXDEPTH;
    meltcdat->dstr_20__DBGI_MAXDEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_20__DBGI_MAXDEPTH.val, "DBGI_MAXDEPTH", sizeof (meltcdat->dstr_20__DBGI_MAXDEPTH.val)-1);
    meltcdat->dstr_20__DBGI_MAXDEPTH.val[13] = (char)0 ;
    meltcdat->dstr_20__DBGI_MAXDEPTH.slen = 13 ;

    /*^iniobj*/

    /*iniobj dobj_21__DBGI_MAXDEPTH*/
    /*_._VALDATA___V71*/
    meltfptr[70] = (melt_ptr_t )&meltcdat->dobj_21__DBGI_MAXDEPTH;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_21__DBGI_MAXDEPTH", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_21__DBGI_MAXDEPTH", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_21__DBGI_MAXDEPTH.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FIELD))));
    meltcdat->dobj_21__DBGI_MAXDEPTH.obj_num = 2;
    meltcdat->dobj_21__DBGI_MAXDEPTH.obj_hash = 283532193;
    meltcdat->dobj_21__DBGI_MAXDEPTH.obj_len = 4;


    /*inistring dstr_22__DBGI_MAXDEPTH*/
    /*_._VALSTR___V72*/
    meltfptr[71] = (melt_ptr_t) &meltcdat->dstr_22__DBGI_MAXDEPTH;
    meltcdat->dstr_22__DBGI_MAXDEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_22__DBGI_MAXDEPTH.val, "DBGI_MAXDEPTH", sizeof (meltcdat->dstr_22__DBGI_MAXDEPTH.val)-1);
    meltcdat->dstr_22__DBGI_MAXDEPTH.val[13] = (char)0 ;
    meltcdat->dstr_22__DBGI_MAXDEPTH.slen = 13 ;


    /*iniobj dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V80*/ meltfptr[79])
        /*_._VALDATA___V80*/ meltfptr[79] = (melt_ptr_t )&meltcdat->dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION.obj_hash = 436769164;
    meltcdat->dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION.obj_len = 3;


    /*inistring dstr_24__CLASS_DEBUG_OUTPUT_INFOR*/
    /*_._VALSTR___V81*/
    meltfptr[80] = (melt_ptr_t) &meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR;
    meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR.val, "CLASS_DEBUG_OUTPUT_INFORMATION", sizeof (meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR.val)-1);
    meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR.val[30] = (char)0 ;
    meltcdat->dstr_24__CLASS_DEBUG_OUTPUT_INFOR.slen = 30 ;

    MELT_LOCATION("warmelt-debug.melt:53:/ iniobj");

    /*iniobj dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION*/
    /*_._VALDATA___V82*/
    meltfptr[81] = (melt_ptr_t )&meltcdat->dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_CLASS))));
    meltcdat->dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION.obj_num = MELTOBMAG_OBJECT;
    meltcdat->dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION.obj_hash = 950326136;
    meltcdat->dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION.obj_len = 8;


    /*inistring dstr_26__CLASS_DEBUG_OUTPUT_INFOR*/
    /*_._VALSTR___V83*/
    meltfptr[82] = (melt_ptr_t) &meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR;
    meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR.val, "CLASS_DEBUG_OUTPUT_INFORMATION", sizeof (meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR.val)-1);
    meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR.val[30] = (char)0 ;
    meltcdat->dstr_26__CLASS_DEBUG_OUTPUT_INFOR.slen = 30 ;

    /*inimult dtup_27_syCLASS_DEBUG_OUTPUT_INFORMATION*/
    /*_._VALTUP___V84*/
    meltfptr[83] = (melt_ptr_t) &meltcdat->dtup_27_syCLASS_DEBUG_OUTPUT_INFORMATION;
    meltcdat->dtup_27_syCLASS_DEBUG_OUTPUT_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLASS_SEQUENCE))));
    meltcdat->dtup_27_syCLASS_DEBUG_OUTPUT_INFORMATION.nbval = 2;
    /*inimult dtup_28_syCLASS_DEBUG_OUTPUT_INFORMATION*/
    /*_._VALTUP___V85*/
    meltfptr[84] = (melt_ptr_t) &meltcdat->dtup_28_syCLASS_DEBUG_OUTPUT_INFORMATION;
    meltcdat->dtup_28_syCLASS_DEBUG_OUTPUT_INFORMATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_FIELD_SEQUENCE))));
    meltcdat->dtup_28_syCLASS_DEBUG_OUTPUT_INFORMATION.nbval = 3;

    /*iniobj dsym_29__DEBUG_DEPTH*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V86*/ meltfptr[85])
        /*_._VALDATA___V86*/ meltfptr[85] = (melt_ptr_t )&meltcdat->dsym_29__DEBUG_DEPTH;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_29__DEBUG_DEPTH", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_29__DEBUG_DEPTH", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_29__DEBUG_DEPTH.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_29__DEBUG_DEPTH.obj_hash = 532594980;
    meltcdat->dsym_29__DEBUG_DEPTH.obj_len = 3;


    /*inistring dstr_30__DEBUG_DEPTH*/
    /*_._VALSTR___V87*/
    meltfptr[86] = (melt_ptr_t) &meltcdat->dstr_30__DEBUG_DEPTH;
    meltcdat->dstr_30__DEBUG_DEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_30__DEBUG_DEPTH.val, "DEBUG_DEPTH", sizeof (meltcdat->dstr_30__DEBUG_DEPTH.val)-1);
    meltcdat->dstr_30__DEBUG_DEPTH.val[11] = (char)0 ;
    meltcdat->dstr_30__DEBUG_DEPTH.slen = 11 ;

    MELT_LOCATION("warmelt-debug.melt:64:/ iniobj");

    /*iniobj dobj_31__DEBUG_DEPTH*/
    /*_._VALDATA___V88*/
    meltfptr[87] = (melt_ptr_t )&meltcdat->dobj_31__DEBUG_DEPTH;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_31__DEBUG_DEPTH", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_31__DEBUG_DEPTH", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_31__DEBUG_DEPTH.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))));
    meltcdat->dobj_31__DEBUG_DEPTH.obj_hash = 203758355;
    meltcdat->dobj_31__DEBUG_DEPTH.obj_len = 5;

    /*inimult dtup_32_syDEBUG_DEPTH*/
    /*_._VALTUP___V92*/
    meltfptr[91] = (melt_ptr_t) &meltcdat->dtup_32_syDEBUG_DEPTH;
    meltcdat->dtup_32_syDEBUG_DEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_32_syDEBUG_DEPTH.nbval = 1;
    /*inimult dtup_33_syDEBUG_DEPTH*/
    /*_._VALTUP___V90*/
    meltfptr[89] = (melt_ptr_t) &meltcdat->dtup_33_syDEBUG_DEPTH;
    meltcdat->dtup_33_syDEBUG_DEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_33_syDEBUG_DEPTH.nbval = 0;

    /*inistring dstr_34__long_melt_debug_depth*/
    /*_._VALSTR___V91*/
    meltfptr[90] = (melt_ptr_t) &meltcdat->dstr_34__long_melt_debug_depth;
    meltcdat->dstr_34__long_melt_debug_depth.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_34__long_melt_debug_depth.val, "(long) (melt_debug_depth ())", sizeof (meltcdat->dstr_34__long_melt_debug_depth.val)-1);
    meltcdat->dstr_34__long_melt_debug_depth.val[28] = (char)0 ;
    meltcdat->dstr_34__long_melt_debug_depth.slen = 28 ;


    /*inistring dstr_35__DEBUG_DEPTH*/
    /*_._VALSTR___V89*/
    meltfptr[88] = (melt_ptr_t) &meltcdat->dstr_35__DEBUG_DEPTH;
    meltcdat->dstr_35__DEBUG_DEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_35__DEBUG_DEPTH.val, "DEBUG_DEPTH", sizeof (meltcdat->dstr_35__DEBUG_DEPTH.val)-1);
    meltcdat->dstr_35__DEBUG_DEPTH.val[11] = (char)0 ;
    meltcdat->dstr_35__DEBUG_DEPTH.slen = 11 ;


    /*iniobj dsym_36__MELT_REALLY_NEED_DEBUG*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V93*/ meltfptr[92])
        /*_._VALDATA___V93*/ meltfptr[92] = (melt_ptr_t )&meltcdat->dsym_36__MELT_REALLY_NEED_DEBUG;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_36__MELT_REALLY_NEED_DEBUG", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_36__MELT_REALLY_NEED_DEBUG", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_36__MELT_REALLY_NEED_DEBUG.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_36__MELT_REALLY_NEED_DEBUG.obj_hash = 542840019;
    meltcdat->dsym_36__MELT_REALLY_NEED_DEBUG.obj_len = 3;


    /*inistring dstr_37__MELT_REALLY_NEED_DEBUG*/
    /*_._VALSTR___V94*/
    meltfptr[93] = (melt_ptr_t) &meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG;
    meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG.val, "MELT_REALLY_NEED_DEBUG", sizeof (meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG.val)-1);
    meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG.val[22] = (char)0 ;
    meltcdat->dstr_37__MELT_REALLY_NEED_DEBUG.slen = 22 ;

    MELT_LOCATION("warmelt-debug.melt:72:/ iniobj");

    /*iniobj dobj_38__MELT_REALLY_NEED_DEBUG*/
    /*_._VALDATA___V95*/
    meltfptr[94] = (melt_ptr_t )&meltcdat->dobj_38__MELT_REALLY_NEED_DEBUG;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_38__MELT_REALLY_NEED_DEBUG", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_38__MELT_REALLY_NEED_DEBUG", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_38__MELT_REALLY_NEED_DEBUG.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))));
    meltcdat->dobj_38__MELT_REALLY_NEED_DEBUG.obj_hash = 395337743;
    meltcdat->dobj_38__MELT_REALLY_NEED_DEBUG.obj_len = 5;

    /*inimult dtup_39_syMELT_REALLY_NEED_DEBUG*/
    /*_._VALTUP___V103*/
    meltfptr[102] = (melt_ptr_t) &meltcdat->dtup_39_syMELT_REALLY_NEED_DEBUG;
    meltcdat->dtup_39_syMELT_REALLY_NEED_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_39_syMELT_REALLY_NEED_DEBUG.nbval = 3;
    /*inimult dtup_40_syMELT_REALLY_NEED_DEBUG*/
    /*_._VALTUP___V100*/
    meltfptr[99] = (melt_ptr_t) &meltcdat->dtup_40_syMELT_REALLY_NEED_DEBUG;
    meltcdat->dtup_40_syMELT_REALLY_NEED_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_40_syMELT_REALLY_NEED_DEBUG.nbval = 1;

    /*iniobj dsym_41__DEPTH*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V98*/ meltfptr[97])
        /*_._VALDATA___V98*/ meltfptr[97] = (melt_ptr_t )&meltcdat->dsym_41__DEPTH;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_41__DEPTH", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_41__DEPTH", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_41__DEPTH.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_41__DEPTH.obj_hash = 52029444;
    meltcdat->dsym_41__DEPTH.obj_len = 3;


    /*inistring dstr_42__DEPTH*/
    /*_._VALSTR___V99*/
    meltfptr[98] = (melt_ptr_t) &meltcdat->dstr_42__DEPTH;
    meltcdat->dstr_42__DEPTH.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_42__DEPTH.val, "DEPTH", sizeof (meltcdat->dstr_42__DEPTH.val)-1);
    meltcdat->dstr_42__DEPTH.val[5] = (char)0 ;
    meltcdat->dstr_42__DEPTH.slen = 5 ;

    /*^iniobj*/

    /*iniobj dobj_43*/
    /*_._VALDATA___V97*/
    meltfptr[96] = (melt_ptr_t )&meltcdat->dobj_43;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_43", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_43", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_43.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_43.obj_num = 0;
    meltcdat->dobj_43.obj_hash = 62899840;
    meltcdat->dobj_43.obj_len = 2;


    /*inistring dstr_44__MELT_REALLY_NEED_DEBUG*/
    /*_._VALSTR___V101*/
    meltfptr[100] = (melt_ptr_t) &meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG;
    meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG.val, "/*MELT_REALLY_NEED_DEBUG*/ (melt_need_debug ((int) ", sizeof (meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG.val)-1);
    meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG.val[51] = (char)0 ;
    meltcdat->dstr_44__MELT_REALLY_NEED_DEBUG.slen = 51 ;


    /*inistring dstr_45__*/
    /*_._VALSTR___V102*/
    meltfptr[101] = (melt_ptr_t) &meltcdat->dstr_45__;
    meltcdat->dstr_45__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_45__.val, "))", sizeof (meltcdat->dstr_45__.val)-1);
    meltcdat->dstr_45__.val[2] = (char)0 ;
    meltcdat->dstr_45__.slen = 2 ;


    /*inistring dstr_46__MELT_REALLY_NEED_DEBUG*/
    /*_._VALSTR___V96*/
    meltfptr[95] = (melt_ptr_t) &meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG;
    meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG.val, "MELT_REALLY_NEED_DEBUG", sizeof (meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG.val)-1);
    meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG.val[22] = (char)0 ;
    meltcdat->dstr_46__MELT_REALLY_NEED_DEBUG.slen = 22 ;


    /*iniobj dsym_47__MELT_HAS_FLAG_DEBUG_SET*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V104*/ meltfptr[103])
        /*_._VALDATA___V104*/ meltfptr[103] = (melt_ptr_t )&meltcdat->dsym_47__MELT_HAS_FLAG_DEBUG_SET;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_47__MELT_HAS_FLAG_DEBUG_SET", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_47__MELT_HAS_FLAG_DEBUG_SET", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_47__MELT_HAS_FLAG_DEBUG_SET.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_47__MELT_HAS_FLAG_DEBUG_SET.obj_hash = 125931725;
    meltcdat->dsym_47__MELT_HAS_FLAG_DEBUG_SET.obj_len = 3;


    /*inistring dstr_48__MELT_HAS_FLAG_DEBUG_SET*/
    /*_._VALSTR___V105*/
    meltfptr[104] = (melt_ptr_t) &meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET;
    meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET.val, "MELT_HAS_FLAG_DEBUG_SET", sizeof (meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET.val)-1);
    meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET.val[23] = (char)0 ;
    meltcdat->dstr_48__MELT_HAS_FLAG_DEBUG_SET.slen = 23 ;

    MELT_LOCATION("warmelt-debug.melt:77:/ iniobj");

    /*iniobj dobj_49__MELT_HAS_FLAG_DEBUG_SET*/
    /*_._VALDATA___V106*/
    meltfptr[105] = (melt_ptr_t )&meltcdat->dobj_49__MELT_HAS_FLAG_DEBUG_SET;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_49__MELT_HAS_FLAG_DEBUG_SET", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_49__MELT_HAS_FLAG_DEBUG_SET", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_49__MELT_HAS_FLAG_DEBUG_SET.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))));
    meltcdat->dobj_49__MELT_HAS_FLAG_DEBUG_SET.obj_hash = 186348021;
    meltcdat->dobj_49__MELT_HAS_FLAG_DEBUG_SET.obj_len = 5;

    /*inimult dtup_50_syMELT_HAS_FLAG_DEBUG_SET*/
    /*_._VALTUP___V110*/
    meltfptr[109] = (melt_ptr_t) &meltcdat->dtup_50_syMELT_HAS_FLAG_DEBUG_SET;
    meltcdat->dtup_50_syMELT_HAS_FLAG_DEBUG_SET.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_50_syMELT_HAS_FLAG_DEBUG_SET.nbval = 1;
    /*inimult dtup_51_syMELT_HAS_FLAG_DEBUG_SET*/
    /*_._VALTUP___V108*/
    meltfptr[107] = (melt_ptr_t) &meltcdat->dtup_51_syMELT_HAS_FLAG_DEBUG_SET;
    meltcdat->dtup_51_syMELT_HAS_FLAG_DEBUG_SET.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_51_syMELT_HAS_FLAG_DEBUG_SET.nbval = 0;

    /*inistring dstr_52__MELT_HAS_FLAG_DEBUG_SE*/
    /*_._VALSTR___V109*/
    meltfptr[108] = (melt_ptr_t) &meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE;
    meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE.val, "/*MELT_HAS_FLAG_DEBUG_SET*/ melt_flag_debug", sizeof (meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE.val)-1);
    meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE.val[43] = (char)0 ;
    meltcdat->dstr_52__MELT_HAS_FLAG_DEBUG_SE.slen = 43 ;


    /*inistring dstr_53__MELT_HAS_FLAG_DEBUG_SET*/
    /*_._VALSTR___V107*/
    meltfptr[106] = (melt_ptr_t) &meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET;
    meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET.val, "MELT_HAS_FLAG_DEBUG_SET", sizeof (meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET.val)-1);
    meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET.val[23] = (char)0 ;
    meltcdat->dstr_53__MELT_HAS_FLAG_DEBUG_SET.slen = 23 ;


    /*iniobj dsym_54__MELT_REALLY_NEED_DBGLIM*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V111*/ meltfptr[110])
        /*_._VALDATA___V111*/ meltfptr[110] = (melt_ptr_t )&meltcdat->dsym_54__MELT_REALLY_NEED_DBGLIM;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_54__MELT_REALLY_NEED_DBGLIM", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_54__MELT_REALLY_NEED_DBGLIM", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_54__MELT_REALLY_NEED_DBGLIM.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_54__MELT_REALLY_NEED_DBGLIM.obj_hash = 1026196939;
    meltcdat->dsym_54__MELT_REALLY_NEED_DBGLIM.obj_len = 3;


    /*inistring dstr_55__MELT_REALLY_NEED_DBGLIM*/
    /*_._VALSTR___V112*/
    meltfptr[111] = (melt_ptr_t) &meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM;
    meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM.val, "MELT_REALLY_NEED_DBGLIM", sizeof (meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM.val)-1);
    meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM.val[23] = (char)0 ;
    meltcdat->dstr_55__MELT_REALLY_NEED_DBGLIM.slen = 23 ;

    MELT_LOCATION("warmelt-debug.melt:80:/ iniobj");

    /*iniobj dobj_56__MELT_REALLY_NEED_DBGLIM*/
    /*_._VALDATA___V113*/
    meltfptr[112] = (melt_ptr_t )&meltcdat->dobj_56__MELT_REALLY_NEED_DBGLIM;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_56__MELT_REALLY_NEED_DBGLIM", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_56__MELT_REALLY_NEED_DBGLIM", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_56__MELT_REALLY_NEED_DBGLIM.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_PRIMITIVE))));
    meltcdat->dobj_56__MELT_REALLY_NEED_DBGLIM.obj_hash = 618864001;
    meltcdat->dobj_56__MELT_REALLY_NEED_DBGLIM.obj_len = 5;

    /*inimult dtup_57_syMELT_REALLY_NEED_DBGLIM*/
    /*_._VALTUP___V123*/
    meltfptr[122] = (melt_ptr_t) &meltcdat->dtup_57_syMELT_REALLY_NEED_DBGLIM;
    meltcdat->dtup_57_syMELT_REALLY_NEED_DBGLIM.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_57_syMELT_REALLY_NEED_DBGLIM.nbval = 5;
    /*inimult dtup_58_syMELT_REALLY_NEED_DBGLIM*/
    /*_._VALTUP___V119*/
    meltfptr[118] = (melt_ptr_t) &meltcdat->dtup_58_syMELT_REALLY_NEED_DBGLIM;
    meltcdat->dtup_58_syMELT_REALLY_NEED_DBGLIM.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_58_syMELT_REALLY_NEED_DBGLIM.nbval = 2;
    /*^iniobj*/

    /*iniobj dobj_59*/
    /*_._VALDATA___V115*/
    meltfptr[114] = (melt_ptr_t )&meltcdat->dobj_59;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_59", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_59", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_59.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_59.obj_num = 0;
    meltcdat->dobj_59.obj_hash = 135841293;
    meltcdat->dobj_59.obj_len = 2;


    /*iniobj dsym_60__LIMIT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V117*/ meltfptr[116])
        /*_._VALDATA___V117*/ meltfptr[116] = (melt_ptr_t )&meltcdat->dsym_60__LIMIT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_60__LIMIT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_60__LIMIT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_60__LIMIT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_60__LIMIT.obj_hash = 133458422;
    meltcdat->dsym_60__LIMIT.obj_len = 3;


    /*inistring dstr_61__LIMIT*/
    /*_._VALSTR___V118*/
    meltfptr[117] = (melt_ptr_t) &meltcdat->dstr_61__LIMIT;
    meltcdat->dstr_61__LIMIT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_61__LIMIT.val, "LIMIT", sizeof (meltcdat->dstr_61__LIMIT.val)-1);
    meltcdat->dstr_61__LIMIT.val[5] = (char)0 ;
    meltcdat->dstr_61__LIMIT.slen = 5 ;

    /*^iniobj*/

    /*iniobj dobj_62*/
    /*_._VALDATA___V116*/
    meltfptr[115] = (melt_ptr_t )&meltcdat->dobj_62;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_62", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_62", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_62.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_62.obj_num = 1;
    meltcdat->dobj_62.obj_hash = 892586131;
    meltcdat->dobj_62.obj_len = 2;


    /*inistring dstr_63__MELT_REALLY_NEED_DBG*/
    /*_._VALSTR___V120*/
    meltfptr[119] = (melt_ptr_t) &meltcdat->dstr_63__MELT_REALLY_NEED_DBG;
    meltcdat->dstr_63__MELT_REALLY_NEED_DBG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_63__MELT_REALLY_NEED_DBG.val, "( /*MELT_REALLY_NEED_DBGLIM*/ melt_need_debug_limit ((int) ", sizeof (meltcdat->dstr_63__MELT_REALLY_NEED_DBG.val)-1);
    meltcdat->dstr_63__MELT_REALLY_NEED_DBG.val[59] = (char)0 ;
    meltcdat->dstr_63__MELT_REALLY_NEED_DBG.slen = 59 ;


    /*inistring dstr_64__int_*/
    /*_._VALSTR___V121*/
    meltfptr[120] = (melt_ptr_t) &meltcdat->dstr_64__int_;
    meltcdat->dstr_64__int_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_64__int_.val, ", (int) ", sizeof (meltcdat->dstr_64__int_.val)-1);
    meltcdat->dstr_64__int_.val[8] = (char)0 ;
    meltcdat->dstr_64__int_.slen = 8 ;


    /*inistring dstr_65__*/
    /*_._VALSTR___V122*/
    meltfptr[121] = (melt_ptr_t) &meltcdat->dstr_65__;
    meltcdat->dstr_65__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_VERBATIM_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_65__.val, "))", sizeof (meltcdat->dstr_65__.val)-1);
    meltcdat->dstr_65__.val[2] = (char)0 ;
    meltcdat->dstr_65__.slen = 2 ;


    /*inistring dstr_66__MELT_REALLY_NEED_DBGLIM*/
    /*_._VALSTR___V114*/
    meltfptr[113] = (melt_ptr_t) &meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM;
    meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM.val, "MELT_REALLY_NEED_DBGLIM", sizeof (meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM.val)-1);
    meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM.val[23] = (char)0 ;
    meltcdat->dstr_66__MELT_REALLY_NEED_DBGLIM.slen = 23 ;


    /*iniobj dsym_67__DBG_OUTPUT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V124*/ meltfptr[123])
        /*_._VALDATA___V124*/ meltfptr[123] = (melt_ptr_t )&meltcdat->dsym_67__DBG_OUTPUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_67__DBG_OUTPUT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_67__DBG_OUTPUT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_67__DBG_OUTPUT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_67__DBG_OUTPUT.obj_hash = 225394304;
    meltcdat->dsym_67__DBG_OUTPUT.obj_len = 3;


    /*inistring dstr_68__DBG_OUTPUT*/
    /*_._VALSTR___V125*/
    meltfptr[124] = (melt_ptr_t) &meltcdat->dstr_68__DBG_OUTPUT;
    meltcdat->dstr_68__DBG_OUTPUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_68__DBG_OUTPUT.val, "DBG_OUTPUT", sizeof (meltcdat->dstr_68__DBG_OUTPUT.val)-1);
    meltcdat->dstr_68__DBG_OUTPUT.val[10] = (char)0 ;
    meltcdat->dstr_68__DBG_OUTPUT.slen = 10 ;


    /*iniobj dsym_69__CLASS_SELECTOR*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V126*/ meltfptr[125])
        /*_._VALDATA___V126*/ meltfptr[125] = (melt_ptr_t )&meltcdat->dsym_69__CLASS_SELECTOR;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_69__CLASS_SELECTOR", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_69__CLASS_SELECTOR", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_69__CLASS_SELECTOR.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_69__CLASS_SELECTOR.obj_hash = 100646971;
    meltcdat->dsym_69__CLASS_SELECTOR.obj_len = 3;


    /*inistring dstr_70__CLASS_SELECTOR*/
    /*_._VALSTR___V127*/
    meltfptr[126] = (melt_ptr_t) &meltcdat->dstr_70__CLASS_SELECTOR;
    meltcdat->dstr_70__CLASS_SELECTOR.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_70__CLASS_SELECTOR.val, "CLASS_SELECTOR", sizeof (meltcdat->dstr_70__CLASS_SELECTOR.val)-1);
    meltcdat->dstr_70__CLASS_SELECTOR.val[14] = (char)0 ;
    meltcdat->dstr_70__CLASS_SELECTOR.slen = 14 ;


    /*iniobj dsym_71__RECV*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V128*/ meltfptr[127])
        /*_._VALDATA___V128*/ meltfptr[127] = (melt_ptr_t )&meltcdat->dsym_71__RECV;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_71__RECV", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_71__RECV", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_71__RECV.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_71__RECV.obj_hash = 10842790;
    meltcdat->dsym_71__RECV.obj_len = 3;


    /*inistring dstr_72__RECV*/
    /*_._VALSTR___V129*/
    meltfptr[128] = (melt_ptr_t) &meltcdat->dstr_72__RECV;
    meltcdat->dstr_72__RECV.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_72__RECV.val, "RECV", sizeof (meltcdat->dstr_72__RECV.val)-1);
    meltcdat->dstr_72__RECV.val[4] = (char)0 ;
    meltcdat->dstr_72__RECV.slen = 4 ;

    MELT_LOCATION("warmelt-debug.melt:90:/ iniobj");

    /*iniobj dobj_73*/
    /*_._VALDATA___V130*/
    meltfptr[129] = (melt_ptr_t )&meltcdat->dobj_73;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_73", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_73", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_73.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_73.obj_num = 0;
    meltcdat->dobj_73.obj_hash = 450011831;
    meltcdat->dobj_73.obj_len = 2;


    /*iniobj dsym_74__DBGINFO*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V131*/ meltfptr[130])
        /*_._VALDATA___V131*/ meltfptr[130] = (melt_ptr_t )&meltcdat->dsym_74__DBGINFO;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_74__DBGINFO", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_74__DBGINFO", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_74__DBGINFO.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_74__DBGINFO.obj_hash = 587771081;
    meltcdat->dsym_74__DBGINFO.obj_len = 3;


    /*inistring dstr_75__DBGINFO*/
    /*_._VALSTR___V132*/
    meltfptr[131] = (melt_ptr_t) &meltcdat->dstr_75__DBGINFO;
    meltcdat->dstr_75__DBGINFO.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_75__DBGINFO.val, "DBGINFO", sizeof (meltcdat->dstr_75__DBGINFO.val)-1);
    meltcdat->dstr_75__DBGINFO.val[7] = (char)0 ;
    meltcdat->dstr_75__DBGINFO.slen = 7 ;

    /*^iniobj*/

    /*iniobj dobj_76*/
    /*_._VALDATA___V133*/
    meltfptr[132] = (melt_ptr_t )&meltcdat->dobj_76;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_76", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_76", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_76.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_76.obj_num = 1;
    meltcdat->dobj_76.obj_hash = 245119801;
    meltcdat->dobj_76.obj_len = 2;

    /*^iniobj*/

    /*iniobj dobj_77*/
    /*_._VALDATA___V134*/
    meltfptr[133] = (melt_ptr_t )&meltcdat->dobj_77;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_77", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_77", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_77.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_77.obj_num = 2;
    meltcdat->dobj_77.obj_hash = 698921438;
    meltcdat->dobj_77.obj_len = 2;

    /*inimult dtup_78_syDBG_OUTPUT*/
    /*_._VALTUP___V135*/
    meltfptr[134] = (melt_ptr_t) &meltcdat->dtup_78_syDBG_OUTPUT;
    meltcdat->dtup_78_syDBG_OUTPUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_78_syDBG_OUTPUT.nbval = 3;
    /*^iniobj*/

    /*iniobj dobj_79__DBG_OUTPUT*/
    /*_._VALDATA___V136*/
    meltfptr[135] = (melt_ptr_t )&meltcdat->dobj_79__DBG_OUTPUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_79__DBG_OUTPUT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_SELECTOR__V9*/ meltfptr[8])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_79__DBG_OUTPUT", ((meltobject_ptr_t) (/*_.CLASS_SELECTOR__V9*/ meltfptr[8]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_79__DBG_OUTPUT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_SELECTOR__V9*/ meltfptr[8]);
    meltcdat->dobj_79__DBG_OUTPUT.obj_hash = 555487535;
    meltcdat->dobj_79__DBG_OUTPUT.obj_len = 4;


    /*inistring dstr_80__DBG_OUTPUT*/
    /*_._VALSTR___V137*/
    meltfptr[136] = (melt_ptr_t) &meltcdat->dstr_80__DBG_OUTPUT;
    meltcdat->dstr_80__DBG_OUTPUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_80__DBG_OUTPUT.val, "DBG_OUTPUT", sizeof (meltcdat->dstr_80__DBG_OUTPUT.val)-1);
    meltcdat->dstr_80__DBG_OUTPUT.val[10] = (char)0 ;
    meltcdat->dstr_80__DBG_OUTPUT.slen = 10 ;


    /*iniobj dsym_81__DBG_OUTPUTAGAIN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V138*/ meltfptr[137])
        /*_._VALDATA___V138*/ meltfptr[137] = (melt_ptr_t )&meltcdat->dsym_81__DBG_OUTPUTAGAIN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_81__DBG_OUTPUTAGAIN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_81__DBG_OUTPUTAGAIN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_81__DBG_OUTPUTAGAIN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_81__DBG_OUTPUTAGAIN.obj_hash = 28744821;
    meltcdat->dsym_81__DBG_OUTPUTAGAIN.obj_len = 3;


    /*inistring dstr_82__DBG_OUTPUTAGAIN*/
    /*_._VALSTR___V139*/
    meltfptr[138] = (melt_ptr_t) &meltcdat->dstr_82__DBG_OUTPUTAGAIN;
    meltcdat->dstr_82__DBG_OUTPUTAGAIN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_82__DBG_OUTPUTAGAIN.val, "DBG_OUTPUTAGAIN", sizeof (meltcdat->dstr_82__DBG_OUTPUTAGAIN.val)-1);
    meltcdat->dstr_82__DBG_OUTPUTAGAIN.val[15] = (char)0 ;
    meltcdat->dstr_82__DBG_OUTPUTAGAIN.slen = 15 ;

    MELT_LOCATION("warmelt-debug.melt:99:/ iniobj");

    /*iniobj dobj_83*/
    /*_._VALDATA___V140*/
    meltfptr[139] = (melt_ptr_t )&meltcdat->dobj_83;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_83", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_83", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_83.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_83.obj_num = 0;
    meltcdat->dobj_83.obj_hash = 910933289;
    meltcdat->dobj_83.obj_len = 2;

    /*^iniobj*/

    /*iniobj dobj_84*/
    /*_._VALDATA___V141*/
    meltfptr[140] = (melt_ptr_t )&meltcdat->dobj_84;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_84", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_84", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_84.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_84.obj_num = 1;
    meltcdat->dobj_84.obj_hash = 566197093;
    meltcdat->dobj_84.obj_len = 2;

    /*^iniobj*/

    /*iniobj dobj_85*/
    /*_._VALDATA___V142*/
    meltfptr[141] = (melt_ptr_t )&meltcdat->dobj_85;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_85", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_85", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_85.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_FORMAL_BINDING))));
    meltcdat->dobj_85.obj_num = 2;
    meltcdat->dobj_85.obj_hash = 364945117;
    meltcdat->dobj_85.obj_len = 2;

    /*inimult dtup_86_syDBG_OUTPUTAGAIN*/
    /*_._VALTUP___V143*/
    meltfptr[142] = (melt_ptr_t) &meltcdat->dtup_86_syDBG_OUTPUTAGAIN;
    meltcdat->dtup_86_syDBG_OUTPUTAGAIN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_MULTIPLE))));
    meltcdat->dtup_86_syDBG_OUTPUTAGAIN.nbval = 3;
    /*^iniobj*/

    /*iniobj dobj_87__DBG_OUTPUTAGAIN*/
    /*_._VALDATA___V144*/
    meltfptr[143] = (melt_ptr_t )&meltcdat->dobj_87__DBG_OUTPUTAGAIN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_87__DBG_OUTPUTAGAIN", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_SELECTOR__V9*/ meltfptr[8])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_87__DBG_OUTPUTAGAIN", ((meltobject_ptr_t) (/*_.CLASS_SELECTOR__V9*/ meltfptr[8]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_87__DBG_OUTPUTAGAIN.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_SELECTOR__V9*/ meltfptr[8]);
    meltcdat->dobj_87__DBG_OUTPUTAGAIN.obj_hash = 618155565;
    meltcdat->dobj_87__DBG_OUTPUTAGAIN.obj_len = 4;


    /*inistring dstr_88__DBG_OUTPUTAGAIN*/
    /*_._VALSTR___V145*/
    meltfptr[144] = (melt_ptr_t) &meltcdat->dstr_88__DBG_OUTPUTAGAIN;
    meltcdat->dstr_88__DBG_OUTPUTAGAIN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_88__DBG_OUTPUTAGAIN.val, "DBG_OUTPUTAGAIN", sizeof (meltcdat->dstr_88__DBG_OUTPUTAGAIN.val)-1);
    meltcdat->dstr_88__DBG_OUTPUTAGAIN.val[15] = (char)0 ;
    meltcdat->dstr_88__DBG_OUTPUTAGAIN.slen = 15 ;


    /*iniobj dsym_89__TREE_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V146*/ meltfptr[145])
        /*_._VALDATA___V146*/ meltfptr[145] = (melt_ptr_t )&meltcdat->dsym_89__TREE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_89__TREE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_89__TREE_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_89__TREE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_89__TREE_DEBUG_FUNCONT.obj_hash = 374867797;
    meltcdat->dsym_89__TREE_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_90__TREE_DEBUG_FUNCONT*/
    /*_._VALSTR___V147*/
    meltfptr[146] = (melt_ptr_t) &meltcdat->dstr_90__TREE_DEBUG_FUNCONT;
    meltcdat->dstr_90__TREE_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_90__TREE_DEBUG_FUNCONT.val, "TREE_DEBUG_FUNCONT", sizeof (meltcdat->dstr_90__TREE_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_90__TREE_DEBUG_FUNCONT.val[18] = (char)0 ;
    meltcdat->dstr_90__TREE_DEBUG_FUNCONT.slen = 18 ;


    /*iniobj dsym_91__CLASS_REFERENCE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V148*/ meltfptr[147])
        /*_._VALDATA___V148*/ meltfptr[147] = (melt_ptr_t )&meltcdat->dsym_91__CLASS_REFERENCE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_91__CLASS_REFERENCE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_91__CLASS_REFERENCE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_91__CLASS_REFERENCE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_91__CLASS_REFERENCE.obj_hash = 896623907;
    meltcdat->dsym_91__CLASS_REFERENCE.obj_len = 3;


    /*inistring dstr_92__CLASS_REFERENCE*/
    /*_._VALSTR___V149*/
    meltfptr[148] = (melt_ptr_t) &meltcdat->dstr_92__CLASS_REFERENCE;
    meltcdat->dstr_92__CLASS_REFERENCE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_92__CLASS_REFERENCE.val, "CLASS_REFERENCE", sizeof (meltcdat->dstr_92__CLASS_REFERENCE.val)-1);
    meltcdat->dstr_92__CLASS_REFERENCE.val[15] = (char)0 ;
    meltcdat->dstr_92__CLASS_REFERENCE.slen = 15 ;

    MELT_LOCATION("warmelt-debug.melt:110:/ iniobj");

    /*iniobj dobj_93__TREE_DEBUG_FUNCONT*/
    /*_._VALDATA___V150*/
    meltfptr[149] = (melt_ptr_t )&meltcdat->dobj_93__TREE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_93__TREE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_93__TREE_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_93__TREE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_93__TREE_DEBUG_FUNCONT.obj_hash = 403168008;
    meltcdat->dobj_93__TREE_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_94__REGISTER_TREE_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V151*/
    meltfptr[150] = (melt_ptr_t) &meltcdat->drout_94__REGISTER_TREE_DEBUG_FUN;
    meltcdat->drout_94__REGISTER_TREE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_94__REGISTER_TREE_DEBUG_FUN.routdescr, "REGISTER_TREE_DEBUG_FUN @warmelt-debug.melt:111",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_94__REGISTER_TREE_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_94__REGISTER_TREE_DEBUG_FUN, meltrout_1_WARMELTmiDEBUG_REGISTER_TREE_DEBUG_FUN);

    /*iniclos dclo_95__REGISTER_TREE_DEBUG_FUN*/
    /*_._VALCLO___V152*/
    meltfptr[151] = (melt_ptr_t) &meltcdat->dclo_95__REGISTER_TREE_DEBUG_FUN;
    meltcdat->dclo_95__REGISTER_TREE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_95__REGISTER_TREE_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_96__GIMPLE_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V153*/ meltfptr[152])
        /*_._VALDATA___V153*/ meltfptr[152] = (melt_ptr_t )&meltcdat->dsym_96__GIMPLE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_96__GIMPLE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_96__GIMPLE_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_96__GIMPLE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_96__GIMPLE_DEBUG_FUNCONT.obj_hash = 51178959;
    meltcdat->dsym_96__GIMPLE_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_97__GIMPLE_DEBUG_FUNCONT*/
    /*_._VALSTR___V154*/
    meltfptr[153] = (melt_ptr_t) &meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT;
    meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT.val, "GIMPLE_DEBUG_FUNCONT", sizeof (meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT.val[20] = (char)0 ;
    meltcdat->dstr_97__GIMPLE_DEBUG_FUNCONT.slen = 20 ;

    MELT_LOCATION("warmelt-debug.melt:123:/ iniobj");

    /*iniobj dobj_98__GIMPLE_DEBUG_FUNCONT*/
    /*_._VALDATA___V155*/
    meltfptr[154] = (melt_ptr_t )&meltcdat->dobj_98__GIMPLE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_98__GIMPLE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_98__GIMPLE_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_98__GIMPLE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_98__GIMPLE_DEBUG_FUNCONT.obj_hash = 1026421656;
    meltcdat->dobj_98__GIMPLE_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_99__REGISTER_GIMPLE_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V156*/
    meltfptr[155] = (melt_ptr_t) &meltcdat->drout_99__REGISTER_GIMPLE_DEBUG_FUN;
    meltcdat->drout_99__REGISTER_GIMPLE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_99__REGISTER_GIMPLE_DEBUG_FUN.routdescr, "REGISTER_GIMPLE_DEBUG_FUN @warmelt-debug.melt:124",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_99__REGISTER_GIMPLE_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_99__REGISTER_GIMPLE_DEBUG_FUN, meltrout_2_WARMELTmiDEBUG_REGISTER_GIMPLE_DEBUG_FUN);

    /*iniclos dclo_100__REGISTER_GIMPLE_DEBUG_FUN*/
    /*_._VALCLO___V157*/
    meltfptr[156] = (melt_ptr_t) &meltcdat->dclo_100__REGISTER_GIMPLE_DEBUG_FUN;
    meltcdat->dclo_100__REGISTER_GIMPLE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_100__REGISTER_GIMPLE_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_101__GIMPLESEQ_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V158*/ meltfptr[157])
        /*_._VALDATA___V158*/ meltfptr[157] = (melt_ptr_t )&meltcdat->dsym_101__GIMPLESEQ_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_101__GIMPLESEQ_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_101__GIMPLESEQ_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_101__GIMPLESEQ_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_101__GIMPLESEQ_DEBUG_FUNCONT.obj_hash = 813085508;
    meltcdat->dsym_101__GIMPLESEQ_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_102__GIMPLESEQ_DEBUG_FUNCONT*/
    /*_._VALSTR___V159*/
    meltfptr[158] = (melt_ptr_t) &meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT;
    meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT.val, "GIMPLESEQ_DEBUG_FUNCONT", sizeof (meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT.val[23] = (char)0 ;
    meltcdat->dstr_102__GIMPLESEQ_DEBUG_FUNCONT.slen = 23 ;

    MELT_LOCATION("warmelt-debug.melt:136:/ iniobj");

    /*iniobj dobj_103__GIMPLESEQ_DEBUG_FUNCONT*/
    /*_._VALDATA___V160*/
    meltfptr[159] = (melt_ptr_t )&meltcdat->dobj_103__GIMPLESEQ_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_103__GIMPLESEQ_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_103__GIMPLESEQ_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_103__GIMPLESEQ_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_103__GIMPLESEQ_DEBUG_FUNCONT.obj_hash = 84224615;
    meltcdat->dobj_103__GIMPLESEQ_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V161*/
    meltfptr[160] = (melt_ptr_t) &meltcdat->drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN;
    meltcdat->drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN.routdescr, "REGISTER_GIMPLESEQ_DEBUG_FUN @warmelt-debug.melt:137",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN, meltrout_3_WARMELTmiDEBUG_REGISTER_GIMPLESEQ_DEBUG_FUN);

    /*iniclos dclo_105__REGISTER_GIMPLESEQ_DEBUG_FUN*/
    /*_._VALCLO___V162*/
    meltfptr[161] = (melt_ptr_t) &meltcdat->dclo_105__REGISTER_GIMPLESEQ_DEBUG_FUN;
    meltcdat->dclo_105__REGISTER_GIMPLESEQ_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_105__REGISTER_GIMPLESEQ_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_106__EDGE_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V163*/ meltfptr[162])
        /*_._VALDATA___V163*/ meltfptr[162] = (melt_ptr_t )&meltcdat->dsym_106__EDGE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_106__EDGE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_106__EDGE_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_106__EDGE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_106__EDGE_DEBUG_FUNCONT.obj_hash = 803948317;
    meltcdat->dsym_106__EDGE_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_107__EDGE_DEBUG_FUNCONT*/
    /*_._VALSTR___V164*/
    meltfptr[163] = (melt_ptr_t) &meltcdat->dstr_107__EDGE_DEBUG_FUNCONT;
    meltcdat->dstr_107__EDGE_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_107__EDGE_DEBUG_FUNCONT.val, "EDGE_DEBUG_FUNCONT", sizeof (meltcdat->dstr_107__EDGE_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_107__EDGE_DEBUG_FUNCONT.val[18] = (char)0 ;
    meltcdat->dstr_107__EDGE_DEBUG_FUNCONT.slen = 18 ;

    MELT_LOCATION("warmelt-debug.melt:149:/ iniobj");

    /*iniobj dobj_108__EDGE_DEBUG_FUNCONT*/
    /*_._VALDATA___V165*/
    meltfptr[164] = (melt_ptr_t )&meltcdat->dobj_108__EDGE_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_108__EDGE_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_108__EDGE_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_108__EDGE_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_108__EDGE_DEBUG_FUNCONT.obj_hash = 803145880;
    meltcdat->dobj_108__EDGE_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_109__REGISTER_EDGE_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V166*/
    meltfptr[165] = (melt_ptr_t) &meltcdat->drout_109__REGISTER_EDGE_DEBUG_FUN;
    meltcdat->drout_109__REGISTER_EDGE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_109__REGISTER_EDGE_DEBUG_FUN.routdescr, "REGISTER_EDGE_DEBUG_FUN @warmelt-debug.melt:150",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_109__REGISTER_EDGE_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_109__REGISTER_EDGE_DEBUG_FUN, meltrout_4_WARMELTmiDEBUG_REGISTER_EDGE_DEBUG_FUN);

    /*iniclos dclo_110__REGISTER_EDGE_DEBUG_FUN*/
    /*_._VALCLO___V167*/
    meltfptr[166] = (melt_ptr_t) &meltcdat->dclo_110__REGISTER_EDGE_DEBUG_FUN;
    meltcdat->dclo_110__REGISTER_EDGE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_110__REGISTER_EDGE_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_111__BASICBLOCK_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V168*/ meltfptr[167])
        /*_._VALDATA___V168*/ meltfptr[167] = (melt_ptr_t )&meltcdat->dsym_111__BASICBLOCK_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_111__BASICBLOCK_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_111__BASICBLOCK_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_111__BASICBLOCK_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_111__BASICBLOCK_DEBUG_FUNCONT.obj_hash = 507389899;
    meltcdat->dsym_111__BASICBLOCK_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_112__BASICBLOCK_DEBUG_FUNCONT*/
    /*_._VALSTR___V169*/
    meltfptr[168] = (melt_ptr_t) &meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT;
    meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT.val, "BASICBLOCK_DEBUG_FUNCONT", sizeof (meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT.val[24] = (char)0 ;
    meltcdat->dstr_112__BASICBLOCK_DEBUG_FUNCONT.slen = 24 ;

    MELT_LOCATION("warmelt-debug.melt:162:/ iniobj");

    /*iniobj dobj_113__BASICBLOCK_DEBUG_FUNCONT*/
    /*_._VALDATA___V170*/
    meltfptr[169] = (melt_ptr_t )&meltcdat->dobj_113__BASICBLOCK_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_113__BASICBLOCK_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_113__BASICBLOCK_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_113__BASICBLOCK_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_113__BASICBLOCK_DEBUG_FUNCONT.obj_hash = 1006777100;
    meltcdat->dobj_113__BASICBLOCK_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_114__REGISTER_BASICBLOCK_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V171*/
    meltfptr[170] = (melt_ptr_t) &meltcdat->drout_114__REGISTER_BASICBLOCK_DEBUG_FUN;
    meltcdat->drout_114__REGISTER_BASICBLOCK_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_114__REGISTER_BASICBLOCK_DEBUG_FUN.routdescr, "REGISTER_BASICBLOCK_DEBUG_FUN @warmelt-debug.melt:163",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_114__REGISTER_BASICBLOCK_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_114__REGISTER_BASICBLOCK_DEBUG_FUN, meltrout_5_WARMELTmiDEBUG_REGISTER_BASICBLOCK_DEBUG_FUN);

    /*iniclos dclo_115__REGISTER_BASICBLOCK_DEBUG_FUN*/
    /*_._VALCLO___V172*/
    meltfptr[171] = (melt_ptr_t) &meltcdat->dclo_115__REGISTER_BASICBLOCK_DEBUG_FUN;
    meltcdat->dclo_115__REGISTER_BASICBLOCK_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_115__REGISTER_BASICBLOCK_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_116__LOOP_DEBUG_FUNCONT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V173*/ meltfptr[172])
        /*_._VALDATA___V173*/ meltfptr[172] = (melt_ptr_t )&meltcdat->dsym_116__LOOP_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_116__LOOP_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_116__LOOP_DEBUG_FUNCONT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_116__LOOP_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_116__LOOP_DEBUG_FUNCONT.obj_hash = 436769164;
    meltcdat->dsym_116__LOOP_DEBUG_FUNCONT.obj_len = 3;


    /*inistring dstr_117__LOOP_DEBUG_FUNCONT*/
    /*_._VALSTR___V174*/
    meltfptr[173] = (melt_ptr_t) &meltcdat->dstr_117__LOOP_DEBUG_FUNCONT;
    meltcdat->dstr_117__LOOP_DEBUG_FUNCONT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_117__LOOP_DEBUG_FUNCONT.val, "LOOP_DEBUG_FUNCONT", sizeof (meltcdat->dstr_117__LOOP_DEBUG_FUNCONT.val)-1);
    meltcdat->dstr_117__LOOP_DEBUG_FUNCONT.val[18] = (char)0 ;
    meltcdat->dstr_117__LOOP_DEBUG_FUNCONT.slen = 18 ;

    MELT_LOCATION("warmelt-debug.melt:175:/ iniobj");

    /*iniobj dobj_118__LOOP_DEBUG_FUNCONT*/
    /*_._VALDATA___V175*/
    meltfptr[174] = (melt_ptr_t )&meltcdat->dobj_118__LOOP_DEBUG_FUNCONT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_118__LOOP_DEBUG_FUNCONT", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_118__LOOP_DEBUG_FUNCONT", ((meltobject_ptr_t) (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_118__LOOP_DEBUG_FUNCONT.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);
    meltcdat->dobj_118__LOOP_DEBUG_FUNCONT.obj_hash = 608531599;
    meltcdat->dobj_118__LOOP_DEBUG_FUNCONT.obj_len = 1;

    /*inirout drout_119__REGISTER_LOOP_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V176*/
    meltfptr[175] = (melt_ptr_t) &meltcdat->drout_119__REGISTER_LOOP_DEBUG_FUN;
    meltcdat->drout_119__REGISTER_LOOP_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_119__REGISTER_LOOP_DEBUG_FUN.routdescr, "REGISTER_LOOP_DEBUG_FUN @warmelt-debug.melt:176",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_119__REGISTER_LOOP_DEBUG_FUN.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_119__REGISTER_LOOP_DEBUG_FUN, meltrout_6_WARMELTmiDEBUG_REGISTER_LOOP_DEBUG_FUN);

    /*iniclos dclo_120__REGISTER_LOOP_DEBUG_FUN*/
    /*_._VALCLO___V177*/
    meltfptr[176] = (melt_ptr_t) &meltcdat->dclo_120__REGISTER_LOOP_DEBUG_FUN;
    meltcdat->dclo_120__REGISTER_LOOP_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_120__REGISTER_LOOP_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_121__DISCR_DEBUG_CLOSURE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V178*/ meltfptr[177])
        /*_._VALDATA___V178*/ meltfptr[177] = (melt_ptr_t )&meltcdat->dsym_121__DISCR_DEBUG_CLOSURE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_121__DISCR_DEBUG_CLOSURE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_121__DISCR_DEBUG_CLOSURE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_121__DISCR_DEBUG_CLOSURE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_121__DISCR_DEBUG_CLOSURE.obj_hash = 726425766;
    meltcdat->dsym_121__DISCR_DEBUG_CLOSURE.obj_len = 3;


    /*inistring dstr_122__DISCR_DEBUG_CLOSURE*/
    /*_._VALSTR___V179*/
    meltfptr[178] = (melt_ptr_t) &meltcdat->dstr_122__DISCR_DEBUG_CLOSURE;
    meltcdat->dstr_122__DISCR_DEBUG_CLOSURE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_122__DISCR_DEBUG_CLOSURE.val, "DISCR_DEBUG_CLOSURE", sizeof (meltcdat->dstr_122__DISCR_DEBUG_CLOSURE.val)-1);
    meltcdat->dstr_122__DISCR_DEBUG_CLOSURE.val[19] = (char)0 ;
    meltcdat->dstr_122__DISCR_DEBUG_CLOSURE.slen = 19 ;


    /*iniobj dsym_123__CLASS_DISCRIMINANT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V180*/ meltfptr[179])
        /*_._VALDATA___V180*/ meltfptr[179] = (melt_ptr_t )&meltcdat->dsym_123__CLASS_DISCRIMINANT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_123__CLASS_DISCRIMINANT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_123__CLASS_DISCRIMINANT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_123__CLASS_DISCRIMINANT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_123__CLASS_DISCRIMINANT.obj_hash = 535191995;
    meltcdat->dsym_123__CLASS_DISCRIMINANT.obj_len = 3;


    /*inistring dstr_124__CLASS_DISCRIMINANT*/
    /*_._VALSTR___V181*/
    meltfptr[180] = (melt_ptr_t) &meltcdat->dstr_124__CLASS_DISCRIMINANT;
    meltcdat->dstr_124__CLASS_DISCRIMINANT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_124__CLASS_DISCRIMINANT.val, "CLASS_DISCRIMINANT", sizeof (meltcdat->dstr_124__CLASS_DISCRIMINANT.val)-1);
    meltcdat->dstr_124__CLASS_DISCRIMINANT.val[18] = (char)0 ;
    meltcdat->dstr_124__CLASS_DISCRIMINANT.slen = 18 ;

    MELT_LOCATION("warmelt-debug.melt:188:/ iniobj");

    /*iniobj dobj_125__DISCR_DEBUG_CLOSURE*/
    /*_._VALDATA___V182*/
    meltfptr[181] = (melt_ptr_t )&meltcdat->dobj_125__DISCR_DEBUG_CLOSURE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dobj_125__DISCR_DEBUG_CLOSURE", melt_magic_discr ((melt_ptr_t) (/*_.CLASS_DISCRIMINANT__V11*/ meltfptr[10])) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dobj_125__DISCR_DEBUG_CLOSURE", ((meltobject_ptr_t) (/*_.CLASS_DISCRIMINANT__V11*/ meltfptr[10]))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dobj_125__DISCR_DEBUG_CLOSURE.meltobj_class = (meltobject_ptr_t)(/*_.CLASS_DISCRIMINANT__V11*/ meltfptr[10]);
    meltcdat->dobj_125__DISCR_DEBUG_CLOSURE.obj_num = MELTOBMAG_CLOSURE;
    meltcdat->dobj_125__DISCR_DEBUG_CLOSURE.obj_hash = 980366766;
    meltcdat->dobj_125__DISCR_DEBUG_CLOSURE.obj_len = 5;


    /*iniobj dsym_126__DISCR_CLOSURE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V184*/ meltfptr[183])
        /*_._VALDATA___V184*/ meltfptr[183] = (melt_ptr_t )&meltcdat->dsym_126__DISCR_CLOSURE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_126__DISCR_CLOSURE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_126__DISCR_CLOSURE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_126__DISCR_CLOSURE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_126__DISCR_CLOSURE.obj_hash = 99248147;
    meltcdat->dsym_126__DISCR_CLOSURE.obj_len = 3;


    /*inistring dstr_127__DISCR_CLOSURE*/
    /*_._VALSTR___V185*/
    meltfptr[184] = (melt_ptr_t) &meltcdat->dstr_127__DISCR_CLOSURE;
    meltcdat->dstr_127__DISCR_CLOSURE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_127__DISCR_CLOSURE.val, "DISCR_CLOSURE", sizeof (meltcdat->dstr_127__DISCR_CLOSURE.val)-1);
    meltcdat->dstr_127__DISCR_CLOSURE.val[13] = (char)0 ;
    meltcdat->dstr_127__DISCR_CLOSURE.slen = 13 ;


    /*inistring dstr_128__DISCR_DEBUG_CLOSURE*/
    /*_._VALSTR___V183*/
    meltfptr[182] = (melt_ptr_t) &meltcdat->dstr_128__DISCR_DEBUG_CLOSURE;
    meltcdat->dstr_128__DISCR_DEBUG_CLOSURE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_128__DISCR_DEBUG_CLOSURE.val, "DISCR_DEBUG_CLOSURE", sizeof (meltcdat->dstr_128__DISCR_DEBUG_CLOSURE.val)-1);
    meltcdat->dstr_128__DISCR_DEBUG_CLOSURE.val[19] = (char)0 ;
    meltcdat->dstr_128__DISCR_DEBUG_CLOSURE.slen = 19 ;

    /*inirout drout_129__MELT_DEBUG_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V186*/
    meltfptr[185] = (melt_ptr_t) &meltcdat->drout_129__MELT_DEBUG_FUN;
    meltcdat->drout_129__MELT_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_129__MELT_DEBUG_FUN.routdescr, "MELT_DEBUG_FUN @warmelt-debug.melt:199",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_129__MELT_DEBUG_FUN.nbval = 20;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_129__MELT_DEBUG_FUN, meltrout_7_WARMELTmiDEBUG_MELT_DEBUG_FUN);

    /*iniclos dclo_130__MELT_DEBUG_FUN*/
    /*_._VALCLO___V191*/
    meltfptr[190] = (melt_ptr_t) &meltcdat->dclo_130__MELT_DEBUG_FUN;
    meltcdat->dclo_130__MELT_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_130__MELT_DEBUG_FUN.nbval = 0;


    /*iniobj dsym_131__INITIAL_SYSTEM_DATA*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V192*/ meltfptr[191])
        /*_._VALDATA___V192*/ meltfptr[191] = (melt_ptr_t )&meltcdat->dsym_131__INITIAL_SYSTEM_DATA;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_131__INITIAL_SYSTEM_DATA", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_131__INITIAL_SYSTEM_DATA", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_131__INITIAL_SYSTEM_DATA.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_131__INITIAL_SYSTEM_DATA.obj_hash = 771349808;
    meltcdat->dsym_131__INITIAL_SYSTEM_DATA.obj_len = 3;


    /*inistring dstr_132__INITIAL_SYSTEM_DATA*/
    /*_._VALSTR___V193*/
    meltfptr[192] = (melt_ptr_t) &meltcdat->dstr_132__INITIAL_SYSTEM_DATA;
    meltcdat->dstr_132__INITIAL_SYSTEM_DATA.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_132__INITIAL_SYSTEM_DATA.val, "INITIAL_SYSTEM_DATA", sizeof (meltcdat->dstr_132__INITIAL_SYSTEM_DATA.val)-1);
    meltcdat->dstr_132__INITIAL_SYSTEM_DATA.val[19] = (char)0 ;
    meltcdat->dstr_132__INITIAL_SYSTEM_DATA.slen = 19 ;


    /*iniobj dsym_133__CLASS_SYSTEM_DATA*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V194*/ meltfptr[193])
        /*_._VALDATA___V194*/ meltfptr[193] = (melt_ptr_t )&meltcdat->dsym_133__CLASS_SYSTEM_DATA;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_133__CLASS_SYSTEM_DATA", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_133__CLASS_SYSTEM_DATA", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_133__CLASS_SYSTEM_DATA.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_133__CLASS_SYSTEM_DATA.obj_hash = 648451867;
    meltcdat->dsym_133__CLASS_SYSTEM_DATA.obj_len = 3;


    /*inistring dstr_134__CLASS_SYSTEM_DATA*/
    /*_._VALSTR___V195*/
    meltfptr[194] = (melt_ptr_t) &meltcdat->dstr_134__CLASS_SYSTEM_DATA;
    meltcdat->dstr_134__CLASS_SYSTEM_DATA.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_134__CLASS_SYSTEM_DATA.val, "CLASS_SYSTEM_DATA", sizeof (meltcdat->dstr_134__CLASS_SYSTEM_DATA.val)-1);
    meltcdat->dstr_134__CLASS_SYSTEM_DATA.val[17] = (char)0 ;
    meltcdat->dstr_134__CLASS_SYSTEM_DATA.slen = 17 ;


    /*iniobj dsym_135__DISCR_MAP_OBJECTS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V196*/ meltfptr[195])
        /*_._VALDATA___V196*/ meltfptr[195] = (melt_ptr_t )&meltcdat->dsym_135__DISCR_MAP_OBJECTS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_135__DISCR_MAP_OBJECTS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_135__DISCR_MAP_OBJECTS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_135__DISCR_MAP_OBJECTS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_135__DISCR_MAP_OBJECTS.obj_hash = 217147088;
    meltcdat->dsym_135__DISCR_MAP_OBJECTS.obj_len = 3;


    /*inistring dstr_136__DISCR_MAP_OBJECTS*/
    /*_._VALSTR___V197*/
    meltfptr[196] = (melt_ptr_t) &meltcdat->dstr_136__DISCR_MAP_OBJECTS;
    meltcdat->dstr_136__DISCR_MAP_OBJECTS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_136__DISCR_MAP_OBJECTS.val, "DISCR_MAP_OBJECTS", sizeof (meltcdat->dstr_136__DISCR_MAP_OBJECTS.val)-1);
    meltcdat->dstr_136__DISCR_MAP_OBJECTS.val[17] = (char)0 ;
    meltcdat->dstr_136__DISCR_MAP_OBJECTS.slen = 17 ;


    /*iniobj dsym_137__DISCR_INTEGER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V198*/ meltfptr[197])
        /*_._VALDATA___V198*/ meltfptr[197] = (melt_ptr_t )&meltcdat->dsym_137__DISCR_INTEGER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_137__DISCR_INTEGER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_137__DISCR_INTEGER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_137__DISCR_INTEGER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_137__DISCR_INTEGER.obj_hash = 119182103;
    meltcdat->dsym_137__DISCR_INTEGER.obj_len = 3;


    /*inistring dstr_138__DISCR_INTEGER*/
    /*_._VALSTR___V199*/
    meltfptr[198] = (melt_ptr_t) &meltcdat->dstr_138__DISCR_INTEGER;
    meltcdat->dstr_138__DISCR_INTEGER.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_138__DISCR_INTEGER.val, "DISCR_INTEGER", sizeof (meltcdat->dstr_138__DISCR_INTEGER.val)-1);
    meltcdat->dstr_138__DISCR_INTEGER.val[13] = (char)0 ;
    meltcdat->dstr_138__DISCR_INTEGER.slen = 13 ;


    /*iniobj dsym_139__DISCR_STRBUF*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V200*/ meltfptr[199])
        /*_._VALDATA___V200*/ meltfptr[199] = (melt_ptr_t )&meltcdat->dsym_139__DISCR_STRBUF;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_139__DISCR_STRBUF", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_139__DISCR_STRBUF", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_139__DISCR_STRBUF.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_139__DISCR_STRBUF.obj_hash = 492035674;
    meltcdat->dsym_139__DISCR_STRBUF.obj_len = 3;


    /*inistring dstr_140__DISCR_STRBUF*/
    /*_._VALSTR___V201*/
    meltfptr[200] = (melt_ptr_t) &meltcdat->dstr_140__DISCR_STRBUF;
    meltcdat->dstr_140__DISCR_STRBUF.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_140__DISCR_STRBUF.val, "DISCR_STRBUF", sizeof (meltcdat->dstr_140__DISCR_STRBUF.val)-1);
    meltcdat->dstr_140__DISCR_STRBUF.val[12] = (char)0 ;
    meltcdat->dstr_140__DISCR_STRBUF.slen = 12 ;


    /*iniobj dsym_141__MELT_ASSERT_FAILURE_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V202*/ meltfptr[201])
        /*_._VALDATA___V202*/ meltfptr[201] = (melt_ptr_t )&meltcdat->dsym_141__MELT_ASSERT_FAILURE_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_141__MELT_ASSERT_FAILURE_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_141__MELT_ASSERT_FAILURE_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_141__MELT_ASSERT_FAILURE_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_141__MELT_ASSERT_FAILURE_FUN.obj_hash = 215547874;
    meltcdat->dsym_141__MELT_ASSERT_FAILURE_FUN.obj_len = 3;


    /*inistring dstr_142__MELT_ASSERT_FAILURE_FUN*/
    /*_._VALSTR___V203*/
    meltfptr[202] = (melt_ptr_t) &meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN;
    meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN.val, "MELT_ASSERT_FAILURE_FUN", sizeof (meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN.val)-1);
    meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN.val[23] = (char)0 ;
    meltcdat->dstr_142__MELT_ASSERT_FAILURE_FUN.slen = 23 ;


    /*iniobj dsym_143__ADD2OUT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V204*/ meltfptr[203])
        /*_._VALDATA___V204*/ meltfptr[203] = (melt_ptr_t )&meltcdat->dsym_143__ADD2OUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_143__ADD2OUT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_143__ADD2OUT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_143__ADD2OUT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_143__ADD2OUT.obj_hash = 901325062;
    meltcdat->dsym_143__ADD2OUT.obj_len = 3;


    /*inistring dstr_144__ADD2OUT*/
    /*_._VALSTR___V205*/
    meltfptr[204] = (melt_ptr_t) &meltcdat->dstr_144__ADD2OUT;
    meltcdat->dstr_144__ADD2OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_144__ADD2OUT.val, "ADD2OUT", sizeof (meltcdat->dstr_144__ADD2OUT.val)-1);
    meltcdat->dstr_144__ADD2OUT.val[7] = (char)0 ;
    meltcdat->dstr_144__ADD2OUT.slen = 7 ;


    /*iniobj dsym_145__CSTRING_PREFIXED*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V206*/ meltfptr[205])
        /*_._VALDATA___V206*/ meltfptr[205] = (melt_ptr_t )&meltcdat->dsym_145__CSTRING_PREFIXED;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_145__CSTRING_PREFIXED", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_145__CSTRING_PREFIXED", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_145__CSTRING_PREFIXED.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_145__CSTRING_PREFIXED.obj_hash = 976907042;
    meltcdat->dsym_145__CSTRING_PREFIXED.obj_len = 3;


    /*inistring dstr_146__CSTRING_PREFIXED*/
    /*_._VALSTR___V207*/
    meltfptr[206] = (melt_ptr_t) &meltcdat->dstr_146__CSTRING_PREFIXED;
    meltcdat->dstr_146__CSTRING_PREFIXED.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_146__CSTRING_PREFIXED.val, "CSTRING_PREFIXED", sizeof (meltcdat->dstr_146__CSTRING_PREFIXED.val)-1);
    meltcdat->dstr_146__CSTRING_PREFIXED.val[16] = (char)0 ;
    meltcdat->dstr_146__CSTRING_PREFIXED.slen = 16 ;


    /*iniobj dsym_147__CLASS_NAMED*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V208*/ meltfptr[207])
        /*_._VALDATA___V208*/ meltfptr[207] = (melt_ptr_t )&meltcdat->dsym_147__CLASS_NAMED;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_147__CLASS_NAMED", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_147__CLASS_NAMED", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_147__CLASS_NAMED.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_147__CLASS_NAMED.obj_hash = 60407004;
    meltcdat->dsym_147__CLASS_NAMED.obj_len = 3;


    /*inistring dstr_148__CLASS_NAMED*/
    /*_._VALSTR___V209*/
    meltfptr[208] = (melt_ptr_t) &meltcdat->dstr_148__CLASS_NAMED;
    meltcdat->dstr_148__CLASS_NAMED.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_148__CLASS_NAMED.val, "CLASS_NAMED", sizeof (meltcdat->dstr_148__CLASS_NAMED.val)-1);
    meltcdat->dstr_148__CLASS_NAMED.val[11] = (char)0 ;
    meltcdat->dstr_148__CLASS_NAMED.slen = 11 ;


    /*iniobj dsym_149__CLASS_QUASI_CTYPE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V210*/ meltfptr[209])
        /*_._VALDATA___V210*/ meltfptr[209] = (melt_ptr_t )&meltcdat->dsym_149__CLASS_QUASI_CTYPE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_149__CLASS_QUASI_CTYPE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_149__CLASS_QUASI_CTYPE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_149__CLASS_QUASI_CTYPE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_149__CLASS_QUASI_CTYPE.obj_hash = 680718258;
    meltcdat->dsym_149__CLASS_QUASI_CTYPE.obj_len = 3;


    /*inistring dstr_150__CLASS_QUASI_CTYPE*/
    /*_._VALSTR___V211*/
    meltfptr[210] = (melt_ptr_t) &meltcdat->dstr_150__CLASS_QUASI_CTYPE;
    meltcdat->dstr_150__CLASS_QUASI_CTYPE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_150__CLASS_QUASI_CTYPE.val, "CLASS_QUASI_CTYPE", sizeof (meltcdat->dstr_150__CLASS_QUASI_CTYPE.val)-1);
    meltcdat->dstr_150__CLASS_QUASI_CTYPE.val[17] = (char)0 ;
    meltcdat->dstr_150__CLASS_QUASI_CTYPE.slen = 17 ;

    /*inirout drout_151__DBG_OUTOBJECT*/
    /*iniroutlocvar*/ /*_._VALROUT___V190*/
    meltfptr[189] = (melt_ptr_t) &meltcdat->drout_151__DBG_OUTOBJECT;
    meltcdat->drout_151__DBG_OUTOBJECT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_151__DBG_OUTOBJECT.routdescr, "DBG_OUTOBJECT @warmelt-debug.melt:409",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_151__DBG_OUTOBJECT.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_151__DBG_OUTOBJECT, meltrout_8_WARMELTmiDEBUG_DBG_OUTOBJECT);

    /*iniclos dclo_152__DBG_OUTOBJECT*/
    /*_._VALCLO___V189*/
    meltfptr[188] = (melt_ptr_t) &meltcdat->dclo_152__DBG_OUTOBJECT;
    meltcdat->dclo_152__DBG_OUTOBJECT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_152__DBG_OUTOBJECT.nbval = 0;

    /*inirout drout_153__DBG_OUT*/
    /*iniroutlocvar*/ /*_._VALROUT___V188*/
    meltfptr[187] = (melt_ptr_t) &meltcdat->drout_153__DBG_OUT;
    meltcdat->drout_153__DBG_OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_153__DBG_OUT.routdescr, "DBG_OUT @warmelt-debug.melt:429",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_153__DBG_OUT.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_153__DBG_OUT, meltrout_9_WARMELTmiDEBUG_DBG_OUT);

    /*iniclos dclo_154__DBG_OUT*/
    /*_._VALCLO___V187*/
    meltfptr[186] = (melt_ptr_t) &meltcdat->dclo_154__DBG_OUT;
    meltcdat->dclo_154__DBG_OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_154__DBG_OUT.nbval = 0;

    /*inirout drout_155__DBGOUT_FIELDS*/
    /*iniroutlocvar*/ /*_._VALROUT___V212*/
    meltfptr[211] = (melt_ptr_t) &meltcdat->drout_155__DBGOUT_FIELDS;
    meltcdat->drout_155__DBGOUT_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_155__DBGOUT_FIELDS.routdescr, "DBGOUT_FIELDS @warmelt-debug.melt:457",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_155__DBGOUT_FIELDS.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_155__DBGOUT_FIELDS, meltrout_10_WARMELTmiDEBUG_DBGOUT_FIELDS);

    /*iniclos dclo_156__DBGOUT_FIELDS*/
    /*_._VALCLO___V213*/
    meltfptr[212] = (melt_ptr_t) &meltcdat->dclo_156__DBGOUT_FIELDS;
    meltcdat->dclo_156__DBGOUT_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_156__DBGOUT_FIELDS.nbval = 0;

    /*inirout drout_157__DBGOUTAGAIN_FIELDS*/
    /*iniroutlocvar*/ /*_._VALROUT___V214*/
    meltfptr[213] = (melt_ptr_t) &meltcdat->drout_157__DBGOUTAGAIN_FIELDS;
    meltcdat->drout_157__DBGOUTAGAIN_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_157__DBGOUTAGAIN_FIELDS.routdescr, "DBGOUTAGAIN_FIELDS @warmelt-debug.melt:510",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_157__DBGOUTAGAIN_FIELDS.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_157__DBGOUTAGAIN_FIELDS, meltrout_11_WARMELTmiDEBUG_DBGOUTAGAIN_FIELDS);

    /*iniclos dclo_158__DBGOUTAGAIN_FIELDS*/
    /*_._VALCLO___V215*/
    meltfptr[214] = (melt_ptr_t) &meltcdat->dclo_158__DBGOUTAGAIN_FIELDS;
    meltcdat->dclo_158__DBGOUTAGAIN_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_158__DBGOUTAGAIN_FIELDS.nbval = 0;

    /*inirout drout_159__DBGOUT_NULL_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V216*/
    meltfptr[215] = (melt_ptr_t) &meltcdat->drout_159__DBGOUT_NULL_METHOD;
    meltcdat->drout_159__DBGOUT_NULL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_159__DBGOUT_NULL_METHOD.routdescr, "DBGOUT_NULL_METHOD @warmelt-debug.melt:553",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_159__DBGOUT_NULL_METHOD.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_159__DBGOUT_NULL_METHOD, meltrout_12_WARMELTmiDEBUG_DBGOUT_NULL_METHOD);

    /*iniclos dclo_160__DBGOUT_NULL_METHOD*/
    /*_._VALCLO___V217*/
    meltfptr[216] = (melt_ptr_t) &meltcdat->dclo_160__DBGOUT_NULL_METHOD;
    meltcdat->dclo_160__DBGOUT_NULL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_160__DBGOUT_NULL_METHOD.nbval = 0;


    /*iniobj dsym_161__INSTALL_METHOD*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V218*/ meltfptr[217])
        /*_._VALDATA___V218*/ meltfptr[217] = (melt_ptr_t )&meltcdat->dsym_161__INSTALL_METHOD;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_161__INSTALL_METHOD", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_161__INSTALL_METHOD", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_161__INSTALL_METHOD.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_161__INSTALL_METHOD.obj_hash = 680699224;
    meltcdat->dsym_161__INSTALL_METHOD.obj_len = 3;


    /*inistring dstr_162__INSTALL_METHOD*/
    /*_._VALSTR___V219*/
    meltfptr[218] = (melt_ptr_t) &meltcdat->dstr_162__INSTALL_METHOD;
    meltcdat->dstr_162__INSTALL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_162__INSTALL_METHOD.val, "INSTALL_METHOD", sizeof (meltcdat->dstr_162__INSTALL_METHOD.val)-1);
    meltcdat->dstr_162__INSTALL_METHOD.val[14] = (char)0 ;
    meltcdat->dstr_162__INSTALL_METHOD.slen = 14 ;


    /*iniobj dsym_163__DISCR_NULL_RECEIVER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V220*/ meltfptr[219])
        /*_._VALDATA___V220*/ meltfptr[219] = (melt_ptr_t )&meltcdat->dsym_163__DISCR_NULL_RECEIVER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_163__DISCR_NULL_RECEIVER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_163__DISCR_NULL_RECEIVER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_163__DISCR_NULL_RECEIVER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_163__DISCR_NULL_RECEIVER.obj_hash = 1063609307;
    meltcdat->dsym_163__DISCR_NULL_RECEIVER.obj_len = 3;


    /*inistring dstr_164__DISCR_NULL_RECEIVER*/
    /*_._VALSTR___V221*/
    meltfptr[220] = (melt_ptr_t) &meltcdat->dstr_164__DISCR_NULL_RECEIVER;
    meltcdat->dstr_164__DISCR_NULL_RECEIVER.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_164__DISCR_NULL_RECEIVER.val, "DISCR_NULL_RECEIVER", sizeof (meltcdat->dstr_164__DISCR_NULL_RECEIVER.val)-1);
    meltcdat->dstr_164__DISCR_NULL_RECEIVER.val[19] = (char)0 ;
    meltcdat->dstr_164__DISCR_NULL_RECEIVER.slen = 19 ;

    /*inirout drout_165__DBGOUT_STRING_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V222*/
    meltfptr[221] = (melt_ptr_t) &meltcdat->drout_165__DBGOUT_STRING_METHOD;
    meltcdat->drout_165__DBGOUT_STRING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_165__DBGOUT_STRING_METHOD.routdescr, "DBGOUT_STRING_METHOD @warmelt-debug.melt:562",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_165__DBGOUT_STRING_METHOD.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_165__DBGOUT_STRING_METHOD, meltrout_13_WARMELTmiDEBUG_DBGOUT_STRING_METHOD);

    /*iniclos dclo_166__DBGOUT_STRING_METHOD*/
    /*_._VALCLO___V223*/
    meltfptr[222] = (melt_ptr_t) &meltcdat->dclo_166__DBGOUT_STRING_METHOD;
    meltcdat->dclo_166__DBGOUT_STRING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_166__DBGOUT_STRING_METHOD.nbval = 0;


    /*iniobj dsym_167__DISCR_STRING*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V224*/ meltfptr[223])
        /*_._VALDATA___V224*/ meltfptr[223] = (melt_ptr_t )&meltcdat->dsym_167__DISCR_STRING;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_167__DISCR_STRING", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_167__DISCR_STRING", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_167__DISCR_STRING.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_167__DISCR_STRING.obj_hash = 100436219;
    meltcdat->dsym_167__DISCR_STRING.obj_len = 3;


    /*inistring dstr_168__DISCR_STRING*/
    /*_._VALSTR___V225*/
    meltfptr[224] = (melt_ptr_t) &meltcdat->dstr_168__DISCR_STRING;
    meltcdat->dstr_168__DISCR_STRING.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_168__DISCR_STRING.val, "DISCR_STRING", sizeof (meltcdat->dstr_168__DISCR_STRING.val)-1);
    meltcdat->dstr_168__DISCR_STRING.val[12] = (char)0 ;
    meltcdat->dstr_168__DISCR_STRING.slen = 12 ;


    /*iniobj dsym_169__DISCR_VERBATIM_STRING*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V226*/ meltfptr[225])
        /*_._VALDATA___V226*/ meltfptr[225] = (melt_ptr_t )&meltcdat->dsym_169__DISCR_VERBATIM_STRING;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_169__DISCR_VERBATIM_STRING", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_169__DISCR_VERBATIM_STRING", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_169__DISCR_VERBATIM_STRING.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_169__DISCR_VERBATIM_STRING.obj_hash = 258402049;
    meltcdat->dsym_169__DISCR_VERBATIM_STRING.obj_len = 3;


    /*inistring dstr_170__DISCR_VERBATIM_STRING*/
    /*_._VALSTR___V227*/
    meltfptr[226] = (melt_ptr_t) &meltcdat->dstr_170__DISCR_VERBATIM_STRING;
    meltcdat->dstr_170__DISCR_VERBATIM_STRING.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_170__DISCR_VERBATIM_STRING.val, "DISCR_VERBATIM_STRING", sizeof (meltcdat->dstr_170__DISCR_VERBATIM_STRING.val)-1);
    meltcdat->dstr_170__DISCR_VERBATIM_STRING.val[21] = (char)0 ;
    meltcdat->dstr_170__DISCR_VERBATIM_STRING.slen = 21 ;

    /*inirout drout_171__DBGOUT_STRBUF_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V228*/
    meltfptr[227] = (melt_ptr_t) &meltcdat->drout_171__DBGOUT_STRBUF_METHOD;
    meltcdat->drout_171__DBGOUT_STRBUF_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_171__DBGOUT_STRBUF_METHOD.routdescr, "DBGOUT_STRBUF_METHOD @warmelt-debug.melt:591",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_171__DBGOUT_STRBUF_METHOD.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_171__DBGOUT_STRBUF_METHOD, meltrout_14_WARMELTmiDEBUG_DBGOUT_STRBUF_METHOD);

    /*iniclos dclo_172__DBGOUT_STRBUF_METHOD*/
    /*_._VALCLO___V229*/
    meltfptr[228] = (melt_ptr_t) &meltcdat->dclo_172__DBGOUT_STRBUF_METHOD;
    meltcdat->dclo_172__DBGOUT_STRBUF_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_172__DBGOUT_STRBUF_METHOD.nbval = 0;

    /*inirout drout_173__DBGOUT_INTEGER_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V230*/
    meltfptr[229] = (melt_ptr_t) &meltcdat->drout_173__DBGOUT_INTEGER_METHOD;
    meltcdat->drout_173__DBGOUT_INTEGER_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_173__DBGOUT_INTEGER_METHOD.routdescr, "DBGOUT_INTEGER_METHOD @warmelt-debug.melt:677",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_173__DBGOUT_INTEGER_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_173__DBGOUT_INTEGER_METHOD, meltrout_15_WARMELTmiDEBUG_DBGOUT_INTEGER_METHOD);

    /*iniclos dclo_174__DBGOUT_INTEGER_METHOD*/
    /*_._VALCLO___V231*/
    meltfptr[230] = (melt_ptr_t) &meltcdat->dclo_174__DBGOUT_INTEGER_METHOD;
    meltcdat->dclo_174__DBGOUT_INTEGER_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_174__DBGOUT_INTEGER_METHOD.nbval = 0;


    /*iniobj dsym_175__DISCR_CONSTANT_INTEGER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V232*/ meltfptr[231])
        /*_._VALDATA___V232*/ meltfptr[231] = (melt_ptr_t )&meltcdat->dsym_175__DISCR_CONSTANT_INTEGER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_175__DISCR_CONSTANT_INTEGER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_175__DISCR_CONSTANT_INTEGER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_175__DISCR_CONSTANT_INTEGER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_175__DISCR_CONSTANT_INTEGER.obj_hash = 1007078494;
    meltcdat->dsym_175__DISCR_CONSTANT_INTEGER.obj_len = 3;


    /*inistring dstr_176__DISCR_CONSTANT_INTEGER*/
    /*_._VALSTR___V233*/
    meltfptr[232] = (melt_ptr_t) &meltcdat->dstr_176__DISCR_CONSTANT_INTEGER;
    meltcdat->dstr_176__DISCR_CONSTANT_INTEGER.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_176__DISCR_CONSTANT_INTEGER.val, "DISCR_CONSTANT_INTEGER", sizeof (meltcdat->dstr_176__DISCR_CONSTANT_INTEGER.val)-1);
    meltcdat->dstr_176__DISCR_CONSTANT_INTEGER.val[22] = (char)0 ;
    meltcdat->dstr_176__DISCR_CONSTANT_INTEGER.slen = 22 ;

    /*inirout drout_177__DBGOUT_DOUBLE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V234*/
    meltfptr[233] = (melt_ptr_t) &meltcdat->drout_177__DBGOUT_DOUBLE_METHOD;
    meltcdat->drout_177__DBGOUT_DOUBLE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_177__DBGOUT_DOUBLE_METHOD.routdescr, "DBGOUT_DOUBLE_METHOD @warmelt-debug.melt:698",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_177__DBGOUT_DOUBLE_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_177__DBGOUT_DOUBLE_METHOD, meltrout_16_WARMELTmiDEBUG_DBGOUT_DOUBLE_METHOD);

    /*iniclos dclo_178__DBGOUT_DOUBLE_METHOD*/
    /*_._VALCLO___V235*/
    meltfptr[234] = (melt_ptr_t) &meltcdat->dclo_178__DBGOUT_DOUBLE_METHOD;
    meltcdat->dclo_178__DBGOUT_DOUBLE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_178__DBGOUT_DOUBLE_METHOD.nbval = 0;


    /*iniobj dsym_179__DISCR_DOUBLE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V236*/ meltfptr[235])
        /*_._VALDATA___V236*/ meltfptr[235] = (melt_ptr_t )&meltcdat->dsym_179__DISCR_DOUBLE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_179__DISCR_DOUBLE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_179__DISCR_DOUBLE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_179__DISCR_DOUBLE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_179__DISCR_DOUBLE.obj_hash = 676444586;
    meltcdat->dsym_179__DISCR_DOUBLE.obj_len = 3;


    /*inistring dstr_180__DISCR_DOUBLE*/
    /*_._VALSTR___V237*/
    meltfptr[236] = (melt_ptr_t) &meltcdat->dstr_180__DISCR_DOUBLE;
    meltcdat->dstr_180__DISCR_DOUBLE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_180__DISCR_DOUBLE.val, "DISCR_DOUBLE", sizeof (meltcdat->dstr_180__DISCR_DOUBLE.val)-1);
    meltcdat->dstr_180__DISCR_DOUBLE.val[12] = (char)0 ;
    meltcdat->dstr_180__DISCR_DOUBLE.slen = 12 ;


    /*iniobj dsym_181__DISCR_CONSTANT_DOUBLE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V238*/ meltfptr[237])
        /*_._VALDATA___V238*/ meltfptr[237] = (melt_ptr_t )&meltcdat->dsym_181__DISCR_CONSTANT_DOUBLE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_181__DISCR_CONSTANT_DOUBLE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_181__DISCR_CONSTANT_DOUBLE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_181__DISCR_CONSTANT_DOUBLE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_181__DISCR_CONSTANT_DOUBLE.obj_hash = 752140697;
    meltcdat->dsym_181__DISCR_CONSTANT_DOUBLE.obj_len = 3;


    /*inistring dstr_182__DISCR_CONSTANT_DOUBLE*/
    /*_._VALSTR___V239*/
    meltfptr[238] = (melt_ptr_t) &meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE;
    meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE.val, "DISCR_CONSTANT_DOUBLE", sizeof (meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE.val)-1);
    meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE.val[21] = (char)0 ;
    meltcdat->dstr_182__DISCR_CONSTANT_DOUBLE.slen = 21 ;

    /*inirout drout_183__DBGOUT_MIXINT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V240*/
    meltfptr[239] = (melt_ptr_t) &meltcdat->drout_183__DBGOUT_MIXINT_METHOD;
    meltcdat->drout_183__DBGOUT_MIXINT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_183__DBGOUT_MIXINT_METHOD.routdescr, "DBGOUT_MIXINT_METHOD @warmelt-debug.melt:717",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_183__DBGOUT_MIXINT_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_183__DBGOUT_MIXINT_METHOD, meltrout_17_WARMELTmiDEBUG_DBGOUT_MIXINT_METHOD);

    /*iniclos dclo_184__DBGOUT_MIXINT_METHOD*/
    /*_._VALCLO___V241*/
    meltfptr[240] = (melt_ptr_t) &meltcdat->dclo_184__DBGOUT_MIXINT_METHOD;
    meltcdat->dclo_184__DBGOUT_MIXINT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_184__DBGOUT_MIXINT_METHOD.nbval = 0;


    /*iniobj dsym_185__DISCR_MIXED_INTEGER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V242*/ meltfptr[241])
        /*_._VALDATA___V242*/ meltfptr[241] = (melt_ptr_t )&meltcdat->dsym_185__DISCR_MIXED_INTEGER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_185__DISCR_MIXED_INTEGER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_185__DISCR_MIXED_INTEGER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_185__DISCR_MIXED_INTEGER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_185__DISCR_MIXED_INTEGER.obj_hash = 355248820;
    meltcdat->dsym_185__DISCR_MIXED_INTEGER.obj_len = 3;


    /*inistring dstr_186__DISCR_MIXED_INTEGER*/
    /*_._VALSTR___V243*/
    meltfptr[242] = (melt_ptr_t) &meltcdat->dstr_186__DISCR_MIXED_INTEGER;
    meltcdat->dstr_186__DISCR_MIXED_INTEGER.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_186__DISCR_MIXED_INTEGER.val, "DISCR_MIXED_INTEGER", sizeof (meltcdat->dstr_186__DISCR_MIXED_INTEGER.val)-1);
    meltcdat->dstr_186__DISCR_MIXED_INTEGER.val[19] = (char)0 ;
    meltcdat->dstr_186__DISCR_MIXED_INTEGER.slen = 19 ;

    /*inirout drout_187__DBGOUT_MIXLOC_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V244*/
    meltfptr[243] = (melt_ptr_t) &meltcdat->drout_187__DBGOUT_MIXLOC_METHOD;
    meltcdat->drout_187__DBGOUT_MIXLOC_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_187__DBGOUT_MIXLOC_METHOD.routdescr, "DBGOUT_MIXLOC_METHOD @warmelt-debug.melt:746",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_187__DBGOUT_MIXLOC_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_187__DBGOUT_MIXLOC_METHOD, meltrout_18_WARMELTmiDEBUG_DBGOUT_MIXLOC_METHOD);

    /*iniclos dclo_188__DBGOUT_MIXLOC_METHOD*/
    /*_._VALCLO___V245*/
    meltfptr[244] = (melt_ptr_t) &meltcdat->dclo_188__DBGOUT_MIXLOC_METHOD;
    meltcdat->dclo_188__DBGOUT_MIXLOC_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_188__DBGOUT_MIXLOC_METHOD.nbval = 0;


    /*iniobj dsym_189__DISCR_MIXED_LOCATION*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V246*/ meltfptr[245])
        /*_._VALDATA___V246*/ meltfptr[245] = (melt_ptr_t )&meltcdat->dsym_189__DISCR_MIXED_LOCATION;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_189__DISCR_MIXED_LOCATION", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_189__DISCR_MIXED_LOCATION", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_189__DISCR_MIXED_LOCATION.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_189__DISCR_MIXED_LOCATION.obj_hash = 1019373807;
    meltcdat->dsym_189__DISCR_MIXED_LOCATION.obj_len = 3;


    /*inistring dstr_190__DISCR_MIXED_LOCATION*/
    /*_._VALSTR___V247*/
    meltfptr[246] = (melt_ptr_t) &meltcdat->dstr_190__DISCR_MIXED_LOCATION;
    meltcdat->dstr_190__DISCR_MIXED_LOCATION.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_190__DISCR_MIXED_LOCATION.val, "DISCR_MIXED_LOCATION", sizeof (meltcdat->dstr_190__DISCR_MIXED_LOCATION.val)-1);
    meltcdat->dstr_190__DISCR_MIXED_LOCATION.val[20] = (char)0 ;
    meltcdat->dstr_190__DISCR_MIXED_LOCATION.slen = 20 ;

    /*inirout drout_191__DBGOUT_MIXBIGINT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V248*/
    meltfptr[247] = (melt_ptr_t) &meltcdat->drout_191__DBGOUT_MIXBIGINT_METHOD;
    meltcdat->drout_191__DBGOUT_MIXBIGINT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_191__DBGOUT_MIXBIGINT_METHOD.routdescr, "DBGOUT_MIXBIGINT_METHOD @warmelt-debug.melt:776",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_191__DBGOUT_MIXBIGINT_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_191__DBGOUT_MIXBIGINT_METHOD, meltrout_19_WARMELTmiDEBUG_DBGOUT_MIXBIGINT_METHOD);

    /*iniclos dclo_192__DBGOUT_MIXBIGINT_METHOD*/
    /*_._VALCLO___V249*/
    meltfptr[248] = (melt_ptr_t) &meltcdat->dclo_192__DBGOUT_MIXBIGINT_METHOD;
    meltcdat->dclo_192__DBGOUT_MIXBIGINT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_192__DBGOUT_MIXBIGINT_METHOD.nbval = 0;


    /*iniobj dsym_193__DISCR_MIXED_BIGINT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V250*/ meltfptr[249])
        /*_._VALDATA___V250*/ meltfptr[249] = (melt_ptr_t )&meltcdat->dsym_193__DISCR_MIXED_BIGINT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_193__DISCR_MIXED_BIGINT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_193__DISCR_MIXED_BIGINT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_193__DISCR_MIXED_BIGINT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_193__DISCR_MIXED_BIGINT.obj_hash = 484145131;
    meltcdat->dsym_193__DISCR_MIXED_BIGINT.obj_len = 3;


    /*inistring dstr_194__DISCR_MIXED_BIGINT*/
    /*_._VALSTR___V251*/
    meltfptr[250] = (melt_ptr_t) &meltcdat->dstr_194__DISCR_MIXED_BIGINT;
    meltcdat->dstr_194__DISCR_MIXED_BIGINT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_194__DISCR_MIXED_BIGINT.val, "DISCR_MIXED_BIGINT", sizeof (meltcdat->dstr_194__DISCR_MIXED_BIGINT.val)-1);
    meltcdat->dstr_194__DISCR_MIXED_BIGINT.val[18] = (char)0 ;
    meltcdat->dstr_194__DISCR_MIXED_BIGINT.slen = 18 ;

    /*inirout drout_195__DBGOUT_MULTIPLE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V252*/
    meltfptr[251] = (melt_ptr_t) &meltcdat->drout_195__DBGOUT_MULTIPLE_METHOD;
    meltcdat->drout_195__DBGOUT_MULTIPLE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_195__DBGOUT_MULTIPLE_METHOD.routdescr, "DBGOUT_MULTIPLE_METHOD @warmelt-debug.melt:799",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_195__DBGOUT_MULTIPLE_METHOD.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_195__DBGOUT_MULTIPLE_METHOD, meltrout_20_WARMELTmiDEBUG_DBGOUT_MULTIPLE_METHOD);

    /*iniclos dclo_196__DBGOUT_MULTIPLE_METHOD*/
    /*_._VALCLO___V253*/
    meltfptr[252] = (melt_ptr_t) &meltcdat->dclo_196__DBGOUT_MULTIPLE_METHOD;
    meltcdat->dclo_196__DBGOUT_MULTIPLE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_196__DBGOUT_MULTIPLE_METHOD.nbval = 0;


    /*iniobj dsym_197__DISCR_MULTIPLE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V254*/ meltfptr[253])
        /*_._VALDATA___V254*/ meltfptr[253] = (melt_ptr_t )&meltcdat->dsym_197__DISCR_MULTIPLE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_197__DISCR_MULTIPLE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_197__DISCR_MULTIPLE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_197__DISCR_MULTIPLE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_197__DISCR_MULTIPLE.obj_hash = 91864583;
    meltcdat->dsym_197__DISCR_MULTIPLE.obj_len = 3;


    /*inistring dstr_198__DISCR_MULTIPLE*/
    /*_._VALSTR___V255*/
    meltfptr[254] = (melt_ptr_t) &meltcdat->dstr_198__DISCR_MULTIPLE;
    meltcdat->dstr_198__DISCR_MULTIPLE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_198__DISCR_MULTIPLE.val, "DISCR_MULTIPLE", sizeof (meltcdat->dstr_198__DISCR_MULTIPLE.val)-1);
    meltcdat->dstr_198__DISCR_MULTIPLE.val[14] = (char)0 ;
    meltcdat->dstr_198__DISCR_MULTIPLE.slen = 14 ;

    /*inirout drout_199__DBGOUT_ROUTINE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V256*/
    meltfptr[255] = (melt_ptr_t) &meltcdat->drout_199__DBGOUT_ROUTINE_METHOD;
    meltcdat->drout_199__DBGOUT_ROUTINE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_199__DBGOUT_ROUTINE_METHOD.routdescr, "DBGOUT_ROUTINE_METHOD @warmelt-debug.melt:834",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_199__DBGOUT_ROUTINE_METHOD.nbval = 7;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_199__DBGOUT_ROUTINE_METHOD, meltrout_21_WARMELTmiDEBUG_DBGOUT_ROUTINE_METHOD);

    /*iniclos dclo_200__DBGOUT_ROUTINE_METHOD*/
    /*_._VALCLO___V258*/
    meltfptr[257] = (melt_ptr_t) &meltcdat->dclo_200__DBGOUT_ROUTINE_METHOD;
    meltcdat->dclo_200__DBGOUT_ROUTINE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_200__DBGOUT_ROUTINE_METHOD.nbval = 0;


    /*iniobj dsym_201__DISCR_ROUTINE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V259*/ meltfptr[258])
        /*_._VALDATA___V259*/ meltfptr[258] = (melt_ptr_t )&meltcdat->dsym_201__DISCR_ROUTINE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_201__DISCR_ROUTINE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_201__DISCR_ROUTINE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_201__DISCR_ROUTINE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_201__DISCR_ROUTINE.obj_hash = 30464565;
    meltcdat->dsym_201__DISCR_ROUTINE.obj_len = 3;


    /*inistring dstr_202__DISCR_ROUTINE*/
    /*_._VALSTR___V260*/
    meltfptr[259] = (melt_ptr_t) &meltcdat->dstr_202__DISCR_ROUTINE;
    meltcdat->dstr_202__DISCR_ROUTINE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_202__DISCR_ROUTINE.val, "DISCR_ROUTINE", sizeof (meltcdat->dstr_202__DISCR_ROUTINE.val)-1);
    meltcdat->dstr_202__DISCR_ROUTINE.val[13] = (char)0 ;
    meltcdat->dstr_202__DISCR_ROUTINE.slen = 13 ;


    /*iniobj dsym_203__ROUTINE_EVERY*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V261*/ meltfptr[260])
        /*_._VALDATA___V261*/ meltfptr[260] = (melt_ptr_t )&meltcdat->dsym_203__ROUTINE_EVERY;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_203__ROUTINE_EVERY", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_203__ROUTINE_EVERY", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_203__ROUTINE_EVERY.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_203__ROUTINE_EVERY.obj_hash = 347090207;
    meltcdat->dsym_203__ROUTINE_EVERY.obj_len = 3;


    /*inistring dstr_204__ROUTINE_EVERY*/
    /*_._VALSTR___V262*/
    meltfptr[261] = (melt_ptr_t) &meltcdat->dstr_204__ROUTINE_EVERY;
    meltcdat->dstr_204__ROUTINE_EVERY.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_204__ROUTINE_EVERY.val, "ROUTINE_EVERY", sizeof (meltcdat->dstr_204__ROUTINE_EVERY.val)-1);
    meltcdat->dstr_204__ROUTINE_EVERY.val[13] = (char)0 ;
    meltcdat->dstr_204__ROUTINE_EVERY.slen = 13 ;

    /*inirout drout_205__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V257*/
    meltfptr[256] = (melt_ptr_t) &meltcdat->drout_205__LAMBDA_;
    meltcdat->drout_205__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_205__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:850",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_205__LAMBDA_.nbval = 1;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_205__LAMBDA_, meltrout_22_WARMELTmiDEBUG_LAMBDA_cl1);

    /*inirout drout_206__DBGOUT_HOOK_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V263*/
    meltfptr[262] = (melt_ptr_t) &meltcdat->drout_206__DBGOUT_HOOK_METHOD;
    meltcdat->drout_206__DBGOUT_HOOK_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_206__DBGOUT_HOOK_METHOD.routdescr, "DBGOUT_HOOK_METHOD @warmelt-debug.melt:862",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_206__DBGOUT_HOOK_METHOD.nbval = 9;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_206__DBGOUT_HOOK_METHOD, meltrout_23_WARMELTmiDEBUG_DBGOUT_HOOK_METHOD);

    /*iniclos dclo_207__DBGOUT_HOOK_METHOD*/
    /*_._VALCLO___V265*/
    meltfptr[264] = (melt_ptr_t) &meltcdat->dclo_207__DBGOUT_HOOK_METHOD;
    meltcdat->dclo_207__DBGOUT_HOOK_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_207__DBGOUT_HOOK_METHOD.nbval = 0;


    /*iniobj dsym_208__HOOK_EVERY*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V266*/ meltfptr[265])
        /*_._VALDATA___V266*/ meltfptr[265] = (melt_ptr_t )&meltcdat->dsym_208__HOOK_EVERY;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_208__HOOK_EVERY", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_208__HOOK_EVERY", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_208__HOOK_EVERY.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_208__HOOK_EVERY.obj_hash = 523777531;
    meltcdat->dsym_208__HOOK_EVERY.obj_len = 3;


    /*inistring dstr_209__HOOK_EVERY*/
    /*_._VALSTR___V267*/
    meltfptr[266] = (melt_ptr_t) &meltcdat->dstr_209__HOOK_EVERY;
    meltcdat->dstr_209__HOOK_EVERY.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_209__HOOK_EVERY.val, "HOOK_EVERY", sizeof (meltcdat->dstr_209__HOOK_EVERY.val)-1);
    meltcdat->dstr_209__HOOK_EVERY.val[10] = (char)0 ;
    meltcdat->dstr_209__HOOK_EVERY.slen = 10 ;

    /*inirout drout_210__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V264*/
    meltfptr[263] = (melt_ptr_t) &meltcdat->drout_210__LAMBDA_;
    meltcdat->drout_210__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_210__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:877",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_210__LAMBDA_.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_210__LAMBDA_, meltrout_24_WARMELTmiDEBUG_LAMBDA_cl2);


    /*iniobj dsym_211__DISCR_HOOK*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V268*/ meltfptr[267])
        /*_._VALDATA___V268*/ meltfptr[267] = (melt_ptr_t )&meltcdat->dsym_211__DISCR_HOOK;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_211__DISCR_HOOK", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_211__DISCR_HOOK", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_211__DISCR_HOOK.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_211__DISCR_HOOK.obj_hash = 494767084;
    meltcdat->dsym_211__DISCR_HOOK.obj_len = 3;


    /*inistring dstr_212__DISCR_HOOK*/
    /*_._VALSTR___V269*/
    meltfptr[268] = (melt_ptr_t) &meltcdat->dstr_212__DISCR_HOOK;
    meltcdat->dstr_212__DISCR_HOOK.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_212__DISCR_HOOK.val, "DISCR_HOOK", sizeof (meltcdat->dstr_212__DISCR_HOOK.val)-1);
    meltcdat->dstr_212__DISCR_HOOK.val[10] = (char)0 ;
    meltcdat->dstr_212__DISCR_HOOK.slen = 10 ;

    /*inirout drout_213__DBGOUT_CLOSURE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V270*/
    meltfptr[269] = (melt_ptr_t) &meltcdat->drout_213__DBGOUT_CLOSURE_METHOD;
    meltcdat->drout_213__DBGOUT_CLOSURE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_213__DBGOUT_CLOSURE_METHOD.routdescr, "DBGOUT_CLOSURE_METHOD @warmelt-debug.melt:895",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_213__DBGOUT_CLOSURE_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_213__DBGOUT_CLOSURE_METHOD, meltrout_25_WARMELTmiDEBUG_DBGOUT_CLOSURE_METHOD);

    /*iniclos dclo_214__DBGOUT_CLOSURE_METHOD*/
    /*_._VALCLO___V271*/
    meltfptr[270] = (melt_ptr_t) &meltcdat->dclo_214__DBGOUT_CLOSURE_METHOD;
    meltcdat->dclo_214__DBGOUT_CLOSURE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_214__DBGOUT_CLOSURE_METHOD.nbval = 0;

    /*inirout drout_215__DBGOUT_LIST_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V272*/
    meltfptr[271] = (melt_ptr_t) &meltcdat->drout_215__DBGOUT_LIST_METHOD;
    meltcdat->drout_215__DBGOUT_LIST_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_215__DBGOUT_LIST_METHOD.routdescr, "DBGOUT_LIST_METHOD @warmelt-debug.melt:942",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_215__DBGOUT_LIST_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_215__DBGOUT_LIST_METHOD, meltrout_26_WARMELTmiDEBUG_DBGOUT_LIST_METHOD);

    /*iniclos dclo_216__DBGOUT_LIST_METHOD*/
    /*_._VALCLO___V273*/
    meltfptr[272] = (melt_ptr_t) &meltcdat->dclo_216__DBGOUT_LIST_METHOD;
    meltcdat->dclo_216__DBGOUT_LIST_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_216__DBGOUT_LIST_METHOD.nbval = 0;


    /*iniobj dsym_217__DISCR_LIST*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V274*/ meltfptr[273])
        /*_._VALDATA___V274*/ meltfptr[273] = (melt_ptr_t )&meltcdat->dsym_217__DISCR_LIST;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_217__DISCR_LIST", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_217__DISCR_LIST", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_217__DISCR_LIST.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_217__DISCR_LIST.obj_hash = 98407634;
    meltcdat->dsym_217__DISCR_LIST.obj_len = 3;


    /*inistring dstr_218__DISCR_LIST*/
    /*_._VALSTR___V275*/
    meltfptr[274] = (melt_ptr_t) &meltcdat->dstr_218__DISCR_LIST;
    meltcdat->dstr_218__DISCR_LIST.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_218__DISCR_LIST.val, "DISCR_LIST", sizeof (meltcdat->dstr_218__DISCR_LIST.val)-1);
    meltcdat->dstr_218__DISCR_LIST.val[10] = (char)0 ;
    meltcdat->dstr_218__DISCR_LIST.slen = 10 ;

    /*inirout drout_219__DBGOUT_PAIR_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V276*/
    meltfptr[275] = (melt_ptr_t) &meltcdat->drout_219__DBGOUT_PAIR_METHOD;
    meltcdat->drout_219__DBGOUT_PAIR_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_219__DBGOUT_PAIR_METHOD.routdescr, "DBGOUT_PAIR_METHOD @warmelt-debug.melt:989",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_219__DBGOUT_PAIR_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_219__DBGOUT_PAIR_METHOD, meltrout_27_WARMELTmiDEBUG_DBGOUT_PAIR_METHOD);

    /*iniclos dclo_220__DBGOUT_PAIR_METHOD*/
    /*_._VALCLO___V277*/
    meltfptr[276] = (melt_ptr_t) &meltcdat->dclo_220__DBGOUT_PAIR_METHOD;
    meltcdat->dclo_220__DBGOUT_PAIR_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_220__DBGOUT_PAIR_METHOD.nbval = 0;


    /*iniobj dsym_221__DISCR_PAIR*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V278*/ meltfptr[277])
        /*_._VALDATA___V278*/ meltfptr[277] = (melt_ptr_t )&meltcdat->dsym_221__DISCR_PAIR;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_221__DISCR_PAIR", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_221__DISCR_PAIR", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_221__DISCR_PAIR.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_221__DISCR_PAIR.obj_hash = 69333571;
    meltcdat->dsym_221__DISCR_PAIR.obj_len = 3;


    /*inistring dstr_222__DISCR_PAIR*/
    /*_._VALSTR___V279*/
    meltfptr[278] = (melt_ptr_t) &meltcdat->dstr_222__DISCR_PAIR;
    meltcdat->dstr_222__DISCR_PAIR.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_222__DISCR_PAIR.val, "DISCR_PAIR", sizeof (meltcdat->dstr_222__DISCR_PAIR.val)-1);
    meltcdat->dstr_222__DISCR_PAIR.val[10] = (char)0 ;
    meltcdat->dstr_222__DISCR_PAIR.slen = 10 ;

    /*inirout drout_223__DBGOUT_MAPOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V280*/
    meltfptr[279] = (melt_ptr_t) &meltcdat->drout_223__DBGOUT_MAPOBJECT_METHOD;
    meltcdat->drout_223__DBGOUT_MAPOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_223__DBGOUT_MAPOBJECT_METHOD.routdescr, "DBGOUT_MAPOBJECT_METHOD @warmelt-debug.melt:1014",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_223__DBGOUT_MAPOBJECT_METHOD.nbval = 18;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_223__DBGOUT_MAPOBJECT_METHOD, meltrout_28_WARMELTmiDEBUG_DBGOUT_MAPOBJECT_METHOD);

    /*iniclos dclo_224__DBGOUT_MAPOBJECT_METHOD*/
    /*_._VALCLO___V287*/
    meltfptr[286] = (melt_ptr_t) &meltcdat->dclo_224__DBGOUT_MAPOBJECT_METHOD;
    meltcdat->dclo_224__DBGOUT_MAPOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_224__DBGOUT_MAPOBJECT_METHOD.nbval = 0;


    /*iniobj dsym_225__MAPOBJECT_EVERY*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V288*/ meltfptr[287])
        /*_._VALDATA___V288*/ meltfptr[287] = (melt_ptr_t )&meltcdat->dsym_225__MAPOBJECT_EVERY;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_225__MAPOBJECT_EVERY", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_225__MAPOBJECT_EVERY", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_225__MAPOBJECT_EVERY.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_225__MAPOBJECT_EVERY.obj_hash = 726732435;
    meltcdat->dsym_225__MAPOBJECT_EVERY.obj_len = 3;


    /*inistring dstr_226__MAPOBJECT_EVERY*/
    /*_._VALSTR___V289*/
    meltfptr[288] = (melt_ptr_t) &meltcdat->dstr_226__MAPOBJECT_EVERY;
    meltcdat->dstr_226__MAPOBJECT_EVERY.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_226__MAPOBJECT_EVERY.val, "MAPOBJECT_EVERY", sizeof (meltcdat->dstr_226__MAPOBJECT_EVERY.val)-1);
    meltcdat->dstr_226__MAPOBJECT_EVERY.val[15] = (char)0 ;
    meltcdat->dstr_226__MAPOBJECT_EVERY.slen = 15 ;

    /*inirout drout_227__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V281*/
    meltfptr[280] = (melt_ptr_t) &meltcdat->drout_227__LAMBDA_;
    meltcdat->drout_227__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_227__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:1054",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_227__LAMBDA_.nbval = 1;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_227__LAMBDA_, meltrout_29_WARMELTmiDEBUG_LAMBDA_cl3);


    /*iniobj dsym_228__MULTIPLE_SORT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V290*/ meltfptr[289])
        /*_._VALDATA___V290*/ meltfptr[289] = (melt_ptr_t )&meltcdat->dsym_228__MULTIPLE_SORT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_228__MULTIPLE_SORT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_228__MULTIPLE_SORT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_228__MULTIPLE_SORT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_228__MULTIPLE_SORT.obj_hash = 959027783;
    meltcdat->dsym_228__MULTIPLE_SORT.obj_len = 3;


    /*inistring dstr_229__MULTIPLE_SORT*/
    /*_._VALSTR___V291*/
    meltfptr[290] = (melt_ptr_t) &meltcdat->dstr_229__MULTIPLE_SORT;
    meltcdat->dstr_229__MULTIPLE_SORT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_229__MULTIPLE_SORT.val, "MULTIPLE_SORT", sizeof (meltcdat->dstr_229__MULTIPLE_SORT.val)-1);
    meltcdat->dstr_229__MULTIPLE_SORT.val[13] = (char)0 ;
    meltcdat->dstr_229__MULTIPLE_SORT.slen = 13 ;

    /*inirout drout_230__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V282*/
    meltfptr[281] = (melt_ptr_t) &meltcdat->drout_230__LAMBDA_;
    meltcdat->drout_230__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_230__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:1067",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_230__LAMBDA_.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_230__LAMBDA_, meltrout_30_WARMELTmiDEBUG_LAMBDA_cl4);


    /*iniobj dsym_231__COMPARE_OBJ_RANKED*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V292*/ meltfptr[291])
        /*_._VALDATA___V292*/ meltfptr[291] = (melt_ptr_t )&meltcdat->dsym_231__COMPARE_OBJ_RANKED;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_231__COMPARE_OBJ_RANKED", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_231__COMPARE_OBJ_RANKED", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_231__COMPARE_OBJ_RANKED.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_231__COMPARE_OBJ_RANKED.obj_hash = 657124045;
    meltcdat->dsym_231__COMPARE_OBJ_RANKED.obj_len = 3;


    /*inistring dstr_232__COMPARE_OBJ_RANKED*/
    /*_._VALSTR___V293*/
    meltfptr[292] = (melt_ptr_t) &meltcdat->dstr_232__COMPARE_OBJ_RANKED;
    meltcdat->dstr_232__COMPARE_OBJ_RANKED.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_232__COMPARE_OBJ_RANKED.val, "COMPARE_OBJ_RANKED", sizeof (meltcdat->dstr_232__COMPARE_OBJ_RANKED.val)-1);
    meltcdat->dstr_232__COMPARE_OBJ_RANKED.val[18] = (char)0 ;
    meltcdat->dstr_232__COMPARE_OBJ_RANKED.slen = 18 ;

    /*iniboxint dint_233__*/
    /*_._VALBXINT___V283*/
    meltfptr[282] = (melt_ptr_t) &meltcdat->dint_233__;
    meltcdat->dint_233__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_233__.val = -1;

    /*iniboxint dint_234__*/
    /*_._VALBXINT___V284*/
    meltfptr[283] = (melt_ptr_t) &meltcdat->dint_234__;
    meltcdat->dint_234__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_234__.val = 0;

    /*iniboxint dint_235__*/
    /*_._VALBXINT___V285*/
    meltfptr[284] = (melt_ptr_t) &meltcdat->dint_235__;
    meltcdat->dint_235__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_235__.val = 1;


    /*iniobj dsym_236__MULTIPLE_EVERY*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V294*/ meltfptr[293])
        /*_._VALDATA___V294*/ meltfptr[293] = (melt_ptr_t )&meltcdat->dsym_236__MULTIPLE_EVERY;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_236__MULTIPLE_EVERY", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_236__MULTIPLE_EVERY", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_236__MULTIPLE_EVERY.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_236__MULTIPLE_EVERY.obj_hash = 130098745;
    meltcdat->dsym_236__MULTIPLE_EVERY.obj_len = 3;


    /*inistring dstr_237__MULTIPLE_EVERY*/
    /*_._VALSTR___V295*/
    meltfptr[294] = (melt_ptr_t) &meltcdat->dstr_237__MULTIPLE_EVERY;
    meltcdat->dstr_237__MULTIPLE_EVERY.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_237__MULTIPLE_EVERY.val, "MULTIPLE_EVERY", sizeof (meltcdat->dstr_237__MULTIPLE_EVERY.val)-1);
    meltcdat->dstr_237__MULTIPLE_EVERY.val[14] = (char)0 ;
    meltcdat->dstr_237__MULTIPLE_EVERY.slen = 14 ;

    /*inirout drout_238__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V286*/
    meltfptr[285] = (melt_ptr_t) &meltcdat->drout_238__LAMBDA_;
    meltcdat->drout_238__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_238__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:1083",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_238__LAMBDA_.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_238__LAMBDA_, meltrout_31_WARMELTmiDEBUG_LAMBDA_cl5);

    /*inirout drout_239__DBGOUT_MAPSTRING_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V296*/
    meltfptr[295] = (melt_ptr_t) &meltcdat->drout_239__DBGOUT_MAPSTRING_METHOD;
    meltcdat->drout_239__DBGOUT_MAPSTRING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_239__DBGOUT_MAPSTRING_METHOD.routdescr, "DBGOUT_MAPSTRING_METHOD @warmelt-debug.melt:1108",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_239__DBGOUT_MAPSTRING_METHOD.nbval = 14;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_239__DBGOUT_MAPSTRING_METHOD, meltrout_32_WARMELTmiDEBUG_DBGOUT_MAPSTRING_METHOD);

    /*iniclos dclo_240__DBGOUT_MAPSTRING_METHOD*/
    /*_._VALCLO___V302*/
    meltfptr[301] = (melt_ptr_t) &meltcdat->dclo_240__DBGOUT_MAPSTRING_METHOD;
    meltcdat->dclo_240__DBGOUT_MAPSTRING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_240__DBGOUT_MAPSTRING_METHOD.nbval = 0;


    /*iniobj dsym_241__MAPSTRING_EVERY*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V303*/ meltfptr[302])
        /*_._VALDATA___V303*/ meltfptr[302] = (melt_ptr_t )&meltcdat->dsym_241__MAPSTRING_EVERY;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_241__MAPSTRING_EVERY", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_241__MAPSTRING_EVERY", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_241__MAPSTRING_EVERY.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_241__MAPSTRING_EVERY.obj_hash = 173778712;
    meltcdat->dsym_241__MAPSTRING_EVERY.obj_len = 3;


    /*inistring dstr_242__MAPSTRING_EVERY*/
    /*_._VALSTR___V304*/
    meltfptr[303] = (melt_ptr_t) &meltcdat->dstr_242__MAPSTRING_EVERY;
    meltcdat->dstr_242__MAPSTRING_EVERY.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_242__MAPSTRING_EVERY.val, "MAPSTRING_EVERY", sizeof (meltcdat->dstr_242__MAPSTRING_EVERY.val)-1);
    meltcdat->dstr_242__MAPSTRING_EVERY.val[15] = (char)0 ;
    meltcdat->dstr_242__MAPSTRING_EVERY.slen = 15 ;

    /*inirout drout_243__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V297*/
    meltfptr[296] = (melt_ptr_t) &meltcdat->drout_243__LAMBDA_;
    meltcdat->drout_243__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_243__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:1143",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_243__LAMBDA_.nbval = 1;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_243__LAMBDA_, meltrout_33_WARMELTmiDEBUG_LAMBDA_cl6);

    /*inirout drout_244__LAMBDA_*/
    /*iniroutlocvar*/ /*_._VALROUT___V298*/
    meltfptr[297] = (melt_ptr_t) &meltcdat->drout_244__LAMBDA_;
    meltcdat->drout_244__LAMBDA_.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_244__LAMBDA_.routdescr, "LAMBDA_ @warmelt-debug.melt:1155",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_244__LAMBDA_.nbval = 4;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_244__LAMBDA_, meltrout_34_WARMELTmiDEBUG_LAMBDA_cl7);

    /*iniboxint dint_245__*/
    /*_._VALBXINT___V299*/
    meltfptr[298] = (melt_ptr_t) &meltcdat->dint_245__;
    meltcdat->dint_245__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_245__.val = -1;

    /*iniboxint dint_246__*/
    /*_._VALBXINT___V300*/
    meltfptr[299] = (melt_ptr_t) &meltcdat->dint_246__;
    meltcdat->dint_246__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_246__.val = 0;

    /*iniboxint dint_247__*/
    /*_._VALBXINT___V301*/
    meltfptr[300] = (melt_ptr_t) &meltcdat->dint_247__;
    meltcdat->dint_247__.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CONSTANT_INTEGER))));
    meltcdat->dint_247__.val = 1;


    /*iniobj dsym_248__DISCR_MAP_STRINGS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V305*/ meltfptr[304])
        /*_._VALDATA___V305*/ meltfptr[304] = (melt_ptr_t )&meltcdat->dsym_248__DISCR_MAP_STRINGS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_248__DISCR_MAP_STRINGS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_248__DISCR_MAP_STRINGS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_248__DISCR_MAP_STRINGS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_248__DISCR_MAP_STRINGS.obj_hash = 344609662;
    meltcdat->dsym_248__DISCR_MAP_STRINGS.obj_len = 3;


    /*inistring dstr_249__DISCR_MAP_STRINGS*/
    /*_._VALSTR___V306*/
    meltfptr[305] = (melt_ptr_t) &meltcdat->dstr_249__DISCR_MAP_STRINGS;
    meltcdat->dstr_249__DISCR_MAP_STRINGS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_249__DISCR_MAP_STRINGS.val, "DISCR_MAP_STRINGS", sizeof (meltcdat->dstr_249__DISCR_MAP_STRINGS.val)-1);
    meltcdat->dstr_249__DISCR_MAP_STRINGS.val[17] = (char)0 ;
    meltcdat->dstr_249__DISCR_MAP_STRINGS.slen = 17 ;

    /*inirout drout_250__DBGOUT_BUCKETLONG_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V307*/
    meltfptr[306] = (melt_ptr_t) &meltcdat->drout_250__DBGOUT_BUCKETLONG_METHOD;
    meltcdat->drout_250__DBGOUT_BUCKETLONG_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_250__DBGOUT_BUCKETLONG_METHOD.routdescr, "DBGOUT_BUCKETLONG_METHOD @warmelt-debug.melt:1191",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_250__DBGOUT_BUCKETLONG_METHOD.nbval = 6;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_250__DBGOUT_BUCKETLONG_METHOD, meltrout_35_WARMELTmiDEBUG_DBGOUT_BUCKETLONG_METHOD);

    /*iniclos dclo_251__DBGOUT_BUCKETLONG_METHOD*/
    /*_._VALCLO___V308*/
    meltfptr[307] = (melt_ptr_t) &meltcdat->dclo_251__DBGOUT_BUCKETLONG_METHOD;
    meltcdat->dclo_251__DBGOUT_BUCKETLONG_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_251__DBGOUT_BUCKETLONG_METHOD.nbval = 0;


    /*iniobj dsym_252__DISCR_BUCKET_LONGS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V309*/ meltfptr[308])
        /*_._VALDATA___V309*/ meltfptr[308] = (melt_ptr_t )&meltcdat->dsym_252__DISCR_BUCKET_LONGS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_252__DISCR_BUCKET_LONGS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_252__DISCR_BUCKET_LONGS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_252__DISCR_BUCKET_LONGS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_252__DISCR_BUCKET_LONGS.obj_hash = 603682282;
    meltcdat->dsym_252__DISCR_BUCKET_LONGS.obj_len = 3;


    /*inistring dstr_253__DISCR_BUCKET_LONGS*/
    /*_._VALSTR___V310*/
    meltfptr[309] = (melt_ptr_t) &meltcdat->dstr_253__DISCR_BUCKET_LONGS;
    meltcdat->dstr_253__DISCR_BUCKET_LONGS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_253__DISCR_BUCKET_LONGS.val, "DISCR_BUCKET_LONGS", sizeof (meltcdat->dstr_253__DISCR_BUCKET_LONGS.val)-1);
    meltcdat->dstr_253__DISCR_BUCKET_LONGS.val[18] = (char)0 ;
    meltcdat->dstr_253__DISCR_BUCKET_LONGS.slen = 18 ;

    /*inirout drout_254__DBGOUT_JSONOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V311*/
    meltfptr[310] = (melt_ptr_t) &meltcdat->drout_254__DBGOUT_JSONOBJECT_METHOD;
    meltcdat->drout_254__DBGOUT_JSONOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_254__DBGOUT_JSONOBJECT_METHOD.routdescr, "DBGOUT_JSONOBJECT_METHOD @warmelt-debug.melt:1228",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_254__DBGOUT_JSONOBJECT_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_254__DBGOUT_JSONOBJECT_METHOD, meltrout_36_WARMELTmiDEBUG_DBGOUT_JSONOBJECT_METHOD);

    /*iniclos dclo_255__DBGOUT_JSONOBJECT_METHOD*/
    /*_._VALCLO___V312*/
    meltfptr[311] = (melt_ptr_t) &meltcdat->dclo_255__DBGOUT_JSONOBJECT_METHOD;
    meltcdat->dclo_255__DBGOUT_JSONOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_255__DBGOUT_JSONOBJECT_METHOD.nbval = 0;


    /*iniobj dsym_256__DISCR_JSONOBJECT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V313*/ meltfptr[312])
        /*_._VALDATA___V313*/ meltfptr[312] = (melt_ptr_t )&meltcdat->dsym_256__DISCR_JSONOBJECT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_256__DISCR_JSONOBJECT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_256__DISCR_JSONOBJECT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_256__DISCR_JSONOBJECT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_256__DISCR_JSONOBJECT.obj_hash = 358391776;
    meltcdat->dsym_256__DISCR_JSONOBJECT.obj_len = 3;


    /*inistring dstr_257__DISCR_JSONOBJECT*/
    /*_._VALSTR___V314*/
    meltfptr[313] = (melt_ptr_t) &meltcdat->dstr_257__DISCR_JSONOBJECT;
    meltcdat->dstr_257__DISCR_JSONOBJECT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_257__DISCR_JSONOBJECT.val, "DISCR_JSONOBJECT", sizeof (meltcdat->dstr_257__DISCR_JSONOBJECT.val)-1);
    meltcdat->dstr_257__DISCR_JSONOBJECT.val[16] = (char)0 ;
    meltcdat->dstr_257__DISCR_JSONOBJECT.slen = 16 ;

    /*inirout drout_258__DBGOUT_ANYOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V315*/
    meltfptr[314] = (melt_ptr_t) &meltcdat->drout_258__DBGOUT_ANYOBJECT_METHOD;
    meltcdat->drout_258__DBGOUT_ANYOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_258__DBGOUT_ANYOBJECT_METHOD.routdescr, "DBGOUT_ANYOBJECT_METHOD @warmelt-debug.melt:1262",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_258__DBGOUT_ANYOBJECT_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_258__DBGOUT_ANYOBJECT_METHOD, meltrout_37_WARMELTmiDEBUG_DBGOUT_ANYOBJECT_METHOD);

    /*iniclos dclo_259__DBGOUT_ANYOBJECT_METHOD*/
    /*_._VALCLO___V316*/
    meltfptr[315] = (melt_ptr_t) &meltcdat->dclo_259__DBGOUT_ANYOBJECT_METHOD;
    meltcdat->dclo_259__DBGOUT_ANYOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_259__DBGOUT_ANYOBJECT_METHOD.nbval = 0;

    /*inirout drout_260__DBGOUT_ANYRECV_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V317*/
    meltfptr[316] = (melt_ptr_t) &meltcdat->drout_260__DBGOUT_ANYRECV_METHOD;
    meltcdat->drout_260__DBGOUT_ANYRECV_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_260__DBGOUT_ANYRECV_METHOD.routdescr, "DBGOUT_ANYRECV_METHOD @warmelt-debug.melt:1287",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_260__DBGOUT_ANYRECV_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_260__DBGOUT_ANYRECV_METHOD, meltrout_38_WARMELTmiDEBUG_DBGOUT_ANYRECV_METHOD);

    /*iniclos dclo_261__DBGOUT_ANYRECV_METHOD*/
    /*_._VALCLO___V318*/
    meltfptr[317] = (melt_ptr_t) &meltcdat->dclo_261__DBGOUT_ANYRECV_METHOD;
    meltcdat->dclo_261__DBGOUT_ANYRECV_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_261__DBGOUT_ANYRECV_METHOD.nbval = 0;


    /*iniobj dsym_262__DISCR_ANY_RECEIVER*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V319*/ meltfptr[318])
        /*_._VALDATA___V319*/ meltfptr[318] = (melt_ptr_t )&meltcdat->dsym_262__DISCR_ANY_RECEIVER;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_262__DISCR_ANY_RECEIVER", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_262__DISCR_ANY_RECEIVER", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_262__DISCR_ANY_RECEIVER.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_262__DISCR_ANY_RECEIVER.obj_hash = 95947314;
    meltcdat->dsym_262__DISCR_ANY_RECEIVER.obj_len = 3;


    /*inistring dstr_263__DISCR_ANY_RECEIVER*/
    /*_._VALSTR___V320*/
    meltfptr[319] = (melt_ptr_t) &meltcdat->dstr_263__DISCR_ANY_RECEIVER;
    meltcdat->dstr_263__DISCR_ANY_RECEIVER.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_263__DISCR_ANY_RECEIVER.val, "DISCR_ANY_RECEIVER", sizeof (meltcdat->dstr_263__DISCR_ANY_RECEIVER.val)-1);
    meltcdat->dstr_263__DISCR_ANY_RECEIVER.val[18] = (char)0 ;
    meltcdat->dstr_263__DISCR_ANY_RECEIVER.slen = 18 ;

    /*inirout drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V321*/
    meltfptr[320] = (melt_ptr_t) &meltcdat->drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD;
    meltcdat->drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD.routdescr, "DBGOUTAGAIN_ANYOBJECT_METHOD @warmelt-debug.melt:1298",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD.nbval = 2;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD, meltrout_39_WARMELTmiDEBUG_DBGOUTAGAIN_ANYOBJECT_METHOD);

    /*iniclos dclo_265__DBGOUTAGAIN_ANYOBJECT_METHOD*/
    /*_._VALCLO___V322*/
    meltfptr[321] = (melt_ptr_t) &meltcdat->dclo_265__DBGOUTAGAIN_ANYOBJECT_METHOD;
    meltcdat->dclo_265__DBGOUTAGAIN_ANYOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_265__DBGOUTAGAIN_ANYOBJECT_METHOD.nbval = 0;

    /*inirout drout_266__DBGOUT_NAMEDOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V323*/
    meltfptr[322] = (melt_ptr_t) &meltcdat->drout_266__DBGOUT_NAMEDOBJECT_METHOD;
    meltcdat->drout_266__DBGOUT_NAMEDOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_266__DBGOUT_NAMEDOBJECT_METHOD.routdescr, "DBGOUT_NAMEDOBJECT_METHOD @warmelt-debug.melt:1316",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_266__DBGOUT_NAMEDOBJECT_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_266__DBGOUT_NAMEDOBJECT_METHOD, meltrout_40_WARMELTmiDEBUG_DBGOUT_NAMEDOBJECT_METHOD);

    /*iniclos dclo_267__DBGOUT_NAMEDOBJECT_METHOD*/
    /*_._VALCLO___V324*/
    meltfptr[323] = (melt_ptr_t) &meltcdat->dclo_267__DBGOUT_NAMEDOBJECT_METHOD;
    meltcdat->dclo_267__DBGOUT_NAMEDOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_267__DBGOUT_NAMEDOBJECT_METHOD.nbval = 0;


    /*iniobj dsym_268__DBGOUT_NAMEDOBJECT_METHOD*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V325*/ meltfptr[324])
        /*_._VALDATA___V325*/ meltfptr[324] = (melt_ptr_t )&meltcdat->dsym_268__DBGOUT_NAMEDOBJECT_METHOD;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_268__DBGOUT_NAMEDOBJECT_METHOD", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_268__DBGOUT_NAMEDOBJECT_METHOD", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_268__DBGOUT_NAMEDOBJECT_METHOD.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_268__DBGOUT_NAMEDOBJECT_METHOD.obj_hash = 359355803;
    meltcdat->dsym_268__DBGOUT_NAMEDOBJECT_METHOD.obj_len = 3;


    /*inistring dstr_269__DBGOUT_NAMEDOBJECT_METHO*/
    /*_._VALSTR___V326*/
    meltfptr[325] = (melt_ptr_t) &meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO;
    meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO.val, "DBGOUT_NAMEDOBJECT_METHOD", sizeof (meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO.val)-1);
    meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO.val[25] = (char)0 ;
    meltcdat->dstr_269__DBGOUT_NAMEDOBJECT_METHO.slen = 25 ;

    /*inirout drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V327*/
    meltfptr[326] = (melt_ptr_t) &meltcdat->drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD;
    meltcdat->drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD.routdescr, "DBGOUTAGAIN_NAMEDOBJECT_METHOD @warmelt-debug.melt:1353",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD, meltrout_41_WARMELTmiDEBUG_DBGOUTAGAIN_NAMEDOBJECT_METHOD);

    /*iniclos dclo_271__DBGOUTAGAIN_NAMEDOBJECT_METHOD*/
    /*_._VALCLO___V328*/
    meltfptr[327] = (melt_ptr_t) &meltcdat->dclo_271__DBGOUTAGAIN_NAMEDOBJECT_METHOD;
    meltcdat->dclo_271__DBGOUTAGAIN_NAMEDOBJECT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_271__DBGOUTAGAIN_NAMEDOBJECT_METHOD.nbval = 0;

    /*inirout drout_272__DBGOUTAGAIN_SYMBOL_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V329*/
    meltfptr[328] = (melt_ptr_t) &meltcdat->drout_272__DBGOUTAGAIN_SYMBOL_METHOD;
    meltcdat->drout_272__DBGOUTAGAIN_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_272__DBGOUTAGAIN_SYMBOL_METHOD.routdescr, "DBGOUTAGAIN_SYMBOL_METHOD @warmelt-debug.melt:1371",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_272__DBGOUTAGAIN_SYMBOL_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_272__DBGOUTAGAIN_SYMBOL_METHOD, meltrout_42_WARMELTmiDEBUG_DBGOUTAGAIN_SYMBOL_METHOD);

    /*iniclos dclo_273__DBGOUTAGAIN_SYMBOL_METHOD*/
    /*_._VALCLO___V330*/
    meltfptr[329] = (melt_ptr_t) &meltcdat->dclo_273__DBGOUTAGAIN_SYMBOL_METHOD;
    meltcdat->dclo_273__DBGOUTAGAIN_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_273__DBGOUTAGAIN_SYMBOL_METHOD.nbval = 0;


    /*iniobj dsym_274__CLASS_SYMBOL*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V331*/ meltfptr[330])
        /*_._VALDATA___V331*/ meltfptr[330] = (melt_ptr_t )&meltcdat->dsym_274__CLASS_SYMBOL;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_274__CLASS_SYMBOL", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_274__CLASS_SYMBOL", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_274__CLASS_SYMBOL.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_274__CLASS_SYMBOL.obj_hash = 53524182;
    meltcdat->dsym_274__CLASS_SYMBOL.obj_len = 3;


    /*inistring dstr_275__CLASS_SYMBOL*/
    /*_._VALSTR___V332*/
    meltfptr[331] = (melt_ptr_t) &meltcdat->dstr_275__CLASS_SYMBOL;
    meltcdat->dstr_275__CLASS_SYMBOL.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_275__CLASS_SYMBOL.val, "CLASS_SYMBOL", sizeof (meltcdat->dstr_275__CLASS_SYMBOL.val)-1);
    meltcdat->dstr_275__CLASS_SYMBOL.val[12] = (char)0 ;
    meltcdat->dstr_275__CLASS_SYMBOL.slen = 12 ;

    /*inirout drout_276__DBGOUT_SYMBOL_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V333*/
    meltfptr[332] = (melt_ptr_t) &meltcdat->drout_276__DBGOUT_SYMBOL_METHOD;
    meltcdat->drout_276__DBGOUT_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_276__DBGOUT_SYMBOL_METHOD.routdescr, "DBGOUT_SYMBOL_METHOD @warmelt-debug.melt:1389",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_276__DBGOUT_SYMBOL_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_276__DBGOUT_SYMBOL_METHOD, meltrout_43_WARMELTmiDEBUG_DBGOUT_SYMBOL_METHOD);

    /*iniclos dclo_277__DBGOUT_SYMBOL_METHOD*/
    /*_._VALCLO___V334*/
    meltfptr[333] = (melt_ptr_t) &meltcdat->dclo_277__DBGOUT_SYMBOL_METHOD;
    meltcdat->dclo_277__DBGOUT_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_277__DBGOUT_SYMBOL_METHOD.nbval = 0;

    /*inirout drout_278__DBGOUT_CLASS_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V335*/
    meltfptr[334] = (melt_ptr_t) &meltcdat->drout_278__DBGOUT_CLASS_METHOD;
    meltcdat->drout_278__DBGOUT_CLASS_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_278__DBGOUT_CLASS_METHOD.routdescr, "DBGOUT_CLASS_METHOD @warmelt-debug.melt:1399",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_278__DBGOUT_CLASS_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_278__DBGOUT_CLASS_METHOD, meltrout_44_WARMELTmiDEBUG_DBGOUT_CLASS_METHOD);

    /*iniclos dclo_279__DBGOUT_CLASS_METHOD*/
    /*_._VALCLO___V336*/
    meltfptr[335] = (melt_ptr_t) &meltcdat->dclo_279__DBGOUT_CLASS_METHOD;
    meltcdat->dclo_279__DBGOUT_CLASS_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_279__DBGOUT_CLASS_METHOD.nbval = 0;


    /*iniobj dsym_280__CLASS_CLASS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V337*/ meltfptr[336])
        /*_._VALDATA___V337*/ meltfptr[336] = (melt_ptr_t )&meltcdat->dsym_280__CLASS_CLASS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_280__CLASS_CLASS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_280__CLASS_CLASS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_280__CLASS_CLASS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_280__CLASS_CLASS.obj_hash = 60141292;
    meltcdat->dsym_280__CLASS_CLASS.obj_len = 3;


    /*inistring dstr_281__CLASS_CLASS*/
    /*_._VALSTR___V338*/
    meltfptr[337] = (melt_ptr_t) &meltcdat->dstr_281__CLASS_CLASS;
    meltcdat->dstr_281__CLASS_CLASS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_281__CLASS_CLASS.val, "CLASS_CLASS", sizeof (meltcdat->dstr_281__CLASS_CLASS.val)-1);
    meltcdat->dstr_281__CLASS_CLASS.val[11] = (char)0 ;
    meltcdat->dstr_281__CLASS_CLASS.slen = 11 ;

    /*inirout drout_282__DBGOUTAGAIN_KEYWORD_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V339*/
    meltfptr[338] = (melt_ptr_t) &meltcdat->drout_282__DBGOUTAGAIN_KEYWORD_METHOD;
    meltcdat->drout_282__DBGOUTAGAIN_KEYWORD_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_282__DBGOUTAGAIN_KEYWORD_METHOD.routdescr, "DBGOUTAGAIN_KEYWORD_METHOD @warmelt-debug.melt:1409",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_282__DBGOUTAGAIN_KEYWORD_METHOD.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_282__DBGOUTAGAIN_KEYWORD_METHOD, meltrout_45_WARMELTmiDEBUG_DBGOUTAGAIN_KEYWORD_METHOD);

    /*iniclos dclo_283__DBGOUTAGAIN_KEYWORD_METHOD*/
    /*_._VALCLO___V340*/
    meltfptr[339] = (melt_ptr_t) &meltcdat->dclo_283__DBGOUTAGAIN_KEYWORD_METHOD;
    meltcdat->dclo_283__DBGOUTAGAIN_KEYWORD_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_283__DBGOUTAGAIN_KEYWORD_METHOD.nbval = 0;


    /*iniobj dsym_284__CLASS_KEYWORD*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V341*/ meltfptr[340])
        /*_._VALDATA___V341*/ meltfptr[340] = (melt_ptr_t )&meltcdat->dsym_284__CLASS_KEYWORD;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_284__CLASS_KEYWORD", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_284__CLASS_KEYWORD", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_284__CLASS_KEYWORD.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_284__CLASS_KEYWORD.obj_hash = 14992133;
    meltcdat->dsym_284__CLASS_KEYWORD.obj_len = 3;


    /*inistring dstr_285__CLASS_KEYWORD*/
    /*_._VALSTR___V342*/
    meltfptr[341] = (melt_ptr_t) &meltcdat->dstr_285__CLASS_KEYWORD;
    meltcdat->dstr_285__CLASS_KEYWORD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_285__CLASS_KEYWORD.val, "CLASS_KEYWORD", sizeof (meltcdat->dstr_285__CLASS_KEYWORD.val)-1);
    meltcdat->dstr_285__CLASS_KEYWORD.val[13] = (char)0 ;
    meltcdat->dstr_285__CLASS_KEYWORD.slen = 13 ;

    /*inirout drout_286__DBGOUT_KEYWORD_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V343*/
    meltfptr[342] = (melt_ptr_t) &meltcdat->drout_286__DBGOUT_KEYWORD_METHOD;
    meltcdat->drout_286__DBGOUT_KEYWORD_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_286__DBGOUT_KEYWORD_METHOD.routdescr, "DBGOUT_KEYWORD_METHOD @warmelt-debug.melt:1422",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_286__DBGOUT_KEYWORD_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_286__DBGOUT_KEYWORD_METHOD, meltrout_46_WARMELTmiDEBUG_DBGOUT_KEYWORD_METHOD);

    /*iniclos dclo_287__DBGOUT_KEYWORD_METHOD*/
    /*_._VALCLO___V344*/
    meltfptr[343] = (melt_ptr_t) &meltcdat->dclo_287__DBGOUT_KEYWORD_METHOD;
    meltcdat->dclo_287__DBGOUT_KEYWORD_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_287__DBGOUT_KEYWORD_METHOD.nbval = 0;

    /*inirout drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V345*/
    meltfptr[344] = (melt_ptr_t) &meltcdat->drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD;
    meltcdat->drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD.routdescr, "DBGOUTAGAIN_CLONED_SYMBOL_METHOD @warmelt-debug.melt:1432",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD.nbval = 0;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_288__DBGOUTAGAIN_CLONED_SYMBOL_METHOD, meltrout_47_WARMELTmiDEBUG_DBGOUTAGAIN_CLONED_SYMBOL_METHOD);

    /*iniclos dclo_289__DBGOUTAGAIN_CLONED_SYMBOL_METHOD*/
    /*_._VALCLO___V346*/
    meltfptr[345] = (melt_ptr_t) &meltcdat->dclo_289__DBGOUTAGAIN_CLONED_SYMBOL_METHOD;
    meltcdat->dclo_289__DBGOUTAGAIN_CLONED_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_289__DBGOUTAGAIN_CLONED_SYMBOL_METHOD.nbval = 0;


    /*iniobj dsym_290__CLASS_CLONED_SYMBOL*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V347*/ meltfptr[346])
        /*_._VALDATA___V347*/ meltfptr[346] = (melt_ptr_t )&meltcdat->dsym_290__CLASS_CLONED_SYMBOL;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_290__CLASS_CLONED_SYMBOL", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_290__CLASS_CLONED_SYMBOL", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_290__CLASS_CLONED_SYMBOL.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_290__CLASS_CLONED_SYMBOL.obj_hash = 933549728;
    meltcdat->dsym_290__CLASS_CLONED_SYMBOL.obj_len = 3;


    /*inistring dstr_291__CLASS_CLONED_SYMBOL*/
    /*_._VALSTR___V348*/
    meltfptr[347] = (melt_ptr_t) &meltcdat->dstr_291__CLASS_CLONED_SYMBOL;
    meltcdat->dstr_291__CLASS_CLONED_SYMBOL.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_291__CLASS_CLONED_SYMBOL.val, "CLASS_CLONED_SYMBOL", sizeof (meltcdat->dstr_291__CLASS_CLONED_SYMBOL.val)-1);
    meltcdat->dstr_291__CLASS_CLONED_SYMBOL.val[19] = (char)0 ;
    meltcdat->dstr_291__CLASS_CLONED_SYMBOL.slen = 19 ;

    /*inirout drout_292__DBGOUT_CLONED_SYMBOL_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V349*/
    meltfptr[348] = (melt_ptr_t) &meltcdat->drout_292__DBGOUT_CLONED_SYMBOL_METHOD;
    meltcdat->drout_292__DBGOUT_CLONED_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_292__DBGOUT_CLONED_SYMBOL_METHOD.routdescr, "DBGOUT_CLONED_SYMBOL_METHOD @warmelt-debug.melt:1447",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_292__DBGOUT_CLONED_SYMBOL_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_292__DBGOUT_CLONED_SYMBOL_METHOD, meltrout_48_WARMELTmiDEBUG_DBGOUT_CLONED_SYMBOL_METHOD);

    /*iniclos dclo_293__DBGOUT_CLONED_SYMBOL_METHOD*/
    /*_._VALCLO___V350*/
    meltfptr[349] = (melt_ptr_t) &meltcdat->dclo_293__DBGOUT_CLONED_SYMBOL_METHOD;
    meltcdat->dclo_293__DBGOUT_CLONED_SYMBOL_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_293__DBGOUT_CLONED_SYMBOL_METHOD.nbval = 0;

    /*inirout drout_294__DBGOUT_ENVIRONMENT_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V351*/
    meltfptr[350] = (melt_ptr_t) &meltcdat->drout_294__DBGOUT_ENVIRONMENT_METHOD;
    meltcdat->drout_294__DBGOUT_ENVIRONMENT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_294__DBGOUT_ENVIRONMENT_METHOD.routdescr, "DBGOUT_ENVIRONMENT_METHOD @warmelt-debug.melt:1458",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_294__DBGOUT_ENVIRONMENT_METHOD.nbval = 10;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_294__DBGOUT_ENVIRONMENT_METHOD, meltrout_49_WARMELTmiDEBUG_DBGOUT_ENVIRONMENT_METHOD);

    /*iniclos dclo_295__DBGOUT_ENVIRONMENT_METHOD*/
    /*_._VALCLO___V352*/
    meltfptr[351] = (melt_ptr_t) &meltcdat->dclo_295__DBGOUT_ENVIRONMENT_METHOD;
    meltcdat->dclo_295__DBGOUT_ENVIRONMENT_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_295__DBGOUT_ENVIRONMENT_METHOD.nbval = 0;


    /*iniobj dsym_296__CLASS_ENVIRONMENT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V353*/ meltfptr[352])
        /*_._VALDATA___V353*/ meltfptr[352] = (melt_ptr_t )&meltcdat->dsym_296__CLASS_ENVIRONMENT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_296__CLASS_ENVIRONMENT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_296__CLASS_ENVIRONMENT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_296__CLASS_ENVIRONMENT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_296__CLASS_ENVIRONMENT.obj_hash = 59212821;
    meltcdat->dsym_296__CLASS_ENVIRONMENT.obj_len = 3;


    /*inistring dstr_297__CLASS_ENVIRONMENT*/
    /*_._VALSTR___V354*/
    meltfptr[353] = (melt_ptr_t) &meltcdat->dstr_297__CLASS_ENVIRONMENT;
    meltcdat->dstr_297__CLASS_ENVIRONMENT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_297__CLASS_ENVIRONMENT.val, "CLASS_ENVIRONMENT", sizeof (meltcdat->dstr_297__CLASS_ENVIRONMENT.val)-1);
    meltcdat->dstr_297__CLASS_ENVIRONMENT.val[17] = (char)0 ;
    meltcdat->dstr_297__CLASS_ENVIRONMENT.slen = 17 ;


    /*iniobj dsym_298__ENV_PREV*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V355*/ meltfptr[354])
        /*_._VALDATA___V355*/ meltfptr[354] = (melt_ptr_t )&meltcdat->dsym_298__ENV_PREV;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_298__ENV_PREV", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_298__ENV_PREV", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_298__ENV_PREV.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_298__ENV_PREV.obj_hash = 363634370;
    meltcdat->dsym_298__ENV_PREV.obj_len = 3;


    /*inistring dstr_299__ENV_PREV*/
    /*_._VALSTR___V356*/
    meltfptr[355] = (melt_ptr_t) &meltcdat->dstr_299__ENV_PREV;
    meltcdat->dstr_299__ENV_PREV.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_299__ENV_PREV.val, "ENV_PREV", sizeof (meltcdat->dstr_299__ENV_PREV.val)-1);
    meltcdat->dstr_299__ENV_PREV.val[8] = (char)0 ;
    meltcdat->dstr_299__ENV_PREV.slen = 8 ;


    /*iniobj dsym_300__CLASS_DESCRIBED_ENVIRONMENT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V357*/ meltfptr[356])
        /*_._VALDATA___V357*/ meltfptr[356] = (melt_ptr_t )&meltcdat->dsym_300__CLASS_DESCRIBED_ENVIRONMENT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_300__CLASS_DESCRIBED_ENVIRONMENT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_300__CLASS_DESCRIBED_ENVIRONMENT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_300__CLASS_DESCRIBED_ENVIRONMENT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_300__CLASS_DESCRIBED_ENVIRONMENT.obj_hash = 918201662;
    meltcdat->dsym_300__CLASS_DESCRIBED_ENVIRONMENT.obj_len = 3;


    /*inistring dstr_301__CLASS_DESCRIBED_ENVIRONM*/
    /*_._VALSTR___V358*/
    meltfptr[357] = (melt_ptr_t) &meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM;
    meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM.val, "CLASS_DESCRIBED_ENVIRONMENT", sizeof (meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM.val)-1);
    meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM.val[27] = (char)0 ;
    meltcdat->dstr_301__CLASS_DESCRIBED_ENVIRONM.slen = 27 ;

    /*inirout drout_302__DBGOUTAGAIN_CTYPE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V359*/
    meltfptr[358] = (melt_ptr_t) &meltcdat->drout_302__DBGOUTAGAIN_CTYPE_METHOD;
    meltcdat->drout_302__DBGOUTAGAIN_CTYPE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_302__DBGOUTAGAIN_CTYPE_METHOD.routdescr, "DBGOUTAGAIN_CTYPE_METHOD @warmelt-debug.melt:1530",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_302__DBGOUTAGAIN_CTYPE_METHOD.nbval = 0;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_302__DBGOUTAGAIN_CTYPE_METHOD, meltrout_50_WARMELTmiDEBUG_DBGOUTAGAIN_CTYPE_METHOD);

    /*iniclos dclo_303__DBGOUTAGAIN_CTYPE_METHOD*/
    /*_._VALCLO___V360*/
    meltfptr[359] = (melt_ptr_t) &meltcdat->dclo_303__DBGOUTAGAIN_CTYPE_METHOD;
    meltcdat->dclo_303__DBGOUTAGAIN_CTYPE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_303__DBGOUTAGAIN_CTYPE_METHOD.nbval = 0;


    /*iniobj dsym_304__CLASS_CTYPE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V361*/ meltfptr[360])
        /*_._VALDATA___V361*/ meltfptr[360] = (melt_ptr_t )&meltcdat->dsym_304__CLASS_CTYPE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_304__CLASS_CTYPE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_304__CLASS_CTYPE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_304__CLASS_CTYPE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_304__CLASS_CTYPE.obj_hash = 78610803;
    meltcdat->dsym_304__CLASS_CTYPE.obj_len = 3;


    /*inistring dstr_305__CLASS_CTYPE*/
    /*_._VALSTR___V362*/
    meltfptr[361] = (melt_ptr_t) &meltcdat->dstr_305__CLASS_CTYPE;
    meltcdat->dstr_305__CLASS_CTYPE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_305__CLASS_CTYPE.val, "CLASS_CTYPE", sizeof (meltcdat->dstr_305__CLASS_CTYPE.val)-1);
    meltcdat->dstr_305__CLASS_CTYPE.val[11] = (char)0 ;
    meltcdat->dstr_305__CLASS_CTYPE.slen = 11 ;

    /*inirout drout_306__DBGOUT_CTYPE_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V363*/
    meltfptr[362] = (melt_ptr_t) &meltcdat->drout_306__DBGOUT_CTYPE_METHOD;
    meltcdat->drout_306__DBGOUT_CTYPE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_306__DBGOUT_CTYPE_METHOD.routdescr, "DBGOUT_CTYPE_METHOD @warmelt-debug.melt:1542",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_306__DBGOUT_CTYPE_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_306__DBGOUT_CTYPE_METHOD, meltrout_51_WARMELTmiDEBUG_DBGOUT_CTYPE_METHOD);

    /*iniclos dclo_307__DBGOUT_CTYPE_METHOD*/
    /*_._VALCLO___V364*/
    meltfptr[363] = (melt_ptr_t) &meltcdat->dclo_307__DBGOUT_CTYPE_METHOD;
    meltcdat->dclo_307__DBGOUT_CTYPE_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_307__DBGOUT_CTYPE_METHOD.nbval = 0;

    /*inirout drout_308__DBGOUT_ANYBINDING_METHOD*/
    /*iniroutlocvar*/ /*_._VALROUT___V365*/
    meltfptr[364] = (melt_ptr_t) &meltcdat->drout_308__DBGOUT_ANYBINDING_METHOD;
    meltcdat->drout_308__DBGOUT_ANYBINDING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_308__DBGOUT_ANYBINDING_METHOD.routdescr, "DBGOUT_ANYBINDING_METHOD @warmelt-debug.melt:1552",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_308__DBGOUT_ANYBINDING_METHOD.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_308__DBGOUT_ANYBINDING_METHOD, meltrout_52_WARMELTmiDEBUG_DBGOUT_ANYBINDING_METHOD);

    /*iniclos dclo_309__DBGOUT_ANYBINDING_METHOD*/
    /*_._VALCLO___V366*/
    meltfptr[365] = (melt_ptr_t) &meltcdat->dclo_309__DBGOUT_ANYBINDING_METHOD;
    meltcdat->dclo_309__DBGOUT_ANYBINDING_METHOD.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_309__DBGOUT_ANYBINDING_METHOD.nbval = 0;


    /*iniobj dsym_310__CLASS_ANY_BINDING*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V367*/ meltfptr[366])
        /*_._VALDATA___V367*/ meltfptr[366] = (melt_ptr_t )&meltcdat->dsym_310__CLASS_ANY_BINDING;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_310__CLASS_ANY_BINDING", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_310__CLASS_ANY_BINDING", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_310__CLASS_ANY_BINDING.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_310__CLASS_ANY_BINDING.obj_hash = 935770;
    meltcdat->dsym_310__CLASS_ANY_BINDING.obj_len = 3;


    /*inistring dstr_311__CLASS_ANY_BINDING*/
    /*_._VALSTR___V368*/
    meltfptr[367] = (melt_ptr_t) &meltcdat->dstr_311__CLASS_ANY_BINDING;
    meltcdat->dstr_311__CLASS_ANY_BINDING.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_311__CLASS_ANY_BINDING.val, "CLASS_ANY_BINDING", sizeof (meltcdat->dstr_311__CLASS_ANY_BINDING.val)-1);
    meltcdat->dstr_311__CLASS_ANY_BINDING.val[17] = (char)0 ;
    meltcdat->dstr_311__CLASS_ANY_BINDING.slen = 17 ;

    /*inirout drout_312__DEBUG_LESS_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V369*/
    meltfptr[368] = (melt_ptr_t) &meltcdat->drout_312__DEBUG_LESS_FUN;
    meltcdat->drout_312__DEBUG_LESS_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_312__DEBUG_LESS_FUN.routdescr, "DEBUG_LESS_FUN @warmelt-debug.melt:1581",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_312__DEBUG_LESS_FUN.nbval = 3;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_312__DEBUG_LESS_FUN, meltrout_53_WARMELTmiDEBUG_DEBUG_LESS_FUN);

    /*iniclos dclo_313__DEBUG_LESS_FUN*/
    /*_._VALCLO___V370*/
    meltfptr[369] = (melt_ptr_t) &meltcdat->dclo_313__DEBUG_LESS_FUN;
    meltcdat->dclo_313__DEBUG_LESS_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_313__DEBUG_LESS_FUN.nbval = 0;


    /*iniobj dsym_314__DEBUG_LESS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V371*/ meltfptr[370])
        /*_._VALDATA___V371*/ meltfptr[370] = (melt_ptr_t )&meltcdat->dsym_314__DEBUG_LESS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_314__DEBUG_LESS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_314__DEBUG_LESS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_314__DEBUG_LESS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_314__DEBUG_LESS.obj_hash = 977096719;
    meltcdat->dsym_314__DEBUG_LESS.obj_len = 3;


    /*inistring dstr_315__DEBUG_LESS*/
    /*_._VALSTR___V372*/
    meltfptr[371] = (melt_ptr_t) &meltcdat->dstr_315__DEBUG_LESS;
    meltcdat->dstr_315__DEBUG_LESS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_315__DEBUG_LESS.val, "DEBUG_LESS", sizeof (meltcdat->dstr_315__DEBUG_LESS.val)-1);
    meltcdat->dstr_315__DEBUG_LESS.val[10] = (char)0 ;
    meltcdat->dstr_315__DEBUG_LESS.slen = 10 ;

    /*inirout drout_316__DEBUG_MORE_FUN*/
    /*iniroutlocvar*/ /*_._VALROUT___V373*/
    meltfptr[372] = (melt_ptr_t) &meltcdat->drout_316__DEBUG_MORE_FUN;
    meltcdat->drout_316__DEBUG_MORE_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_316__DEBUG_MORE_FUN.routdescr, "DEBUG_MORE_FUN @warmelt-debug.melt:1595",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_316__DEBUG_MORE_FUN.nbval = 6;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_316__DEBUG_MORE_FUN, meltrout_54_WARMELTmiDEBUG_DEBUG_MORE_FUN);

    /*iniclos dclo_317__DEBUG_MORE_FUN*/
    /*_._VALCLO___V374*/
    meltfptr[373] = (melt_ptr_t) &meltcdat->dclo_317__DEBUG_MORE_FUN;
    meltcdat->dclo_317__DEBUG_MORE_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_317__DEBUG_MORE_FUN.nbval = 0;


    /*iniobj dsym_318__DEBUG_MORE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V375*/ meltfptr[374])
        /*_._VALDATA___V375*/ meltfptr[374] = (melt_ptr_t )&meltcdat->dsym_318__DEBUG_MORE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_318__DEBUG_MORE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_318__DEBUG_MORE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_318__DEBUG_MORE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_318__DEBUG_MORE.obj_hash = 1017542478;
    meltcdat->dsym_318__DEBUG_MORE.obj_len = 3;


    /*inistring dstr_319__DEBUG_MORE*/
    /*_._VALSTR___V376*/
    meltfptr[375] = (melt_ptr_t) &meltcdat->dstr_319__DEBUG_MORE;
    meltcdat->dstr_319__DEBUG_MORE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_319__DEBUG_MORE.val, "DEBUG_MORE", sizeof (meltcdat->dstr_319__DEBUG_MORE.val)-1);
    meltcdat->dstr_319__DEBUG_MORE.val[10] = (char)0 ;
    meltcdat->dstr_319__DEBUG_MORE.slen = 10 ;

    /*inirout drout_320__DISPLAY_DEBUG_MESSAGE*/
    /*iniroutlocvar*/ /*_._VALROUT___V377*/
    meltfptr[376] = (melt_ptr_t) &meltcdat->drout_320__DISPLAY_DEBUG_MESSAGE;
    meltcdat->drout_320__DISPLAY_DEBUG_MESSAGE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_ROUTINE))));
    strncpy (meltcdat->drout_320__DISPLAY_DEBUG_MESSAGE.routdescr, "DISPLAY_DEBUG_MESSAGE @warmelt-debug.melt:1627",  MELT_ROUTDESCR_LEN - 1);
    meltcdat->drout_320__DISPLAY_DEBUG_MESSAGE.nbval = 5;
    MELT_ROUTINE_SET_ROUTCODE(&meltcdat->drout_320__DISPLAY_DEBUG_MESSAGE, meltrout_55_WARMELTmiDEBUG_DISPLAY_DEBUG_MESSAGE);

    /*iniclos dclo_321__DISPLAY_DEBUG_MESSAGE*/
    /*_._VALCLO___V378*/
    meltfptr[377] = (melt_ptr_t) &meltcdat->dclo_321__DISPLAY_DEBUG_MESSAGE;
    meltcdat->dclo_321__DISPLAY_DEBUG_MESSAGE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_CLOSURE))));
    meltcdat->dclo_321__DISPLAY_DEBUG_MESSAGE.nbval = 0;


    /*iniobj dsym_322__DBG_OUT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V379*/ meltfptr[378])
        /*_._VALDATA___V379*/ meltfptr[378] = (melt_ptr_t )&meltcdat->dsym_322__DBG_OUT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_322__DBG_OUT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_322__DBG_OUT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_322__DBG_OUT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_322__DBG_OUT.obj_hash = 492035674;
    meltcdat->dsym_322__DBG_OUT.obj_len = 3;


    /*inistring dstr_323__DBG_OUT*/
    /*_._VALSTR___V380*/
    meltfptr[379] = (melt_ptr_t) &meltcdat->dstr_323__DBG_OUT;
    meltcdat->dstr_323__DBG_OUT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_323__DBG_OUT.val, "DBG_OUT", sizeof (meltcdat->dstr_323__DBG_OUT.val)-1);
    meltcdat->dstr_323__DBG_OUT.val[7] = (char)0 ;
    meltcdat->dstr_323__DBG_OUT.slen = 7 ;


    /*iniobj dsym_324__DBG_OUTOBJECT*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V381*/ meltfptr[380])
        /*_._VALDATA___V381*/ meltfptr[380] = (melt_ptr_t )&meltcdat->dsym_324__DBG_OUTOBJECT;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_324__DBG_OUTOBJECT", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_324__DBG_OUTOBJECT", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_324__DBG_OUTOBJECT.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_324__DBG_OUTOBJECT.obj_hash = 723698673;
    meltcdat->dsym_324__DBG_OUTOBJECT.obj_len = 3;


    /*inistring dstr_325__DBG_OUTOBJECT*/
    /*_._VALSTR___V382*/
    meltfptr[381] = (melt_ptr_t) &meltcdat->dstr_325__DBG_OUTOBJECT;
    meltcdat->dstr_325__DBG_OUTOBJECT.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_325__DBG_OUTOBJECT.val, "DBG_OUTOBJECT", sizeof (meltcdat->dstr_325__DBG_OUTOBJECT.val)-1);
    meltcdat->dstr_325__DBG_OUTOBJECT.val[13] = (char)0 ;
    meltcdat->dstr_325__DBG_OUTOBJECT.slen = 13 ;


    /*iniobj dsym_326__DBGOUT_FIELDS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V383*/ meltfptr[382])
        /*_._VALDATA___V383*/ meltfptr[382] = (melt_ptr_t )&meltcdat->dsym_326__DBGOUT_FIELDS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_326__DBGOUT_FIELDS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_326__DBGOUT_FIELDS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_326__DBGOUT_FIELDS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_326__DBGOUT_FIELDS.obj_hash = 795625446;
    meltcdat->dsym_326__DBGOUT_FIELDS.obj_len = 3;


    /*inistring dstr_327__DBGOUT_FIELDS*/
    /*_._VALSTR___V384*/
    meltfptr[383] = (melt_ptr_t) &meltcdat->dstr_327__DBGOUT_FIELDS;
    meltcdat->dstr_327__DBGOUT_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_327__DBGOUT_FIELDS.val, "DBGOUT_FIELDS", sizeof (meltcdat->dstr_327__DBGOUT_FIELDS.val)-1);
    meltcdat->dstr_327__DBGOUT_FIELDS.val[13] = (char)0 ;
    meltcdat->dstr_327__DBGOUT_FIELDS.slen = 13 ;


    /*iniobj dsym_328__DBGOUTAGAIN_FIELDS*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V385*/ meltfptr[384])
        /*_._VALDATA___V385*/ meltfptr[384] = (melt_ptr_t )&meltcdat->dsym_328__DBGOUTAGAIN_FIELDS;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_328__DBGOUTAGAIN_FIELDS", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_328__DBGOUTAGAIN_FIELDS", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_328__DBGOUTAGAIN_FIELDS.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_328__DBGOUTAGAIN_FIELDS.obj_hash = 961773165;
    meltcdat->dsym_328__DBGOUTAGAIN_FIELDS.obj_len = 3;


    /*inistring dstr_329__DBGOUTAGAIN_FIELDS*/
    /*_._VALSTR___V386*/
    meltfptr[385] = (melt_ptr_t) &meltcdat->dstr_329__DBGOUTAGAIN_FIELDS;
    meltcdat->dstr_329__DBGOUTAGAIN_FIELDS.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_329__DBGOUTAGAIN_FIELDS.val, "DBGOUTAGAIN_FIELDS", sizeof (meltcdat->dstr_329__DBGOUTAGAIN_FIELDS.val)-1);
    meltcdat->dstr_329__DBGOUTAGAIN_FIELDS.val[18] = (char)0 ;
    meltcdat->dstr_329__DBGOUTAGAIN_FIELDS.slen = 18 ;


    /*iniobj dsym_330__DISPLAY_DEBUG_MESSAGE*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V387*/ meltfptr[386])
        /*_._VALDATA___V387*/ meltfptr[386] = (melt_ptr_t )&meltcdat->dsym_330__DISPLAY_DEBUG_MESSAGE;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_330__DISPLAY_DEBUG_MESSAGE", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_330__DISPLAY_DEBUG_MESSAGE", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_330__DISPLAY_DEBUG_MESSAGE.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_330__DISPLAY_DEBUG_MESSAGE.obj_hash = 759618783;
    meltcdat->dsym_330__DISPLAY_DEBUG_MESSAGE.obj_len = 3;


    /*inistring dstr_331__DISPLAY_DEBUG_MESSAGE*/
    /*_._VALSTR___V388*/
    meltfptr[387] = (melt_ptr_t) &meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE;
    meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE.val, "DISPLAY_DEBUG_MESSAGE", sizeof (meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE.val)-1);
    meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE.val[21] = (char)0 ;
    meltcdat->dstr_331__DISPLAY_DEBUG_MESSAGE.slen = 21 ;


    /*iniobj dsym_332__MELT_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V389*/ meltfptr[388])
        /*_._VALDATA___V389*/ meltfptr[388] = (melt_ptr_t )&meltcdat->dsym_332__MELT_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_332__MELT_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_332__MELT_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_332__MELT_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_332__MELT_DEBUG_FUN.obj_hash = 972123377;
    meltcdat->dsym_332__MELT_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_333__MELT_DEBUG_FUN*/
    /*_._VALSTR___V390*/
    meltfptr[389] = (melt_ptr_t) &meltcdat->dstr_333__MELT_DEBUG_FUN;
    meltcdat->dstr_333__MELT_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_333__MELT_DEBUG_FUN.val, "MELT_DEBUG_FUN", sizeof (meltcdat->dstr_333__MELT_DEBUG_FUN.val)-1);
    meltcdat->dstr_333__MELT_DEBUG_FUN.val[14] = (char)0 ;
    meltcdat->dstr_333__MELT_DEBUG_FUN.slen = 14 ;


    /*iniobj dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V391*/ meltfptr[390])
        /*_._VALDATA___V391*/ meltfptr[390] = (melt_ptr_t )&meltcdat->dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN.obj_hash = 475134270;
    meltcdat->dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_335__REGISTER_BASICBLOCK_DEBU*/
    /*_._VALSTR___V392*/
    meltfptr[391] = (melt_ptr_t) &meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU;
    meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU.val, "REGISTER_BASICBLOCK_DEBUG_FUN", sizeof (meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU.val)-1);
    meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU.val[29] = (char)0 ;
    meltcdat->dstr_335__REGISTER_BASICBLOCK_DEBU.slen = 29 ;


    /*iniobj dsym_336__REGISTER_EDGE_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V393*/ meltfptr[392])
        /*_._VALDATA___V393*/ meltfptr[392] = (melt_ptr_t )&meltcdat->dsym_336__REGISTER_EDGE_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_336__REGISTER_EDGE_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_336__REGISTER_EDGE_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_336__REGISTER_EDGE_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_336__REGISTER_EDGE_DEBUG_FUN.obj_hash = 739045024;
    meltcdat->dsym_336__REGISTER_EDGE_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_337__REGISTER_EDGE_DEBUG_FUN*/
    /*_._VALSTR___V394*/
    meltfptr[393] = (melt_ptr_t) &meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN;
    meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN.val, "REGISTER_EDGE_DEBUG_FUN", sizeof (meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN.val)-1);
    meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN.val[23] = (char)0 ;
    meltcdat->dstr_337__REGISTER_EDGE_DEBUG_FUN.slen = 23 ;


    /*iniobj dsym_338__REGISTER_GIMPLE_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V395*/ meltfptr[394])
        /*_._VALDATA___V395*/ meltfptr[394] = (melt_ptr_t )&meltcdat->dsym_338__REGISTER_GIMPLE_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_338__REGISTER_GIMPLE_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_338__REGISTER_GIMPLE_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_338__REGISTER_GIMPLE_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_338__REGISTER_GIMPLE_DEBUG_FUN.obj_hash = 158282506;
    meltcdat->dsym_338__REGISTER_GIMPLE_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_339__REGISTER_GIMPLE_DEBUG_FU*/
    /*_._VALSTR___V396*/
    meltfptr[395] = (melt_ptr_t) &meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU;
    meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU.val, "REGISTER_GIMPLE_DEBUG_FUN", sizeof (meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU.val)-1);
    meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU.val[25] = (char)0 ;
    meltcdat->dstr_339__REGISTER_GIMPLE_DEBUG_FU.slen = 25 ;


    /*iniobj dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V397*/ meltfptr[396])
        /*_._VALDATA___V397*/ meltfptr[396] = (melt_ptr_t )&meltcdat->dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN.obj_hash = 247154639;
    meltcdat->dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_341__REGISTER_GIMPLESEQ_DEBUG*/
    /*_._VALSTR___V398*/
    meltfptr[397] = (melt_ptr_t) &meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG;
    meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG.val, "REGISTER_GIMPLESEQ_DEBUG_FUN", sizeof (meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG.val)-1);
    meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG.val[28] = (char)0 ;
    meltcdat->dstr_341__REGISTER_GIMPLESEQ_DEBUG.slen = 28 ;


    /*iniobj dsym_342__REGISTER_LOOP_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V399*/ meltfptr[398])
        /*_._VALDATA___V399*/ meltfptr[398] = (melt_ptr_t )&meltcdat->dsym_342__REGISTER_LOOP_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_342__REGISTER_LOOP_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_342__REGISTER_LOOP_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_342__REGISTER_LOOP_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_342__REGISTER_LOOP_DEBUG_FUN.obj_hash = 182074459;
    meltcdat->dsym_342__REGISTER_LOOP_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_343__REGISTER_LOOP_DEBUG_FUN*/
    /*_._VALSTR___V400*/
    meltfptr[399] = (melt_ptr_t) &meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN;
    meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN.val, "REGISTER_LOOP_DEBUG_FUN", sizeof (meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN.val)-1);
    meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN.val[23] = (char)0 ;
    meltcdat->dstr_343__REGISTER_LOOP_DEBUG_FUN.slen = 23 ;


    /*iniobj dsym_344__REGISTER_TREE_DEBUG_FUN*/
    /*uniqueobj*/
    if (!/*_._VALDATA___V401*/ meltfptr[400])
        /*_._VALDATA___V401*/ meltfptr[400] = (melt_ptr_t )&meltcdat->dsym_344__REGISTER_TREE_DEBUG_FUN;
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr isobj dsym_344__REGISTER_TREE_DEBUG_FUN", melt_magic_discr ((melt_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))))) == MELTOBMAG_OBJECT);
    if (MELT_LIKELY(!melt_prohibit_garbcoll)) melt_assertmsg("iniobj check.discr objmagic dsym_344__REGISTER_TREE_DEBUG_FUN", ((meltobject_ptr_t) (((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL)))))->meltobj_magic == MELTOBMAG_OBJECT);
    meltcdat->dsym_344__REGISTER_TREE_DEBUG_FUN.meltobj_class = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(CLASS_SYMBOL))));
    meltcdat->dsym_344__REGISTER_TREE_DEBUG_FUN.obj_hash = 352695421;
    meltcdat->dsym_344__REGISTER_TREE_DEBUG_FUN.obj_len = 3;


    /*inistring dstr_345__REGISTER_TREE_DEBUG_FUN*/
    /*_._VALSTR___V402*/
    meltfptr[401] = (melt_ptr_t) &meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN;
    meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN.discr = (meltobject_ptr_t)(((melt_ptr_t)(MELT_PREDEF(DISCR_STRING))));
    /*small inistring*/
    strncpy(meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN.val, "REGISTER_TREE_DEBUG_FUN", sizeof (meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN.val)-1);
    meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN.val[23] = (char)0 ;
    meltcdat->dstr_345__REGISTER_TREE_DEBUG_FUN.slen = 23 ;
    meltcdat = NULL;
    melt_prohibit_garbcoll = FALSE;

#undef meltfram__
} /*end melt_initialize_module_meltdata_WARMELTmiDEBUG*/



#if MELT_HAVE_DEBUG
const char meltmodule_WARMELTmiDEBUG__melt_have_debug_enabled[] = "MELT module warmelt-debug have debug enabled";
#else /*!MELT_HAVE_DEBUG*/
const char meltmodule_WARMELTmiDEBUG__melt_have_debug_disabled[] = "MELT module warmelt-debug have debug disabled";
#endif /*MELT_HAVE_DEBUG*/


void* MELT_LOW_OPTIMIZATION melt_start_this_module (void* modargp_)
{

    char meltpredefinited[MELTGLOB__LASTGLOB+8];

#if MELT_HAVE_DEBUG
    static long melt_call_counter__;
    long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++ melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif
//// emitted by output_curframe_declstruct_init using LAMBDA_ @warmelt-outobj.melt:2253

    /* start of frame for routine melt_start_this_module fromline 1752 */

    /*startiniframdecl*/

    /* end of frame for routine melt_start_this_module fromline 1756 */


    debugeprintf("sizeof Melt_InitialFrame in melt_start_this_module=%d", (int) sizeof(Melt_InitialFrame));
    /* classy initial frame melt_start_this_module fromline 1773*/
    Melt_InitialFrame
    meltfram__ /*declfrastruct fromline 1780*/
    /*classyinitroutinearg melt_start_this_module fromline 1819*/
#if ENABLE_CHECKING
    /*classyinitroutfram fromline 1823:*/ (__FILE__, __LINE__)
#endif /*ENABLE_CHECKING fromline1825*/

    ;
#define meltframe meltfram__

    /**initial routine prologue**/
    /**COMMENT: get previous environment **/;

    /*^compute*/
    /*_._PREVENV___V4*/
    meltfptr[3] = /*getprevenv*/ (melt_ptr_t) modargp_;
    /*^comment*/
    /**COMMENT: compute boxloc **/;

    /*^cond*/
    /*cond*/
    if (/*_._CONTENV___V2*/ meltfptr[1]) /*then*/
        {
        }
    else    /*^cond.else*/
        {

            /*^compute*/

            /* compile2obj_initproc emitted initialization of environment reference for warmelt-debug */
            if (/*_._PREVENV___V4*/ meltfptr[3])
                {
                    /*_._CONTENV___V2*/ meltfptr[1] = melthookproc_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER
                                                      ((melt_ptr_t) /*_._PREVENV___V4*/ meltfptr[3], "warmelt-debug") ;
                }
            else /* no prevenv */
                {
#if MELT_HAS_INITIAL_ENVIRONMENT>0
                    if (!melt_flag_bootstrapping)
                        warning(0, "MELT is not creating a fresh environment reference for warmelt-debug without parent env.") ;
#endif /* MELT_HAS_INITIAL_ENVIRONMENT>0 */
                }
            ;;
        }

    /*^comment*/
    /**COMMENT: get symbols & keywords for initial procedure **/;

    /*^getnamedsymbol*/
    /*getnamedsym:HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER*/

    if (NULL == /*_._VALDATA___V58*/ meltfptr[57])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER = melthookproc_HOOK_NAMED_SYMBOL ("HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER", (long) MELT_GET);
            /*_._VALDATA___V58*/
            meltfptr[57] = (melt_ptr_t) meltsy_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
        } /*endgetnamedsym HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_DEBUG_INFORMATION*/

    if (NULL == /*_._VALDATA___V60*/ meltfptr[59])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_DEBUG_INFORMATION without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_DEBUG_INFORMATION = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_DEBUG_INFORMATION", (long) MELT_GET);
            /*_._VALDATA___V60*/
            meltfptr[59] = (melt_ptr_t) meltsy_CLASS_DEBUG_INFORMATION;
        } /*endgetnamedsym CLASS_DEBUG_INFORMATION*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_ROOT*/

    if (NULL == /*_._VALDATA___V62*/ meltfptr[61])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_ROOT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_ROOT = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_ROOT", (long) MELT_GET);
            /*_._VALDATA___V62*/
            meltfptr[61] = (melt_ptr_t) meltsy_CLASS_ROOT;
        } /*endgetnamedsym CLASS_ROOT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGI_OUT*/

    if (NULL == /*_._VALDATA___V74*/ meltfptr[73])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGI_OUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGI_OUT = melthookproc_HOOK_NAMED_SYMBOL ("DBGI_OUT", (long) MELT_GET);
            /*_._VALDATA___V74*/
            meltfptr[73] = (melt_ptr_t) meltsy_DBGI_OUT;
        } /*endgetnamedsym DBGI_OUT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGI_OCCMAP*/

    if (NULL == /*_._VALDATA___V76*/ meltfptr[75])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGI_OCCMAP without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGI_OCCMAP = melthookproc_HOOK_NAMED_SYMBOL ("DBGI_OCCMAP", (long) MELT_GET);
            /*_._VALDATA___V76*/
            meltfptr[75] = (melt_ptr_t) meltsy_DBGI_OCCMAP;
        } /*endgetnamedsym DBGI_OCCMAP*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGI_MAXDEPTH*/

    if (NULL == /*_._VALDATA___V78*/ meltfptr[77])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGI_MAXDEPTH without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGI_MAXDEPTH = melthookproc_HOOK_NAMED_SYMBOL ("DBGI_MAXDEPTH", (long) MELT_GET);
            /*_._VALDATA___V78*/
            meltfptr[77] = (melt_ptr_t) meltsy_DBGI_MAXDEPTH;
        } /*endgetnamedsym DBGI_MAXDEPTH*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_DEBUG_OUTPUT_INFORMATION*/

    if (NULL == /*_._VALDATA___V80*/ meltfptr[79])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_DEBUG_OUTPUT_INFORMATION without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_DEBUG_OUTPUT_INFORMATION = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_DEBUG_OUTPUT_INFORMATION", (long) MELT_GET);
            /*_._VALDATA___V80*/
            meltfptr[79] = (melt_ptr_t) meltsy_CLASS_DEBUG_OUTPUT_INFORMATION;
        } /*endgetnamedsym CLASS_DEBUG_OUTPUT_INFORMATION*/


    /*^getnamedsymbol*/
    /*getnamedsym:DEBUG_DEPTH*/

    if (NULL == /*_._VALDATA___V86*/ meltfptr[85])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DEBUG_DEPTH without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DEBUG_DEPTH = melthookproc_HOOK_NAMED_SYMBOL ("DEBUG_DEPTH", (long) MELT_GET);
            /*_._VALDATA___V86*/
            meltfptr[85] = (melt_ptr_t) meltsy_DEBUG_DEPTH;
        } /*endgetnamedsym DEBUG_DEPTH*/


    /*^getnamedsymbol*/
    /*getnamedsym:MELT_REALLY_NEED_DEBUG*/

    if (NULL == /*_._VALDATA___V93*/ meltfptr[92])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_REALLY_NEED_DEBUG without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MELT_REALLY_NEED_DEBUG = melthookproc_HOOK_NAMED_SYMBOL ("MELT_REALLY_NEED_DEBUG", (long) MELT_GET);
            /*_._VALDATA___V93*/
            meltfptr[92] = (melt_ptr_t) meltsy_MELT_REALLY_NEED_DEBUG;
        } /*endgetnamedsym MELT_REALLY_NEED_DEBUG*/


    /*^getnamedsymbol*/
    /*getnamedsym:DEPTH*/

    if (NULL == /*_._VALDATA___V98*/ meltfptr[97])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DEPTH without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DEPTH = melthookproc_HOOK_NAMED_SYMBOL ("DEPTH", (long) MELT_GET);
            /*_._VALDATA___V98*/
            meltfptr[97] = (melt_ptr_t) meltsy_DEPTH;
        } /*endgetnamedsym DEPTH*/


    /*^getnamedsymbol*/
    /*getnamedsym:MELT_HAS_FLAG_DEBUG_SET*/

    if (NULL == /*_._VALDATA___V104*/ meltfptr[103])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_HAS_FLAG_DEBUG_SET without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MELT_HAS_FLAG_DEBUG_SET = melthookproc_HOOK_NAMED_SYMBOL ("MELT_HAS_FLAG_DEBUG_SET", (long) MELT_GET);
            /*_._VALDATA___V104*/
            meltfptr[103] = (melt_ptr_t) meltsy_MELT_HAS_FLAG_DEBUG_SET;
        } /*endgetnamedsym MELT_HAS_FLAG_DEBUG_SET*/


    /*^getnamedsymbol*/
    /*getnamedsym:MELT_REALLY_NEED_DBGLIM*/

    if (NULL == /*_._VALDATA___V111*/ meltfptr[110])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_REALLY_NEED_DBGLIM without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MELT_REALLY_NEED_DBGLIM = melthookproc_HOOK_NAMED_SYMBOL ("MELT_REALLY_NEED_DBGLIM", (long) MELT_GET);
            /*_._VALDATA___V111*/
            meltfptr[110] = (melt_ptr_t) meltsy_MELT_REALLY_NEED_DBGLIM;
        } /*endgetnamedsym MELT_REALLY_NEED_DBGLIM*/


    /*^getnamedsymbol*/
    /*getnamedsym:LIMIT*/

    if (NULL == /*_._VALDATA___V117*/ meltfptr[116])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol LIMIT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_LIMIT = melthookproc_HOOK_NAMED_SYMBOL ("LIMIT", (long) MELT_GET);
            /*_._VALDATA___V117*/
            meltfptr[116] = (melt_ptr_t) meltsy_LIMIT;
        } /*endgetnamedsym LIMIT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBG_OUTPUT*/

    if (NULL == /*_._VALDATA___V124*/ meltfptr[123])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBG_OUTPUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBG_OUTPUT = melthookproc_HOOK_NAMED_SYMBOL ("DBG_OUTPUT", (long) MELT_GET);
            /*_._VALDATA___V124*/
            meltfptr[123] = (melt_ptr_t) meltsy_DBG_OUTPUT;
        } /*endgetnamedsym DBG_OUTPUT*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_SELECTOR*/

    if (NULL == /*_._VALDATA___V126*/ meltfptr[125])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_SELECTOR without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_SELECTOR = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_SELECTOR", (long) MELT_GET);
            /*_._VALDATA___V126*/
            meltfptr[125] = (melt_ptr_t) meltsy_CLASS_SELECTOR;
        } /*endgetnamedsym CLASS_SELECTOR*/


    /*^getnamedsymbol*/
    /*getnamedsym:RECV*/

    if (NULL == /*_._VALDATA___V128*/ meltfptr[127])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol RECV without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_RECV = melthookproc_HOOK_NAMED_SYMBOL ("RECV", (long) MELT_GET);
            /*_._VALDATA___V128*/
            meltfptr[127] = (melt_ptr_t) meltsy_RECV;
        } /*endgetnamedsym RECV*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGINFO*/

    if (NULL == /*_._VALDATA___V131*/ meltfptr[130])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGINFO without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGINFO = melthookproc_HOOK_NAMED_SYMBOL ("DBGINFO", (long) MELT_GET);
            /*_._VALDATA___V131*/
            meltfptr[130] = (melt_ptr_t) meltsy_DBGINFO;
        } /*endgetnamedsym DBGINFO*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBG_OUTPUTAGAIN*/

    if (NULL == /*_._VALDATA___V138*/ meltfptr[137])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBG_OUTPUTAGAIN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBG_OUTPUTAGAIN = melthookproc_HOOK_NAMED_SYMBOL ("DBG_OUTPUTAGAIN", (long) MELT_GET);
            /*_._VALDATA___V138*/
            meltfptr[137] = (melt_ptr_t) meltsy_DBG_OUTPUTAGAIN;
        } /*endgetnamedsym DBG_OUTPUTAGAIN*/


    /*^getnamedsymbol*/
    /*getnamedsym:TREE_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V146*/ meltfptr[145])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol TREE_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_TREE_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("TREE_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V146*/
            meltfptr[145] = (melt_ptr_t) meltsy_TREE_DEBUG_FUNCONT;
        } /*endgetnamedsym TREE_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_REFERENCE*/

    if (NULL == /*_._VALDATA___V148*/ meltfptr[147])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_REFERENCE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_REFERENCE = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_REFERENCE", (long) MELT_GET);
            /*_._VALDATA___V148*/
            meltfptr[147] = (melt_ptr_t) meltsy_CLASS_REFERENCE;
        } /*endgetnamedsym CLASS_REFERENCE*/


    /*^getnamedsymbol*/
    /*getnamedsym:GIMPLE_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V153*/ meltfptr[152])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol GIMPLE_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_GIMPLE_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("GIMPLE_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V153*/
            meltfptr[152] = (melt_ptr_t) meltsy_GIMPLE_DEBUG_FUNCONT;
        } /*endgetnamedsym GIMPLE_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:GIMPLESEQ_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V158*/ meltfptr[157])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol GIMPLESEQ_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_GIMPLESEQ_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("GIMPLESEQ_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V158*/
            meltfptr[157] = (melt_ptr_t) meltsy_GIMPLESEQ_DEBUG_FUNCONT;
        } /*endgetnamedsym GIMPLESEQ_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:EDGE_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V163*/ meltfptr[162])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol EDGE_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_EDGE_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("EDGE_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V163*/
            meltfptr[162] = (melt_ptr_t) meltsy_EDGE_DEBUG_FUNCONT;
        } /*endgetnamedsym EDGE_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:BASICBLOCK_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V168*/ meltfptr[167])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol BASICBLOCK_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_BASICBLOCK_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("BASICBLOCK_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V168*/
            meltfptr[167] = (melt_ptr_t) meltsy_BASICBLOCK_DEBUG_FUNCONT;
        } /*endgetnamedsym BASICBLOCK_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:LOOP_DEBUG_FUNCONT*/

    if (NULL == /*_._VALDATA___V173*/ meltfptr[172])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol LOOP_DEBUG_FUNCONT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_LOOP_DEBUG_FUNCONT = melthookproc_HOOK_NAMED_SYMBOL ("LOOP_DEBUG_FUNCONT", (long) MELT_GET);
            /*_._VALDATA___V173*/
            meltfptr[172] = (melt_ptr_t) meltsy_LOOP_DEBUG_FUNCONT;
        } /*endgetnamedsym LOOP_DEBUG_FUNCONT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_DEBUG_CLOSURE*/

    if (NULL == /*_._VALDATA___V178*/ meltfptr[177])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_DEBUG_CLOSURE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_DEBUG_CLOSURE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_DEBUG_CLOSURE", (long) MELT_GET);
            /*_._VALDATA___V178*/
            meltfptr[177] = (melt_ptr_t) meltsy_DISCR_DEBUG_CLOSURE;
        } /*endgetnamedsym DISCR_DEBUG_CLOSURE*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_DISCRIMINANT*/

    if (NULL == /*_._VALDATA___V180*/ meltfptr[179])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_DISCRIMINANT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_DISCRIMINANT = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_DISCRIMINANT", (long) MELT_GET);
            /*_._VALDATA___V180*/
            meltfptr[179] = (melt_ptr_t) meltsy_CLASS_DISCRIMINANT;
        } /*endgetnamedsym CLASS_DISCRIMINANT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_CLOSURE*/

    if (NULL == /*_._VALDATA___V184*/ meltfptr[183])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_CLOSURE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_CLOSURE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_CLOSURE", (long) MELT_GET);
            /*_._VALDATA___V184*/
            meltfptr[183] = (melt_ptr_t) meltsy_DISCR_CLOSURE;
        } /*endgetnamedsym DISCR_CLOSURE*/


    /*^getnamedsymbol*/
    /*getnamedsym:INITIAL_SYSTEM_DATA*/

    if (NULL == /*_._VALDATA___V192*/ meltfptr[191])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol INITIAL_SYSTEM_DATA without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_INITIAL_SYSTEM_DATA = melthookproc_HOOK_NAMED_SYMBOL ("INITIAL_SYSTEM_DATA", (long) MELT_GET);
            /*_._VALDATA___V192*/
            meltfptr[191] = (melt_ptr_t) meltsy_INITIAL_SYSTEM_DATA;
        } /*endgetnamedsym INITIAL_SYSTEM_DATA*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_SYSTEM_DATA*/

    if (NULL == /*_._VALDATA___V194*/ meltfptr[193])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_SYSTEM_DATA without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_SYSTEM_DATA = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_SYSTEM_DATA", (long) MELT_GET);
            /*_._VALDATA___V194*/
            meltfptr[193] = (melt_ptr_t) meltsy_CLASS_SYSTEM_DATA;
        } /*endgetnamedsym CLASS_SYSTEM_DATA*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MAP_OBJECTS*/

    if (NULL == /*_._VALDATA___V196*/ meltfptr[195])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MAP_OBJECTS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MAP_OBJECTS = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MAP_OBJECTS", (long) MELT_GET);
            /*_._VALDATA___V196*/
            meltfptr[195] = (melt_ptr_t) meltsy_DISCR_MAP_OBJECTS;
        } /*endgetnamedsym DISCR_MAP_OBJECTS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_INTEGER*/

    if (NULL == /*_._VALDATA___V198*/ meltfptr[197])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_INTEGER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_INTEGER = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_INTEGER", (long) MELT_GET);
            /*_._VALDATA___V198*/
            meltfptr[197] = (melt_ptr_t) meltsy_DISCR_INTEGER;
        } /*endgetnamedsym DISCR_INTEGER*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_STRBUF*/

    if (NULL == /*_._VALDATA___V200*/ meltfptr[199])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_STRBUF without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_STRBUF = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_STRBUF", (long) MELT_GET);
            /*_._VALDATA___V200*/
            meltfptr[199] = (melt_ptr_t) meltsy_DISCR_STRBUF;
        } /*endgetnamedsym DISCR_STRBUF*/


    /*^getnamedsymbol*/
    /*getnamedsym:MELT_ASSERT_FAILURE_FUN*/

    if (NULL == /*_._VALDATA___V202*/ meltfptr[201])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_ASSERT_FAILURE_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MELT_ASSERT_FAILURE_FUN = melthookproc_HOOK_NAMED_SYMBOL ("MELT_ASSERT_FAILURE_FUN", (long) MELT_GET);
            /*_._VALDATA___V202*/
            meltfptr[201] = (melt_ptr_t) meltsy_MELT_ASSERT_FAILURE_FUN;
        } /*endgetnamedsym MELT_ASSERT_FAILURE_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:ADD2OUT*/

    if (NULL == /*_._VALDATA___V204*/ meltfptr[203])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ADD2OUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_ADD2OUT = melthookproc_HOOK_NAMED_SYMBOL ("ADD2OUT", (long) MELT_GET);
            /*_._VALDATA___V204*/
            meltfptr[203] = (melt_ptr_t) meltsy_ADD2OUT;
        } /*endgetnamedsym ADD2OUT*/


    /*^getnamedsymbol*/
    /*getnamedsym:CSTRING_PREFIXED*/

    if (NULL == /*_._VALDATA___V206*/ meltfptr[205])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CSTRING_PREFIXED without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CSTRING_PREFIXED = melthookproc_HOOK_NAMED_SYMBOL ("CSTRING_PREFIXED", (long) MELT_GET);
            /*_._VALDATA___V206*/
            meltfptr[205] = (melt_ptr_t) meltsy_CSTRING_PREFIXED;
        } /*endgetnamedsym CSTRING_PREFIXED*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_NAMED*/

    if (NULL == /*_._VALDATA___V208*/ meltfptr[207])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_NAMED without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_NAMED = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_NAMED", (long) MELT_GET);
            /*_._VALDATA___V208*/
            meltfptr[207] = (melt_ptr_t) meltsy_CLASS_NAMED;
        } /*endgetnamedsym CLASS_NAMED*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_QUASI_CTYPE*/

    if (NULL == /*_._VALDATA___V210*/ meltfptr[209])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_QUASI_CTYPE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_QUASI_CTYPE = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_QUASI_CTYPE", (long) MELT_GET);
            /*_._VALDATA___V210*/
            meltfptr[209] = (melt_ptr_t) meltsy_CLASS_QUASI_CTYPE;
        } /*endgetnamedsym CLASS_QUASI_CTYPE*/


    /*^getnamedsymbol*/
    /*getnamedsym:INSTALL_METHOD*/

    if (NULL == /*_._VALDATA___V218*/ meltfptr[217])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol INSTALL_METHOD without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_INSTALL_METHOD = melthookproc_HOOK_NAMED_SYMBOL ("INSTALL_METHOD", (long) MELT_GET);
            /*_._VALDATA___V218*/
            meltfptr[217] = (melt_ptr_t) meltsy_INSTALL_METHOD;
        } /*endgetnamedsym INSTALL_METHOD*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_NULL_RECEIVER*/

    if (NULL == /*_._VALDATA___V220*/ meltfptr[219])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_NULL_RECEIVER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_NULL_RECEIVER = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_NULL_RECEIVER", (long) MELT_GET);
            /*_._VALDATA___V220*/
            meltfptr[219] = (melt_ptr_t) meltsy_DISCR_NULL_RECEIVER;
        } /*endgetnamedsym DISCR_NULL_RECEIVER*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_STRING*/

    if (NULL == /*_._VALDATA___V224*/ meltfptr[223])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_STRING without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_STRING = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_STRING", (long) MELT_GET);
            /*_._VALDATA___V224*/
            meltfptr[223] = (melt_ptr_t) meltsy_DISCR_STRING;
        } /*endgetnamedsym DISCR_STRING*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_VERBATIM_STRING*/

    if (NULL == /*_._VALDATA___V226*/ meltfptr[225])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_VERBATIM_STRING without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_VERBATIM_STRING = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_VERBATIM_STRING", (long) MELT_GET);
            /*_._VALDATA___V226*/
            meltfptr[225] = (melt_ptr_t) meltsy_DISCR_VERBATIM_STRING;
        } /*endgetnamedsym DISCR_VERBATIM_STRING*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_CONSTANT_INTEGER*/

    if (NULL == /*_._VALDATA___V232*/ meltfptr[231])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_CONSTANT_INTEGER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_CONSTANT_INTEGER = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_CONSTANT_INTEGER", (long) MELT_GET);
            /*_._VALDATA___V232*/
            meltfptr[231] = (melt_ptr_t) meltsy_DISCR_CONSTANT_INTEGER;
        } /*endgetnamedsym DISCR_CONSTANT_INTEGER*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_DOUBLE*/

    if (NULL == /*_._VALDATA___V236*/ meltfptr[235])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_DOUBLE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_DOUBLE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_DOUBLE", (long) MELT_GET);
            /*_._VALDATA___V236*/
            meltfptr[235] = (melt_ptr_t) meltsy_DISCR_DOUBLE;
        } /*endgetnamedsym DISCR_DOUBLE*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_CONSTANT_DOUBLE*/

    if (NULL == /*_._VALDATA___V238*/ meltfptr[237])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_CONSTANT_DOUBLE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_CONSTANT_DOUBLE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_CONSTANT_DOUBLE", (long) MELT_GET);
            /*_._VALDATA___V238*/
            meltfptr[237] = (melt_ptr_t) meltsy_DISCR_CONSTANT_DOUBLE;
        } /*endgetnamedsym DISCR_CONSTANT_DOUBLE*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MIXED_INTEGER*/

    if (NULL == /*_._VALDATA___V242*/ meltfptr[241])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MIXED_INTEGER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MIXED_INTEGER = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MIXED_INTEGER", (long) MELT_GET);
            /*_._VALDATA___V242*/
            meltfptr[241] = (melt_ptr_t) meltsy_DISCR_MIXED_INTEGER;
        } /*endgetnamedsym DISCR_MIXED_INTEGER*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MIXED_LOCATION*/

    if (NULL == /*_._VALDATA___V246*/ meltfptr[245])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MIXED_LOCATION without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MIXED_LOCATION = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MIXED_LOCATION", (long) MELT_GET);
            /*_._VALDATA___V246*/
            meltfptr[245] = (melt_ptr_t) meltsy_DISCR_MIXED_LOCATION;
        } /*endgetnamedsym DISCR_MIXED_LOCATION*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MIXED_BIGINT*/

    if (NULL == /*_._VALDATA___V250*/ meltfptr[249])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MIXED_BIGINT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MIXED_BIGINT = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MIXED_BIGINT", (long) MELT_GET);
            /*_._VALDATA___V250*/
            meltfptr[249] = (melt_ptr_t) meltsy_DISCR_MIXED_BIGINT;
        } /*endgetnamedsym DISCR_MIXED_BIGINT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MULTIPLE*/

    if (NULL == /*_._VALDATA___V254*/ meltfptr[253])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MULTIPLE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MULTIPLE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MULTIPLE", (long) MELT_GET);
            /*_._VALDATA___V254*/
            meltfptr[253] = (melt_ptr_t) meltsy_DISCR_MULTIPLE;
        } /*endgetnamedsym DISCR_MULTIPLE*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_ROUTINE*/

    if (NULL == /*_._VALDATA___V259*/ meltfptr[258])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_ROUTINE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_ROUTINE = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_ROUTINE", (long) MELT_GET);
            /*_._VALDATA___V259*/
            meltfptr[258] = (melt_ptr_t) meltsy_DISCR_ROUTINE;
        } /*endgetnamedsym DISCR_ROUTINE*/


    /*^getnamedsymbol*/
    /*getnamedsym:ROUTINE_EVERY*/

    if (NULL == /*_._VALDATA___V261*/ meltfptr[260])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ROUTINE_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_ROUTINE_EVERY = melthookproc_HOOK_NAMED_SYMBOL ("ROUTINE_EVERY", (long) MELT_GET);
            /*_._VALDATA___V261*/
            meltfptr[260] = (melt_ptr_t) meltsy_ROUTINE_EVERY;
        } /*endgetnamedsym ROUTINE_EVERY*/


    /*^getnamedsymbol*/
    /*getnamedsym:HOOK_EVERY*/

    if (NULL == /*_._VALDATA___V266*/ meltfptr[265])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_HOOK_EVERY = melthookproc_HOOK_NAMED_SYMBOL ("HOOK_EVERY", (long) MELT_GET);
            /*_._VALDATA___V266*/
            meltfptr[265] = (melt_ptr_t) meltsy_HOOK_EVERY;
        } /*endgetnamedsym HOOK_EVERY*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_HOOK*/

    if (NULL == /*_._VALDATA___V268*/ meltfptr[267])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_HOOK without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_HOOK = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_HOOK", (long) MELT_GET);
            /*_._VALDATA___V268*/
            meltfptr[267] = (melt_ptr_t) meltsy_DISCR_HOOK;
        } /*endgetnamedsym DISCR_HOOK*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_LIST*/

    if (NULL == /*_._VALDATA___V274*/ meltfptr[273])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_LIST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_LIST = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_LIST", (long) MELT_GET);
            /*_._VALDATA___V274*/
            meltfptr[273] = (melt_ptr_t) meltsy_DISCR_LIST;
        } /*endgetnamedsym DISCR_LIST*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_PAIR*/

    if (NULL == /*_._VALDATA___V278*/ meltfptr[277])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_PAIR without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_PAIR = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_PAIR", (long) MELT_GET);
            /*_._VALDATA___V278*/
            meltfptr[277] = (melt_ptr_t) meltsy_DISCR_PAIR;
        } /*endgetnamedsym DISCR_PAIR*/


    /*^getnamedsymbol*/
    /*getnamedsym:MAPOBJECT_EVERY*/

    if (NULL == /*_._VALDATA___V288*/ meltfptr[287])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MAPOBJECT_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MAPOBJECT_EVERY = melthookproc_HOOK_NAMED_SYMBOL ("MAPOBJECT_EVERY", (long) MELT_GET);
            /*_._VALDATA___V288*/
            meltfptr[287] = (melt_ptr_t) meltsy_MAPOBJECT_EVERY;
        } /*endgetnamedsym MAPOBJECT_EVERY*/


    /*^getnamedsymbol*/
    /*getnamedsym:MULTIPLE_SORT*/

    if (NULL == /*_._VALDATA___V290*/ meltfptr[289])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MULTIPLE_SORT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MULTIPLE_SORT = melthookproc_HOOK_NAMED_SYMBOL ("MULTIPLE_SORT", (long) MELT_GET);
            /*_._VALDATA___V290*/
            meltfptr[289] = (melt_ptr_t) meltsy_MULTIPLE_SORT;
        } /*endgetnamedsym MULTIPLE_SORT*/


    /*^getnamedsymbol*/
    /*getnamedsym:COMPARE_OBJ_RANKED*/

    if (NULL == /*_._VALDATA___V292*/ meltfptr[291])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol COMPARE_OBJ_RANKED without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_COMPARE_OBJ_RANKED = melthookproc_HOOK_NAMED_SYMBOL ("COMPARE_OBJ_RANKED", (long) MELT_GET);
            /*_._VALDATA___V292*/
            meltfptr[291] = (melt_ptr_t) meltsy_COMPARE_OBJ_RANKED;
        } /*endgetnamedsym COMPARE_OBJ_RANKED*/


    /*^getnamedsymbol*/
    /*getnamedsym:MULTIPLE_EVERY*/

    if (NULL == /*_._VALDATA___V294*/ meltfptr[293])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MULTIPLE_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MULTIPLE_EVERY = melthookproc_HOOK_NAMED_SYMBOL ("MULTIPLE_EVERY", (long) MELT_GET);
            /*_._VALDATA___V294*/
            meltfptr[293] = (melt_ptr_t) meltsy_MULTIPLE_EVERY;
        } /*endgetnamedsym MULTIPLE_EVERY*/


    /*^getnamedsymbol*/
    /*getnamedsym:MAPSTRING_EVERY*/

    if (NULL == /*_._VALDATA___V303*/ meltfptr[302])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MAPSTRING_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MAPSTRING_EVERY = melthookproc_HOOK_NAMED_SYMBOL ("MAPSTRING_EVERY", (long) MELT_GET);
            /*_._VALDATA___V303*/
            meltfptr[302] = (melt_ptr_t) meltsy_MAPSTRING_EVERY;
        } /*endgetnamedsym MAPSTRING_EVERY*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_MAP_STRINGS*/

    if (NULL == /*_._VALDATA___V305*/ meltfptr[304])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MAP_STRINGS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_MAP_STRINGS = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MAP_STRINGS", (long) MELT_GET);
            /*_._VALDATA___V305*/
            meltfptr[304] = (melt_ptr_t) meltsy_DISCR_MAP_STRINGS;
        } /*endgetnamedsym DISCR_MAP_STRINGS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_BUCKET_LONGS*/

    if (NULL == /*_._VALDATA___V309*/ meltfptr[308])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_BUCKET_LONGS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_BUCKET_LONGS = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_BUCKET_LONGS", (long) MELT_GET);
            /*_._VALDATA___V309*/
            meltfptr[308] = (melt_ptr_t) meltsy_DISCR_BUCKET_LONGS;
        } /*endgetnamedsym DISCR_BUCKET_LONGS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_JSONOBJECT*/

    if (NULL == /*_._VALDATA___V313*/ meltfptr[312])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_JSONOBJECT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_JSONOBJECT = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_JSONOBJECT", (long) MELT_GET);
            /*_._VALDATA___V313*/
            meltfptr[312] = (melt_ptr_t) meltsy_DISCR_JSONOBJECT;
        } /*endgetnamedsym DISCR_JSONOBJECT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISCR_ANY_RECEIVER*/

    if (NULL == /*_._VALDATA___V319*/ meltfptr[318])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_ANY_RECEIVER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISCR_ANY_RECEIVER = melthookproc_HOOK_NAMED_SYMBOL ("DISCR_ANY_RECEIVER", (long) MELT_GET);
            /*_._VALDATA___V319*/
            meltfptr[318] = (melt_ptr_t) meltsy_DISCR_ANY_RECEIVER;
        } /*endgetnamedsym DISCR_ANY_RECEIVER*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGOUT_NAMEDOBJECT_METHOD*/

    if (NULL == /*_._VALDATA___V325*/ meltfptr[324])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGOUT_NAMEDOBJECT_METHOD without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGOUT_NAMEDOBJECT_METHOD = melthookproc_HOOK_NAMED_SYMBOL ("DBGOUT_NAMEDOBJECT_METHOD", (long) MELT_GET);
            /*_._VALDATA___V325*/
            meltfptr[324] = (melt_ptr_t) meltsy_DBGOUT_NAMEDOBJECT_METHOD;
        } /*endgetnamedsym DBGOUT_NAMEDOBJECT_METHOD*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_SYMBOL*/

    if (NULL == /*_._VALDATA___V331*/ meltfptr[330])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_SYMBOL without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_SYMBOL = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_SYMBOL", (long) MELT_GET);
            /*_._VALDATA___V331*/
            meltfptr[330] = (melt_ptr_t) meltsy_CLASS_SYMBOL;
        } /*endgetnamedsym CLASS_SYMBOL*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_CLASS*/

    if (NULL == /*_._VALDATA___V337*/ meltfptr[336])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_CLASS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_CLASS = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_CLASS", (long) MELT_GET);
            /*_._VALDATA___V337*/
            meltfptr[336] = (melt_ptr_t) meltsy_CLASS_CLASS;
        } /*endgetnamedsym CLASS_CLASS*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_KEYWORD*/

    if (NULL == /*_._VALDATA___V341*/ meltfptr[340])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_KEYWORD without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_KEYWORD = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_KEYWORD", (long) MELT_GET);
            /*_._VALDATA___V341*/
            meltfptr[340] = (melt_ptr_t) meltsy_CLASS_KEYWORD;
        } /*endgetnamedsym CLASS_KEYWORD*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_CLONED_SYMBOL*/

    if (NULL == /*_._VALDATA___V347*/ meltfptr[346])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_CLONED_SYMBOL without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_CLONED_SYMBOL = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_CLONED_SYMBOL", (long) MELT_GET);
            /*_._VALDATA___V347*/
            meltfptr[346] = (melt_ptr_t) meltsy_CLASS_CLONED_SYMBOL;
        } /*endgetnamedsym CLASS_CLONED_SYMBOL*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_ENVIRONMENT*/

    if (NULL == /*_._VALDATA___V353*/ meltfptr[352])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_ENVIRONMENT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_ENVIRONMENT = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_ENVIRONMENT", (long) MELT_GET);
            /*_._VALDATA___V353*/
            meltfptr[352] = (melt_ptr_t) meltsy_CLASS_ENVIRONMENT;
        } /*endgetnamedsym CLASS_ENVIRONMENT*/


    /*^getnamedsymbol*/
    /*getnamedsym:ENV_PREV*/

    if (NULL == /*_._VALDATA___V355*/ meltfptr[354])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ENV_PREV without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_ENV_PREV = melthookproc_HOOK_NAMED_SYMBOL ("ENV_PREV", (long) MELT_GET);
            /*_._VALDATA___V355*/
            meltfptr[354] = (melt_ptr_t) meltsy_ENV_PREV;
        } /*endgetnamedsym ENV_PREV*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_DESCRIBED_ENVIRONMENT*/

    if (NULL == /*_._VALDATA___V357*/ meltfptr[356])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_DESCRIBED_ENVIRONMENT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_DESCRIBED_ENVIRONMENT = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_DESCRIBED_ENVIRONMENT", (long) MELT_GET);
            /*_._VALDATA___V357*/
            meltfptr[356] = (melt_ptr_t) meltsy_CLASS_DESCRIBED_ENVIRONMENT;
        } /*endgetnamedsym CLASS_DESCRIBED_ENVIRONMENT*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_CTYPE*/

    if (NULL == /*_._VALDATA___V361*/ meltfptr[360])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_CTYPE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_CTYPE = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_CTYPE", (long) MELT_GET);
            /*_._VALDATA___V361*/
            meltfptr[360] = (melt_ptr_t) meltsy_CLASS_CTYPE;
        } /*endgetnamedsym CLASS_CTYPE*/


    /*^getnamedsymbol*/
    /*getnamedsym:CLASS_ANY_BINDING*/

    if (NULL == /*_._VALDATA___V367*/ meltfptr[366])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_ANY_BINDING without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_CLASS_ANY_BINDING = melthookproc_HOOK_NAMED_SYMBOL ("CLASS_ANY_BINDING", (long) MELT_GET);
            /*_._VALDATA___V367*/
            meltfptr[366] = (melt_ptr_t) meltsy_CLASS_ANY_BINDING;
        } /*endgetnamedsym CLASS_ANY_BINDING*/


    /*^getnamedsymbol*/
    /*getnamedsym:DEBUG_LESS*/

    if (NULL == /*_._VALDATA___V371*/ meltfptr[370])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DEBUG_LESS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DEBUG_LESS = melthookproc_HOOK_NAMED_SYMBOL ("DEBUG_LESS", (long) MELT_GET);
            /*_._VALDATA___V371*/
            meltfptr[370] = (melt_ptr_t) meltsy_DEBUG_LESS;
        } /*endgetnamedsym DEBUG_LESS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DEBUG_MORE*/

    if (NULL == /*_._VALDATA___V375*/ meltfptr[374])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DEBUG_MORE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DEBUG_MORE = melthookproc_HOOK_NAMED_SYMBOL ("DEBUG_MORE", (long) MELT_GET);
            /*_._VALDATA___V375*/
            meltfptr[374] = (melt_ptr_t) meltsy_DEBUG_MORE;
        } /*endgetnamedsym DEBUG_MORE*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBG_OUT*/

    if (NULL == /*_._VALDATA___V379*/ meltfptr[378])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBG_OUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBG_OUT = melthookproc_HOOK_NAMED_SYMBOL ("DBG_OUT", (long) MELT_GET);
            /*_._VALDATA___V379*/
            meltfptr[378] = (melt_ptr_t) meltsy_DBG_OUT;
        } /*endgetnamedsym DBG_OUT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBG_OUTOBJECT*/

    if (NULL == /*_._VALDATA___V381*/ meltfptr[380])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBG_OUTOBJECT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBG_OUTOBJECT = melthookproc_HOOK_NAMED_SYMBOL ("DBG_OUTOBJECT", (long) MELT_GET);
            /*_._VALDATA___V381*/
            meltfptr[380] = (melt_ptr_t) meltsy_DBG_OUTOBJECT;
        } /*endgetnamedsym DBG_OUTOBJECT*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGOUT_FIELDS*/

    if (NULL == /*_._VALDATA___V383*/ meltfptr[382])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGOUT_FIELDS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGOUT_FIELDS = melthookproc_HOOK_NAMED_SYMBOL ("DBGOUT_FIELDS", (long) MELT_GET);
            /*_._VALDATA___V383*/
            meltfptr[382] = (melt_ptr_t) meltsy_DBGOUT_FIELDS;
        } /*endgetnamedsym DBGOUT_FIELDS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DBGOUTAGAIN_FIELDS*/

    if (NULL == /*_._VALDATA___V385*/ meltfptr[384])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DBGOUTAGAIN_FIELDS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DBGOUTAGAIN_FIELDS = melthookproc_HOOK_NAMED_SYMBOL ("DBGOUTAGAIN_FIELDS", (long) MELT_GET);
            /*_._VALDATA___V385*/
            meltfptr[384] = (melt_ptr_t) meltsy_DBGOUTAGAIN_FIELDS;
        } /*endgetnamedsym DBGOUTAGAIN_FIELDS*/


    /*^getnamedsymbol*/
    /*getnamedsym:DISPLAY_DEBUG_MESSAGE*/

    if (NULL == /*_._VALDATA___V387*/ meltfptr[386])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISPLAY_DEBUG_MESSAGE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_DISPLAY_DEBUG_MESSAGE = melthookproc_HOOK_NAMED_SYMBOL ("DISPLAY_DEBUG_MESSAGE", (long) MELT_GET);
            /*_._VALDATA___V387*/
            meltfptr[386] = (melt_ptr_t) meltsy_DISPLAY_DEBUG_MESSAGE;
        } /*endgetnamedsym DISPLAY_DEBUG_MESSAGE*/


    /*^getnamedsymbol*/
    /*getnamedsym:MELT_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V389*/ meltfptr[388])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_MELT_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("MELT_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V389*/
            meltfptr[388] = (melt_ptr_t) meltsy_MELT_DEBUG_FUN;
        } /*endgetnamedsym MELT_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_BASICBLOCK_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V391*/ meltfptr[390])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_BASICBLOCK_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_BASICBLOCK_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_BASICBLOCK_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V391*/
            meltfptr[390] = (melt_ptr_t) meltsy_REGISTER_BASICBLOCK_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_BASICBLOCK_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_EDGE_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V393*/ meltfptr[392])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_EDGE_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_EDGE_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_EDGE_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V393*/
            meltfptr[392] = (melt_ptr_t) meltsy_REGISTER_EDGE_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_EDGE_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_GIMPLE_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V395*/ meltfptr[394])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_GIMPLE_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_GIMPLE_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_GIMPLE_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V395*/
            meltfptr[394] = (melt_ptr_t) meltsy_REGISTER_GIMPLE_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_GIMPLE_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_GIMPLESEQ_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V397*/ meltfptr[396])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_GIMPLESEQ_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_GIMPLESEQ_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_GIMPLESEQ_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V397*/
            meltfptr[396] = (melt_ptr_t) meltsy_REGISTER_GIMPLESEQ_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_GIMPLESEQ_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_LOOP_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V399*/ meltfptr[398])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_LOOP_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_LOOP_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_LOOP_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V399*/
            meltfptr[398] = (melt_ptr_t) meltsy_REGISTER_LOOP_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_LOOP_DEBUG_FUN*/


    /*^getnamedsymbol*/
    /*getnamedsym:REGISTER_TREE_DEBUG_FUN*/

    if (NULL == /*_._VALDATA___V401*/ meltfptr[400])
        {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_TREE_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT*/
            melt_ptr_t meltsy_REGISTER_TREE_DEBUG_FUN = melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_TREE_DEBUG_FUN", (long) MELT_GET);
            /*_._VALDATA___V401*/
            meltfptr[400] = (melt_ptr_t) meltsy_REGISTER_TREE_DEBUG_FUN;
        } /*endgetnamedsym REGISTER_TREE_DEBUG_FUN*/


    /*^comment*/
    /**COMMENT: before getting imported values thru hook **/;

    MELT_LOCATION("warmelt-debug.melt:4:/ compute");
    /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V7*/
    meltfptr[6] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:42:/ compute");
    /*_.CLASS_ROOT__V8*/
    meltfptr[7] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_ROOT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:90:/ compute");
    /*_.CLASS_SELECTOR__V9*/
    meltfptr[8] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_SELECTOR",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:110:/ compute");
    /*_.CLASS_REFERENCE__V10*/
    meltfptr[9] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_REFERENCE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:188:/ compute");
    /*_.CLASS_DISCRIMINANT__V11*/
    meltfptr[10] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_DISCRIMINANT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    /*^compute*/
    /*_.DISCR_CLOSURE__V12*/
    meltfptr[11] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_CLOSURE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:202:/ compute");
    /*_.INITIAL_SYSTEM_DATA__V13*/
    meltfptr[12] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "INITIAL_SYSTEM_DATA",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    /*^compute*/
    /*_.CLASS_SYSTEM_DATA__V14*/
    meltfptr[13] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_SYSTEM_DATA",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:205:/ compute");
    /*_.DISCR_MAP_OBJECTS__V15*/
    meltfptr[14] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MAP_OBJECTS",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:206:/ compute");
    /*_.DISCR_INTEGER__V16*/
    meltfptr[15] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_INTEGER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:232:/ compute");
    /*_.DISCR_STRBUF__V17*/
    meltfptr[16] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_STRBUF",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:233:/ compute");
    /*_.MELT_ASSERT_FAILURE_FUN__V18*/
    meltfptr[17] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "MELT_ASSERT_FAILURE_FUN",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:264:/ compute");
    /*_.ADD2OUT__V19*/
    meltfptr[18] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "ADD2OUT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:289:/ compute");
    /*_.CSTRING_PREFIXED__V20*/
    meltfptr[19] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CSTRING_PREFIXED",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:380:/ compute");
    /*_.CLASS_NAMED__V21*/
    meltfptr[20] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_NAMED",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:388:/ compute");
    /*_.CLASS_QUASI_CTYPE__V22*/
    meltfptr[21] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_QUASI_CTYPE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:558:/ compute");
    /*_.INSTALL_METHOD__V23*/
    meltfptr[22] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "INSTALL_METHOD",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    /*^compute*/
    /*_.DISCR_NULL_RECEIVER__V24*/
    meltfptr[23] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_NULL_RECEIVER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:567:/ compute");
    /*_.DISCR_STRING__V25*/
    meltfptr[24] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_STRING",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:572:/ compute");
    /*_.DISCR_VERBATIM_STRING__V26*/
    meltfptr[25] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_VERBATIM_STRING",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:686:/ compute");
    /*_.DISCR_CONSTANT_INTEGER__V27*/
    meltfptr[26] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_CONSTANT_INTEGER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:704:/ compute");
    /*_.DISCR_DOUBLE__V28*/
    meltfptr[27] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_DOUBLE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:706:/ compute");
    /*_.DISCR_CONSTANT_DOUBLE__V29*/
    meltfptr[28] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_CONSTANT_DOUBLE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:723:/ compute");
    /*_.DISCR_MIXED_INTEGER__V30*/
    meltfptr[29] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MIXED_INTEGER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:753:/ compute");
    /*_.DISCR_MIXED_LOCATION__V31*/
    meltfptr[30] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MIXED_LOCATION",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:796:/ compute");
    /*_.DISCR_MIXED_BIGINT__V32*/
    meltfptr[31] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MIXED_BIGINT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:804:/ compute");
    /*_.DISCR_MULTIPLE__V33*/
    meltfptr[32] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MULTIPLE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:841:/ compute");
    /*_.DISCR_ROUTINE__V34*/
    meltfptr[33] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_ROUTINE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:849:/ compute");
    /*_.ROUTINE_EVERY__V35*/
    meltfptr[34] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "ROUTINE_EVERY",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:876:/ compute");
    /*_.HOOK_EVERY__V36*/
    meltfptr[35] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "HOOK_EVERY",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:890:/ compute");
    /*_.DISCR_HOOK__V37*/
    meltfptr[36] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_HOOK",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:948:/ compute");
    /*_.DISCR_LIST__V38*/
    meltfptr[37] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_LIST",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:995:/ compute");
    /*_.DISCR_PAIR__V39*/
    meltfptr[38] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_PAIR",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1052:/ compute");
    /*_.MAPOBJECT_EVERY__V40*/
    meltfptr[39] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "MAPOBJECT_EVERY",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1065:/ compute");
    /*_.MULTIPLE_SORT__V41*/
    meltfptr[40] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "MULTIPLE_SORT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1075:/ compute");
    /*_.COMPARE_OBJ_RANKED__V42*/
    meltfptr[41] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "COMPARE_OBJ_RANKED",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1081:/ compute");
    /*_.MULTIPLE_EVERY__V43*/
    meltfptr[42] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "MULTIPLE_EVERY",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1141:/ compute");
    /*_.MAPSTRING_EVERY__V44*/
    meltfptr[43] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "MAPSTRING_EVERY",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1186:/ compute");
    /*_.DISCR_MAP_STRINGS__V45*/
    meltfptr[44] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_MAP_STRINGS",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1224:/ compute");
    /*_.DISCR_BUCKET_LONGS__V46*/
    meltfptr[45] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_BUCKET_LONGS",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1259:/ compute");
    /*_.DISCR_JSONOBJECT__V47*/
    meltfptr[46] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_JSONOBJECT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1295:/ compute");
    /*_.DISCR_ANY_RECEIVER__V48*/
    meltfptr[47] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "DISCR_ANY_RECEIVER",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1373:/ compute");
    /*_.CLASS_SYMBOL__V49*/
    meltfptr[48] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_SYMBOL",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1401:/ compute");
    /*_.CLASS_CLASS__V50*/
    meltfptr[49] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_CLASS",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1411:/ compute");
    /*_.CLASS_KEYWORD__V51*/
    meltfptr[50] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_KEYWORD",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1445:/ compute");
    /*_.CLASS_CLONED_SYMBOL__V52*/
    meltfptr[51] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_CLONED_SYMBOL",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1460:/ compute");
    /*_.CLASS_ENVIRONMENT__V53*/
    meltfptr[52] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_ENVIRONMENT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1498:/ compute");
    /*_.ENV_PREV__V54*/
    meltfptr[53] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "ENV_PREV",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1519:/ compute");
    /*_.CLASS_DESCRIBED_ENVIRONMENT__V55*/
    meltfptr[54] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_DESCRIBED_ENVIRONMENT",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1539:/ compute");
    /*_.CLASS_CTYPE__V56*/
    meltfptr[55] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_CTYPE",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    MELT_LOCATION("warmelt-debug.melt:1554:/ compute");
    /*_.CLASS_ANY_BINDING__V57*/
    meltfptr[56] =
        /*hookcall*/ melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_SYMBOL_IMPORTER))),  "CLASS_ANY_BINDING",  "warmelt-debug", /*_._PREVENV___V4*/ meltfptr[3]) ;
    /**COMMENT: after getting imported values **/;

    /**initial routine cdata initializer**/

    memset(meltpredefinited, 0, sizeof(meltpredefinited));
    melt_initialize_module_meltdata_WARMELTmiDEBUG (&meltfram__, meltpredefinited);
    /**initial routine body**/

    debugeprintf (" in initialization of warmelt-debug thru 8 chunk routines with frame @%p of %d bytes",
                  /*fromline 2338*/ (void*)&meltfram__, (int) sizeof(meltfram__));
    melt_debuggc_eprintf ("initialization of warmelt-debug thru 8 chunks, frame @%p of %d bytes",
                          (void*)&meltfram__, (int) sizeof(meltfram__));

    meltmod__WARMELTmiDEBUG__initialmeltchunk_0 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_1 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_2 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_3 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_4 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_5 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_6 (&meltfram__, meltpredefinited);
    meltmod__WARMELTmiDEBUG__initialmeltchunk_7 (&meltfram__, meltpredefinited);;
    goto meltlabend_rout;
meltlabend_rout:
    ;
    {
        /* return out of initial fromline 2371 */ melt_ptr_t retval = /*_._RETINIT___V1*/ meltfptr[0];
        debugeprintf ("returning @%p from initial routine of warmelt-debug", (void*)retval); /*fromline 2379*/
        return retval;
    }
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
} /* end melt_start_this_module fromline 2391 */


void meltmod__WARMELTmiDEBUG__initialmeltchunk_0 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    /**COMMENT: start of oinibody **/;

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V58*/ meltfptr[57])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V58*/ meltfptr[57]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V58*/ meltfptr[57]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V59*/ meltfptr[58]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V58*/ meltfptr[57]);


    melt_dbgtrace_written_object (/*_._VALDATA___V58*/ meltfptr[57], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_3__CLASS_DEBUG_INFORMATION @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V60*/ meltfptr[59])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_3__CLASS_DEBUG_INFORMATION @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V60*/ meltfptr[59]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V60*/ meltfptr[59]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V61*/ meltfptr[60]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V60*/ meltfptr[59]);


    melt_dbgtrace_written_object (/*_._VALDATA___V60*/ meltfptr[59], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_5__CLASS_ROOT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V62*/ meltfptr[61])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_5__CLASS_ROOT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V62*/ meltfptr[61]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V62*/ meltfptr[61]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V63*/ meltfptr[62]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V62*/ meltfptr[61]);


    melt_dbgtrace_written_object (/*_._VALDATA___V62*/ meltfptr[61], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V65*/ meltfptr[64]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))->obj_vartab[4] = (melt_ptr_t)(
                /*_.CLASS_ROOT__V8*/ meltfptr[7]);

    /*putupl#7*/
    melt_assertmsg("putupl #7 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V66*/ meltfptr[65]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #7 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V66*/ meltfptr[65]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V66*/ meltfptr[65]))->tabval[0] = (melt_ptr_t)(/*_.CLASS_ROOT__V8*/ meltfptr[7]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V66*/ meltfptr[65]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#5", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#5", (5>=0 && 5< melt_object_length((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))->obj_vartab[5] = (melt_ptr_t)(
                /*_._VALTUP___V66*/ meltfptr[65]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_13__DBGI_OUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_13__DBGI_OUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V68*/ meltfptr[67]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_13__DBGI_OUT @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_13__DBGI_OUT @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V67*/ meltfptr[66]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V67*/ meltfptr[66], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_17__DBGI_OCCMAP @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_17__DBGI_OCCMAP @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V70*/ meltfptr[69]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_17__DBGI_OCCMAP @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_17__DBGI_OCCMAP @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V69*/ meltfptr[68]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V69*/ meltfptr[68], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_21__DBGI_MAXDEPTH @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_21__DBGI_MAXDEPTH @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V72*/ meltfptr[71]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_21__DBGI_MAXDEPTH @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_21__DBGI_MAXDEPTH @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V71*/ meltfptr[70]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V71*/ meltfptr[70], "new static instance");

    /*putupl#8*/
    melt_assertmsg("putupl #8 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #8 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]);

    /*putupl#9*/
    melt_assertmsg("putupl #9 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #9 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]);

    /*putupl#10*/
    melt_assertmsg("putupl #10 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #10 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V73*/ meltfptr[72]))->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V73*/ meltfptr[72]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#6", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_7__CLASS_DEBUG_INFORMATION @#6", (6>=0 && 6< melt_object_length((melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]))->obj_vartab[6] = (melt_ptr_t)(
                /*_._VALTUP___V73*/ meltfptr[72]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:42:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V64*/ meltfptr[63], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_11__DBGI_OUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V74*/ meltfptr[73])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_11__DBGI_OUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V74*/ meltfptr[73]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V74*/ meltfptr[73]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V75*/ meltfptr[74]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V74*/ meltfptr[73]);


    melt_dbgtrace_written_object (/*_._VALDATA___V74*/ meltfptr[73], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_15__DBGI_OCCMAP @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V76*/ meltfptr[75])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_15__DBGI_OCCMAP @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V76*/ meltfptr[75]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V76*/ meltfptr[75]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V77*/ meltfptr[76]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V76*/ meltfptr[75]);


    melt_dbgtrace_written_object (/*_._VALDATA___V76*/ meltfptr[75], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_19__DBGI_MAXDEPTH @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V78*/ meltfptr[77])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_19__DBGI_MAXDEPTH @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V78*/ meltfptr[77]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V78*/ meltfptr[77]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V79*/ meltfptr[78]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V78*/ meltfptr[77]);


    melt_dbgtrace_written_object (/*_._VALDATA___V78*/ meltfptr[77], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V80*/ meltfptr[79])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_23__CLASS_DEBUG_OUTPUT_INFORMATION @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V80*/ meltfptr[79]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V80*/ meltfptr[79]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V81*/ meltfptr[80]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V80*/ meltfptr[79]);


    melt_dbgtrace_written_object (/*_._VALDATA___V80*/ meltfptr[79], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V83*/ meltfptr[82]);

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))->obj_vartab[4] = (melt_ptr_t)(
                /*_._VALDATA___V64*/ meltfptr[63]);

    /*putupl#11*/
    melt_assertmsg("putupl #11 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #11 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))->tabval[0] = (melt_ptr_t)(/*_.CLASS_ROOT__V8*/ meltfptr[7]);

    /*putupl#12*/
    melt_assertmsg("putupl #12 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #12 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V84*/ meltfptr[83]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V84*/ meltfptr[83]);

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#5", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#5", (5>=0 && 5< melt_object_length((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))->obj_vartab[5] = (melt_ptr_t)(
                /*_._VALTUP___V84*/ meltfptr[83]);

    /*putupl#13*/
    melt_assertmsg("putupl #13 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #13 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V67*/ meltfptr[66]);

    /*putupl#14*/
    melt_assertmsg("putupl #14 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #14 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V69*/ meltfptr[68]);

    /*putupl#15*/
    melt_assertmsg("putupl #15 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #15 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V85*/ meltfptr[84]))->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V71*/ meltfptr[70]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V85*/ meltfptr[84]);

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#6", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_25__CLASS_DEBUG_OUTPUT_INFORMATION @#6", (6>=0 && 6< melt_object_length((melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]))->obj_vartab[6] = (melt_ptr_t)(
                /*_._VALTUP___V85*/ meltfptr[84]);

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:53:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V82*/ meltfptr[81], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_29__DEBUG_DEPTH @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V86*/ meltfptr[85])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_29__DEBUG_DEPTH @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V86*/ meltfptr[85]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V86*/ meltfptr[85]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V87*/ meltfptr[86]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V86*/ meltfptr[85]);


    melt_dbgtrace_written_object (/*_._VALDATA___V86*/ meltfptr[85], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_31__DEBUG_DEPTH @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_31__DEBUG_DEPTH @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V89*/ meltfptr[88]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V90*/ meltfptr[89]);

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_31__DEBUG_DEPTH @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_31__DEBUG_DEPTH @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALTUP___V90*/ meltfptr[89]);

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_31__DEBUG_DEPTH @#3", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_31__DEBUG_DEPTH @#3", (3>=0 && 3< melt_object_length((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))->obj_vartab[3] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    /*putupl#16*/
    melt_assertmsg("putupl #16 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V92*/ meltfptr[91]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #16 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V92*/ meltfptr[91]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V92*/ meltfptr[91]))->tabval[0] = (melt_ptr_t)(/*_._VALSTR___V91*/ meltfptr[90]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V92*/ meltfptr[91]);

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_31__DEBUG_DEPTH @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_31__DEBUG_DEPTH @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V88*/ meltfptr[87]))->obj_vartab[4] = (melt_ptr_t)(
                /*_._VALTUP___V92*/ meltfptr[91]);

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V88*/ meltfptr[87]);

    MELT_LOCATION("warmelt-debug.melt:64:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V88*/ meltfptr[87], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_36__MELT_REALLY_NEED_DEBUG @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V93*/ meltfptr[92])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_36__MELT_REALLY_NEED_DEBUG @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V93*/ meltfptr[92]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V93*/ meltfptr[92]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V94*/ meltfptr[93]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V93*/ meltfptr[92]);


    melt_dbgtrace_written_object (/*_._VALDATA___V93*/ meltfptr[92], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V96*/ meltfptr[95]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_41__DEPTH @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_41__DEPTH @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V99*/ meltfptr[98]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V98*/ meltfptr[97]);


    melt_dbgtrace_written_object (/*_._VALDATA___V98*/ meltfptr[97], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_43 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_43 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V98*/ meltfptr[97]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_43 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_43 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V97*/ meltfptr[96]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V97*/ meltfptr[96], "new static instance");

    /*putupl#17*/
    melt_assertmsg("putupl #17 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V100*/ meltfptr[99]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #17 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V100*/ meltfptr[99]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V100*/ meltfptr[99]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V97*/ meltfptr[96]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V100*/ meltfptr[99]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALTUP___V100*/ meltfptr[99]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#3", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#3", (3>=0 && 3< melt_object_length((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))->obj_vartab[3] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    /*putupl#18*/
    melt_assertmsg("putupl #18 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #18 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))->tabval[0] = (melt_ptr_t)(/*_._VALSTR___V101*/ meltfptr[100]);

    /*putupl#19*/
    melt_assertmsg("putupl #19 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #19 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97]);

    /*putupl#20*/
    melt_assertmsg("putupl #20 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #20 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V103*/ meltfptr[102]))->tabval[2] = (melt_ptr_t)(/*_._VALSTR___V102*/ meltfptr[101]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V103*/ meltfptr[102]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_38__MELT_REALLY_NEED_DEBUG @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V95*/ meltfptr[94]))->obj_vartab[4] = (melt_ptr_t)(
                /*_._VALTUP___V103*/ meltfptr[102]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V95*/ meltfptr[94]);

    MELT_LOCATION("warmelt-debug.melt:72:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V95*/ meltfptr[94], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_47__MELT_HAS_FLAG_DEBUG_SET @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V104*/ meltfptr[103])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_47__MELT_HAS_FLAG_DEBUG_SET @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V104*/ meltfptr[103]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V104*/ meltfptr[103]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V105*/ meltfptr[104]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V104*/ meltfptr[103]);


    melt_dbgtrace_written_object (/*_._VALDATA___V104*/ meltfptr[103], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V107*/ meltfptr[106]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V108*/ meltfptr[107]);

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALTUP___V108*/ meltfptr[107]);

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#3", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#3", (3>=0 && 3< melt_object_length((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))->obj_vartab[3] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    /*putupl#21*/
    melt_assertmsg("putupl #21 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V110*/ meltfptr[109]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #21 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V110*/ meltfptr[109]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V110*/ meltfptr[109]))->tabval[0] = (melt_ptr_t)(/*_._VALSTR___V109*/ meltfptr[108]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V110*/ meltfptr[109]);

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_49__MELT_HAS_FLAG_DEBUG_SET @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V106*/ meltfptr[105]))->obj_vartab[4] = (melt_ptr_t)(
                /*_._VALTUP___V110*/ meltfptr[109]);

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V106*/ meltfptr[105]);

    MELT_LOCATION("warmelt-debug.melt:77:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V106*/ meltfptr[105], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_54__MELT_REALLY_NEED_DBGLIM @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V111*/ meltfptr[110])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_54__MELT_REALLY_NEED_DBGLIM @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V111*/ meltfptr[110]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V111*/ meltfptr[110]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V112*/ meltfptr[111]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V111*/ meltfptr[110]);


    melt_dbgtrace_written_object (/*_._VALDATA___V111*/ meltfptr[110], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V114*/ meltfptr[113]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_59 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_59 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V98*/ meltfptr[97]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_59 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_59 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V115*/ meltfptr[114]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V115*/ meltfptr[114], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_60__LIMIT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V117*/ meltfptr[116])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_60__LIMIT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V117*/ meltfptr[116]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V117*/ meltfptr[116]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V118*/ meltfptr[117]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V117*/ meltfptr[116]);


    melt_dbgtrace_written_object (/*_._VALDATA___V117*/ meltfptr[116], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_62 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_62 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V117*/ meltfptr[116]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_62 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_62 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V116*/ meltfptr[115]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V116*/ meltfptr[115], "new static instance");

    /*putupl#22*/
    melt_assertmsg("putupl #22 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #22 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V115*/ meltfptr[114]);

    /*putupl#23*/
    melt_assertmsg("putupl #23 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #23 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V119*/ meltfptr[118]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V116*/ meltfptr[115]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V119*/ meltfptr[118]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#2", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#2", (2>=0 && 2< melt_object_length((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))->obj_vartab[2] = (melt_ptr_t)(
                /*_._VALTUP___V119*/ meltfptr[118]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#3", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#3", (3>=0 && 3< melt_object_length((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))->obj_vartab[3] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    /*putupl#24*/
    melt_assertmsg("putupl #24 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #24 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))->tabval[0] = (melt_ptr_t)(/*_._VALSTR___V120*/ meltfptr[119]);

    /*putupl#25*/
    melt_assertmsg("putupl #25 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #25 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97]);

    /*putupl#26*/
    melt_assertmsg("putupl #26 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #26 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))->tabval[2] = (melt_ptr_t)(/*_._VALSTR___V121*/ meltfptr[120]);


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_0*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_1 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    /*putupl#27*/
    melt_assertmsg("putupl #27 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #27 checkoff", (3>=0 && 3< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V117*/ meltfptr[116]);

    /*putupl#28*/
    melt_assertmsg("putupl #28 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #28 checkoff", (4>=0 && 4< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V123*/ meltfptr[122]))->tabval[4] = (melt_ptr_t)(/*_._VALSTR___V122*/ meltfptr[121]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V123*/ meltfptr[122]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_56__MELT_REALLY_NEED_DBGLIM @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V113*/ meltfptr[112]))->obj_vartab[4] = (melt_ptr_t)(
                /*_._VALTUP___V123*/ meltfptr[122]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V113*/ meltfptr[112]);

    MELT_LOCATION("warmelt-debug.melt:80:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V113*/ meltfptr[112], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_67__DBG_OUTPUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V124*/ meltfptr[123])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_67__DBG_OUTPUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V124*/ meltfptr[123]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V124*/ meltfptr[123]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V125*/ meltfptr[124]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V124*/ meltfptr[123]);


    melt_dbgtrace_written_object (/*_._VALDATA___V124*/ meltfptr[123], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_69__CLASS_SELECTOR @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V126*/ meltfptr[125])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_69__CLASS_SELECTOR @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V126*/ meltfptr[125]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V126*/ meltfptr[125]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V127*/ meltfptr[126]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V126*/ meltfptr[125]);


    melt_dbgtrace_written_object (/*_._VALDATA___V126*/ meltfptr[125], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_71__RECV @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V128*/ meltfptr[127])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_71__RECV @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V128*/ meltfptr[127]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V128*/ meltfptr[127]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V129*/ meltfptr[128]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V128*/ meltfptr[127]);


    melt_dbgtrace_written_object (/*_._VALDATA___V128*/ meltfptr[127], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_73 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_73 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V128*/ meltfptr[127]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_73 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_73 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_VALUE))));

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V130*/ meltfptr[129]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V130*/ meltfptr[129], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_74__DBGINFO @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V131*/ meltfptr[130])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_74__DBGINFO @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V131*/ meltfptr[130]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V131*/ meltfptr[130]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V132*/ meltfptr[131]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V131*/ meltfptr[130]);


    melt_dbgtrace_written_object (/*_._VALDATA___V131*/ meltfptr[130], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_76 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_76 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V131*/ meltfptr[130]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_76 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_76 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_VALUE))));

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V133*/ meltfptr[132]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V133*/ meltfptr[132], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_77 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_77 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V98*/ meltfptr[97]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_77 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_77 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V134*/ meltfptr[133]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V134*/ meltfptr[133], "new static instance");

    /*putupl#29*/
    melt_assertmsg("putupl #29 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #29 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V130*/ meltfptr[129]);

    /*putupl#30*/
    melt_assertmsg("putupl #30 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #30 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V133*/ meltfptr[132]);

    /*putupl#31*/
    melt_assertmsg("putupl #31 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #31 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V135*/ meltfptr[134]))->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V134*/ meltfptr[133]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V135*/ meltfptr[134]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_79__DBG_OUTPUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_79__DBG_OUTPUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V137*/ meltfptr[136]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V136*/ meltfptr[135]);

    MELT_LOCATION("warmelt-debug.melt:90:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V136*/ meltfptr[135], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_81__DBG_OUTPUTAGAIN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V138*/ meltfptr[137])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_81__DBG_OUTPUTAGAIN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V138*/ meltfptr[137]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V138*/ meltfptr[137]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V139*/ meltfptr[138]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V138*/ meltfptr[137]);


    melt_dbgtrace_written_object (/*_._VALDATA___V138*/ meltfptr[137], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_83 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_83 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V128*/ meltfptr[127]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_83 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_83 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_VALUE))));

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V140*/ meltfptr[139]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V140*/ meltfptr[139], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_84 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_84 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V131*/ meltfptr[130]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_84 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_84 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_VALUE))));

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V141*/ meltfptr[140]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V141*/ meltfptr[140], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_85 @#0", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_85 @#0", (0>=0 && 0< melt_object_length((melt_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141]))->obj_vartab[0] = (melt_ptr_t)(
                /*_._VALDATA___V98*/ meltfptr[97]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_85 @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_85 @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141]))->obj_vartab[1] = (melt_ptr_t)(
                ((melt_ptr_t)(MELT_PREDEF(CTYPE_LONG))));

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V142*/ meltfptr[141]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V142*/ meltfptr[141], "new static instance");

    /*putupl#32*/
    melt_assertmsg("putupl #32 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #32 checkoff", (0>=0 && 0< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V140*/ meltfptr[139]);

    /*putupl#33*/
    melt_assertmsg("putupl #33 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #33 checkoff", (1>=0 && 1< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))->tabval[1] = (melt_ptr_t)(/*_._VALDATA___V141*/ meltfptr[140]);

    /*putupl#34*/
    melt_assertmsg("putupl #34 checktup", melt_magic_discr((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))== MELTOBMAG_MULTIPLE);
    melt_assertmsg("putupl #34 checkoff", (2>=0 && 2< melt_multiple_length((melt_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))));
    ((meltmultiple_ptr_t)(/*_._VALTUP___V143*/ meltfptr[142]))->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V142*/ meltfptr[141]);

    /*touch:_INITUP_*/
    meltgc_touch(/*_._VALTUP___V143*/ meltfptr[142]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_87__DBG_OUTPUTAGAIN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_87__DBG_OUTPUTAGAIN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V145*/ meltfptr[144]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V144*/ meltfptr[143]);

    MELT_LOCATION("warmelt-debug.melt:99:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V144*/ meltfptr[143], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_89__TREE_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V146*/ meltfptr[145])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_89__TREE_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V146*/ meltfptr[145]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V146*/ meltfptr[145]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V147*/ meltfptr[146]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V146*/ meltfptr[145]);


    melt_dbgtrace_written_object (/*_._VALDATA___V146*/ meltfptr[145], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_91__CLASS_REFERENCE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V148*/ meltfptr[147])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_91__CLASS_REFERENCE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V148*/ meltfptr[147]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V148*/ meltfptr[147]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V149*/ meltfptr[148]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V148*/ meltfptr[147]);


    melt_dbgtrace_written_object (/*_._VALDATA___V148*/ meltfptr[147], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:110:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V150*/ meltfptr[149]);

    MELT_LOCATION("warmelt-debug.melt:110:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V150*/ meltfptr[149], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:111:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V151*/ meltfptr[150])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V150*/ meltfptr[149]);
    ((meltroutine_ptr_t)/*_._VALROUT___V151*/ meltfptr[150])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V150*/ meltfptr[149]);

    MELT_LOCATION("warmelt-debug.melt:111:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V151*/ meltfptr[150])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_94__REGISTER_TREE_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V151*/ meltfptr[150])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:111:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V151*/ meltfptr[150]);

    /*putclosurout#1*/
    melt_assertmsg("putclosrout#1 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V152*/ meltfptr[151])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#1 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V151*/ meltfptr[150])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V152*/ meltfptr[151])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V151*/ meltfptr[150]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V152*/ meltfptr[151]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_96__GIMPLE_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V153*/ meltfptr[152])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_96__GIMPLE_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V153*/ meltfptr[152]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V153*/ meltfptr[152]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V154*/ meltfptr[153]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V153*/ meltfptr[152]);


    melt_dbgtrace_written_object (/*_._VALDATA___V153*/ meltfptr[152], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:123:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V155*/ meltfptr[154]);

    MELT_LOCATION("warmelt-debug.melt:123:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V155*/ meltfptr[154], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:124:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V156*/ meltfptr[155])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V155*/ meltfptr[154]);
    ((meltroutine_ptr_t)/*_._VALROUT___V156*/ meltfptr[155])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V155*/ meltfptr[154]);

    MELT_LOCATION("warmelt-debug.melt:124:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V156*/ meltfptr[155])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_99__REGISTER_GIMPLE_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V156*/ meltfptr[155])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:124:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V156*/ meltfptr[155]);

    /*putclosurout#2*/
    melt_assertmsg("putclosrout#2 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V157*/ meltfptr[156])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#2 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V156*/ meltfptr[155])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V157*/ meltfptr[156])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V156*/ meltfptr[155]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V157*/ meltfptr[156]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_101__GIMPLESEQ_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V158*/ meltfptr[157])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_101__GIMPLESEQ_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V158*/ meltfptr[157]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V158*/ meltfptr[157]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V159*/ meltfptr[158]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V158*/ meltfptr[157]);


    melt_dbgtrace_written_object (/*_._VALDATA___V158*/ meltfptr[157], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:136:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V160*/ meltfptr[159]);

    MELT_LOCATION("warmelt-debug.melt:136:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V160*/ meltfptr[159], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:137:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V161*/ meltfptr[160])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V160*/ meltfptr[159]);
    ((meltroutine_ptr_t)/*_._VALROUT___V161*/ meltfptr[160])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V160*/ meltfptr[159]);

    MELT_LOCATION("warmelt-debug.melt:137:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V161*/ meltfptr[160])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_104__REGISTER_GIMPLESEQ_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V161*/ meltfptr[160])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:137:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V161*/ meltfptr[160]);

    /*putclosurout#3*/
    melt_assertmsg("putclosrout#3 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V162*/ meltfptr[161])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#3 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V161*/ meltfptr[160])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V162*/ meltfptr[161])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V161*/ meltfptr[160]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V162*/ meltfptr[161]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_106__EDGE_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V163*/ meltfptr[162])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_106__EDGE_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V163*/ meltfptr[162]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V163*/ meltfptr[162]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V164*/ meltfptr[163]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V163*/ meltfptr[162]);


    melt_dbgtrace_written_object (/*_._VALDATA___V163*/ meltfptr[162], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:149:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V165*/ meltfptr[164]);

    MELT_LOCATION("warmelt-debug.melt:149:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V165*/ meltfptr[164], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:150:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V166*/ meltfptr[165])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V165*/ meltfptr[164]);
    ((meltroutine_ptr_t)/*_._VALROUT___V166*/ meltfptr[165])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V165*/ meltfptr[164]);

    MELT_LOCATION("warmelt-debug.melt:150:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V166*/ meltfptr[165])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_109__REGISTER_EDGE_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V166*/ meltfptr[165])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:150:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V166*/ meltfptr[165]);

    /*putclosurout#4*/
    melt_assertmsg("putclosrout#4 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V167*/ meltfptr[166])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#4 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V166*/ meltfptr[165])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V167*/ meltfptr[166])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V166*/ meltfptr[165]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V167*/ meltfptr[166]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_111__BASICBLOCK_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V168*/ meltfptr[167])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_111__BASICBLOCK_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V168*/ meltfptr[167]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V168*/ meltfptr[167]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V169*/ meltfptr[168]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V168*/ meltfptr[167]);


    melt_dbgtrace_written_object (/*_._VALDATA___V168*/ meltfptr[167], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:162:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V170*/ meltfptr[169]);

    MELT_LOCATION("warmelt-debug.melt:162:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V170*/ meltfptr[169], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:163:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V171*/ meltfptr[170])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V170*/ meltfptr[169]);
    ((meltroutine_ptr_t)/*_._VALROUT___V171*/ meltfptr[170])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V170*/ meltfptr[169]);

    MELT_LOCATION("warmelt-debug.melt:163:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V171*/ meltfptr[170])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_114__REGISTER_BASICBLOCK_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V171*/ meltfptr[170])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:163:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V171*/ meltfptr[170]);

    /*putclosurout#5*/
    melt_assertmsg("putclosrout#5 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V172*/ meltfptr[171])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#5 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V171*/ meltfptr[170])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V172*/ meltfptr[171])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V171*/ meltfptr[170]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V172*/ meltfptr[171]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_116__LOOP_DEBUG_FUNCONT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V173*/ meltfptr[172])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_116__LOOP_DEBUG_FUNCONT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V173*/ meltfptr[172]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V173*/ meltfptr[172]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V174*/ meltfptr[173]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V173*/ meltfptr[172]);


    melt_dbgtrace_written_object (/*_._VALDATA___V173*/ meltfptr[172], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:175:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V175*/ meltfptr[174]);

    MELT_LOCATION("warmelt-debug.melt:175:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V175*/ meltfptr[174], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:176:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V176*/ meltfptr[175])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V175*/ meltfptr[174]);
    ((meltroutine_ptr_t)/*_._VALROUT___V176*/ meltfptr[175])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V175*/ meltfptr[174]);

    MELT_LOCATION("warmelt-debug.melt:176:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V176*/ meltfptr[175])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_119__REGISTER_LOOP_DEBUG_FUN#1", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V176*/ meltfptr[175])->tabval[1] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:176:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V176*/ meltfptr[175]);

    /*putclosurout#6*/
    melt_assertmsg("putclosrout#6 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V177*/ meltfptr[176])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#6 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V176*/ meltfptr[175])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V177*/ meltfptr[176])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V176*/ meltfptr[175]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V177*/ meltfptr[176]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_121__DISCR_DEBUG_CLOSURE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V178*/ meltfptr[177])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_121__DISCR_DEBUG_CLOSURE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V178*/ meltfptr[177]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V178*/ meltfptr[177]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V179*/ meltfptr[178]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V178*/ meltfptr[177]);


    melt_dbgtrace_written_object (/*_._VALDATA___V178*/ meltfptr[177], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_123__CLASS_DISCRIMINANT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V180*/ meltfptr[179])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_123__CLASS_DISCRIMINANT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V180*/ meltfptr[179]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V180*/ meltfptr[179]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V181*/ meltfptr[180]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V180*/ meltfptr[179]);


    melt_dbgtrace_written_object (/*_._VALDATA___V180*/ meltfptr[179], "new static instance");


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_1*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_2 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    MELT_LOCATION("warmelt-debug.melt:188:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_125__DISCR_DEBUG_CLOSURE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_125__DISCR_DEBUG_CLOSURE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V183*/ meltfptr[182]);

    MELT_LOCATION("warmelt-debug.melt:188:/ initchunk");
    /*^putslot*/
    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dobj_125__DISCR_DEBUG_CLOSURE @#4", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dobj_125__DISCR_DEBUG_CLOSURE @#4", (4>=0 && 4< melt_object_length((melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181]))->obj_vartab[4] = (melt_ptr_t)(
                /*_.DISCR_CLOSURE__V12*/ meltfptr[11]);

    MELT_LOCATION("warmelt-debug.melt:188:/ initchunk");
    /*^touch*/
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V182*/ meltfptr[181]);

    MELT_LOCATION("warmelt-debug.melt:188:/ initchunk");
    /*^touchobj*/

    melt_dbgtrace_written_object (/*_._VALDATA___V182*/ meltfptr[181], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_126__DISCR_CLOSURE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V184*/ meltfptr[183])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_126__DISCR_CLOSURE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V184*/ meltfptr[183]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V184*/ meltfptr[183]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V185*/ meltfptr[184]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V184*/ meltfptr[183]);


    melt_dbgtrace_written_object (/*_._VALDATA___V184*/ meltfptr[183], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#0", NULL != (/*_.INITIAL_SYSTEM_DATA__V13*/ meltfptr[12]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[0] = (melt_ptr_t)(/*_.INITIAL_SYSTEM_DATA__V13*/ meltfptr[12]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#1", NULL != (/*_.CLASS_SYSTEM_DATA__V14*/ meltfptr[13]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[1] = (melt_ptr_t)(/*_.CLASS_SYSTEM_DATA__V14*/ meltfptr[13]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#2", NULL != (/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[2] = (melt_ptr_t)(/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#3", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[3] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#4", NULL != (/*_.DISCR_STRBUF__V17*/ meltfptr[16]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[4] = (melt_ptr_t)(/*_.DISCR_STRBUF__V17*/ meltfptr[16]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#5", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[5] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[6] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#7", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[7] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#8", NULL != (/*_.CSTRING_PREFIXED__V20*/ meltfptr[19]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[8] = (melt_ptr_t)(/*_.CSTRING_PREFIXED__V20*/ meltfptr[19]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V182*/ meltfptr[181]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[9] = (melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181]);

    MELT_LOCATION("warmelt-debug.melt:429:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V188*/ meltfptr[187])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V188*/ meltfptr[187])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:429:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V188*/ meltfptr[187])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_153__DBG_OUT#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V188*/ meltfptr[187])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V190*/ meltfptr[189])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_151__DBG_OUTOBJECT#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V190*/ meltfptr[189])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V144*/ meltfptr[143]);
    ((meltroutine_ptr_t)/*_._VALROUT___V190*/ meltfptr[189])->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_151__DBG_OUTOBJECT#3", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V190*/ meltfptr[189])->tabval[3] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V136*/ meltfptr[135]);
    ((meltroutine_ptr_t)/*_._VALROUT___V190*/ meltfptr[189])->tabval[4] = (melt_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135]);

    MELT_LOCATION("warmelt-debug.melt:409:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V190*/ meltfptr[189]);

    /*putclosurout#7*/
    melt_assertmsg("putclosrout#7 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V189*/ meltfptr[188])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#7 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V190*/ meltfptr[189])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V189*/ meltfptr[188])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V190*/ meltfptr[189]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V189*/ meltfptr[188]);

    MELT_LOCATION("warmelt-debug.melt:429:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V188*/ meltfptr[187])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V189*/ meltfptr[188]);
    ((meltroutine_ptr_t)/*_._VALROUT___V188*/ meltfptr[187])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V189*/ meltfptr[188]);

    MELT_LOCATION("warmelt-debug.melt:429:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V188*/ meltfptr[187])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V136*/ meltfptr[135]);
    ((meltroutine_ptr_t)/*_._VALROUT___V188*/ meltfptr[187])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135]);

    MELT_LOCATION("warmelt-debug.melt:429:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V188*/ meltfptr[187]);

    /*putclosurout#8*/
    melt_assertmsg("putclosrout#8 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#8 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V188*/ meltfptr[187])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V187*/ meltfptr[186])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V188*/ meltfptr[187]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[10] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V150*/ meltfptr[149]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[11] = (melt_ptr_t)(/*_._VALDATA___V150*/ meltfptr[149]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#12", NULL != (/*_.CLASS_REFERENCE__V10*/ meltfptr[9]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[12] = (melt_ptr_t)(/*_.CLASS_REFERENCE__V10*/ meltfptr[9]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V155*/ meltfptr[154]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[13] = (melt_ptr_t)(/*_._VALDATA___V155*/ meltfptr[154]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V160*/ meltfptr[159]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[14] = (melt_ptr_t)(/*_._VALDATA___V160*/ meltfptr[159]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V165*/ meltfptr[164]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[15] = (melt_ptr_t)(/*_._VALDATA___V165*/ meltfptr[164]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V170*/ meltfptr[169]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[16] = (melt_ptr_t)(/*_._VALDATA___V170*/ meltfptr[169]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V175*/ meltfptr[174]);
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[17] = (melt_ptr_t)(/*_._VALDATA___V175*/ meltfptr[174]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#18", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[18] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_129__MELT_DEBUG_FUN#19", NULL != (/*_.CLASS_QUASI_CTYPE__V22*/ meltfptr[21]));
    ((meltroutine_ptr_t)/*_._VALROUT___V186*/ meltfptr[185])->tabval[19] = (melt_ptr_t)(/*_.CLASS_QUASI_CTYPE__V22*/ meltfptr[21]);

    MELT_LOCATION("warmelt-debug.melt:199:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V186*/ meltfptr[185]);

    /*putclosurout#9*/
    melt_assertmsg("putclosrout#9 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V191*/ meltfptr[190])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#9 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V186*/ meltfptr[185])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V191*/ meltfptr[190])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V186*/ meltfptr[185]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V191*/ meltfptr[190]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_131__INITIAL_SYSTEM_DATA @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V192*/ meltfptr[191])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_131__INITIAL_SYSTEM_DATA @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V192*/ meltfptr[191]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V192*/ meltfptr[191]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V193*/ meltfptr[192]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V192*/ meltfptr[191]);


    melt_dbgtrace_written_object (/*_._VALDATA___V192*/ meltfptr[191], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_133__CLASS_SYSTEM_DATA @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V194*/ meltfptr[193])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_133__CLASS_SYSTEM_DATA @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V194*/ meltfptr[193]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V194*/ meltfptr[193]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V195*/ meltfptr[194]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V194*/ meltfptr[193]);


    melt_dbgtrace_written_object (/*_._VALDATA___V194*/ meltfptr[193], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_135__DISCR_MAP_OBJECTS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V196*/ meltfptr[195])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_135__DISCR_MAP_OBJECTS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V196*/ meltfptr[195]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V196*/ meltfptr[195]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V197*/ meltfptr[196]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V196*/ meltfptr[195]);


    melt_dbgtrace_written_object (/*_._VALDATA___V196*/ meltfptr[195], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_137__DISCR_INTEGER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V198*/ meltfptr[197])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_137__DISCR_INTEGER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V198*/ meltfptr[197]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V198*/ meltfptr[197]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V199*/ meltfptr[198]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V198*/ meltfptr[197]);


    melt_dbgtrace_written_object (/*_._VALDATA___V198*/ meltfptr[197], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_139__DISCR_STRBUF @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V200*/ meltfptr[199])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_139__DISCR_STRBUF @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V200*/ meltfptr[199]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V200*/ meltfptr[199]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V201*/ meltfptr[200]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V200*/ meltfptr[199]);


    melt_dbgtrace_written_object (/*_._VALDATA___V200*/ meltfptr[199], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_141__MELT_ASSERT_FAILURE_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V202*/ meltfptr[201])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_141__MELT_ASSERT_FAILURE_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V202*/ meltfptr[201]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V202*/ meltfptr[201]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V203*/ meltfptr[202]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V202*/ meltfptr[201]);


    melt_dbgtrace_written_object (/*_._VALDATA___V202*/ meltfptr[201], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_143__ADD2OUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V204*/ meltfptr[203])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_143__ADD2OUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V204*/ meltfptr[203]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V204*/ meltfptr[203]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V205*/ meltfptr[204]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V204*/ meltfptr[203]);


    melt_dbgtrace_written_object (/*_._VALDATA___V204*/ meltfptr[203], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_145__CSTRING_PREFIXED @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V206*/ meltfptr[205])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_145__CSTRING_PREFIXED @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V206*/ meltfptr[205]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V206*/ meltfptr[205]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V207*/ meltfptr[206]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V206*/ meltfptr[205]);


    melt_dbgtrace_written_object (/*_._VALDATA___V206*/ meltfptr[205], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_147__CLASS_NAMED @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V208*/ meltfptr[207])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_147__CLASS_NAMED @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V208*/ meltfptr[207]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V208*/ meltfptr[207]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V209*/ meltfptr[208]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V208*/ meltfptr[207]);


    melt_dbgtrace_written_object (/*_._VALDATA___V208*/ meltfptr[207], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_149__CLASS_QUASI_CTYPE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V210*/ meltfptr[209])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_149__CLASS_QUASI_CTYPE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V210*/ meltfptr[209]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V210*/ meltfptr[209]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V211*/ meltfptr[210]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V210*/ meltfptr[209]);


    melt_dbgtrace_written_object (/*_._VALDATA___V210*/ meltfptr[209], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:457:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V212*/ meltfptr[211])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V212*/ meltfptr[211])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:457:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V212*/ meltfptr[211])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_155__DBGOUT_FIELDS#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V212*/ meltfptr[211])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:457:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V212*/ meltfptr[211])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V212*/ meltfptr[211])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:457:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V212*/ meltfptr[211]);

    /*putclosurout#10*/
    melt_assertmsg("putclosrout#10 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#10 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V212*/ meltfptr[211])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V213*/ meltfptr[212])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V212*/ meltfptr[211]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:510:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V214*/ meltfptr[213])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V214*/ meltfptr[213])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:510:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V214*/ meltfptr[213])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_157__DBGOUTAGAIN_FIELDS#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V214*/ meltfptr[213])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:510:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V214*/ meltfptr[213])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V214*/ meltfptr[213])->tabval[2] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:510:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V214*/ meltfptr[213])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V144*/ meltfptr[143]);
    ((meltroutine_ptr_t)/*_._VALROUT___V214*/ meltfptr[213])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143]);

    MELT_LOCATION("warmelt-debug.melt:510:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V214*/ meltfptr[213]);

    /*putclosurout#11*/
    melt_assertmsg("putclosrout#11 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V215*/ meltfptr[214])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#11 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V214*/ meltfptr[213])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V215*/ meltfptr[214])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V214*/ meltfptr[213]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V215*/ meltfptr[214]);

    MELT_LOCATION("warmelt-debug.melt:553:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V216*/ meltfptr[215])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V216*/ meltfptr[215])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:553:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V216*/ meltfptr[215])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_159__DBGOUT_NULL_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V216*/ meltfptr[215])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:553:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V216*/ meltfptr[215]);

    /*putclosurout#12*/
    melt_assertmsg("putclosrout#12 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V217*/ meltfptr[216])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#12 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V216*/ meltfptr[215])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V217*/ meltfptr[216])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V216*/ meltfptr[215]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V217*/ meltfptr[216]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_161__INSTALL_METHOD @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V218*/ meltfptr[217])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_161__INSTALL_METHOD @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V218*/ meltfptr[217]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V218*/ meltfptr[217]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V219*/ meltfptr[218]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V218*/ meltfptr[217]);


    melt_dbgtrace_written_object (/*_._VALDATA___V218*/ meltfptr[217], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_163__DISCR_NULL_RECEIVER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V220*/ meltfptr[219])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_163__DISCR_NULL_RECEIVER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V220*/ meltfptr[219]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V220*/ meltfptr[219]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V221*/ meltfptr[220]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V220*/ meltfptr[219]);


    melt_dbgtrace_written_object (/*_._VALDATA___V220*/ meltfptr[219], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:562:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V222*/ meltfptr[221])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V222*/ meltfptr[221])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:562:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V222*/ meltfptr[221])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_165__DBGOUT_STRING_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V222*/ meltfptr[221])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:562:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V222*/ meltfptr[221])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_165__DBGOUT_STRING_METHOD#2", NULL != (/*_.DISCR_STRING__V25*/ meltfptr[24]));
    ((meltroutine_ptr_t)/*_._VALROUT___V222*/ meltfptr[221])->tabval[2] = (melt_ptr_t)(/*_.DISCR_STRING__V25*/ meltfptr[24]);

    MELT_LOCATION("warmelt-debug.melt:562:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V222*/ meltfptr[221])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_165__DBGOUT_STRING_METHOD#3", NULL != (/*_.DISCR_VERBATIM_STRING__V26*/ meltfptr[25]));
    ((meltroutine_ptr_t)/*_._VALROUT___V222*/ meltfptr[221])->tabval[3] = (melt_ptr_t)(/*_.DISCR_VERBATIM_STRING__V26*/ meltfptr[25]);

    MELT_LOCATION("warmelt-debug.melt:562:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V222*/ meltfptr[221]);

    /*putclosurout#13*/
    melt_assertmsg("putclosrout#13 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V223*/ meltfptr[222])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#13 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V222*/ meltfptr[221])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V223*/ meltfptr[222])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V222*/ meltfptr[221]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V223*/ meltfptr[222]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_167__DISCR_STRING @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V224*/ meltfptr[223])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_167__DISCR_STRING @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V224*/ meltfptr[223]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V224*/ meltfptr[223]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V225*/ meltfptr[224]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V224*/ meltfptr[223]);


    melt_dbgtrace_written_object (/*_._VALDATA___V224*/ meltfptr[223], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_169__DISCR_VERBATIM_STRING @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V226*/ meltfptr[225])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_169__DISCR_VERBATIM_STRING @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V226*/ meltfptr[225]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V226*/ meltfptr[225]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V227*/ meltfptr[226]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V226*/ meltfptr[225]);


    melt_dbgtrace_written_object (/*_._VALDATA___V226*/ meltfptr[225], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:591:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V228*/ meltfptr[227])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V228*/ meltfptr[227])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:591:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V228*/ meltfptr[227])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_171__DBGOUT_STRBUF_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V228*/ meltfptr[227])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:591:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V228*/ meltfptr[227])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_171__DBGOUT_STRBUF_METHOD#2", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V228*/ meltfptr[227])->tabval[2] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:591:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V228*/ meltfptr[227])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_171__DBGOUT_STRBUF_METHOD#3", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V228*/ meltfptr[227])->tabval[3] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:591:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V228*/ meltfptr[227]);

    /*putclosurout#14*/
    melt_assertmsg("putclosrout#14 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V229*/ meltfptr[228])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#14 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V228*/ meltfptr[227])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V229*/ meltfptr[228])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V228*/ meltfptr[227]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V229*/ meltfptr[228]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V230*/ meltfptr[229])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_173__DBGOUT_INTEGER_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V230*/ meltfptr[229])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_173__DBGOUT_INTEGER_METHOD#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V230*/ meltfptr[229])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_173__DBGOUT_INTEGER_METHOD#3", NULL != (/*_.DISCR_CONSTANT_INTEGER__V27*/ meltfptr[26]));
    ((meltroutine_ptr_t)/*_._VALROUT___V230*/ meltfptr[229])->tabval[3] = (melt_ptr_t)(/*_.DISCR_CONSTANT_INTEGER__V27*/ meltfptr[26]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_173__DBGOUT_INTEGER_METHOD#4", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V230*/ meltfptr[229])->tabval[4] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:677:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V230*/ meltfptr[229]);

    /*putclosurout#15*/
    melt_assertmsg("putclosrout#15 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V231*/ meltfptr[230])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#15 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V230*/ meltfptr[229])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V231*/ meltfptr[230])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V230*/ meltfptr[229]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V231*/ meltfptr[230]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_175__DISCR_CONSTANT_INTEGER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V232*/ meltfptr[231])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_175__DISCR_CONSTANT_INTEGER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V232*/ meltfptr[231]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V232*/ meltfptr[231]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V233*/ meltfptr[232]);


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_2*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_3 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V232*/ meltfptr[231]);


    melt_dbgtrace_written_object (/*_._VALDATA___V232*/ meltfptr[231], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V234*/ meltfptr[233])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_177__DBGOUT_DOUBLE_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V234*/ meltfptr[233])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_177__DBGOUT_DOUBLE_METHOD#2", NULL != (/*_.DISCR_DOUBLE__V28*/ meltfptr[27]));
    ((meltroutine_ptr_t)/*_._VALROUT___V234*/ meltfptr[233])->tabval[2] = (melt_ptr_t)(/*_.DISCR_DOUBLE__V28*/ meltfptr[27]);

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_177__DBGOUT_DOUBLE_METHOD#3", NULL != (/*_.DISCR_CONSTANT_DOUBLE__V29*/ meltfptr[28]));
    ((meltroutine_ptr_t)/*_._VALROUT___V234*/ meltfptr[233])->tabval[3] = (melt_ptr_t)(/*_.DISCR_CONSTANT_DOUBLE__V29*/ meltfptr[28]);

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_177__DBGOUT_DOUBLE_METHOD#4", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V234*/ meltfptr[233])->tabval[4] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:698:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V234*/ meltfptr[233]);

    /*putclosurout#16*/
    melt_assertmsg("putclosrout#16 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V235*/ meltfptr[234])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#16 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V234*/ meltfptr[233])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V235*/ meltfptr[234])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V234*/ meltfptr[233]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V235*/ meltfptr[234]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_179__DISCR_DOUBLE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V236*/ meltfptr[235])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_179__DISCR_DOUBLE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V236*/ meltfptr[235]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V236*/ meltfptr[235]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V237*/ meltfptr[236]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V236*/ meltfptr[235]);


    melt_dbgtrace_written_object (/*_._VALDATA___V236*/ meltfptr[235], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_181__DISCR_CONSTANT_DOUBLE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V238*/ meltfptr[237])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_181__DISCR_CONSTANT_DOUBLE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V238*/ meltfptr[237]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V238*/ meltfptr[237]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V239*/ meltfptr[238]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V238*/ meltfptr[237]);


    melt_dbgtrace_written_object (/*_._VALDATA___V238*/ meltfptr[237], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V240*/ meltfptr[239])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_183__DBGOUT_MIXINT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V240*/ meltfptr[239])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_183__DBGOUT_MIXINT_METHOD#2", NULL != (/*_.DISCR_MIXED_INTEGER__V30*/ meltfptr[29]));
    ((meltroutine_ptr_t)/*_._VALROUT___V240*/ meltfptr[239])->tabval[2] = (melt_ptr_t)(/*_.DISCR_MIXED_INTEGER__V30*/ meltfptr[29]);

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V240*/ meltfptr[239])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V240*/ meltfptr[239])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:717:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V240*/ meltfptr[239]);

    /*putclosurout#17*/
    melt_assertmsg("putclosrout#17 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V241*/ meltfptr[240])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#17 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V240*/ meltfptr[239])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V241*/ meltfptr[240])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V240*/ meltfptr[239]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V241*/ meltfptr[240]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_185__DISCR_MIXED_INTEGER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V242*/ meltfptr[241])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_185__DISCR_MIXED_INTEGER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V242*/ meltfptr[241]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V242*/ meltfptr[241]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V243*/ meltfptr[242]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V242*/ meltfptr[241]);


    melt_dbgtrace_written_object (/*_._VALDATA___V242*/ meltfptr[241], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:746:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V244*/ meltfptr[243])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V244*/ meltfptr[243])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:746:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V244*/ meltfptr[243])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_187__DBGOUT_MIXLOC_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V244*/ meltfptr[243])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:746:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V244*/ meltfptr[243])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_187__DBGOUT_MIXLOC_METHOD#2", NULL != (/*_.DISCR_MIXED_LOCATION__V31*/ meltfptr[30]));
    ((meltroutine_ptr_t)/*_._VALROUT___V244*/ meltfptr[243])->tabval[2] = (melt_ptr_t)(/*_.DISCR_MIXED_LOCATION__V31*/ meltfptr[30]);

    MELT_LOCATION("warmelt-debug.melt:746:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V244*/ meltfptr[243]);

    /*putclosurout#18*/
    melt_assertmsg("putclosrout#18 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V245*/ meltfptr[244])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#18 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V244*/ meltfptr[243])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V245*/ meltfptr[244])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V244*/ meltfptr[243]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V245*/ meltfptr[244]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_189__DISCR_MIXED_LOCATION @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V246*/ meltfptr[245])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_189__DISCR_MIXED_LOCATION @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V246*/ meltfptr[245]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V246*/ meltfptr[245]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V247*/ meltfptr[246]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V246*/ meltfptr[245]);


    melt_dbgtrace_written_object (/*_._VALDATA___V246*/ meltfptr[245], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:776:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V248*/ meltfptr[247])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V248*/ meltfptr[247])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:776:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V248*/ meltfptr[247])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_191__DBGOUT_MIXBIGINT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V248*/ meltfptr[247])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:776:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V248*/ meltfptr[247])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V248*/ meltfptr[247])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:776:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V248*/ meltfptr[247]);

    /*putclosurout#19*/
    melt_assertmsg("putclosrout#19 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V249*/ meltfptr[248])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#19 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V248*/ meltfptr[247])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V249*/ meltfptr[248])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V248*/ meltfptr[247]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V249*/ meltfptr[248]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_193__DISCR_MIXED_BIGINT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V250*/ meltfptr[249])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_193__DISCR_MIXED_BIGINT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V250*/ meltfptr[249]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V250*/ meltfptr[249]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V251*/ meltfptr[250]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V250*/ meltfptr[249]);


    melt_dbgtrace_written_object (/*_._VALDATA___V250*/ meltfptr[249], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:799:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V252*/ meltfptr[251])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V252*/ meltfptr[251])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:799:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V252*/ meltfptr[251])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_195__DBGOUT_MULTIPLE_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V252*/ meltfptr[251])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:799:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V252*/ meltfptr[251])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_195__DBGOUT_MULTIPLE_METHOD#2", NULL != (/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]));
    ((meltroutine_ptr_t)/*_._VALROUT___V252*/ meltfptr[251])->tabval[2] = (melt_ptr_t)(/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]);

    MELT_LOCATION("warmelt-debug.melt:799:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V252*/ meltfptr[251])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V252*/ meltfptr[251])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:799:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V252*/ meltfptr[251]);

    /*putclosurout#20*/
    melt_assertmsg("putclosrout#20 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V253*/ meltfptr[252])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#20 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V252*/ meltfptr[251])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V253*/ meltfptr[252])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V252*/ meltfptr[251]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V253*/ meltfptr[252]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_197__DISCR_MULTIPLE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V254*/ meltfptr[253])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_197__DISCR_MULTIPLE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V254*/ meltfptr[253]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V254*/ meltfptr[253]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V255*/ meltfptr[254]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V254*/ meltfptr[253]);


    melt_dbgtrace_written_object (/*_._VALDATA___V254*/ meltfptr[253], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_199__DBGOUT_ROUTINE_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_199__DBGOUT_ROUTINE_METHOD#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_199__DBGOUT_ROUTINE_METHOD#3", NULL != (/*_.DISCR_ROUTINE__V34*/ meltfptr[33]));
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[3] = (melt_ptr_t)(/*_.DISCR_ROUTINE__V34*/ meltfptr[33]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_199__DBGOUT_ROUTINE_METHOD#4", NULL != (/*_.ROUTINE_EVERY__V35*/ meltfptr[34]));
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[4] = (melt_ptr_t)(/*_.ROUTINE_EVERY__V35*/ meltfptr[34]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[5] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:850:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V257*/ meltfptr[256])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V257*/ meltfptr[256])->tabval[0] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:850:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V257*/ meltfptr[256]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_199__DBGOUT_ROUTINE_METHOD#6", NULL != (/*_._VALROUT___V257*/ meltfptr[256]));
    ((meltroutine_ptr_t)/*_._VALROUT___V256*/ meltfptr[255])->tabval[6] = (melt_ptr_t)(/*_._VALROUT___V257*/ meltfptr[256]);

    MELT_LOCATION("warmelt-debug.melt:834:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V256*/ meltfptr[255]);

    /*putclosurout#21*/
    melt_assertmsg("putclosrout#21 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V258*/ meltfptr[257])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#21 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V256*/ meltfptr[255])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V258*/ meltfptr[257])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V256*/ meltfptr[255]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V258*/ meltfptr[257]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_201__DISCR_ROUTINE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V259*/ meltfptr[258])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_201__DISCR_ROUTINE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V259*/ meltfptr[258]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V259*/ meltfptr[258]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V260*/ meltfptr[259]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V259*/ meltfptr[258]);


    melt_dbgtrace_written_object (/*_._VALDATA___V259*/ meltfptr[258], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_203__ROUTINE_EVERY @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V261*/ meltfptr[260])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_203__ROUTINE_EVERY @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V261*/ meltfptr[260]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V261*/ meltfptr[260]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V262*/ meltfptr[261]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V261*/ meltfptr[260]);


    melt_dbgtrace_written_object (/*_._VALDATA___V261*/ meltfptr[260], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#3", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[3] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#5", NULL != (/*_.HOOK_EVERY__V36*/ meltfptr[35]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[5] = (melt_ptr_t)(/*_.HOOK_EVERY__V36*/ meltfptr[35]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#6", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[6] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[7] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:877:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V264*/ meltfptr[263])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_210__LAMBDA_#0", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V264*/ meltfptr[263])->tabval[0] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:877:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V264*/ meltfptr[263])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V264*/ meltfptr[263])->tabval[1] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:877:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V264*/ meltfptr[263]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_206__DBGOUT_HOOK_METHOD#8", NULL != (/*_._VALROUT___V264*/ meltfptr[263]));
    ((meltroutine_ptr_t)/*_._VALROUT___V263*/ meltfptr[262])->tabval[8] = (melt_ptr_t)(/*_._VALROUT___V264*/ meltfptr[263]);

    MELT_LOCATION("warmelt-debug.melt:862:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V263*/ meltfptr[262]);

    /*putclosurout#22*/
    melt_assertmsg("putclosrout#22 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V265*/ meltfptr[264])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#22 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V263*/ meltfptr[262])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V265*/ meltfptr[264])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V263*/ meltfptr[262]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V265*/ meltfptr[264]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_208__HOOK_EVERY @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V266*/ meltfptr[265])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_208__HOOK_EVERY @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V266*/ meltfptr[265]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V266*/ meltfptr[265]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V267*/ meltfptr[266]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V266*/ meltfptr[265]);


    melt_dbgtrace_written_object (/*_._VALDATA___V266*/ meltfptr[265], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_211__DISCR_HOOK @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V268*/ meltfptr[267])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_211__DISCR_HOOK @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V268*/ meltfptr[267]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V268*/ meltfptr[267]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V269*/ meltfptr[268]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V268*/ meltfptr[267]);


    melt_dbgtrace_written_object (/*_._VALDATA___V268*/ meltfptr[267], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V270*/ meltfptr[269])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_213__DBGOUT_CLOSURE_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V270*/ meltfptr[269])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_213__DBGOUT_CLOSURE_METHOD#2", NULL != (/*_.DISCR_CLOSURE__V12*/ meltfptr[11]));
    ((meltroutine_ptr_t)/*_._VALROUT___V270*/ meltfptr[269])->tabval[2] = (melt_ptr_t)(/*_.DISCR_CLOSURE__V12*/ meltfptr[11]);

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V270*/ meltfptr[269])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V270*/ meltfptr[269])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:895:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V270*/ meltfptr[269]);

    /*putclosurout#23*/
    melt_assertmsg("putclosrout#23 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V271*/ meltfptr[270])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#23 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V270*/ meltfptr[269])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V271*/ meltfptr[270])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V270*/ meltfptr[269]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V271*/ meltfptr[270]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V272*/ meltfptr[271])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_215__DBGOUT_LIST_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V272*/ meltfptr[271])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_215__DBGOUT_LIST_METHOD#2", NULL != (/*_.DISCR_LIST__V38*/ meltfptr[37]));
    ((meltroutine_ptr_t)/*_._VALROUT___V272*/ meltfptr[271])->tabval[2] = (melt_ptr_t)(/*_.DISCR_LIST__V38*/ meltfptr[37]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_215__DBGOUT_LIST_METHOD#3", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V272*/ meltfptr[271])->tabval[3] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V272*/ meltfptr[271])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:942:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V272*/ meltfptr[271]);

    /*putclosurout#24*/
    melt_assertmsg("putclosrout#24 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V273*/ meltfptr[272])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#24 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V272*/ meltfptr[271])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V273*/ meltfptr[272])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V272*/ meltfptr[271]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V273*/ meltfptr[272]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_217__DISCR_LIST @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V274*/ meltfptr[273])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_217__DISCR_LIST @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V274*/ meltfptr[273]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V274*/ meltfptr[273]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V275*/ meltfptr[274]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V274*/ meltfptr[273]);


    melt_dbgtrace_written_object (/*_._VALDATA___V274*/ meltfptr[273], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V276*/ meltfptr[275])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_219__DBGOUT_PAIR_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V276*/ meltfptr[275])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_219__DBGOUT_PAIR_METHOD#2", NULL != (/*_.DISCR_PAIR__V39*/ meltfptr[38]));
    ((meltroutine_ptr_t)/*_._VALROUT___V276*/ meltfptr[275])->tabval[2] = (melt_ptr_t)(/*_.DISCR_PAIR__V39*/ meltfptr[38]);

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V276*/ meltfptr[275])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V276*/ meltfptr[275])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:989:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V276*/ meltfptr[275]);

    /*putclosurout#25*/
    melt_assertmsg("putclosrout#25 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V277*/ meltfptr[276])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#25 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V276*/ meltfptr[275])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V277*/ meltfptr[276])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V276*/ meltfptr[275]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V277*/ meltfptr[276]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_221__DISCR_PAIR @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V278*/ meltfptr[277])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_221__DISCR_PAIR @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V278*/ meltfptr[277]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V278*/ meltfptr[277]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V279*/ meltfptr[278]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V278*/ meltfptr[277]);


    melt_dbgtrace_written_object (/*_._VALDATA___V278*/ meltfptr[277], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#2", NULL != (/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[2] = (melt_ptr_t)(/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#3", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[3] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_3*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_4 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#4", NULL != (/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[4] = (melt_ptr_t)(/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#5", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[5] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[6] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#7", NULL != (/*_.MAPOBJECT_EVERY__V40*/ meltfptr[39]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[7] = (melt_ptr_t)(/*_.MAPOBJECT_EVERY__V40*/ meltfptr[39]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#8", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[8] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1054:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V281*/ meltfptr[280])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_227__LAMBDA_#0", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V281*/ meltfptr[280])->tabval[0] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1054:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V281*/ meltfptr[280]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#9", NULL != (/*_._VALROUT___V281*/ meltfptr[280]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[9] = (melt_ptr_t)(/*_._VALROUT___V281*/ meltfptr[280]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#10", NULL != (/*_.MULTIPLE_SORT__V41*/ meltfptr[40]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[10] = (melt_ptr_t)(/*_.MULTIPLE_SORT__V41*/ meltfptr[40]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#11", NULL != (/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[11] = (melt_ptr_t)(/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]);

    MELT_LOCATION("warmelt-debug.melt:1067:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V282*/ meltfptr[281])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_230__LAMBDA_#0", NULL != (/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]));
    ((meltroutine_ptr_t)/*_._VALROUT___V282*/ meltfptr[281])->tabval[0] = (melt_ptr_t)(/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]);

    MELT_LOCATION("warmelt-debug.melt:1067:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V282*/ meltfptr[281])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_230__LAMBDA_#1", NULL != (/*_._VALBXINT___V283*/ meltfptr[282]));
    ((meltroutine_ptr_t)/*_._VALROUT___V282*/ meltfptr[281])->tabval[1] = (melt_ptr_t)(/*_._VALBXINT___V283*/ meltfptr[282]);

    MELT_LOCATION("warmelt-debug.melt:1067:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V282*/ meltfptr[281])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_230__LAMBDA_#2", NULL != (/*_._VALBXINT___V284*/ meltfptr[283]));
    ((meltroutine_ptr_t)/*_._VALROUT___V282*/ meltfptr[281])->tabval[2] = (melt_ptr_t)(/*_._VALBXINT___V284*/ meltfptr[283]);

    MELT_LOCATION("warmelt-debug.melt:1067:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V282*/ meltfptr[281])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_230__LAMBDA_#3", NULL != (/*_._VALBXINT___V285*/ meltfptr[284]));
    ((meltroutine_ptr_t)/*_._VALROUT___V282*/ meltfptr[281])->tabval[3] = (melt_ptr_t)(/*_._VALBXINT___V285*/ meltfptr[284]);

    MELT_LOCATION("warmelt-debug.melt:1067:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V282*/ meltfptr[281]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#12", NULL != (/*_._VALROUT___V282*/ meltfptr[281]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[12] = (melt_ptr_t)(/*_._VALROUT___V282*/ meltfptr[281]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#13", NULL != (/*_.MULTIPLE_EVERY__V43*/ meltfptr[42]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[13] = (melt_ptr_t)(/*_.MULTIPLE_EVERY__V43*/ meltfptr[42]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#14", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[14] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V189*/ meltfptr[188]);
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[15] = (melt_ptr_t)(/*_._VALCLO___V189*/ meltfptr[188]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[16] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1083:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V286*/ meltfptr[285])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_238__LAMBDA_#0", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V286*/ meltfptr[285])->tabval[0] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1083:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V286*/ meltfptr[285])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V189*/ meltfptr[188]);
    ((meltroutine_ptr_t)/*_._VALROUT___V286*/ meltfptr[285])->tabval[1] = (melt_ptr_t)(/*_._VALCLO___V189*/ meltfptr[188]);

    MELT_LOCATION("warmelt-debug.melt:1083:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V286*/ meltfptr[285])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V286*/ meltfptr[285])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1083:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V286*/ meltfptr[285]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_223__DBGOUT_MAPOBJECT_METHOD#17", NULL != (/*_._VALROUT___V286*/ meltfptr[285]));
    ((meltroutine_ptr_t)/*_._VALROUT___V280*/ meltfptr[279])->tabval[17] = (melt_ptr_t)(/*_._VALROUT___V286*/ meltfptr[285]);

    MELT_LOCATION("warmelt-debug.melt:1014:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V280*/ meltfptr[279]);

    /*putclosurout#26*/
    melt_assertmsg("putclosrout#26 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V287*/ meltfptr[286])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#26 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V280*/ meltfptr[279])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V287*/ meltfptr[286])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V280*/ meltfptr[279]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V287*/ meltfptr[286]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_225__MAPOBJECT_EVERY @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V288*/ meltfptr[287])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_225__MAPOBJECT_EVERY @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V288*/ meltfptr[287]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V288*/ meltfptr[287]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V289*/ meltfptr[288]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V288*/ meltfptr[287]);


    melt_dbgtrace_written_object (/*_._VALDATA___V288*/ meltfptr[287], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_228__MULTIPLE_SORT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V290*/ meltfptr[289])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_228__MULTIPLE_SORT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V290*/ meltfptr[289]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V290*/ meltfptr[289]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V291*/ meltfptr[290]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V290*/ meltfptr[289]);


    melt_dbgtrace_written_object (/*_._VALDATA___V290*/ meltfptr[289], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_231__COMPARE_OBJ_RANKED @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V292*/ meltfptr[291])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_231__COMPARE_OBJ_RANKED @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V292*/ meltfptr[291]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V292*/ meltfptr[291]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V293*/ meltfptr[292]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V292*/ meltfptr[291]);


    melt_dbgtrace_written_object (/*_._VALDATA___V292*/ meltfptr[291], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_236__MULTIPLE_EVERY @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V294*/ meltfptr[293])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_236__MULTIPLE_EVERY @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V294*/ meltfptr[293]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V294*/ meltfptr[293]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V295*/ meltfptr[294]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V294*/ meltfptr[293]);


    melt_dbgtrace_written_object (/*_._VALDATA___V294*/ meltfptr[293], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#3", NULL != (/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[3] = (melt_ptr_t)(/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#4", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[4] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#5", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[5] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[6] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[7] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#8", NULL != (/*_.MAPSTRING_EVERY__V44*/ meltfptr[43]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[8] = (melt_ptr_t)(/*_.MAPSTRING_EVERY__V44*/ meltfptr[43]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#9", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[9] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1143:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V297*/ meltfptr[296])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_243__LAMBDA_#0", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V297*/ meltfptr[296])->tabval[0] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1143:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V297*/ meltfptr[296]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#10", NULL != (/*_._VALROUT___V297*/ meltfptr[296]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[10] = (melt_ptr_t)(/*_._VALROUT___V297*/ meltfptr[296]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#11", NULL != (/*_.MULTIPLE_SORT__V41*/ meltfptr[40]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[11] = (melt_ptr_t)(/*_.MULTIPLE_SORT__V41*/ meltfptr[40]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#12", NULL != (/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[12] = (melt_ptr_t)(/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]);

    MELT_LOCATION("warmelt-debug.melt:1155:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V298*/ meltfptr[297])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_244__LAMBDA_#0", NULL != (/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]));
    ((meltroutine_ptr_t)/*_._VALROUT___V298*/ meltfptr[297])->tabval[0] = (melt_ptr_t)(/*_.COMPARE_OBJ_RANKED__V42*/ meltfptr[41]);

    MELT_LOCATION("warmelt-debug.melt:1155:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V298*/ meltfptr[297])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_244__LAMBDA_#1", NULL != (/*_._VALBXINT___V299*/ meltfptr[298]));
    ((meltroutine_ptr_t)/*_._VALROUT___V298*/ meltfptr[297])->tabval[1] = (melt_ptr_t)(/*_._VALBXINT___V299*/ meltfptr[298]);

    MELT_LOCATION("warmelt-debug.melt:1155:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V298*/ meltfptr[297])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_244__LAMBDA_#2", NULL != (/*_._VALBXINT___V300*/ meltfptr[299]));
    ((meltroutine_ptr_t)/*_._VALROUT___V298*/ meltfptr[297])->tabval[2] = (melt_ptr_t)(/*_._VALBXINT___V300*/ meltfptr[299]);

    MELT_LOCATION("warmelt-debug.melt:1155:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V298*/ meltfptr[297])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_244__LAMBDA_#3", NULL != (/*_._VALBXINT___V301*/ meltfptr[300]));
    ((meltroutine_ptr_t)/*_._VALROUT___V298*/ meltfptr[297])->tabval[3] = (melt_ptr_t)(/*_._VALBXINT___V301*/ meltfptr[300]);

    MELT_LOCATION("warmelt-debug.melt:1155:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V298*/ meltfptr[297]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_239__DBGOUT_MAPSTRING_METHOD#13", NULL != (/*_._VALROUT___V298*/ meltfptr[297]));
    ((meltroutine_ptr_t)/*_._VALROUT___V296*/ meltfptr[295])->tabval[13] = (melt_ptr_t)(/*_._VALROUT___V298*/ meltfptr[297]);

    MELT_LOCATION("warmelt-debug.melt:1108:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V296*/ meltfptr[295]);

    /*putclosurout#27*/
    melt_assertmsg("putclosrout#27 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V302*/ meltfptr[301])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#27 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V296*/ meltfptr[295])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V302*/ meltfptr[301])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V296*/ meltfptr[295]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V302*/ meltfptr[301]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_241__MAPSTRING_EVERY @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V303*/ meltfptr[302])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_241__MAPSTRING_EVERY @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V303*/ meltfptr[302]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V303*/ meltfptr[302]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V304*/ meltfptr[303]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V303*/ meltfptr[302]);


    melt_dbgtrace_written_object (/*_._VALDATA___V303*/ meltfptr[302], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_248__DISCR_MAP_STRINGS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V305*/ meltfptr[304])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_248__DISCR_MAP_STRINGS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V305*/ meltfptr[304]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V305*/ meltfptr[304]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V306*/ meltfptr[305]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V305*/ meltfptr[304]);


    melt_dbgtrace_written_object (/*_._VALDATA___V305*/ meltfptr[304], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_250__DBGOUT_BUCKETLONG_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_250__DBGOUT_BUCKETLONG_METHOD#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_250__DBGOUT_BUCKETLONG_METHOD#3", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[3] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_250__DBGOUT_BUCKETLONG_METHOD#4", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[4] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V307*/ meltfptr[306])->tabval[5] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1191:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V307*/ meltfptr[306]);

    /*putclosurout#28*/
    melt_assertmsg("putclosrout#28 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V308*/ meltfptr[307])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#28 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V307*/ meltfptr[306])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V308*/ meltfptr[307])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V307*/ meltfptr[306]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V308*/ meltfptr[307]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_252__DISCR_BUCKET_LONGS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V309*/ meltfptr[308])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_252__DISCR_BUCKET_LONGS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V309*/ meltfptr[308]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V309*/ meltfptr[308]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V310*/ meltfptr[309]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V309*/ meltfptr[308]);


    melt_dbgtrace_written_object (/*_._VALDATA___V309*/ meltfptr[308], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V311*/ meltfptr[310])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_254__DBGOUT_JSONOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V311*/ meltfptr[310])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_254__DBGOUT_JSONOBJECT_METHOD#2", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V311*/ meltfptr[310])->tabval[2] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_254__DBGOUT_JSONOBJECT_METHOD#3", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V311*/ meltfptr[310])->tabval[3] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V311*/ meltfptr[310])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1228:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V311*/ meltfptr[310]);

    /*putclosurout#29*/
    melt_assertmsg("putclosrout#29 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V312*/ meltfptr[311])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#29 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V311*/ meltfptr[310])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V312*/ meltfptr[311])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V311*/ meltfptr[310]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V312*/ meltfptr[311]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_256__DISCR_JSONOBJECT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V313*/ meltfptr[312])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_256__DISCR_JSONOBJECT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V313*/ meltfptr[312]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V313*/ meltfptr[312]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V314*/ meltfptr[313]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V313*/ meltfptr[312]);


    melt_dbgtrace_written_object (/*_._VALDATA___V313*/ meltfptr[312], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1262:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V315*/ meltfptr[314])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V315*/ meltfptr[314])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1262:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V315*/ meltfptr[314])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_258__DBGOUT_ANYOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V315*/ meltfptr[314])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1262:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V315*/ meltfptr[314])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V213*/ meltfptr[212]);
    ((meltroutine_ptr_t)/*_._VALROUT___V315*/ meltfptr[314])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:1262:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V315*/ meltfptr[314]);

    /*putclosurout#30*/
    melt_assertmsg("putclosrout#30 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V316*/ meltfptr[315])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#30 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V315*/ meltfptr[314])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V316*/ meltfptr[315])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V315*/ meltfptr[314]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V316*/ meltfptr[315]);

    MELT_LOCATION("warmelt-debug.melt:1287:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V317*/ meltfptr[316])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V317*/ meltfptr[316])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1287:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V317*/ meltfptr[316])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_260__DBGOUT_ANYRECV_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V317*/ meltfptr[316])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1287:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V317*/ meltfptr[316])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_260__DBGOUT_ANYRECV_METHOD#2", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V317*/ meltfptr[316])->tabval[2] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1287:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V317*/ meltfptr[316]);

    /*putclosurout#31*/
    melt_assertmsg("putclosrout#31 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V318*/ meltfptr[317])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#31 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V317*/ meltfptr[316])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V318*/ meltfptr[317])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V317*/ meltfptr[316]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V318*/ meltfptr[317]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_262__DISCR_ANY_RECEIVER @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V319*/ meltfptr[318])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_262__DISCR_ANY_RECEIVER @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V319*/ meltfptr[318]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V319*/ meltfptr[318]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V320*/ meltfptr[319]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V319*/ meltfptr[318]);


    melt_dbgtrace_written_object (/*_._VALDATA___V319*/ meltfptr[318], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1298:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V321*/ meltfptr[320])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V321*/ meltfptr[320])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1298:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V321*/ meltfptr[320])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_264__DBGOUTAGAIN_ANYOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V321*/ meltfptr[320])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1298:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V321*/ meltfptr[320]);

    /*putclosurout#32*/
    melt_assertmsg("putclosrout#32 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V322*/ meltfptr[321])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#32 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V321*/ meltfptr[320])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V322*/ meltfptr[321])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V321*/ meltfptr[320]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V322*/ meltfptr[321]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V323*/ meltfptr[322])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_266__DBGOUT_NAMEDOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V323*/ meltfptr[322])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_266__DBGOUT_NAMEDOBJECT_METHOD#2", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V323*/ meltfptr[322])->tabval[2] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V323*/ meltfptr[322])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V213*/ meltfptr[212]);
    ((meltroutine_ptr_t)/*_._VALROUT___V323*/ meltfptr[322])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:1316:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V323*/ meltfptr[322]);

    /*putclosurout#33*/
    melt_assertmsg("putclosrout#33 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#33 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V323*/ meltfptr[322])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V324*/ meltfptr[323])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V323*/ meltfptr[322]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V324*/ meltfptr[323]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_268__DBGOUT_NAMEDOBJECT_METHOD @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V325*/ meltfptr[324])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_268__DBGOUT_NAMEDOBJECT_METHOD @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V325*/ meltfptr[324]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V325*/ meltfptr[324]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V326*/ meltfptr[325]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V325*/ meltfptr[324]);


    melt_dbgtrace_written_object (/*_._VALDATA___V325*/ meltfptr[324], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1353:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V327*/ meltfptr[326])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V327*/ meltfptr[326])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1353:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V327*/ meltfptr[326])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V327*/ meltfptr[326])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1353:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V327*/ meltfptr[326])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_270__DBGOUTAGAIN_NAMEDOBJECT_METHOD#2", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V327*/ meltfptr[326])->tabval[2] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1353:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V327*/ meltfptr[326]);


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_4*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_5 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    /*putclosurout#34*/
    melt_assertmsg("putclosrout#34 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V328*/ meltfptr[327])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#34 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V327*/ meltfptr[326])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V328*/ meltfptr[327])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V327*/ meltfptr[326]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V328*/ meltfptr[327]);

    MELT_LOCATION("warmelt-debug.melt:1371:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V329*/ meltfptr[328])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V329*/ meltfptr[328])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1371:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V329*/ meltfptr[328])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_272__DBGOUTAGAIN_SYMBOL_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V329*/ meltfptr[328])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1371:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V329*/ meltfptr[328])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_272__DBGOUTAGAIN_SYMBOL_METHOD#2", NULL != (/*_.CLASS_SYMBOL__V49*/ meltfptr[48]));
    ((meltroutine_ptr_t)/*_._VALROUT___V329*/ meltfptr[328])->tabval[2] = (melt_ptr_t)(/*_.CLASS_SYMBOL__V49*/ meltfptr[48]);

    MELT_LOCATION("warmelt-debug.melt:1371:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V329*/ meltfptr[328]);

    /*putclosurout#35*/
    melt_assertmsg("putclosrout#35 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V330*/ meltfptr[329])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#35 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V329*/ meltfptr[328])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V330*/ meltfptr[329])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V329*/ meltfptr[328]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V330*/ meltfptr[329]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_274__CLASS_SYMBOL @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V331*/ meltfptr[330])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_274__CLASS_SYMBOL @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V331*/ meltfptr[330]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V331*/ meltfptr[330]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V332*/ meltfptr[331]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V331*/ meltfptr[330]);


    melt_dbgtrace_written_object (/*_._VALDATA___V331*/ meltfptr[330], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V333*/ meltfptr[332])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_276__DBGOUT_SYMBOL_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V333*/ meltfptr[332])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_276__DBGOUT_SYMBOL_METHOD#2", NULL != (/*_.CLASS_SYMBOL__V49*/ meltfptr[48]));
    ((meltroutine_ptr_t)/*_._VALROUT___V333*/ meltfptr[332])->tabval[2] = (melt_ptr_t)(/*_.CLASS_SYMBOL__V49*/ meltfptr[48]);

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V324*/ meltfptr[323]);
    ((meltroutine_ptr_t)/*_._VALROUT___V333*/ meltfptr[332])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323]);

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V330*/ meltfptr[329]);
    ((meltroutine_ptr_t)/*_._VALROUT___V333*/ meltfptr[332])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V330*/ meltfptr[329]);

    MELT_LOCATION("warmelt-debug.melt:1389:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V333*/ meltfptr[332]);

    /*putclosurout#36*/
    melt_assertmsg("putclosrout#36 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V334*/ meltfptr[333])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#36 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V333*/ meltfptr[332])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V334*/ meltfptr[333])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V333*/ meltfptr[332]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V334*/ meltfptr[333]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V335*/ meltfptr[334])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_278__DBGOUT_CLASS_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V335*/ meltfptr[334])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_278__DBGOUT_CLASS_METHOD#2", NULL != (/*_.CLASS_CLASS__V50*/ meltfptr[49]));
    ((meltroutine_ptr_t)/*_._VALROUT___V335*/ meltfptr[334])->tabval[2] = (melt_ptr_t)(/*_.CLASS_CLASS__V50*/ meltfptr[49]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V324*/ meltfptr[323]);
    ((meltroutine_ptr_t)/*_._VALROUT___V335*/ meltfptr[334])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V328*/ meltfptr[327]);
    ((meltroutine_ptr_t)/*_._VALROUT___V335*/ meltfptr[334])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V328*/ meltfptr[327]);

    MELT_LOCATION("warmelt-debug.melt:1399:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V335*/ meltfptr[334]);

    /*putclosurout#37*/
    melt_assertmsg("putclosrout#37 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V336*/ meltfptr[335])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#37 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V335*/ meltfptr[334])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V336*/ meltfptr[335])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V335*/ meltfptr[334]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V336*/ meltfptr[335]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_280__CLASS_CLASS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V337*/ meltfptr[336])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_280__CLASS_CLASS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V337*/ meltfptr[336]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V337*/ meltfptr[336]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V338*/ meltfptr[337]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V337*/ meltfptr[336]);


    melt_dbgtrace_written_object (/*_._VALDATA___V337*/ meltfptr[336], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1409:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V339*/ meltfptr[338])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V339*/ meltfptr[338])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1409:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V339*/ meltfptr[338])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_282__DBGOUTAGAIN_KEYWORD_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V339*/ meltfptr[338])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1409:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V339*/ meltfptr[338])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_282__DBGOUTAGAIN_KEYWORD_METHOD#2", NULL != (/*_.CLASS_KEYWORD__V51*/ meltfptr[50]));
    ((meltroutine_ptr_t)/*_._VALROUT___V339*/ meltfptr[338])->tabval[2] = (melt_ptr_t)(/*_.CLASS_KEYWORD__V51*/ meltfptr[50]);

    MELT_LOCATION("warmelt-debug.melt:1409:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V339*/ meltfptr[338]);

    /*putclosurout#38*/
    melt_assertmsg("putclosrout#38 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V340*/ meltfptr[339])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#38 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V339*/ meltfptr[338])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V340*/ meltfptr[339])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V339*/ meltfptr[338]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V340*/ meltfptr[339]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_284__CLASS_KEYWORD @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V341*/ meltfptr[340])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_284__CLASS_KEYWORD @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V341*/ meltfptr[340]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V341*/ meltfptr[340]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V342*/ meltfptr[341]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V341*/ meltfptr[340]);


    melt_dbgtrace_written_object (/*_._VALDATA___V341*/ meltfptr[340], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V343*/ meltfptr[342])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_286__DBGOUT_KEYWORD_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V343*/ meltfptr[342])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_286__DBGOUT_KEYWORD_METHOD#2", NULL != (/*_.CLASS_KEYWORD__V51*/ meltfptr[50]));
    ((meltroutine_ptr_t)/*_._VALROUT___V343*/ meltfptr[342])->tabval[2] = (melt_ptr_t)(/*_.CLASS_KEYWORD__V51*/ meltfptr[50]);

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V324*/ meltfptr[323]);
    ((meltroutine_ptr_t)/*_._VALROUT___V343*/ meltfptr[342])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323]);

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V340*/ meltfptr[339]);
    ((meltroutine_ptr_t)/*_._VALROUT___V343*/ meltfptr[342])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V340*/ meltfptr[339]);

    MELT_LOCATION("warmelt-debug.melt:1422:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V343*/ meltfptr[342]);

    /*putclosurout#39*/
    melt_assertmsg("putclosrout#39 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V344*/ meltfptr[343])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#39 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V343*/ meltfptr[342])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V344*/ meltfptr[343])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V343*/ meltfptr[342]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V344*/ meltfptr[343]);

    /*putclosurout#40*/
    melt_assertmsg("putclosrout#40 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V346*/ meltfptr[345])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#40 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V345*/ meltfptr[344])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V346*/ meltfptr[345])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V345*/ meltfptr[344]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V346*/ meltfptr[345]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_290__CLASS_CLONED_SYMBOL @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V347*/ meltfptr[346])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_290__CLASS_CLONED_SYMBOL @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V347*/ meltfptr[346]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V347*/ meltfptr[346]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V348*/ meltfptr[347]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V347*/ meltfptr[346]);


    melt_dbgtrace_written_object (/*_._VALDATA___V347*/ meltfptr[346], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V349*/ meltfptr[348])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_292__DBGOUT_CLONED_SYMBOL_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V349*/ meltfptr[348])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_292__DBGOUT_CLONED_SYMBOL_METHOD#2", NULL != (/*_.CLASS_CLONED_SYMBOL__V52*/ meltfptr[51]));
    ((meltroutine_ptr_t)/*_._VALROUT___V349*/ meltfptr[348])->tabval[2] = (melt_ptr_t)(/*_.CLASS_CLONED_SYMBOL__V52*/ meltfptr[51]);

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V324*/ meltfptr[323]);
    ((meltroutine_ptr_t)/*_._VALROUT___V349*/ meltfptr[348])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323]);

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V346*/ meltfptr[345]);
    ((meltroutine_ptr_t)/*_._VALROUT___V349*/ meltfptr[348])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V346*/ meltfptr[345]);

    MELT_LOCATION("warmelt-debug.melt:1447:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V349*/ meltfptr[348]);

    /*putclosurout#41*/
    melt_assertmsg("putclosrout#41 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V350*/ meltfptr[349])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#41 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V349*/ meltfptr[348])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V350*/ meltfptr[349])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V349*/ meltfptr[348]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V350*/ meltfptr[349]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_294__DBGOUT_ENVIRONMENT_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_294__DBGOUT_ENVIRONMENT_METHOD#2", NULL != (/*_.CLASS_ENVIRONMENT__V53*/ meltfptr[52]));
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[2] = (melt_ptr_t)(/*_.CLASS_ENVIRONMENT__V53*/ meltfptr[52]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_294__DBGOUT_ENVIRONMENT_METHOD#3", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[3] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_294__DBGOUT_ENVIRONMENT_METHOD#4", NULL != (/*_.ENV_PREV__V54*/ meltfptr[53]));
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[4] = (melt_ptr_t)(/*_.ENV_PREV__V54*/ meltfptr[53]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[5] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V213*/ meltfptr[212]);
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[6] = (melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V215*/ meltfptr[214]);
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[7] = (melt_ptr_t)(/*_._VALCLO___V215*/ meltfptr[214]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_294__DBGOUT_ENVIRONMENT_METHOD#8", NULL != (/*_.CLASS_DESCRIBED_ENVIRONMENT__V55*/ meltfptr[54]));
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[8] = (melt_ptr_t)(/*_.CLASS_DESCRIBED_ENVIRONMENT__V55*/ meltfptr[54]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V351*/ meltfptr[350])->tabval[9] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1458:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V351*/ meltfptr[350]);

    /*putclosurout#42*/
    melt_assertmsg("putclosrout#42 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V352*/ meltfptr[351])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#42 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V351*/ meltfptr[350])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V352*/ meltfptr[351])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V351*/ meltfptr[350]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V352*/ meltfptr[351]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_296__CLASS_ENVIRONMENT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V353*/ meltfptr[352])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_296__CLASS_ENVIRONMENT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V353*/ meltfptr[352]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V353*/ meltfptr[352]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V354*/ meltfptr[353]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V353*/ meltfptr[352]);


    melt_dbgtrace_written_object (/*_._VALDATA___V353*/ meltfptr[352], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_298__ENV_PREV @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V355*/ meltfptr[354])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_298__ENV_PREV @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V355*/ meltfptr[354]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V355*/ meltfptr[354]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V356*/ meltfptr[355]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V355*/ meltfptr[354]);


    melt_dbgtrace_written_object (/*_._VALDATA___V355*/ meltfptr[354], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_300__CLASS_DESCRIBED_ENVIRONMENT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V357*/ meltfptr[356])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_300__CLASS_DESCRIBED_ENVIRONMENT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V357*/ meltfptr[356]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V357*/ meltfptr[356]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V358*/ meltfptr[357]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V357*/ meltfptr[356]);


    melt_dbgtrace_written_object (/*_._VALDATA___V357*/ meltfptr[356], "new static instance");

    /*putclosurout#43*/
    melt_assertmsg("putclosrout#43 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V360*/ meltfptr[359])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#43 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V359*/ meltfptr[358])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V360*/ meltfptr[359])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V359*/ meltfptr[358]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V360*/ meltfptr[359]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_304__CLASS_CTYPE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V361*/ meltfptr[360])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_304__CLASS_CTYPE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V361*/ meltfptr[360]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V361*/ meltfptr[360]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V362*/ meltfptr[361]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V361*/ meltfptr[360]);


    melt_dbgtrace_written_object (/*_._VALDATA___V361*/ meltfptr[360], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V363*/ meltfptr[362])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_306__DBGOUT_CTYPE_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V363*/ meltfptr[362])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_306__DBGOUT_CTYPE_METHOD#2", NULL != (/*_.CLASS_CTYPE__V56*/ meltfptr[55]));
    ((meltroutine_ptr_t)/*_._VALROUT___V363*/ meltfptr[362])->tabval[2] = (melt_ptr_t)(/*_.CLASS_CTYPE__V56*/ meltfptr[55]);

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V324*/ meltfptr[323]);
    ((meltroutine_ptr_t)/*_._VALROUT___V363*/ meltfptr[362])->tabval[3] = (melt_ptr_t)(/*_._VALCLO___V324*/ meltfptr[323]);

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V360*/ meltfptr[359]);
    ((meltroutine_ptr_t)/*_._VALROUT___V363*/ meltfptr[362])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V360*/ meltfptr[359]);

    MELT_LOCATION("warmelt-debug.melt:1542:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V363*/ meltfptr[362]);

    /*putclosurout#44*/
    melt_assertmsg("putclosrout#44 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V364*/ meltfptr[363])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#44 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V363*/ meltfptr[362])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V364*/ meltfptr[363])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V363*/ meltfptr[362]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V364*/ meltfptr[363]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V365*/ meltfptr[364])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_308__DBGOUT_ANYBINDING_METHOD#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V365*/ meltfptr[364])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_308__DBGOUT_ANYBINDING_METHOD#2", NULL != (/*_.CLASS_ANY_BINDING__V57*/ meltfptr[56]));
    ((meltroutine_ptr_t)/*_._VALROUT___V365*/ meltfptr[364])->tabval[2] = (melt_ptr_t)(/*_.CLASS_ANY_BINDING__V57*/ meltfptr[56]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V144*/ meltfptr[143]);
    ((meltroutine_ptr_t)/*_._VALROUT___V365*/ meltfptr[364])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V144*/ meltfptr[143]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V213*/ meltfptr[212]);
    ((meltroutine_ptr_t)/*_._VALROUT___V365*/ meltfptr[364])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:1552:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V365*/ meltfptr[364]);

    /*putclosurout#45*/
    melt_assertmsg("putclosrout#45 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V366*/ meltfptr[365])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#45 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V365*/ meltfptr[364])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V366*/ meltfptr[365])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V365*/ meltfptr[364]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V366*/ meltfptr[365]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_310__CLASS_ANY_BINDING @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V367*/ meltfptr[366])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_310__CLASS_ANY_BINDING @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V367*/ meltfptr[366]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V367*/ meltfptr[366]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V368*/ meltfptr[367]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V367*/ meltfptr[366]);


    melt_dbgtrace_written_object (/*_._VALDATA___V367*/ meltfptr[366], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1581:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V369*/ meltfptr[368])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V369*/ meltfptr[368])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1581:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V369*/ meltfptr[368])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_312__DEBUG_LESS_FUN#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V369*/ meltfptr[368])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1581:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V369*/ meltfptr[368])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V369*/ meltfptr[368])->tabval[2] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1581:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V369*/ meltfptr[368]);

    /*putclosurout#46*/
    melt_assertmsg("putclosrout#46 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V370*/ meltfptr[369])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#46 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V369*/ meltfptr[368])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V370*/ meltfptr[369])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V369*/ meltfptr[368]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V370*/ meltfptr[369]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_314__DEBUG_LESS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V371*/ meltfptr[370])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_314__DEBUG_LESS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V371*/ meltfptr[370]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V371*/ meltfptr[370]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V372*/ meltfptr[371]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V371*/ meltfptr[370]);


    melt_dbgtrace_written_object (/*_._VALDATA___V371*/ meltfptr[370], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V64*/ meltfptr[63]);
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[0] = (melt_ptr_t)(/*_._VALDATA___V64*/ meltfptr[63]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_316__DEBUG_MORE_FUN#1", NULL != (/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]));
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[1] = (melt_ptr_t)(/*_.MELT_ASSERT_FAILURE_FUN__V18*/ meltfptr[17]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_316__DEBUG_MORE_FUN#2", NULL != (/*_.ADD2OUT__V19*/ meltfptr[18]));
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[2] = (melt_ptr_t)(/*_.ADD2OUT__V19*/ meltfptr[18]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_316__DEBUG_MORE_FUN#3", NULL != (/*_.CLASS_NAMED__V21*/ meltfptr[20]));
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[3] = (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V213*/ meltfptr[212]);
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[4] = (melt_ptr_t)(/*_._VALCLO___V213*/ meltfptr[212]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALCLO___V187*/ meltfptr[186]);
    ((meltroutine_ptr_t)/*_._VALROUT___V373*/ meltfptr[372])->tabval[5] = (melt_ptr_t)(/*_._VALCLO___V187*/ meltfptr[186]);

    MELT_LOCATION("warmelt-debug.melt:1595:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V373*/ meltfptr[372]);

    /*putclosurout#47*/
    melt_assertmsg("putclosrout#47 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V374*/ meltfptr[373])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#47 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V373*/ meltfptr[372])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V374*/ meltfptr[373])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V373*/ meltfptr[372]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V374*/ meltfptr[373]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_318__DEBUG_MORE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V375*/ meltfptr[374])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_318__DEBUG_MORE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V375*/ meltfptr[374]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V375*/ meltfptr[374]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V376*/ meltfptr[375]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V375*/ meltfptr[374]);


    melt_dbgtrace_written_object (/*_._VALDATA___V375*/ meltfptr[374], "new static instance");

    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_320__DISPLAY_DEBUG_MESSAGE#0", NULL != (/*_.DISCR_STRBUF__V17*/ meltfptr[16]));
    ((meltroutine_ptr_t)/*_._VALROUT___V377*/ meltfptr[376])->tabval[0] = (melt_ptr_t)(/*_.DISCR_STRBUF__V17*/ meltfptr[16]);


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_5*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_6 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_320__DISPLAY_DEBUG_MESSAGE#1", NULL != (/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]));
    ((meltroutine_ptr_t)/*_._VALROUT___V377*/ meltfptr[376])->tabval[1] = (melt_ptr_t)(/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]);

    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^putroutconst*/
    /*putroutconst*/
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_assertmsg("putroutconst checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    if (MELT_HAS_INITIAL_ENVIRONMENT) melt_checkmsg("putroutconst constnull.drout_320__DISPLAY_DEBUG_MESSAGE#2", NULL != (/*_.DISCR_INTEGER__V16*/ meltfptr[15]));
    ((meltroutine_ptr_t)/*_._VALROUT___V377*/ meltfptr[376])->tabval[2] = (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]);

    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V82*/ meltfptr[81]);
    ((meltroutine_ptr_t)/*_._VALROUT___V377*/ meltfptr[376])->tabval[3] = (melt_ptr_t)(/*_._VALDATA___V82*/ meltfptr[81]);

    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^putroutconstnotnull*/
    /*putroutconstnotnull*/
    melt_assertmsg("putroutconstnotnull checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    melt_assertmsg("putroutconstnotnull notnullconst", NULL != /*_._VALDATA___V136*/ meltfptr[135]);
    ((meltroutine_ptr_t)/*_._VALROUT___V377*/ meltfptr[376])->tabval[4] = (melt_ptr_t)(/*_._VALDATA___V136*/ meltfptr[135]);

    MELT_LOCATION("warmelt-debug.melt:1627:/ initchunk");
    /*^touch*/
    /*touch:_IROUTVAL_*/
    meltgc_touch(/*_._VALROUT___V377*/ meltfptr[376]);

    /*putclosurout#48*/
    melt_assertmsg("putclosrout#48 checkclo", melt_magic_discr((melt_ptr_t)(/*_._VALCLO___V378*/ meltfptr[377])) == MELTOBMAG_CLOSURE);
    melt_assertmsg("putclosrout#48 checkrout", melt_magic_discr((melt_ptr_t)(/*_._VALROUT___V377*/ meltfptr[376])) == MELTOBMAG_ROUTINE);
    ((meltclosure_ptr_t)/*_._VALCLO___V378*/ meltfptr[377])->rout = (meltroutine_ptr_t) (/*_._VALROUT___V377*/ meltfptr[376]);

    /*touch:_DATACLOSURE_*/
    meltgc_touch(/*_._VALCLO___V378*/ meltfptr[377]);

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_322__DBG_OUT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V379*/ meltfptr[378])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_322__DBG_OUT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V379*/ meltfptr[378]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V379*/ meltfptr[378]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V380*/ meltfptr[379]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V379*/ meltfptr[378]);


    melt_dbgtrace_written_object (/*_._VALDATA___V379*/ meltfptr[378], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_324__DBG_OUTOBJECT @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V381*/ meltfptr[380])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_324__DBG_OUTOBJECT @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V381*/ meltfptr[380]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V381*/ meltfptr[380]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V382*/ meltfptr[381]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V381*/ meltfptr[380]);


    melt_dbgtrace_written_object (/*_._VALDATA___V381*/ meltfptr[380], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_326__DBGOUT_FIELDS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V383*/ meltfptr[382])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_326__DBGOUT_FIELDS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V383*/ meltfptr[382]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V383*/ meltfptr[382]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V384*/ meltfptr[383]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V383*/ meltfptr[382]);


    melt_dbgtrace_written_object (/*_._VALDATA___V383*/ meltfptr[382], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_328__DBGOUTAGAIN_FIELDS @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V385*/ meltfptr[384])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_328__DBGOUTAGAIN_FIELDS @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V385*/ meltfptr[384]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V385*/ meltfptr[384]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V386*/ meltfptr[385]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V385*/ meltfptr[384]);


    melt_dbgtrace_written_object (/*_._VALDATA___V385*/ meltfptr[384], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_330__DISPLAY_DEBUG_MESSAGE @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V387*/ meltfptr[386])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_330__DISPLAY_DEBUG_MESSAGE @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V387*/ meltfptr[386]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V387*/ meltfptr[386]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V388*/ meltfptr[387]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V387*/ meltfptr[386]);


    melt_dbgtrace_written_object (/*_._VALDATA___V387*/ meltfptr[386], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_332__MELT_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V389*/ meltfptr[388])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_332__MELT_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V389*/ meltfptr[388]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V389*/ meltfptr[388]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V390*/ meltfptr[389]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V389*/ meltfptr[388]);


    melt_dbgtrace_written_object (/*_._VALDATA___V389*/ meltfptr[388], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V391*/ meltfptr[390])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_334__REGISTER_BASICBLOCK_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V391*/ meltfptr[390]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V391*/ meltfptr[390]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V392*/ meltfptr[391]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V391*/ meltfptr[390]);


    melt_dbgtrace_written_object (/*_._VALDATA___V391*/ meltfptr[390], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_336__REGISTER_EDGE_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V393*/ meltfptr[392])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_336__REGISTER_EDGE_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V393*/ meltfptr[392]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V393*/ meltfptr[392]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V394*/ meltfptr[393]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V393*/ meltfptr[392]);


    melt_dbgtrace_written_object (/*_._VALDATA___V393*/ meltfptr[392], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_338__REGISTER_GIMPLE_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V395*/ meltfptr[394])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_338__REGISTER_GIMPLE_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V395*/ meltfptr[394]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V395*/ meltfptr[394]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V396*/ meltfptr[395]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V395*/ meltfptr[394]);


    melt_dbgtrace_written_object (/*_._VALDATA___V395*/ meltfptr[394], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V397*/ meltfptr[396])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_340__REGISTER_GIMPLESEQ_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V397*/ meltfptr[396]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V397*/ meltfptr[396]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V398*/ meltfptr[397]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V397*/ meltfptr[396]);


    melt_dbgtrace_written_object (/*_._VALDATA___V397*/ meltfptr[396], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_342__REGISTER_LOOP_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V399*/ meltfptr[398])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_342__REGISTER_LOOP_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V399*/ meltfptr[398]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V399*/ meltfptr[398]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V400*/ meltfptr[399]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V399*/ meltfptr[398]);


    melt_dbgtrace_written_object (/*_._VALDATA___V399*/ meltfptr[398], "new static instance");

    /*putslot*/
    melt_assertmsg("checkobj putslot  ~dsym_344__REGISTER_TREE_DEBUG_FUN @#1", melt_magic_discr((melt_ptr_t)(/*_._VALDATA___V401*/ meltfptr[400])) == MELTOBMAG_OBJECT);

    melt_assertmsg("checkoff putslot  ~dsym_344__REGISTER_TREE_DEBUG_FUN @#1", (1>=0 && 1< melt_object_length((melt_ptr_t)(/*_._VALDATA___V401*/ meltfptr[400]))));
    ((meltobject_ptr_t)(/*_._VALDATA___V401*/ meltfptr[400]))->obj_vartab[1] = (melt_ptr_t)(
                /*_._VALSTR___V402*/ meltfptr[401]);

    /*touch:_VALUEDATA_*/
    meltgc_touch(/*_._VALDATA___V401*/ meltfptr[400]);


    melt_dbgtrace_written_object (/*_._VALDATA___V401*/ meltfptr[400], "new static instance");

    /**COMMENT: before toplevel body **/;

    MELT_LOCATION("warmelt-debug.melt:4:/ initchunk");
    /*^block*/
    /*anyblock*/
    {

        /*^cond*/
        /*cond*/ if (
            /*quasi.cur.mod.env.ref cur.mod.env.cont : at very start*/
            /* check quasi.cur.mod.env.ref 61072074 */
            (/*_._CONTENV___V2*/ meltfptr[1])
        ) /*then*/
            {
                /*^cond.then*/
                /*_.OR___V403*/ meltfptr[402] =
                    /*quasi.cur.mod.env.ref cur.mod.env.cont : at very start*/
                    /* check quasi.cur.mod.env.ref 61072074 */
                    (/*_._CONTENV___V2*/ meltfptr[1])
                    ;;
            }
        else
            {
                MELT_LOCATION("warmelt-debug.melt:4:/ cond.else");

                /*^block*/
                /*anyblock*/
                {

                    /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V404*/ meltfptr[403] =
                        /*hookcall*/ melthook_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER ((melt_ptr_t) /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V7*/ meltfptr[6], /*_._PREVENV___V4*/ meltfptr[3],  "warmelt-debug") ;;
                    /*^compute*/
                    /*_.OR___V403*/
                    meltfptr[402] = /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V404*/ meltfptr[403];;
                    /*epilog*/

                    MELT_LOCATION("warmelt-debug.melt:4:/ clear");
                    /*clear*/ /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V404*/
                    meltfptr[403] = 0 ;
                }
                ;
            }
        ;
        /*^block*/
        /*com.block:upd.cur.mod.env.cont : at very start*/
        {
        }/*com.end block:upd.cur.mod.env.cont : at very start*/
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.OR___V403*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:61:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        /*hookcall*/ melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V60*/ meltfptr[59], /*_._VALDATA___V64*/ meltfptr[63],
                /*quasi.cur.mod.env.ref norm.exp.val : CLASS_DEBUG_INFORMATION*/
                /* check quasi.cur.mod.env.ref 136193289 */
                (/*_._CONTENV___V2*/ meltfptr[1])
                                                  ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V74*/ meltfptr[73], /*_._VALDATA___V67*/ meltfptr[66],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBGI_OUT*/
                                      /* check quasi.cur.mod.env.ref 401908822 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V76*/ meltfptr[75], /*_._VALDATA___V69*/ meltfptr[68],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBGI_OCCMAP*/
                                      /* check quasi.cur.mod.env.ref 860596283 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V78*/ meltfptr[77], /*_._VALDATA___V71*/ meltfptr[70],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBGI_MAXDEPTH*/
                                      /* check quasi.cur.mod.env.ref 334114968 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V80*/ meltfptr[79], /*_._VALDATA___V82*/ meltfptr[81],
                                      /*quasi.cur.mod.env.ref norm.exp.val : CLASS_DEBUG_OUTPUT_INFORMATION*/
                                      /* check quasi.cur.mod.env.ref 269862868 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;
        /*epilog*/
    }

    MELT_LOCATION("warmelt-debug.melt:558:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V217*/ meltfptr[216];
            /*_.INSTALL_METHOD__V405*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_NULL_RECEIVER__V24*/ meltfptr[23]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V405*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:559:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V217*/ meltfptr[216];
            /*_.INSTALL_METHOD__V406*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_NULL_RECEIVER__V24*/ meltfptr[23]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V406*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:588:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V223*/ meltfptr[222];
            /*_.INSTALL_METHOD__V407*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_STRING__V25*/ meltfptr[24]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V407*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:671:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V229*/ meltfptr[228];
            /*_.INSTALL_METHOD__V408*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_STRBUF__V17*/ meltfptr[16]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V408*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:695:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V231*/ meltfptr[230];
            /*_.INSTALL_METHOD__V409*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_INTEGER__V16*/ meltfptr[15]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V409*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:714:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V235*/ meltfptr[234];
            /*_.INSTALL_METHOD__V410*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_DOUBLE__V28*/ meltfptr[27]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V410*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:743:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V241*/ meltfptr[240];
            /*_.INSTALL_METHOD__V411*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MIXED_INTEGER__V30*/ meltfptr[29]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V411*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:772:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V245*/ meltfptr[244];
            /*_.INSTALL_METHOD__V412*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MIXED_LOCATION__V31*/ meltfptr[30]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V412*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:796:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V249*/ meltfptr[248];
            /*_.INSTALL_METHOD__V413*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MIXED_BIGINT__V32*/ meltfptr[31]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V413*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:831:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V253*/ meltfptr[252];
            /*_.INSTALL_METHOD__V414*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MULTIPLE__V33*/ meltfptr[32]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V414*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:859:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V258*/ meltfptr[257];
            /*_.INSTALL_METHOD__V415*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_ROUTINE__V34*/ meltfptr[33]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V415*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:890:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V265*/ meltfptr[264];
            /*_.INSTALL_METHOD__V416*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_HOOK__V37*/ meltfptr[36]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V416*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:937:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V271*/ meltfptr[270];
            /*_.INSTALL_METHOD__V417*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_CLOSURE__V12*/ meltfptr[11]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V417*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:985:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V273*/ meltfptr[272];
            /*_.INSTALL_METHOD__V418*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_LIST__V38*/ meltfptr[37]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V418*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1009:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V277*/ meltfptr[276];
            /*_.INSTALL_METHOD__V419*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_PAIR__V39*/ meltfptr[38]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V419*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1104:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V287*/ meltfptr[286];
            /*_.INSTALL_METHOD__V420*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MAP_OBJECTS__V15*/ meltfptr[14]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V420*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1186:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V302*/ meltfptr[301];
            /*_.INSTALL_METHOD__V421*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_MAP_STRINGS__V45*/ meltfptr[44]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V421*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1224:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V308*/ meltfptr[307];
            /*_.INSTALL_METHOD__V422*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_BUCKET_LONGS__V46*/ meltfptr[45]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V422*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1259:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V312*/ meltfptr[311];
            /*_.INSTALL_METHOD__V423*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_JSONOBJECT__V47*/ meltfptr[46]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V423*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1284:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V316*/ meltfptr[315];
            /*_.INSTALL_METHOD__V424*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_ROOT__V8*/ meltfptr[7]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V424*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1295:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V318*/ meltfptr[317];
            /*_.INSTALL_METHOD__V425*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.DISCR_ANY_RECEIVER__V48*/ meltfptr[47]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V425*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1313:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V322*/ meltfptr[321];
            /*_.INSTALL_METHOD__V426*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_ROOT__V8*/ meltfptr[7]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V426*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1348:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V324*/ meltfptr[323];
            /*_.INSTALL_METHOD__V427*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V427*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1350:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        /*hookcall*/ melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V325*/ meltfptr[324], /*_._VALCLO___V324*/ meltfptr[323],
                /*quasi.cur.mod.env.ref norm.exp.val : DBGOUT_NAMEDOBJECT_METHOD*/
                /* check quasi.cur.mod.env.ref 385696416 */
                (/*_._CONTENV___V2*/ meltfptr[1])
                                                  ) ;
        /*epilog*/
    }

    MELT_LOCATION("warmelt-debug.melt:1367:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V328*/ meltfptr[327];
            /*_.INSTALL_METHOD__V428*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_NAMED__V21*/ meltfptr[20]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V428*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1387:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V330*/ meltfptr[329];
            /*_.INSTALL_METHOD__V429*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_SYMBOL__V49*/ meltfptr[48]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V429*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1395:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V334*/ meltfptr[333];
            /*_.INSTALL_METHOD__V430*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_SYMBOL__V49*/ meltfptr[48]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V430*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1405:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V336*/ meltfptr[335];
            /*_.INSTALL_METHOD__V431*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_CLASS__V50*/ meltfptr[49]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V431*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1420:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V340*/ meltfptr[339];
            /*_.INSTALL_METHOD__V432*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_KEYWORD__V51*/ meltfptr[50]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V432*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1428:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V344*/ meltfptr[343];
            /*_.INSTALL_METHOD__V433*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_KEYWORD__V51*/ meltfptr[50]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V433*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1445:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V346*/ meltfptr[345];
            /*_.INSTALL_METHOD__V434*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_CLONED_SYMBOL__V52*/ meltfptr[51]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V434*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1454:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V350*/ meltfptr[349];
            /*_.INSTALL_METHOD__V435*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_CLONED_SYMBOL__V52*/ meltfptr[51]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V435*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1526:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V352*/ meltfptr[351];
            /*_.INSTALL_METHOD__V436*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_ENVIRONMENT__V53*/ meltfptr[52]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V436*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1539:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V360*/ meltfptr[359];
            /*_.INSTALL_METHOD__V437*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_CTYPE__V56*/ meltfptr[55]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V437*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1549:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V364*/ meltfptr[363];
            /*_.INSTALL_METHOD__V438*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_CTYPE__V56*/ meltfptr[55]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V438*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1577:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V136*/ meltfptr[135];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V366*/ meltfptr[365];
            /*_.INSTALL_METHOD__V439*/
            meltfptr[403] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_ANY_BINDING__V57*/ meltfptr[56]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V439*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1578:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        MELT_CHECK_SIGNAL();
        ;
        /*^apply*/
        /*apply*/
        {
            union meltparam_un argtab[2];
            memset(&argtab, 0, sizeof(argtab));
            /*^apply.arg*/
            argtab[0].meltbp_aptr = (melt_ptr_t*) &/*_._VALDATA___V144*/ meltfptr[143];
            /*^apply.arg*/
            argtab[1].meltbp_aptr = (melt_ptr_t*) &/*_._VALCLO___V366*/ meltfptr[365];
            /*_.INSTALL_METHOD__V440*/
            meltfptr[402] =  melt_apply ((meltclosure_ptr_t)(/*_.INSTALL_METHOD__V23*/ meltfptr[22]), (melt_ptr_t)(/*_.CLASS_ANY_BINDING__V57*/ meltfptr[56]), (MELTBPARSTR_PTR MELTBPARSTR_PTR ""), argtab, "", (union meltparam_un*)0);
        }
        ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.INSTALL_METHOD__V440*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1591:/ initchunk");
    /*^block*/
    /*anyblock*/
    {

        /*_.DEBUG_LESS__V441*/ meltfptr[403] =  /*reallynil*/ NULL ;;
        MELT_LOCATION("warmelt-debug.melt:1591:/ quasiblock");


        /*_.CLONE_WITH_DISCRIMINANT__V442*/
        meltfptr[402] =
            meltgc_clone_with_discriminant((melt_ptr_t)(/*_._VALCLO___V370*/ meltfptr[369]), (melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181])) ;;

        MELT_CHECK_SIGNAL();
        ;
        MELT_LOCATION("warmelt-debug.melt:1591:/ compute");
        /*_.DEBUG_LESS__V5*/
        meltfptr[4] = /*_.CLONE_WITH_DISCRIMINANT__V442*/ meltfptr[402];;

        /*^clear*/
        /*clear*/ /*_.CLONE_WITH_DISCRIMINANT__V442*/
        meltfptr[402] = 0 ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.DEBUG_LESS__V441*/
        meltfptr[403] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1621:/ initchunk");
    /*^block*/
    /*anyblock*/
    {

        /*_.DEBUG_MORE__V443*/ meltfptr[402] =  /*reallynil*/ NULL ;;
        MELT_LOCATION("warmelt-debug.melt:1621:/ quasiblock");


        /*_.CLONE_WITH_DISCRIMINANT__V444*/
        meltfptr[403] =
            meltgc_clone_with_discriminant((melt_ptr_t)(/*_._VALCLO___V374*/ meltfptr[373]), (melt_ptr_t)(/*_._VALDATA___V182*/ meltfptr[181])) ;;

        MELT_CHECK_SIGNAL();
        ;
        MELT_LOCATION("warmelt-debug.melt:1621:/ compute");
        /*_.DEBUG_MORE__V6*/
        meltfptr[5] = /*_.CLONE_WITH_DISCRIMINANT__V444*/ meltfptr[403];;

        /*^clear*/
        /*clear*/ /*_.CLONE_WITH_DISCRIMINANT__V444*/
        meltfptr[403] = 0 ;
        /*epilog*/

        /*^clear*/
        /*clear*/ /*_.DEBUG_MORE__V443*/
        meltfptr[402] = 0 ;
    }

    MELT_LOCATION("warmelt-debug.melt:1650:/ initchunk");
    /*^block*/
    /*anyblock*/
    {


        /*hookcall*/ melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V379*/ meltfptr[378], /*_._VALCLO___V187*/ meltfptr[186],
                /*quasi.cur.mod.env.ref norm.exp.val : DBG_OUT*/
                /* check quasi.cur.mod.env.ref 923538211 */
                (/*_._CONTENV___V2*/ meltfptr[1])
                                                  ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V381*/ meltfptr[380], /*_._VALCLO___V189*/ meltfptr[188],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBG_OUTOBJECT*/
                                      /* check quasi.cur.mod.env.ref 52574243 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V124*/ meltfptr[123], /*_._VALDATA___V136*/ meltfptr[135],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBG_OUTPUT*/
                                      /* check quasi.cur.mod.env.ref 310522985 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V138*/ meltfptr[137], /*_._VALDATA___V144*/ meltfptr[143],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBG_OUTPUTAGAIN*/
                                      /* check quasi.cur.mod.env.ref 405069955 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V383*/ meltfptr[382], /*_._VALCLO___V213*/ meltfptr[212],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBGOUT_FIELDS*/
                                      /* check quasi.cur.mod.env.ref 868733961 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V385*/ meltfptr[384], /*_._VALCLO___V215*/ meltfptr[214],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DBGOUTAGAIN_FIELDS*/
                                      /* check quasi.cur.mod.env.ref 1033486247 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V86*/ meltfptr[85], /*_._VALDATA___V88*/ meltfptr[87],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DEBUG_DEPTH*/
                                      /* check quasi.cur.mod.env.ref 100012054 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V371*/ meltfptr[370], /*_.DEBUG_LESS__V5*/ meltfptr[4],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DEBUG_LESS*/
                                      /* check quasi.cur.mod.env.ref 458084558 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V375*/ meltfptr[374], /*_.DEBUG_MORE__V6*/ meltfptr[5],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DEBUG_MORE*/
                                      /* check quasi.cur.mod.env.ref 975017888 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V178*/ meltfptr[177], /*_._VALDATA___V182*/ meltfptr[181],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DISCR_DEBUG_CLOSURE*/
                                      /* check quasi.cur.mod.env.ref 852330244 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V387*/ meltfptr[386], /*_._VALCLO___V378*/ meltfptr[377],
                                      /*quasi.cur.mod.env.ref norm.exp.val : DISPLAY_DEBUG_MESSAGE*/
                                      /* check quasi.cur.mod.env.ref 658071339 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V389*/ meltfptr[388], /*_._VALCLO___V191*/ meltfptr[190],
                                      /*quasi.cur.mod.env.ref norm.exp.val : MELT_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 285463339 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V104*/ meltfptr[103], /*_._VALDATA___V106*/ meltfptr[105],
                                      /*quasi.cur.mod.env.ref norm.exp.val : MELT_HAS_FLAG_DEBUG_SET*/
                                      /* check quasi.cur.mod.env.ref 839140876 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V111*/ meltfptr[110], /*_._VALDATA___V113*/ meltfptr[112],
                                      /*quasi.cur.mod.env.ref norm.exp.val : MELT_REALLY_NEED_DBGLIM*/
                                      /* check quasi.cur.mod.env.ref 285629947 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V93*/ meltfptr[92], /*_._VALDATA___V95*/ meltfptr[94],
                                      /*quasi.cur.mod.env.ref norm.exp.val : MELT_REALLY_NEED_DEBUG*/
                                      /* check quasi.cur.mod.env.ref 230733887 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V391*/ meltfptr[390], /*_._VALCLO___V172*/ meltfptr[171],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_BASICBLOCK_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 930008216 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V393*/ meltfptr[392], /*_._VALCLO___V167*/ meltfptr[166],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_EDGE_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 235705431 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V395*/ meltfptr[394], /*_._VALCLO___V157*/ meltfptr[156],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_GIMPLE_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 106134238 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V397*/ meltfptr[396], /*_._VALCLO___V162*/ meltfptr[161],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_GIMPLESEQ_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 721919551 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V399*/ meltfptr[398], /*_._VALCLO___V177*/ meltfptr[176],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_LOOP_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 654630670 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;

        /*hookcall*/
        melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t) ((melt_ptr_t)(MELT_PREDEF(HOOK_VALUE_EXPORTER))), /*_._VALDATA___V401*/ meltfptr[400], /*_._VALCLO___V152*/ meltfptr[151],
                                      /*quasi.cur.mod.env.ref norm.exp.val : REGISTER_TREE_DEBUG_FUN*/
                                      /* check quasi.cur.mod.env.ref 685423779 */
                                      (/*_._CONTENV___V2*/ meltfptr[1])
                                     ) ;
        /*epilog*/
    }

    /**COMMENT: after toplevel body **/;

    /**COMMENT: compute boxloc again **/;

    /*cond*/
    if (/*_._CONTENV___V2*/ meltfptr[1]) /*then*/
        {
        }
    else    /*^cond.else*/
        {

            /*^compute*/

            /* compile2obj_initproc emitted initialization of environment reference for warmelt-debug */
            if (/*_._PREVENV___V4*/ meltfptr[3])
                {
                    /*_._CONTENV___V2*/ meltfptr[1] = melthookproc_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER
                                                      ((melt_ptr_t) /*_._PREVENV___V4*/ meltfptr[3], "warmelt-debug") ;
                }
            else /* no prevenv */
                {
#if MELT_HAS_INITIAL_ENVIRONMENT>0
                    if (!melt_flag_bootstrapping)
                        warning(0, "MELT is not creating a fresh environment reference for warmelt-debug without parent env.") ;
#endif /* MELT_HAS_INITIAL_ENVIRONMENT>0 */
                }
            ;;
        }

    /**COMMENT: intern symbols **/;

    /*internsym:HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V58*/ meltfptr[57]));

    /*internsym:CLASS_DEBUG_INFORMATION*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V60*/ meltfptr[59]));

    /*internsym:CLASS_ROOT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V62*/ meltfptr[61]));

    /*internsym:DBGI_OUT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V74*/ meltfptr[73]));

    /*internsym:DBGI_OCCMAP*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V76*/ meltfptr[75]));

    /*internsym:DBGI_MAXDEPTH*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V78*/ meltfptr[77]));

    /*internsym:CLASS_DEBUG_OUTPUT_INFORMATION*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V80*/ meltfptr[79]));

    /*internsym:DEBUG_DEPTH*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V86*/ meltfptr[85]));

    /*internsym:MELT_REALLY_NEED_DEBUG*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V93*/ meltfptr[92]));

    /*internsym:DEPTH*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V98*/ meltfptr[97]));

    /*internsym:MELT_HAS_FLAG_DEBUG_SET*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V104*/ meltfptr[103]));

    /*internsym:MELT_REALLY_NEED_DBGLIM*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V111*/ meltfptr[110]));

    /*internsym:LIMIT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V117*/ meltfptr[116]));

    /*internsym:DBG_OUTPUT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V124*/ meltfptr[123]));

    /*internsym:CLASS_SELECTOR*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V126*/ meltfptr[125]));

    /*internsym:RECV*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V128*/ meltfptr[127]));

    /*internsym:DBGINFO*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V131*/ meltfptr[130]));

    /*internsym:DBG_OUTPUTAGAIN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V138*/ meltfptr[137]));

    /*internsym:TREE_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V146*/ meltfptr[145]));

    /*internsym:CLASS_REFERENCE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V148*/ meltfptr[147]));

    /*internsym:GIMPLE_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V153*/ meltfptr[152]));

    /*internsym:GIMPLESEQ_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V158*/ meltfptr[157]));

    /*internsym:EDGE_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V163*/ meltfptr[162]));

    /*internsym:BASICBLOCK_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V168*/ meltfptr[167]));

    /*internsym:LOOP_DEBUG_FUNCONT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V173*/ meltfptr[172]));

    /*internsym:DISCR_DEBUG_CLOSURE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V178*/ meltfptr[177]));

    /*internsym:CLASS_DISCRIMINANT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V180*/ meltfptr[179]));

    /*internsym:DISCR_CLOSURE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V184*/ meltfptr[183]));

    /*internsym:INITIAL_SYSTEM_DATA*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V192*/ meltfptr[191]));

    /*internsym:CLASS_SYSTEM_DATA*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V194*/ meltfptr[193]));

    /*internsym:DISCR_MAP_OBJECTS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V196*/ meltfptr[195]));

    /*internsym:DISCR_INTEGER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V198*/ meltfptr[197]));

    /*internsym:DISCR_STRBUF*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V200*/ meltfptr[199]));

    /*internsym:MELT_ASSERT_FAILURE_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V202*/ meltfptr[201]));

    /*internsym:ADD2OUT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V204*/ meltfptr[203]));

    /*internsym:CSTRING_PREFIXED*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V206*/ meltfptr[205]));

    /*internsym:CLASS_NAMED*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V208*/ meltfptr[207]));

    /*internsym:CLASS_QUASI_CTYPE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V210*/ meltfptr[209]));


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_6*/



void meltmod__WARMELTmiDEBUG__initialmeltchunk_7 (meltinitial_frame_t* meltframptr__, char meltpredefinited[])
{
#define meltfram__ (*meltframptr__)
#undef meltcallcount
#define meltcallcount 0L
    (void) meltpredefinited;
    /*internsym:INSTALL_METHOD*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V218*/ meltfptr[217]));

    /*internsym:DISCR_NULL_RECEIVER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V220*/ meltfptr[219]));

    /*internsym:DISCR_STRING*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V224*/ meltfptr[223]));

    /*internsym:DISCR_VERBATIM_STRING*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V226*/ meltfptr[225]));

    /*internsym:DISCR_CONSTANT_INTEGER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V232*/ meltfptr[231]));

    /*internsym:DISCR_DOUBLE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V236*/ meltfptr[235]));

    /*internsym:DISCR_CONSTANT_DOUBLE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V238*/ meltfptr[237]));

    /*internsym:DISCR_MIXED_INTEGER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V242*/ meltfptr[241]));

    /*internsym:DISCR_MIXED_LOCATION*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V246*/ meltfptr[245]));

    /*internsym:DISCR_MIXED_BIGINT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V250*/ meltfptr[249]));

    /*internsym:DISCR_MULTIPLE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V254*/ meltfptr[253]));

    /*internsym:DISCR_ROUTINE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V259*/ meltfptr[258]));

    /*internsym:ROUTINE_EVERY*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V261*/ meltfptr[260]));

    /*internsym:HOOK_EVERY*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V266*/ meltfptr[265]));

    /*internsym:DISCR_HOOK*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V268*/ meltfptr[267]));

    /*internsym:DISCR_LIST*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V274*/ meltfptr[273]));

    /*internsym:DISCR_PAIR*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V278*/ meltfptr[277]));

    /*internsym:MAPOBJECT_EVERY*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V288*/ meltfptr[287]));

    /*internsym:MULTIPLE_SORT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V290*/ meltfptr[289]));

    /*internsym:COMPARE_OBJ_RANKED*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V292*/ meltfptr[291]));

    /*internsym:MULTIPLE_EVERY*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V294*/ meltfptr[293]));

    /*internsym:MAPSTRING_EVERY*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V303*/ meltfptr[302]));

    /*internsym:DISCR_MAP_STRINGS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V305*/ meltfptr[304]));

    /*internsym:DISCR_BUCKET_LONGS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V309*/ meltfptr[308]));

    /*internsym:DISCR_JSONOBJECT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V313*/ meltfptr[312]));

    /*internsym:DISCR_ANY_RECEIVER*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V319*/ meltfptr[318]));

    /*internsym:DBGOUT_NAMEDOBJECT_METHOD*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V325*/ meltfptr[324]));

    /*internsym:CLASS_SYMBOL*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V331*/ meltfptr[330]));

    /*internsym:CLASS_CLASS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V337*/ meltfptr[336]));

    /*internsym:CLASS_KEYWORD*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V341*/ meltfptr[340]));

    /*internsym:CLASS_CLONED_SYMBOL*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V347*/ meltfptr[346]));

    /*internsym:CLASS_ENVIRONMENT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V353*/ meltfptr[352]));

    /*internsym:ENV_PREV*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V355*/ meltfptr[354]));

    /*internsym:CLASS_DESCRIBED_ENVIRONMENT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V357*/ meltfptr[356]));

    /*internsym:CLASS_CTYPE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V361*/ meltfptr[360]));

    /*internsym:CLASS_ANY_BINDING*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V367*/ meltfptr[366]));

    /*internsym:DEBUG_LESS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V371*/ meltfptr[370]));

    /*internsym:DEBUG_MORE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V375*/ meltfptr[374]));

    /*internsym:DBG_OUT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V379*/ meltfptr[378]));

    /*internsym:DBG_OUTOBJECT*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V381*/ meltfptr[380]));

    /*internsym:DBGOUT_FIELDS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V383*/ meltfptr[382]));

    /*internsym:DBGOUTAGAIN_FIELDS*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V385*/ meltfptr[384]));

    /*internsym:DISPLAY_DEBUG_MESSAGE*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V387*/ meltfptr[386]));

    /*internsym:MELT_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V389*/ meltfptr[388]));

    /*internsym:REGISTER_BASICBLOCK_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V391*/ meltfptr[390]));

    /*internsym:REGISTER_EDGE_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V393*/ meltfptr[392]));

    /*internsym:REGISTER_GIMPLE_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V395*/ meltfptr[394]));

    /*internsym:REGISTER_GIMPLESEQ_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V397*/ meltfptr[396]));

    /*internsym:REGISTER_LOOP_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V399*/ meltfptr[398]));

    /*internsym:REGISTER_TREE_DEBUG_FUN*/
    (void) melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)(/*_._VALDATA___V401*/ meltfptr[400]));

    /**COMMENT: set retinit from boxloc **/;

    /*_._RETINIT___V1*/
    meltfptr[0] =
        /* finalsetretinit */ melt_reference_value((melt_ptr_t)(/*_._CONTENV___V2*/ meltfptr[1]));
    /**COMMENT: end the initproc **/;


#undef meltfram__
} /*end of meltmod__WARMELTmiDEBUG__initialmeltchunk_7*/






/* exported 3 field offsets */
MELT_EXTERN const int meltfieldoff__DBGI_MAXDEPTH;
const int meltfieldoff__DBGI_MAXDEPTH = 2; /* in CLASS_DEBUG_INFORMATION */
MELT_EXTERN const int meltfieldoff__DBGI_OCCMAP;
const int meltfieldoff__DBGI_OCCMAP = 1; /* in CLASS_DEBUG_INFORMATION */
MELT_EXTERN const int meltfieldoff__DBGI_OUT;
const int meltfieldoff__DBGI_OUT = 0; /* in CLASS_DEBUG_INFORMATION */

/* exported 2 class lengths */
MELT_EXTERN const int meltclasslen__CLASS_DEBUG_INFORMATION;
const int meltclasslen__CLASS_DEBUG_INFORMATION = 3;
MELT_EXTERN const int meltclasslen__CLASS_DEBUG_OUTPUT_INFORMATION;
const int meltclasslen__CLASS_DEBUG_OUTPUT_INFORMATION = 3;



/**** end of warmelt-debug ****/
