/* GCC MELT GENERATED FILE warmelt-hooks.c - DO NOT EDIT */

/***+ warmelt-hooks without options +***/
#include "melt-run.h"


/* used hash from melt-run.h when compiling this file: */
MELT_EXTERN const char meltrun_used_md5_melt[] =
  MELT_RUN_HASHMD5 /* from melt-run.h */ ;


/**** warmelt-hooks declarations ****/
/**** MELT GENERATED DECLARATIONS for warmelt-hooks ** DO NOT EDIT ; see gcc-melt.org ****/

/****++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
***
    Copyright 2012 - 2013 Free Software Foundation, Inc.
    Contributed by Basile Starynkevitch <basile@starynkevitch.net>

    This file is part of GCC.

    GCC is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 3, or (at your option)
    any later version.

    GCC is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with GCC; see the file COPYING3.  If not see
    <http://www.gnu.org/licenses/>.
***
----------------------------------------------------------------****/


/** ordinary MELT module meltbuild-sources/warmelt-hooks**/
#define MELT_HAS_INITIAL_ENVIRONMENT 1	/*usualmodule */


/*** 3 MELT module variables declarations ****/
MELT_EXTERN void melt_forwarding_module_data (void);
MELT_EXTERN void melt_marking_module_data (void);

MELT_EXTERN melt_ptr_t MELT_MODULE_VISIBILITY
  melt_WARMELTmiHOOKS_module_var_ptr_tab[16];
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melt_WARMELTmiHOOKS_module_var_flags[1];

static inline melt_ptr_t
melt_module_var_fetch (int ix)
{
  return (ix > 0
	  && ix <= 3) ? melt_WARMELTmiHOOKS_module_var_ptr_tab[ix] : NULL;
}

static inline void
melt_module_var_put (int ix, melt_ptr_t val)
{
  if (ix > 0 && ix <= 3)
    {
      melt_WARMELTmiHOOKS_module_var_ptr_tab[ix] = val;
      melt_WARMELTmiHOOKS_module_var_flags[ix / 16] = true;
    }
}

/* MELT module variables indexes */
enum
{
  meltmodatix_none,
  meltmodvarix_MELT_INPCHANBUCK_symb = 1,
  meltmodvarix_MELT_ALARMBUCKET_symb = 2,
  meltmodvarix_MELT_CHILDBUCK_symb = 3,
  meltmodatix_last
};				/* end MELT module variables indexes */

/*** 3 MELT called hook declarations ***/

/*declare MELT called hook #0 HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER **/
MELT_EXTERN melt_ptr_t
melthook_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER (melt_ptr_t melthookdata,
						 melt_ptr_t meltinp0_PREVENV,
						 const char
						 *meltinp1_MODULNAME);

/*declare MELT called hook #1 HOOK_SYMBOL_IMPORTER **/
MELT_EXTERN melt_ptr_t melthook_HOOK_SYMBOL_IMPORTER (melt_ptr_t melthookdata,
						      const char
						      *meltinp0_SYMNAMESTR,
						      const char
						      *meltinp1_MODULENAMESTR,
						      melt_ptr_t
						      meltinp2_PARENV);

/*declare MELT called hook #2 HOOK_VALUE_EXPORTER **/
MELT_EXTERN void melthook_HOOK_VALUE_EXPORTER (melt_ptr_t melthookdata,
					       melt_ptr_t meltinp0_SYM,
					       melt_ptr_t meltinp1_VAL,
					       melt_ptr_t meltinp2_CONTENV);

/*** end of 3 MELT called hook declarations ***/

/*** 27 extra MELT c-headers ***/


/** MELT extra c-header 1 : **/


static void
melt_override_gate_callback (void *gccdata, void *userdata ATTRIBUTE_UNUSED)
{
  bool *pgatestatus = (bool *) gccdata;
  bool gatsta = false;
  long oldgatstalng = 0, newgatstalng = 0;
  gcc_assert (pgatestatus != NULL);
  gatsta = *pgatestatus;
  oldgatstalng = newgatstalng = (long) gatsta;
  melthookproc_HOOK_OVERRIDE_GATE (oldgatstalng, &newgatstalng);
  gatsta = (newgatstalng != 0L);
  *pgatestatus = gatsta;
}				/* end of  melt_override_gate_callback */

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 2 : **/

/* flag for PLUGIN_OVERRIDE_GATE */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_override_gate_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 3 : **/

/* flag for PLUGIN_START_UNIT */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_start_unit_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 4 : **/


void MELT_MODULE_VISIBILITY
melt_startunithook_callback (void *gcc_data ATTRIBUTE_UNUSED,
			     void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 5 : **/

/* flag for PLUGIN_FINISH_UNIT */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_finish_unit_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 6 : **/


void MELT_MODULE_VISIBILITY
melt_finishunithook_callback (void *gcc_data ATTRIBUTE_UNUSED,
			      void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 7 : **/

/* flag for PLUGIN_ALL_PASSES_START declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melthk_all_passes_start_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 8 : **/


void MELT_MODULE_VISIBILITY
melt_all_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				     void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 9 : **/

/* flag for PLUGIN_ALL_PASSES_END declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_all_passes_end_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 10 : **/


void MELT_MODULE_VISIBILITY
melt_all_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				   void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 11 : **/

/* flag for PLUGIN_ALL_IPA_PASSES_START declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melthk_all_ipa_passes_start_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 12 : **/


void MELT_MODULE_VISIBILITY
melt_all_ipa_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					 void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 13 : **/

/* flag for PLUGIN_ALL_IPA_PASSES_END declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melthk_all_ipa_passes_end_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 14 : **/


void MELT_MODULE_VISIBILITY
melt_all_ipa_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				       void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 15 : **/

/* flag for PLUGIN_EARLY_GIMPLE_PASSES_START declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melthk_early_gimple_passes_start_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 16 : **/


void MELT_MODULE_VISIBILITY
melt_early_gimple_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					      void *user_data
					      ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 17 : **/

/* flag for PLUGIN_EARLY_GIMPLE_PASSES_END declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY
  melthk_early_gimple_passes_end_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 18 : **/


void MELT_MODULE_VISIBILITY
melt_early_gimple_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					    void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 19 : **/

/* flag for PLUGIN_PRE_GENERICIZE declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_pre_genericize_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 20 : **/


void MELT_MODULE_VISIBILITY
melt_pre_genericize_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				   void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 21 : **/

/* flag for PLUGIN_FINISH_TYPE declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_finish_type_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 22 : **/


void MELT_MODULE_VISIBILITY
melt_finish_type_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 23 : **/

/* flag for PLUGIN_FINISH_DECL declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_finish_decl_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 24 : **/


void MELT_MODULE_VISIBILITY
melt_finish_decl_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 25 : **/

/* flag for PLUGIN_PASS_EXECUTION declare */
MELT_EXTERN bool MELT_MODULE_VISIBILITY melthk_pass_execution_registered_flag;

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 26 : **/


void MELT_MODULE_VISIBILITY
melt_pass_execution_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				   void *user_data ATTRIBUTE_UNUSED);

/*** end of 27 extra MELT c-headers ***/


/** MELT extra c-header 27 : **/

 /* header from warmelt-hooks.melt for poll etc... */
#include <poll.h>

#define MELT_BUFSIZE 8192
#define MELT_POLL_DELAY_MILLISEC 500

/*** end of 27 extra MELT c-headers ***/

/** declaration of hook melthook_HOOK_LOW_DEBUG_VALUE_AT */
MELT_EXTERN
  void melthook_HOOK_LOW_DEBUG_VALUE_AT (melt_ptr_t melthookdata,
					 melt_ptr_t meltinp0_VAL,
					 const char *meltinp1_FILENAME,
					 long meltinp2_LINENO,
					 const char *meltinp3_MSG,
					 long meltinp4_COUNT);


/* declare hook frame marking routine for melthook_HOOK_LOW_DEBUG_VALUE_AT hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_LOW_DEBUG_VALUE_AT_rout (struct
								       melt_callframe_st
								       *,
								       int);




/** declaration of hook melthook_HOOK_OVERRIDE_GATE */
MELT_EXTERN
  void melthook_HOOK_OVERRIDE_GATE (melt_ptr_t melthookdata,
				    long meltinp0_BEFOREGATE,
				    long *meltoutp0_AFTERGATE);


/* declare hook frame marking routine for melthook_HOOK_OVERRIDE_GATE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_OVERRIDE_GATE_rout (struct
								  melt_callframe_st
								  *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE (meltclosure_ptr_t meltclosp_,
						melt_ptr_t meltfirstargp_,
						const melt_argdescr_cell_t
						meltxargdescr_[],
						union meltparam_un
						*meltxargtab_,
						const melt_argdescr_cell_t
						meltxresdescr_[],
						union meltparam_un
						*meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un
						       *meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un
						       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST (meltclosure_ptr_t
							meltclosp_,
							melt_ptr_t
							meltfirstargp_,
							const
							melt_argdescr_cell_t
							meltxargdescr_[],
							union meltparam_un
							*meltxargtab_,
							const
							melt_argdescr_cell_t
							meltxresdescr_[],
							union meltparam_un
							*meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un
						       *meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un
						       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un
							  *meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un
							  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST (meltclosure_ptr_t
							 meltclosp_,
							 melt_ptr_t
							 meltfirstargp_,
							 const
							 melt_argdescr_cell_t
							 meltxargdescr_[],
							 union meltparam_un
							 *meltxargtab_,
							 const
							 melt_argdescr_cell_t
							 meltxresdescr_[],
							 union meltparam_un
							 *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 (meltclosure_ptr_t meltclosp_,
				      melt_ptr_t meltfirstargp_,
				      const melt_argdescr_cell_t
				      meltxargdescr_[],
				      union meltparam_un *meltxargtab_,
				      const melt_argdescr_cell_t
				      meltxresdescr_[],
				      union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un *meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un *meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un *meltxrestab_);

/** declaration of hook melthook_HOOK_START_UNIT */
MELT_EXTERN void melthook_HOOK_START_UNIT (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_START_UNIT hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_START_UNIT_rout (struct
							       melt_callframe_st
							       *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT (meltclosure_ptr_t meltclosp_,
					      melt_ptr_t meltfirstargp_,
					      const melt_argdescr_cell_t
					      meltxargdescr_[],
					      union meltparam_un
					      *meltxargtab_,
					      const melt_argdescr_cell_t
					      meltxresdescr_[],
					      union meltparam_un
					      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_14_WARMELTmiHOOKS_AT_START_UNIT_FIRST (meltclosure_ptr_t meltclosp_,
						melt_ptr_t meltfirstargp_,
						const melt_argdescr_cell_t
						meltxargdescr_[],
						union meltparam_un
						*meltxargtab_,
						const melt_argdescr_cell_t
						meltxresdescr_[],
						union meltparam_un
						*meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_15_WARMELTmiHOOKS_AT_START_UNIT_LAST (meltclosure_ptr_t meltclosp_,
					       melt_ptr_t meltfirstargp_,
					       const melt_argdescr_cell_t
					       meltxargdescr_[],
					       union meltparam_un
					       *meltxargtab_,
					       const melt_argdescr_cell_t
					       meltxresdescr_[],
					       union meltparam_un
					       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_16_WARMELTmiHOOKS_LAMBDA_cl4 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un *meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_17_WARMELTmiHOOKS_LAMBDA_cl5 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un *meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_18_WARMELTmiHOOKS_LAMBDA_cl6 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un *meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un *meltxrestab_);

/** declaration of hook melthook_HOOK_FINISH_UNIT */
MELT_EXTERN void melthook_HOOK_FINISH_UNIT (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_FINISH_UNIT hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_FINISH_UNIT_rout (struct
								melt_callframe_st
								*, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_20_WARMELTmiHOOKS_ENABLE_FINISH_UNIT (meltclosure_ptr_t meltclosp_,
					       melt_ptr_t meltfirstargp_,
					       const melt_argdescr_cell_t
					       meltxargdescr_[],
					       union meltparam_un
					       *meltxargtab_,
					       const melt_argdescr_cell_t
					       meltxresdescr_[],
					       union meltparam_un
					       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_21_WARMELTmiHOOKS_AT_FINISH_UNIT_FIRST (meltclosure_ptr_t meltclosp_,
						 melt_ptr_t meltfirstargp_,
						 const melt_argdescr_cell_t
						 meltxargdescr_[],
						 union meltparam_un
						 *meltxargtab_,
						 const melt_argdescr_cell_t
						 meltxresdescr_[],
						 union meltparam_un
						 *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_22_WARMELTmiHOOKS_AT_FINISH_UNIT_LAST (meltclosure_ptr_t meltclosp_,
						melt_ptr_t meltfirstargp_,
						const melt_argdescr_cell_t
						meltxargdescr_[],
						union meltparam_un
						*meltxargtab_,
						const melt_argdescr_cell_t
						meltxresdescr_[],
						union meltparam_un
						*meltxrestab_);

/** declaration of hook melthook_HOOK_ALL_PASSES_START */
MELT_EXTERN void melthook_HOOK_ALL_PASSES_START (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_ALL_PASSES_START hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_ALL_PASSES_START_rout (struct
								     melt_callframe_st
								     *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_24_WARMELTmiHOOKS_ENABLE_ALL_PASSES_START (meltclosure_ptr_t
						    meltclosp_,
						    melt_ptr_t meltfirstargp_,
						    const melt_argdescr_cell_t
						    meltxargdescr_[],
						    union meltparam_un
						    *meltxargtab_,
						    const melt_argdescr_cell_t
						    meltxresdescr_[],
						    union meltparam_un
						    *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_25_WARMELTmiHOOKS_REGISTER_ALL_PASSES_START_FIRST (meltclosure_ptr_t
							    meltclosp_,
							    melt_ptr_t
							    meltfirstargp_,
							    const
							    melt_argdescr_cell_t
							    meltxargdescr_[],
							    union meltparam_un
							    *meltxargtab_,
							    const
							    melt_argdescr_cell_t
							    meltxresdescr_[],
							    union meltparam_un
							    *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_26_WARMELTmiHOOKS_REGISTER_ALL_PASSES_START_LAST (meltclosure_ptr_t
							   meltclosp_,
							   melt_ptr_t
							   meltfirstargp_,
							   const
							   melt_argdescr_cell_t
							   meltxargdescr_[],
							   union meltparam_un
							   *meltxargtab_,
							   const
							   melt_argdescr_cell_t
							   meltxresdescr_[],
							   union meltparam_un
							   *meltxrestab_);

/** declaration of hook melthook_HOOK_ALL_PASSES_END */
MELT_EXTERN void melthook_HOOK_ALL_PASSES_END (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_ALL_PASSES_END hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_ALL_PASSES_END_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_28_WARMELTmiHOOKS_ENABLE_ALL_PASSES_END (meltclosure_ptr_t
						  meltclosp_,
						  melt_ptr_t meltfirstargp_,
						  const melt_argdescr_cell_t
						  meltxargdescr_[],
						  union meltparam_un
						  *meltxargtab_,
						  const melt_argdescr_cell_t
						  meltxresdescr_[],
						  union meltparam_un
						  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_29_WARMELTmiHOOKS_REGISTER_ALL_PASSES_END_FIRST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un
							  *meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un
							  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_30_WARMELTmiHOOKS_REGISTER_ALL_PASSES_END_LAST (meltclosure_ptr_t
							 meltclosp_,
							 melt_ptr_t
							 meltfirstargp_,
							 const
							 melt_argdescr_cell_t
							 meltxargdescr_[],
							 union meltparam_un
							 *meltxargtab_,
							 const
							 melt_argdescr_cell_t
							 meltxresdescr_[],
							 union meltparam_un
							 *meltxrestab_);

/** declaration of hook melthook_HOOK_ALL_IPA_PASSES_START */
MELT_EXTERN void melthook_HOOK_ALL_IPA_PASSES_START (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_ALL_IPA_PASSES_START hook */
void MELT_MODULE_VISIBILITY
melthookmark_HOOK_ALL_IPA_PASSES_START_rout (struct melt_callframe_st *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_32_WARMELTmiHOOKS_ENABLE_ALL_IPA_PASSES_START (meltclosure_ptr_t
							meltclosp_,
							melt_ptr_t
							meltfirstargp_,
							const
							melt_argdescr_cell_t
							meltxargdescr_[],
							union meltparam_un
							*meltxargtab_,
							const
							melt_argdescr_cell_t
							meltxresdescr_[],
							union meltparam_un
							*meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_33_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_START_FIRST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_34_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_START_LAST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);

/** declaration of hook melthook_HOOK_ALL_IPA_PASSES_END */
MELT_EXTERN void melthook_HOOK_ALL_IPA_PASSES_END (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_ALL_IPA_PASSES_END hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_ALL_IPA_PASSES_END_rout (struct
								       melt_callframe_st
								       *,
								       int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_36_WARMELTmiHOOKS_ENABLE_ALL_IPA_PASSES_END (meltclosure_ptr_t
						      meltclosp_,
						      melt_ptr_t
						      meltfirstargp_,
						      const
						      melt_argdescr_cell_t
						      meltxargdescr_[],
						      union meltparam_un
						      *meltxargtab_,
						      const
						      melt_argdescr_cell_t
						      meltxresdescr_[],
						      union meltparam_un
						      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_37_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_END_FIRST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_38_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_END_LAST (meltclosure_ptr_t
							     meltclosp_,
							     melt_ptr_t
							     meltfirstargp_,
							     const
							     melt_argdescr_cell_t
							     meltxargdescr_[],
							     union
							     meltparam_un
							     *meltxargtab_,
							     const
							     melt_argdescr_cell_t
							     meltxresdescr_[],
							     union
							     meltparam_un
							     *meltxrestab_);

/** declaration of hook melthook_HOOK_EARLY_GIMPLE_PASSES_START */
MELT_EXTERN
  void melthook_HOOK_EARLY_GIMPLE_PASSES_START (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */
void MELT_MODULE_VISIBILITY
melthookmark_HOOK_EARLY_GIMPLE_PASSES_START_rout (struct melt_callframe_st *,
						  int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_40_WARMELTmiHOOKS_ENABLE_EARLY_GIMPLE_PASSES_START (meltclosure_ptr_t
							     meltclosp_,
							     melt_ptr_t
							     meltfirstargp_,
							     const
							     melt_argdescr_cell_t
							     meltxargdescr_[],
							     union
							     meltparam_un
							     *meltxargtab_,
							     const
							     melt_argdescr_cell_t
							     meltxresdescr_[],
							     union
							     meltparam_un
							     *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_41_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_START_FIRST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_42_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_START_LAST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);

/** declaration of hook melthook_HOOK_EARLY_GIMPLE_PASSES_END */
MELT_EXTERN
  void melthook_HOOK_EARLY_GIMPLE_PASSES_END (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */
void MELT_MODULE_VISIBILITY
melthookmark_HOOK_EARLY_GIMPLE_PASSES_END_rout (struct melt_callframe_st *,
						int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_44_WARMELTmiHOOKS_ENABLE_EARLY_GIMPLE_PASSES_END (meltclosure_ptr_t
							   meltclosp_,
							   melt_ptr_t
							   meltfirstargp_,
							   const
							   melt_argdescr_cell_t
							   meltxargdescr_[],
							   union meltparam_un
							   *meltxargtab_,
							   const
							   melt_argdescr_cell_t
							   meltxresdescr_[],
							   union meltparam_un
							   *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_45_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_END_FIRST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_46_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_END_LAST
(meltclosure_ptr_t meltclosp_, melt_ptr_t meltfirstargp_, const melt_argdescr_cell_t meltxargdescr_[],
union meltparam_un *meltxargtab_, const melt_argdescr_cell_t meltxresdescr_[],
union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_47_WARMELTmiHOOKS_ENABLE_PRE_GENERICIZE (meltclosure_ptr_t
						  meltclosp_,
						  melt_ptr_t meltfirstargp_,
						  const melt_argdescr_cell_t
						  meltxargdescr_[],
						  union meltparam_un
						  *meltxargtab_,
						  const melt_argdescr_cell_t
						  meltxresdescr_[],
						  union meltparam_un
						  *meltxrestab_);

/** declaration of hook melthook_HOOK_PRE_GENERICIZE */
MELT_EXTERN
  void melthook_HOOK_PRE_GENERICIZE (melt_ptr_t melthookdata,
				     tree meltinp0_TFNDECL);


/* declare hook frame marking routine for melthook_HOOK_PRE_GENERICIZE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_PRE_GENERICIZE_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_49_WARMELTmiHOOKS_REGISTER_PRE_GENERICIZE_FIRST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un
							  *meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un
							  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_50_WARMELTmiHOOKS_REGISTER_PRE_GENERICIZE_LAST (meltclosure_ptr_t
							 meltclosp_,
							 melt_ptr_t
							 meltfirstargp_,
							 const
							 melt_argdescr_cell_t
							 meltxargdescr_[],
							 union meltparam_un
							 *meltxargtab_,
							 const
							 melt_argdescr_cell_t
							 meltxresdescr_[],
							 union meltparam_un
							 *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_51_WARMELTmiHOOKS_ENABLE_FINISH_TYPE (meltclosure_ptr_t meltclosp_,
					       melt_ptr_t meltfirstargp_,
					       const melt_argdescr_cell_t
					       meltxargdescr_[],
					       union meltparam_un
					       *meltxargtab_,
					       const melt_argdescr_cell_t
					       meltxresdescr_[],
					       union meltparam_un
					       *meltxrestab_);

/** declaration of hook melthook_HOOK_FINISH_TYPE */
MELT_EXTERN
  void melthook_HOOK_FINISH_TYPE (melt_ptr_t melthookdata,
				  tree meltinp0_TFNDECL);


/* declare hook frame marking routine for melthook_HOOK_FINISH_TYPE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_FINISH_TYPE_rout (struct
								melt_callframe_st
								*, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_53_WARMELTmiHOOKS_REGISTER_FINISH_TYPE_FIRST (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un
						       *meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un
						       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_54_WARMELTmiHOOKS_REGISTER_FINISH_TYPE_LAST (meltclosure_ptr_t
						      meltclosp_,
						      melt_ptr_t
						      meltfirstargp_,
						      const
						      melt_argdescr_cell_t
						      meltxargdescr_[],
						      union meltparam_un
						      *meltxargtab_,
						      const
						      melt_argdescr_cell_t
						      meltxresdescr_[],
						      union meltparam_un
						      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_55_WARMELTmiHOOKS_RUN_ENDMELTPASS_FUNCTIONS (meltclosure_ptr_t
						      meltclosp_,
						      melt_ptr_t
						      meltfirstargp_,
						      const
						      melt_argdescr_cell_t
						      meltxargdescr_[],
						      union meltparam_un
						      *meltxargtab_,
						      const
						      melt_argdescr_cell_t
						      meltxresdescr_[],
						      union meltparam_un
						      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_56_WARMELTmiHOOKS_AT_END_OF_THIS_MELT_PASS_FIRST (meltclosure_ptr_t
							   meltclosp_,
							   melt_ptr_t
							   meltfirstargp_,
							   const
							   melt_argdescr_cell_t
							   meltxargdescr_[],
							   union meltparam_un
							   *meltxargtab_,
							   const
							   melt_argdescr_cell_t
							   meltxresdescr_[],
							   union meltparam_un
							   *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_57_WARMELTmiHOOKS_AT_END_OF_THIS_MELT_PASS_LAST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un
							  *meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un
							  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_58_WARMELTmiHOOKS_ENABLE_FINISH_DECL (meltclosure_ptr_t meltclosp_,
					       melt_ptr_t meltfirstargp_,
					       const melt_argdescr_cell_t
					       meltxargdescr_[],
					       union meltparam_un
					       *meltxargtab_,
					       const melt_argdescr_cell_t
					       meltxresdescr_[],
					       union meltparam_un
					       *meltxrestab_);

/** declaration of hook melthook_HOOK_FINISH_DECL */
MELT_EXTERN
  void melthook_HOOK_FINISH_DECL (melt_ptr_t melthookdata,
				  tree meltinp0_TFNDECL);


/* declare hook frame marking routine for melthook_HOOK_FINISH_DECL hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_FINISH_DECL_rout (struct
								melt_callframe_st
								*, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_60_WARMELTmiHOOKS_REGISTER_FINISH_DECL_FIRST (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un
						       *meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un
						       *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_61_WARMELTmiHOOKS_REGISTER_FINISH_DECL_LAST (meltclosure_ptr_t
						      meltclosp_,
						      melt_ptr_t
						      meltfirstargp_,
						      const
						      melt_argdescr_cell_t
						      meltxargdescr_[],
						      union meltparam_un
						      *meltxargtab_,
						      const
						      melt_argdescr_cell_t
						      meltxresdescr_[],
						      union meltparam_un
						      *meltxrestab_);

/** declaration of hook melthook_HOOK_PASS_EXECUTION */
MELT_EXTERN
  void melthook_HOOK_PASS_EXECUTION (melt_ptr_t melthookdata,
				     const char *meltinp0_PASSNAME,
				     long meltinp1_PASSNUM);


/* declare hook frame marking routine for melthook_HOOK_PASS_EXECUTION hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_PASS_EXECUTION_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_63_WARMELTmiHOOKS_REGISTER_PASS_EXECUTION_FIRST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un
							  *meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un
							  *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_64_WARMELTmiHOOKS_REGISTER_PASS_EXECUTION_LAST (meltclosure_ptr_t
							 meltclosp_,
							 melt_ptr_t
							 meltfirstargp_,
							 const
							 melt_argdescr_cell_t
							 meltxargdescr_[],
							 union meltparam_un
							 *meltxargtab_,
							 const
							 melt_argdescr_cell_t
							 meltxresdescr_[],
							 union meltparam_un
							 *meltxrestab_);

/** declaration of hook melthook_HOOK_GIMPLE_GATE */
MELT_EXTERN long melthook_HOOK_GIMPLE_GATE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_GIMPLE_GATE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_GIMPLE_GATE_rout (struct
								melt_callframe_st
								*, int);




/** declaration of hook melthook_HOOK_GIMPLE_EXECUTE */
MELT_EXTERN long melthook_HOOK_GIMPLE_EXECUTE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_GIMPLE_EXECUTE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_GIMPLE_EXECUTE_rout (struct
								   melt_callframe_st
								   *, int);




/** declaration of hook melthook_HOOK_RTL_GATE */
MELT_EXTERN long melthook_HOOK_RTL_GATE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_RTL_GATE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_RTL_GATE_rout (struct
							     melt_callframe_st
							     *, int);




/** declaration of hook melthook_HOOK_RTL_EXECUTE */
MELT_EXTERN long melthook_HOOK_RTL_EXECUTE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_RTL_EXECUTE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_RTL_EXECUTE_rout (struct
								melt_callframe_st
								*, int);




/** declaration of hook melthook_HOOK_SIMPLE_IPA_GATE */
MELT_EXTERN long melthook_HOOK_SIMPLE_IPA_GATE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_SIMPLE_IPA_GATE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_SIMPLE_IPA_GATE_rout (struct
								    melt_callframe_st
								    *, int);




/** declaration of hook melthook_HOOK_SIMPLE_IPA_EXECUTE */
MELT_EXTERN long melthook_HOOK_SIMPLE_IPA_EXECUTE (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_SIMPLE_IPA_EXECUTE hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_SIMPLE_IPA_EXECUTE_rout (struct
								       melt_callframe_st
								       *,
								       int);




/** declaration of hook melthook_HOOK_MELT_ATTRIBUTE_DEFINER */
MELT_EXTERN
  void melthook_HOOK_MELT_ATTRIBUTE_DEFINER (melt_ptr_t melthookdata,
					     tree meltinp0_DECL,
					     tree meltinp1_NAME,
					     melt_ptr_t meltinp2_ATTRSEQ,
					     const char *meltinp3_FILELOC,
					     long meltinp4_LINENO);


/* declare hook frame marking routine for melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */
void MELT_MODULE_VISIBILITY
melthookmark_HOOK_MELT_ATTRIBUTE_DEFINER_rout (struct melt_callframe_st *,
					       int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_72_WARMELTmiHOOKS_AT_MELT_ATTRIBUTE_FIRST (meltclosure_ptr_t
						    meltclosp_,
						    melt_ptr_t meltfirstargp_,
						    const melt_argdescr_cell_t
						    meltxargdescr_[],
						    union meltparam_un
						    *meltxargtab_,
						    const melt_argdescr_cell_t
						    meltxresdescr_[],
						    union meltparam_un
						    *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_73_WARMELTmiHOOKS_AT_MELT_ATTRIBUTE_LAST (meltclosure_ptr_t
						   meltclosp_,
						   melt_ptr_t meltfirstargp_,
						   const melt_argdescr_cell_t
						   meltxargdescr_[],
						   union meltparam_un
						   *meltxargtab_,
						   const melt_argdescr_cell_t
						   meltxresdescr_[],
						   union meltparam_un
						   *meltxrestab_);

/** declaration of hook melthook_HOOK_EXIT_FINALIZER */
MELT_EXTERN void melthook_HOOK_EXIT_FINALIZER (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_EXIT_FINALIZER hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_EXIT_FINALIZER_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_75_WARMELTmiHOOKS_AT_EXIT_FIRST (meltclosure_ptr_t meltclosp_,
					  melt_ptr_t meltfirstargp_,
					  const melt_argdescr_cell_t
					  meltxargdescr_[],
					  union meltparam_un *meltxargtab_,
					  const melt_argdescr_cell_t
					  meltxresdescr_[],
					  union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_76_WARMELTmiHOOKS_AT_EXIT_LAST (meltclosure_ptr_t meltclosp_,
					 melt_ptr_t meltfirstargp_,
					 const melt_argdescr_cell_t
					 meltxargdescr_[],
					 union meltparam_un *meltxargtab_,
					 const melt_argdescr_cell_t
					 meltxresdescr_[],
					 union meltparam_un *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_77_WARMELTmiHOOKS_MELT_INVOKE_INPUT_CALLBACKS (meltclosure_ptr_t
							meltclosp_,
							melt_ptr_t
							meltfirstargp_,
							const
							melt_argdescr_cell_t
							meltxargdescr_[],
							union meltparam_un
							*meltxargtab_,
							const
							melt_argdescr_cell_t
							meltxresdescr_[],
							union meltparam_un
							*meltxrestab_);

/** declaration of hook melthook_HOOK_POLL_INPUTS */
MELT_EXTERN
  void melthook_HOOK_POLL_INPUTS (melt_ptr_t melthookdata,
				  long meltinp0_DELAYMS);


/* declare hook frame marking routine for melthook_HOOK_POLL_INPUTS hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_POLL_INPUTS_rout (struct
								melt_callframe_st
								*, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_79_WARMELTmiHOOKS_IS_POLLING_INPUTS (meltclosure_ptr_t meltclosp_,
					      melt_ptr_t meltfirstargp_,
					      const melt_argdescr_cell_t
					      meltxargdescr_[],
					      union meltparam_un
					      *meltxargtab_,
					      const melt_argdescr_cell_t
					      meltxresdescr_[],
					      union meltparam_un
					      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_80_WARMELTmiHOOKS_EVERY_POLLING_INPUT (meltclosure_ptr_t meltclosp_,
						melt_ptr_t meltfirstargp_,
						const melt_argdescr_cell_t
						meltxargdescr_[],
						union meltparam_un
						*meltxargtab_,
						const melt_argdescr_cell_t
						meltxresdescr_[],
						union meltparam_un
						*meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_81_WARMELTmiHOOKS_GET_POLLING_INPUT (meltclosure_ptr_t meltclosp_,
					      melt_ptr_t meltfirstargp_,
					      const melt_argdescr_cell_t
					      meltxargdescr_[],
					      union meltparam_un
					      *meltxargtab_,
					      const melt_argdescr_cell_t
					      meltxresdescr_[],
					      union meltparam_un
					      *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_82_WARMELTmiHOOKS_REGISTER_INPUT_CHANNEL_HANDLER (meltclosure_ptr_t
							   meltclosp_,
							   melt_ptr_t
							   meltfirstargp_,
							   const
							   melt_argdescr_cell_t
							   meltxargdescr_[],
							   union meltparam_un
							   *meltxargtab_,
							   const
							   melt_argdescr_cell_t
							   meltxresdescr_[],
							   union meltparam_un
							   *meltxrestab_);

/** declaration of hook melthook_HOOK_HANDLE_SIGIO */
MELT_EXTERN void melthook_HOOK_HANDLE_SIGIO (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_HANDLE_SIGIO hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_HANDLE_SIGIO_rout (struct
								 melt_callframe_st
								 *, int);




/** declaration of hook melthook_HOOK_HANDLE_SIGALRM */
MELT_EXTERN void melthook_HOOK_HANDLE_SIGALRM (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_HANDLE_SIGALRM hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_HANDLE_SIGALRM_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_85_WARMELTmiHOOKS_REGISTER_ALARM_TIMER (meltclosure_ptr_t meltclosp_,
						 melt_ptr_t meltfirstargp_,
						 const melt_argdescr_cell_t
						 meltxargdescr_[],
						 union meltparam_un
						 *meltxargtab_,
						 const melt_argdescr_cell_t
						 meltxresdescr_[],
						 union meltparam_un
						 *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_86_WARMELTmiHOOKS_UNREGISTER_ALARM_TIMER (meltclosure_ptr_t
						   meltclosp_,
						   melt_ptr_t meltfirstargp_,
						   const melt_argdescr_cell_t
						   meltxargdescr_[],
						   union meltparam_un
						   *meltxargtab_,
						   const melt_argdescr_cell_t
						   meltxresdescr_[],
						   union meltparam_un
						   *meltxrestab_);

/** declaration of hook melthook_HOOK_HANDLE_SIGCHLD */
MELT_EXTERN void melthook_HOOK_HANDLE_SIGCHLD (melt_ptr_t melthookdata);


/* declare hook frame marking routine for melthook_HOOK_HANDLE_SIGCHLD hook */
void MELT_MODULE_VISIBILITY melthookmark_HOOK_HANDLE_SIGCHLD_rout (struct
								   melt_callframe_st
								   *, int);







melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_88_WARMELTmiHOOKS_REGISTER_CHILD_PROCESS_HANDLER (meltclosure_ptr_t
							   meltclosp_,
							   melt_ptr_t
							   meltfirstargp_,
							   const
							   melt_argdescr_cell_t
							   meltxargdescr_[],
							   union meltparam_un
							   *meltxargtab_,
							   const
							   melt_argdescr_cell_t
							   meltxresdescr_[],
							   union meltparam_un
							   *meltxrestab_);




melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_89_WARMELTmiHOOKS_UNREGISTER_CHILD_PROCESS_HANDLER (meltclosure_ptr_t
							     meltclosp_,
							     melt_ptr_t
							     meltfirstargp_,
							     const
							     melt_argdescr_cell_t
							     meltxargdescr_[],
							     union
							     meltparam_un
							     *meltxargtab_,
							     const
							     melt_argdescr_cell_t
							     meltxresdescr_[],
							     union
							     meltparam_un
							     *meltxrestab_);



MELT_EXTERN void *melt_start_this_module (void *);
struct melt_initial_frame_st;

/*declare opaque initial frame: */
typedef struct melt_initial_frame_st meltinitial_frame_t;


/* define different names when debugging or not */
#if MELT_HAVE_DEBUG
MELT_EXTERN const char meltmodule_WARMELTmiHOOKS__melt_have_debug_enabled[];
#define melt_have_debug_string meltmodule_WARMELTmiHOOKS__melt_have_debug_enabled
#else /*!MELT_HAVE_DEBUG */
MELT_EXTERN const char meltmodule_WARMELTmiHOOKS__melt_have_debug_disabled[];
#define melt_have_debug_string meltmodule_WARMELTmiHOOKS__melt_have_debug_disabled
#endif /*!MELT_HAVE_DEBUG */



void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_0 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_1 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_2 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_3 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_4 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_5 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_6 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_7 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_8 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__initialmeltchunk_9 (meltinitial_frame_t *, char *);
void MELT_MODULE_VISIBILITY
meltmod__WARMELTmiHOOKS__forward_or_mark_module_start_frame (struct
							     melt_callframe_st
							     *fp,
							     int marking);



/**** warmelt-hooks implementations ****/
/**** MELT GENERATED IMPLEMENTATIONS for warmelt-hooks ** DO NOT EDIT ; see gcc-melt.org ****/
/*** 3 MELT module variables implementations ****/
melt_ptr_t melt_WARMELTmiHOOKS_module_var_ptr_tab[16];
bool melt_WARMELTmiHOOKS_module_var_flags[1];

/**** forwarding MELT module variables ****/
void
melt_forwarding_module_data (void)
{
  int i, j;
  melt_WARMELTmiHOOKS_module_var_ptr_tab[0] = NULL;	/* unused modvar elem */
  for (i = 0; i <= 0; i++)
    {
      if (melt_WARMELTmiHOOKS_module_var_flags[i])
	{
	  melt_WARMELTmiHOOKS_module_var_flags[i] = false;
	  for (j = 0; j < 16; j++)
	    MELT_FORWARDED (melt_WARMELTmiHOOKS_module_var_ptr_tab
			    [i * 16 + j]);
	};
    }
}				/* end melt_fowarding_module_data */


/**** marking MELT module variables ****/
void
melt_marking_module_data (void)
{
  int i;
  melt_WARMELTmiHOOKS_module_var_ptr_tab[0] = NULL;	/* unused modvar elem */
  for (i = 1; i <= 3; i++)
    gt_ggc_mx_melt_un (melt_WARMELTmiHOOKS_module_var_ptr_tab[i]);
}				/* end melt_marking_module_data */

/*** 25 extra MELT implementations ***/


/** MELT extra c-implementation 1 : **/

/* flag for PLUGIN_OVERRIDE_GATE */
bool melthk_override_gate_registered_flag;



/** MELT extra c-implementation 2 : **/

/* flag for for PLUGIN_START_UNIT */
bool melthk_start_unit_registered_flag;



/** MELT extra c-implementation 3 : **/


void
melt_startunithook_callback (void *gcc_data ATTRIBUTE_UNUSED,
			     void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_START_UNIT ();
}



/** MELT extra c-implementation 4 : **/

/* flag for PLUGIN_FINISH_UNIT */
bool MELT_MODULE_VISIBILITY melthk_finish_unit_registered_flag;



/** MELT extra c-implementation 5 : **/


void
melt_finishunithook_callback (void *gcc_data ATTRIBUTE_UNUSED,
			      void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_FINISH_UNIT ();
}



/** MELT extra c-implementation 6 : **/

/* flag for PLUGIN_ALL_PASSES_START define */
bool melthk_all_passes_start_registered_flag;



/** MELT extra c-implementation 7 : **/


void
melt_all_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				     void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_ALL_PASSES_START ();
}



/** MELT extra c-implementation 8 : **/

/* flag for PLUGIN_ALL_PASSES_END define */
bool melthk_all_passes_end_registered_flag;



/** MELT extra c-implementation 9 : **/


void
melt_all_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				   void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_ALL_PASSES_END ();
}



/** MELT extra c-implementation 10 : **/

/* flag for PLUGIN_ALL_IPA_PASSES_START define */
bool melthk_all_ipa_passes_start_registered_flag;



/** MELT extra c-implementation 11 : **/


void
melt_all_ipa_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					 void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_ALL_IPA_PASSES_START ();
}



/** MELT extra c-implementation 12 : **/

/* flag for PLUGIN_ALL_IPA_PASSES_END define */
bool melthk_all_ipa_passes_end_registered_flag;



/** MELT extra c-implementation 13 : **/


void
melt_all_ipa_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				       void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_ALL_IPA_PASSES_END ();
}



/** MELT extra c-implementation 14 : **/

/* flag for PLUGIN_EARLY_GIMPLE_PASSES_START define */
bool melthk_early_gimple_passes_start_registered_flag;



/** MELT extra c-implementation 15 : **/


void
melt_early_gimple_passes_start_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					      void *user_data
					      ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_EARLY_GIMPLE_PASSES_START ();
}



/** MELT extra c-implementation 16 : **/

/* flag for PLUGIN_EARLY_GIMPLE_PASSES_END define */
bool melthk_early_gimple_passes_end_registered_flag;



/** MELT extra c-implementation 17 : **/


void
melt_early_gimple_passes_end_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
					    void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_EARLY_GIMPLE_PASSES_END ();
}



/** MELT extra c-implementation 18 : **/

/* flag for PLUGIN_PRE_GENERICIZE define */
bool melthk_pre_genericize_registered_flag;



/** MELT extra c-implementation 19 : **/


void
melt_pre_genericize_hook_callback (void *gcc_data,
				   void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_PRE_GENERICIZE ((tree) gcc_data);
}



/** MELT extra c-implementation 20 : **/

/* flag for PLUGIN_FINISH_TYPE define */
bool melthk_finish_type_registered_flag;



/** MELT extra c-implementation 21 : **/


void
melt_finish_type_hook_callback (void *gcc_data,
				void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_FINISH_TYPE ((tree) gcc_data);
}



/** MELT extra c-implementation 22 : **/

/* flag for PLUGIN_FINISH_DECL define */
bool melthk_finish_decl_registered_flag;



/** MELT extra c-implementation 23 : **/


void
melt_finish_decl_hook_callback (void *gcc_data,
				void *user_data ATTRIBUTE_UNUSED)
{
  melthookproc_HOOK_FINISH_DECL ((tree) gcc_data);
}



/** MELT extra c-implementation 24 : **/

/* flag for PLUGIN_PASS_EXECUTION define */
bool melthk_pass_execution_registered_flag;



/** MELT extra c-implementation 25 : **/


void
melt_pass_execution_hook_callback (void *gcc_data ATTRIBUTE_UNUSED,
				   void *user_data ATTRIBUTE_UNUSED)
{
  struct opt_pass *pass = (struct opt_pass *) gcc_data;
  melthookproc_HOOK_PASS_EXECUTION (pass->name,
				    (long) pass->static_pass_number);
}

/*** end of 25 extra MELT c-implementations ***/
/* frame for melthook_HOOK_LOW_DEBUG_VALUE_AT hook: */
typedef struct meltframe_melthook_HOOK_LOW_DEBUG_VALUE_AT_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 3
  melt_ptr_t mcfr_varptr[3];
#define MELTFRAM_NBVARNUM 2
  long mcfr_varnum[2];
/*others*/
  const char *loc_CSTRING__o0;
  const char *loc_CSTRING__o1;
  long _spare_;
}
melthookframe_HOOK_LOW_DEBUG_VALUE_AT_t;	/* end of hook frame melthook_HOOK_LOW_DEBUG_VALUE_AT */


/** implementation of hook melthook_HOOK_LOW_DEBUG_VALUE_AT */
void
melthook_HOOK_LOW_DEBUG_VALUE_AT (melt_ptr_t melthookdata,
				  melt_ptr_t meltinp0_VAL,
				  const char *meltinp1_FILENAME,
				  long meltinp2_LINENO,
				  const char *meltinp3_MSG,
				  long meltinp4_COUNT)
{				/* body of hook melthook_HOOK_LOW_DEBUG_VALUE_AT from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_LOW_DEBUG_VALUE_AT hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_LOW_DEBUG_VALUE_AT;
  long melt_thishookcall_counter_HOOK_LOW_DEBUG_VALUE_AT ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_LOW_DEBUG_VALUE_AT++;
#define meltcallcount melt_thishookcall_counter_HOOK_LOW_DEBUG_VALUE_AT
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_LOW_DEBUG_VALUE_AT_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_LOW_DEBUG_VALUE_AT */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -441 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_LOW_DEBUG_VALUE_AT_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_LOW_DEBUG_VALUE_AT*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_LOW_DEBUG_VALUE_AT hook */
  MELT_LOCATION ("warmelt-hooks.melt:32:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_.VAL__V2*/ meltfptr[1] = /*gethookinput */ meltinp0_VAL;;
  /*^compute */
  /*_?*/ meltfram__.loc_CSTRING__o0 = /*gethookinput */ meltinp1_FILENAME;;
  /*^compute */
  /*_#LINENO__L1*/ meltfnum[0] = /*gethookinput */ meltinp2_LINENO;;
  /*^compute */
  /*_?*/ meltfram__.loc_CSTRING__o1 = /*gethookinput */ meltinp3_MSG;;
  /*^compute */
  /*_#COUNT__L2*/ meltfnum[1] = /*gethookinput */ meltinp4_COUNT;;
  /*^block */
  /*anyblock */
  {


    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:38:/ apply");
    /*apply */
    {
      union meltparam_un argtab[5];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_long = /*_#COUNT__L2*/ meltfnum[1];
      /*^apply.arg */
      argtab[1].meltbp_cstring = /*_?*/ meltfram__.loc_CSTRING__o0;
      /*^apply.arg */
      argtab[2].meltbp_long = /*_#LINENO__L1*/ meltfnum[0];
      /*^apply.arg */
      argtab[3].meltbp_cstring = /*_?*/ meltfram__.loc_CSTRING__o1;
      /*^apply.arg */
      argtab[4].meltbp_aptr = (melt_ptr_t *) & /*_.VAL__V2*/ meltfptr[1];
      /*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
		    (melt_ptr_t) (( /*nil */ NULL)),
		    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING MELTBPARSTR_LONG
		     MELTBPARSTR_CSTRING MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:32:/ clear");
	    /*clear *//*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_LOW_DEBUG_VALUE_AT hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_LOW_DEBUG_VALUE_AT hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_LOW_DEBUG_VALUE_AT hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_LOW_DEBUG_VALUE_AThook */
void
melthookmark_HOOK_LOW_DEBUG_VALUE_AT_rout (struct melt_callframe_st
					   *meltcfram, int meltmarking)
{

  melthookframe_HOOK_LOW_DEBUG_VALUE_AT_t *meltframptr_
    = (melthookframe_HOOK_LOW_DEBUG_VALUE_AT_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_LOW_DEBUG_VALUE_AT good hash",
		  meltframptr_->mcfr_nbvar == -441);
  if (meltmarking)
    {				/* marking hook HOOK_LOW_DEBUG_VALUE_AT */
      int meltix;
      for (meltix = 0; meltix < 3; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_LOW_DEBUG_VALUE_AT */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 3; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_LOW_DEBUG_VALUE_AT */
}				/* end  melthookmark_HOOK_LOW_DEBUG_VALUE_AT_rout */

/* frame for melthook_HOOK_OVERRIDE_GATE hook: */
typedef struct meltframe_melthook_HOOK_OVERRIDE_GATE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 37
  melt_ptr_t mcfr_varptr[37];
#define MELTFRAM_NBVARNUM 24
  long mcfr_varnum[24];
/*others*/
  long _spare_;
}
melthookframe_HOOK_OVERRIDE_GATE_t;	/* end of hook frame melthook_HOOK_OVERRIDE_GATE */


/** implementation of hook melthook_HOOK_OVERRIDE_GATE */
void
melthook_HOOK_OVERRIDE_GATE (melt_ptr_t melthookdata,
			     long meltinp0_BEFOREGATE,
			     long *meltoutp0_AFTERGATE)
{				/* body of hook melthook_HOOK_OVERRIDE_GATE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_OVERRIDE_GATE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_OVERRIDE_GATE;
  long melt_thishookcall_counter_HOOK_OVERRIDE_GATE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_OVERRIDE_GATE++;
#define meltcallcount melt_thishookcall_counter_HOOK_OVERRIDE_GATE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_OVERRIDE_GATE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_OVERRIDE_GATE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2119 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_OVERRIDE_GATE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_OVERRIDE_GATE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_OVERRIDE_GATE hook */
  MELT_LOCATION ("warmelt-hooks.melt:56:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_#BEFOREGATE__L1*/ meltfnum[0] = /*gethookinput */ meltinp0_BEFOREGATE;;
  /*^block */
  /*anyblock */
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:61:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L3*/ meltfnum[2] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:61:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L3*/ meltfnum[2])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L4*/ meltfnum[3] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:61:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L4*/ meltfnum[3];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 61;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_override_gate beforegate=";
	      /*^apply.arg */
	      argtab[4].meltbp_long = /*_#BEFOREGATE__L1*/ meltfnum[0];
	      /*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V2*/ meltfptr[1] =
	      /*_.MELT_DEBUG_FUN__V3*/ meltfptr[2];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:61:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L4*/ meltfnum[3] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V2*/ meltfptr[1] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:61:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L3*/ meltfnum[2] = 0;
      /*^clear */
	      /*clear *//*_._IF___V2*/ meltfptr[1] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:62:/ quasiblock");



    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:63:/ cond");
    /*cond */ if ( /*_#BEFOREGATE__L1*/ meltfnum[0])	/*then */
      {
	/*^cond.then */
	/*_.GATEFLAG__V4*/ meltfptr[2] =
	  /*hooknth */ MELT_HOOK_NTH_SLOT (" fromhook _HOOKDATA___V1 #5",
					   ( /*_._HOOKDATA___V1*/
					    meltfptr[0]), /*rank= */ (5));;
      }
    else
      {
	MELT_LOCATION ("warmelt-hooks.melt:63:/ cond.else");

   /*_.GATEFLAG__V4*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
    /*_.PASSNAME__V5*/ meltfptr[1] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L6*/ meltfnum[2] = 0;;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:66:/ quasiblock");


    /*^rawallocobj */
    /*rawallocobj */
    {
      melt_ptr_t newobj = 0;
      melt_raw_object_create (newobj,
			      (melt_ptr_t) (( /*~CLASS_REFERENCE */
					     meltfhook->tabval[1])), (1),
			      "CLASS_REFERENCE");
   /*_.INST__V7*/ meltfptr[6] =
	newobj;
    };
    ;
    /*^putslot */
    /*putslot */
    melt_assertmsg ("checkobj putslot  _ @REFERENCED_VALUE",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.INST__V7*/ meltfptr[6])) ==
		    MELTOBMAG_OBJECT);
    melt_putfield_object (( /*_.INST__V7*/ meltfptr[6]), (0),
			  (( /*nil */ NULL)), "REFERENCED_VALUE");
    ;
    /*^touchobj */

    melt_dbgtrace_written_object ( /*_.INST__V7*/ meltfptr[6],
				  "newly made instance");
    ;
    /*_.MEMREF__V6*/ meltfptr[5] = /*_.INST__V7*/ meltfptr[6];;
    /*^compute */
  /*_.REVLASTLIST__V8*/ meltfptr[7] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    MELT_LOCATION ("warmelt-hooks.melt:68:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~OVERRIDE_GATE_DELAYED_QUEUE */
					  meltfhook->tabval[3])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[4])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~OVERRIDE_GATE_DELAYED_QUEUE */ meltfhook->
			   tabval[3])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.QUFIRST__V9*/ meltfptr[8] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.QUFIRST__V9*/ meltfptr[8] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:69:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~OVERRIDE_GATE_DELAYED_QUEUE */
					  meltfhook->tabval[3])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[4])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~OVERRIDE_GATE_DELAYED_QUEUE */ meltfhook->
			   tabval[3])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.QULAST__V10*/ meltfptr[9] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.QULAST__V10*/ meltfptr[9] = NULL;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:72:/ locexp");
      /* hook_override_gate GETPASSNAME_CHK__1 */
      gcc_assert (current_pass != NULL);
     /*_.PASSNAME__V5*/ meltfptr[1] = meltgc_new_stringdup
	((meltobject_ptr_t) MELT_PREDEF (DISCR_STRING), current_pass->name);
     /*_#PASSNUM__L6*/ meltfnum[2] = current_pass->static_pass_number;
      ;
    }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:81:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L7*/ meltfnum[6] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:81:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L7*/ meltfnum[6])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L8*/ meltfnum[7] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:81:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[13];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L8*/ meltfnum[7];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 81;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_override_gate memref=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.MEMREF__V6*/ meltfptr[5];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = "\n gateflag=";
	      /*^apply.arg */
	      argtab[6].meltbp_aptr =
		(melt_ptr_t *) & /*_.GATEFLAG__V4*/ meltfptr[2];
	      /*^apply.arg */
	      argtab[7].meltbp_cstring = "\n override_gate_delayed_queue=";
	      /*^apply.arg */
	      argtab[8].meltbp_aptr =
		(melt_ptr_t *) & ( /*~OVERRIDE_GATE_DELAYED_QUEUE */
				  meltfhook->tabval[3]);
	      /*^apply.arg */
	      argtab[9].meltbp_cstring = "\n passname=";
	      /*^apply.arg */
	      argtab[10].meltbp_aptr =
		(melt_ptr_t *) & /*_.PASSNAME__V5*/ meltfptr[1];
	      /*^apply.arg */
	      argtab[11].meltbp_cstring = " passnum=";
	      /*^apply.arg */
	      argtab[12].meltbp_long = /*_#PASSNUM__L6*/ meltfnum[2];
	      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V11*/ meltfptr[10] =
	      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:81:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L8*/ meltfnum[7] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V11*/ meltfptr[10] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:81:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L7*/ meltfnum[6] = 0;
      /*^clear */
	      /*clear *//*_._IF___V11*/ meltfptr[10] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.CURPAIR__V13*/ meltfptr[11] =
	   melt_list_first ((melt_ptr_t) /*_.QUFIRST__V9*/ meltfptr[8]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V13*/ meltfptr[11]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V13*/ meltfptr[11] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V13*/ meltfptr[11]))
	{
	  /*_.CURCLO__V14*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V13*/ meltfptr[11]);



#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:89:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L9*/ meltfnum[7] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:89:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L9*/ meltfnum[7])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L10*/ meltfnum[6] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:89:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[7];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L10*/ meltfnum[6];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 89;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "hook_override_gate first curclo=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.CURCLO__V14*/ meltfptr[10];
		    /*^apply.arg */
		    argtab[5].meltbp_cstring = " memref=";
		    /*^apply.arg */
		    argtab[6].meltbp_aptr =
		      (melt_ptr_t *) & /*_.MEMREF__V6*/ meltfptr[5];
		    /*_.MELT_DEBUG_FUN__V16*/ meltfptr[15] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V15*/ meltfptr[14] =
		    /*_.MELT_DEBUG_FUN__V16*/ meltfptr[15];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:89:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L10*/ meltfnum[6] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V16*/ meltfptr[15] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V15*/ meltfptr[14] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:89:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L9*/ meltfnum[7] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V15*/ meltfptr[14] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L11*/ meltfnum[6] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.CURCLO__V14*/ meltfptr[10]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:90:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L11*/ meltfnum[6])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

		MELT_LOCATION ("warmelt-hooks.melt:91:/ quasiblock");



		MELT_CHECK_SIGNAL ();
		;
		/*^apply */
		/*apply */
		{
		  union meltparam_un argtab[3];
		  memset (&argtab, 0, sizeof (argtab));
		  /*^apply.arg */
		  argtab[0].meltbp_aptr =
		    (melt_ptr_t *) & /*_.MEMREF__V6*/ meltfptr[5];
		  /*^apply.arg */
		  argtab[1].meltbp_aptr =
		    (melt_ptr_t *) & /*_.PASSNAME__V5*/ meltfptr[1];
		  /*^apply.arg */
		  argtab[2].meltbp_long = /*_#PASSNUM__L6*/ meltfnum[2];
		  /*_.CLORES__V19*/ meltfptr[18] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.CURCLO__V14*/ meltfptr[10]),
				(melt_ptr_t) ( /*_.GATEFLAG__V4*/
					      meltfptr[2]),
				(MELTBPARSTR_PTR MELTBPARSTR_PTR
				 MELTBPARSTR_LONG ""), argtab, "",
				(union meltparam_un *) 0);
		}
		;

#if MELT_HAVE_DEBUG
		MELT_LOCATION ("warmelt-hooks.melt:93:/ cppif.then");
		/*^block */
		/*anyblock */
		{


		  {
		    /*^locexp */
		    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		    melt_dbgcounter++;
#endif
		    ;
		  }
		  ;

		  MELT_CHECK_SIGNAL ();
		  ;
       /*_#MELT_NEED_DBG__L12*/ meltfnum[7] =
		    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		    0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		    ;;
		  MELT_LOCATION ("warmelt-hooks.melt:93:/ cond");
		  /*cond */ if ( /*_#MELT_NEED_DBG__L12*/ meltfnum[7])	/*then */
		    {
		      /*^cond.then */
		      /*^block */
		      /*anyblock */
		      {

	 /*_#MELT_CALLCOUNT__L13*/ meltfnum[12] =
			  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			  meltcallcount	/* melt_callcount debugging */
#else
			  0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			  ;;

			MELT_CHECK_SIGNAL ();
			;
			MELT_LOCATION ("warmelt-hooks.melt:93:/ apply");
			/*apply */
			{
			  union meltparam_un argtab[5];
			  memset (&argtab, 0, sizeof (argtab));
			  /*^apply.arg */
			  argtab[0].meltbp_long =
			    /*_#MELT_CALLCOUNT__L13*/ meltfnum[12];
			  /*^apply.arg */
			  argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			  /*^apply.arg */
			  argtab[2].meltbp_long = 93;
			  /*^apply.arg */
			  argtab[3].meltbp_cstring =
			    "hook_override_gate first clores=";
			  /*^apply.arg */
			  argtab[4].meltbp_aptr =
			    (melt_ptr_t *) & /*_.CLORES__V19*/ meltfptr[18];
			  /*_.MELT_DEBUG_FUN__V21*/ meltfptr[20] =
			    melt_apply ((meltclosure_ptr_t)
					(( /*~MELT_DEBUG_FUN */ meltfhook->
					  tabval[0])),
					(melt_ptr_t) (( /*nil */ NULL)),
					(MELTBPARSTR_LONG MELTBPARSTR_CSTRING
					 MELTBPARSTR_LONG MELTBPARSTR_CSTRING
					 MELTBPARSTR_PTR ""), argtab, "",
					(union meltparam_un *) 0);
			}
			;
			/*_._IF___V20*/ meltfptr[19] =
			  /*_.MELT_DEBUG_FUN__V21*/ meltfptr[20];;
			/*epilog */

			MELT_LOCATION ("warmelt-hooks.melt:93:/ clear");
		   /*clear *//*_#MELT_CALLCOUNT__L13*/ meltfnum[12] = 0;
			/*^clear */
		   /*clear *//*_.MELT_DEBUG_FUN__V21*/ meltfptr[20] = 0;
		      }
		      ;
		    }
		  else
		    {		/*^cond.else */

	/*_._IF___V20*/ meltfptr[19] = NULL;;
		    }
		  ;

		  {
		    MELT_LOCATION ("warmelt-hooks.melt:93:/ locexp");
		    /*void */ (void) 0;
		  }
		  ;
		  /*^quasiblock */


		  /*epilog */

		  /*^clear */
		 /*clear *//*_#MELT_NEED_DBG__L12*/ meltfnum[7] = 0;
		  /*^clear */
		 /*clear *//*_._IF___V20*/ meltfptr[19] = 0;
		}

#else /*MELT_HAVE_DEBUG */
		/*^cppif.else */
		/*^block */
		/*anyblock */
		{


		  {
		    /*^locexp */
		    /*void */ (void) 0;
		  }
		  ;
		  /*epilog */
		}

#endif /*MELT_HAVE_DEBUG */
		;
		MELT_LOCATION ("warmelt-hooks.melt:94:/ compute");
		/*_.GATEFLAG__V4*/ meltfptr[2] =
		  /*_.SETQ___V22*/ meltfptr[20] =
		  /*_.CLORES__V19*/ meltfptr[18];;
		/*_.LET___V18*/ meltfptr[14] = /*_.SETQ___V22*/ meltfptr[20];;

		MELT_LOCATION ("warmelt-hooks.melt:91:/ clear");
	       /*clear *//*_.CLORES__V19*/ meltfptr[18] = 0;
		/*^clear */
	       /*clear *//*_.SETQ___V22*/ meltfptr[20] = 0;
		/*_._IF___V17*/ meltfptr[15] = /*_.LET___V18*/ meltfptr[14];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:90:/ clear");
	       /*clear *//*_.LET___V18*/ meltfptr[14] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_._IF___V17*/ meltfptr[15] = NULL;;
	    }
	  ;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.CURPAIR__V13*/ meltfptr[11] = NULL;
     /*_.CURCLO__V14*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:86:/ clear");
	     /*clear *//*_.CURPAIR__V13*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_.CURCLO__V14*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L11*/ meltfnum[6] = 0;
      /*^clear */
	     /*clear *//*_._IF___V17*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.CURLPAIR__V23*/ meltfptr[19] =
	   melt_list_first ((melt_ptr_t) /*_.QULAST__V10*/ meltfptr[9]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURLPAIR__V23*/ meltfptr[19]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURLPAIR__V23*/ meltfptr[19] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURLPAIR__V23*/ meltfptr[19]))
	{
	  /*_.CURLCLO__V24*/ meltfptr[18] =
	    melt_pair_head ((melt_ptr_t) /*_.CURLPAIR__V23*/ meltfptr[19]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L14*/ meltfnum[12] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.CURLCLO__V24*/ meltfptr[18])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:100:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L14*/ meltfnum[12])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:101:/ locexp");
		  meltgc_append_list ((melt_ptr_t)
				      ( /*_.REVLASTLIST__V8*/ meltfptr[7]),
				      (melt_ptr_t) ( /*_.CURLCLO__V24*/
						    meltfptr[18]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.CURLPAIR__V23*/ meltfptr[19] = NULL;
     /*_.CURLCLO__V24*/ meltfptr[18] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:97:/ clear");
	     /*clear *//*_.CURLPAIR__V23*/ meltfptr[19] = 0;
      /*^clear */
	     /*clear *//*_.CURLCLO__V24*/ meltfptr[18] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L14*/ meltfnum[12] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.CURLPAIR__V25*/ meltfptr[20] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V8*/ meltfptr[7]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURLPAIR__V25*/ meltfptr[20]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURLPAIR__V25*/ meltfptr[20] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURLPAIR__V25*/ meltfptr[20]))
	{
	  /*_.CURLCLO__V26*/ meltfptr[14] =
	    melt_pair_head ((melt_ptr_t) /*_.CURLPAIR__V25*/ meltfptr[20]);



#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:106:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L15*/ meltfnum[7] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:106:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L15*/ meltfnum[7])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L16*/ meltfnum[15] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:106:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[7];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L16*/ meltfnum[15];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 106;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "hook_override_gate last curlclo=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.CURLCLO__V26*/ meltfptr[14];
		    /*^apply.arg */
		    argtab[5].meltbp_cstring = " memref=";
		    /*^apply.arg */
		    argtab[6].meltbp_aptr =
		      (melt_ptr_t *) & /*_.MEMREF__V6*/ meltfptr[5];
		    /*_.MELT_DEBUG_FUN__V28*/ meltfptr[27] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V27*/ meltfptr[26] =
		    /*_.MELT_DEBUG_FUN__V28*/ meltfptr[27];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:106:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L16*/ meltfnum[15] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V28*/ meltfptr[27] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V27*/ meltfptr[26] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:106:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L15*/ meltfnum[7] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V27*/ meltfptr[26] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:107:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#IS_CLOSURE__L17*/ meltfnum[15] =
	      (melt_magic_discr
	       ((melt_ptr_t) ( /*_.CURLCLO__V26*/ meltfptr[14])) ==
	       MELTOBMAG_CLOSURE);;
	    MELT_LOCATION ("warmelt-hooks.melt:107:/ cond");
	    /*cond */ if ( /*_#IS_CLOSURE__L17*/ meltfnum[15])	/*then */
	      {
		/*^cond.then */
		/*_._IFELSE___V30*/ meltfptr[26] = ( /*nil */ NULL);;
	      }
	    else
	      {
		MELT_LOCATION ("warmelt-hooks.melt:107:/ cond.else");

		/*^block */
		/*anyblock */
		{




		  {
		    /*^locexp */
		    melt_assert_failed (("check curlclo"),
					("warmelt-hooks.melt")
					? ("warmelt-hooks.melt") : __FILE__,
					(107) ? (107) : __LINE__,
					__FUNCTION__);
		    ;
		  }
		  ;
		 /*clear *//*_._IFELSE___V30*/ meltfptr[26] = 0;
		  /*epilog */
		}
		;
	      }
	    ;
	    /*^compute */
	    /*_.IFCPP___V29*/ meltfptr[27] =
	      /*_._IFELSE___V30*/ meltfptr[26];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:107:/ clear");
	       /*clear *//*_#IS_CLOSURE__L17*/ meltfnum[15] = 0;
	    /*^clear */
	       /*clear *//*_._IFELSE___V30*/ meltfptr[26] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*_.IFCPP___V29*/ meltfptr[27] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:108:/ quasiblock");



	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^apply */
	  /*apply */
	  {
	    union meltparam_un argtab[3];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.MEMREF__V6*/ meltfptr[5];
	    /*^apply.arg */
	    argtab[1].meltbp_aptr =
	      (melt_ptr_t *) & /*_.PASSNAME__V5*/ meltfptr[1];
	    /*^apply.arg */
	    argtab[2].meltbp_long = /*_#PASSNUM__L6*/ meltfnum[2];
	    /*_.CLORES__V32*/ meltfptr[31] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.CURLCLO__V26*/ meltfptr[14]),
			  (melt_ptr_t) ( /*_.GATEFLAG__V4*/ meltfptr[2]),
			  (MELTBPARSTR_PTR MELTBPARSTR_PTR MELTBPARSTR_LONG
			   ""), argtab, "", (union meltparam_un *) 0);
	  }
	  ;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:110:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L18*/ meltfnum[7] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:110:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L18*/ meltfnum[7])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L19*/ meltfnum[15] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:110:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[5];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L19*/ meltfnum[15];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 110;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "hook_override_gate last clores=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.CLORES__V32*/ meltfptr[31];
		    /*_.MELT_DEBUG_FUN__V34*/ meltfptr[33] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V33*/ meltfptr[32] =
		    /*_.MELT_DEBUG_FUN__V34*/ meltfptr[33];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:110:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L19*/ meltfnum[15] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V34*/ meltfptr[33] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V33*/ meltfptr[32] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:110:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L18*/ meltfnum[7] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V33*/ meltfptr[32] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:111:/ compute");
	  /*_.GATEFLAG__V4*/ meltfptr[2] = /*_.SETQ___V35*/ meltfptr[33] =
	    /*_.CLORES__V32*/ meltfptr[31];;
	  /*_.LET___V31*/ meltfptr[26] = /*_.SETQ___V35*/ meltfptr[33];;

	  MELT_LOCATION ("warmelt-hooks.melt:108:/ clear");
	     /*clear *//*_.CLORES__V32*/ meltfptr[31] = 0;
	  /*^clear */
	     /*clear *//*_.SETQ___V35*/ meltfptr[33] = 0;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.CURLPAIR__V25*/ meltfptr[20] = NULL;
     /*_.CURLCLO__V26*/ meltfptr[14] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:103:/ clear");
	     /*clear *//*_.CURLPAIR__V25*/ meltfptr[20] = 0;
      /*^clear */
	     /*clear *//*_.CURLCLO__V26*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.IFCPP___V29*/ meltfptr[27] = 0;
      /*^clear */
	     /*clear *//*_.LET___V31*/ meltfptr[26] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:113:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L20*/ meltfnum[15] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:113:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L20*/ meltfnum[15])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L21*/ meltfnum[7] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:113:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[9];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L21*/ meltfnum[7];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 113;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_override_gate final gateflag=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.GATEFLAG__V4*/ meltfptr[2];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = "\n passname=";
	      /*^apply.arg */
	      argtab[6].meltbp_aptr =
		(melt_ptr_t *) & /*_.PASSNAME__V5*/ meltfptr[1];
	      /*^apply.arg */
	      argtab[7].meltbp_cstring = " passnum=";
	      /*^apply.arg */
	      argtab[8].meltbp_long = /*_#PASSNUM__L6*/ meltfnum[2];
	      /*_.MELT_DEBUG_FUN__V37*/ meltfptr[31] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V36*/ meltfptr[32] =
	      /*_.MELT_DEBUG_FUN__V37*/ meltfptr[31];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:113:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L21*/ meltfnum[7] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V37*/ meltfptr[31] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V36*/ meltfptr[32] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:113:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L20*/ meltfnum[15] = 0;
      /*^clear */
	      /*clear *//*_._IF___V36*/ meltfptr[32] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:115:/ cond");
    /*cond */ if ( /*_.GATEFLAG__V4*/ meltfptr[2])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:116:/ compute");
	  /*_#AFTERGATE__L2*/ meltfnum[1] = /*_#SETQ___L23*/ meltfnum[15] =
	    1;;
	  /*_#_IFELSE___L22*/ meltfnum[7] = /*_#SETQ___L23*/ meltfnum[15];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:115:/ clear");
	      /*clear *//*_#SETQ___L23*/ meltfnum[15] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:117:/ compute");
	  /*_#AFTERGATE__L2*/ meltfnum[1] = /*_#SETQ___L24*/ meltfnum[15] =
	    0;;
	  /*_#_IFELSE___L22*/ meltfnum[7] = /*_#SETQ___L24*/ meltfnum[15];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:115:/ clear");
	      /*clear *//*_#SETQ___L24*/ meltfnum[15] = 0;
	}
	;
      }
    ;
    /*_#LET___L5*/ meltfnum[3] = /*_#_IFELSE___L22*/ meltfnum[7];;

    MELT_LOCATION ("warmelt-hooks.melt:62:/ clear");
	    /*clear *//*_.GATEFLAG__V4*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.PASSNAME__V5*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L6*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_.MEMREF__V6*/ meltfptr[5] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V8*/ meltfptr[7] = 0;
    /*^clear */
	    /*clear *//*_.QUFIRST__V9*/ meltfptr[8] = 0;
    /*^clear */
	    /*clear *//*_.QULAST__V10*/ meltfptr[9] = 0;
    /*^clear */
	    /*clear *//*_#_IFELSE___L22*/ meltfnum[7] = 0;

    MELT_CHECK_SIGNAL ();
    ;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:56:/ clear");
	    /*clear *//*_#LET___L5*/ meltfnum[3] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_OVERRIDE_GATE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /*^putoutarg */
  if ((meltoutp0_AFTERGATE) != NULL)
    *meltoutp0_AFTERGATE /*putout */  = /*_#AFTERGATE__L2*/ meltfnum[1];
  ;
  /* final of melthook_HOOK_OVERRIDE_GATE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_OVERRIDE_GATE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_OVERRIDE_GATEhook */
void
melthookmark_HOOK_OVERRIDE_GATE_rout (struct melt_callframe_st *meltcfram,
				      int meltmarking)
{

  melthookframe_HOOK_OVERRIDE_GATE_t *meltframptr_
    = (melthookframe_HOOK_OVERRIDE_GATE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_OVERRIDE_GATE good hash",
		  meltframptr_->mcfr_nbvar == -2119);
  if (meltmarking)
    {				/* marking hook HOOK_OVERRIDE_GATE */
      int meltix;
      for (meltix = 0; meltix < 37; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_OVERRIDE_GATE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 37; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_OVERRIDE_GATE */
}				/* end  melthookmark_HOOK_OVERRIDE_GATE_rout */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE (meltclosure_ptr_t meltclosp_,
						melt_ptr_t meltfirstargp_,
						const melt_argdescr_cell_t
						meltxargdescr_[],
						union meltparam_un
						*meltxargtab_,
						const melt_argdescr_cell_t
						meltxresdescr_[],
						union meltparam_un
						*meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 1
    melt_ptr_t mcfr_varptr[1];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct meltframe_meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE_st *)
	meltfirstargp_;
      /* use arguments meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 1; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE nbval 1*/
  meltfram__.mcfr_nbvar = 1 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("ENABLE_OVERRIDE_GATE", meltcallcount);
/*getargs*/
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
  MELT_LOCATION ("warmelt-hooks.melt:151:/ block");
/*anyblock*/
  {


    {
      MELT_LOCATION ("warmelt-hooks.melt:152:/ locexp");
      /* enable_override_gate REGPLUGINOVERRIDE_GATE_CHK__1 */
      if (!melthk_override_gate_registered_flag)
	{
	  melthk_override_gate_registered_flag = true;
	  register_callback (melt_plugin_name, PLUGIN_OVERRIDE_GATE,
			     melt_override_gate_callback, NULL);
	}
      ;
    }
    ;
    /*epilog */
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("ENABLE_OVERRIDE_GATE", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un *
						       meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un *
						       meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 5
    melt_ptr_t mcfr_varptr[5];
#define MELTFRAM_NBVARNUM 3
    long mcfr_varnum[3];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct
	 meltframe_meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE_st *)
	meltfirstargp_;
      /* use arguments meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 5; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE nbval 5*/
  meltfram__.mcfr_nbvar = 5 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("MAYBE_DISABLE_OVERRIDE_GATE", meltcallcount);
/*getargs*/
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
  MELT_LOCATION ("warmelt-hooks.melt:166:/ block");
/*anyblock*/
  {


    MELT_CHECK_SIGNAL ();
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:168:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*!OVERRIDE_GATE_DELAYED_QUEUE */
					  meltfrout->tabval[0])),
					(melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
   /*_.DELQU_FIRST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

  /*_.DELQU_FIRST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
 /*_.LIST_FIRST__V3*/ meltfptr[2] =
      (melt_list_first ((melt_ptr_t) ( /*_.DELQU_FIRST__V2*/ meltfptr[1])));;
    /*^compute */
 /*_#NULL__L1*/ meltfnum[0] =
      (( /*_.LIST_FIRST__V3*/ meltfptr[2]) == NULL);;
    MELT_LOCATION ("warmelt-hooks.melt:167:/ cond");
    /*cond */ if ( /*_#NULL__L1*/ meltfnum[0])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:169:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[0])),
					      (melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[1])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */
				 meltfrout->tabval[0])) /*=obj*/ ;
		melt_object_get_field (slot, obj, 3, "DELQU_LAST");
     /*_.DELQU_LAST__V4*/ meltfptr[3] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_.DELQU_LAST__V4*/ meltfptr[3] = NULL;;
	    }
	  ;
	  /*^compute */
   /*_.LIST_FIRST__V5*/ meltfptr[4] =
	    (melt_list_first
	     ((melt_ptr_t) ( /*_.DELQU_LAST__V4*/ meltfptr[3])));;
	  /*^compute */
   /*_#NULL__L3*/ meltfnum[2] =
	    (( /*_.LIST_FIRST__V5*/ meltfptr[4]) == NULL);;
	  /*^compute */
	  /*_#_IF___L2*/ meltfnum[1] = /*_#NULL__L3*/ meltfnum[2];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:167:/ clear");
	     /*clear *//*_.DELQU_LAST__V4*/ meltfptr[3] = 0;
	  /*^clear */
	     /*clear *//*_.LIST_FIRST__V5*/ meltfptr[4] = 0;
	  /*^clear */
	     /*clear *//*_#NULL__L3*/ meltfnum[2] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

  /*_#_IF___L2*/ meltfnum[1] = 0;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:167:/ cond");
    /*cond */ if ( /*_#_IF___L2*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  {
	    MELT_LOCATION ("warmelt-hooks.melt:170:/ locexp");
	    /* disable_override_gate UNREGPLUGINOVERRIDE_GATE_CHK__1 */
	    if (melthk_override_gate_registered_flag)
	      {
		melthk_override_gate_registered_flag = false;
		unregister_callback (melt_plugin_name, PLUGIN_OVERRIDE_GATE);
	      }
	    ;
	  }
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:167:/ quasiblock");


	  /*epilog */
	}
	;
      }				/*noelse */
    ;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:166:/ clear");
	   /*clear *//*_.DELQU_FIRST__V2*/ meltfptr[1] = 0;
    /*^clear */
	   /*clear *//*_.LIST_FIRST__V3*/ meltfptr[2] = 0;
    /*^clear */
	   /*clear *//*_#NULL__L1*/ meltfnum[0] = 0;
    /*^clear */
	   /*clear *//*_#_IF___L2*/ meltfnum[1] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("MAYBE_DISABLE_OVERRIDE_GATE", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST (meltclosure_ptr_t
							meltclosp_,
							melt_ptr_t
							meltfirstargp_,
							const
							melt_argdescr_cell_t
							meltxargdescr_[],
							union meltparam_un *
							meltxargtab_,
							const
							melt_argdescr_cell_t
							meltxresdescr_[],
							union meltparam_un *
							meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 8
    melt_ptr_t mcfr_varptr[8];
#define MELTFRAM_NBVARNUM 3
    long mcfr_varnum[3];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct
	 meltframe_meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST_st
	 *) meltfirstargp_;
      /* use arguments meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 8; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST nbval 8*/
  meltfram__.mcfr_nbvar = 8 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("REGISTER_OVERRIDE_GATE_FIRST", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:182:/ getarg");
 /*_.CLO__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:185:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:185:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:185:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 185;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "register_override_gate_first clo=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.CLO__V2*/ meltfptr[1];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:185:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:185:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	     /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
 /*_#IS_CLOSURE__L3*/ meltfnum[1] =
      (melt_magic_discr ((melt_ptr_t) ( /*_.CLO__V2*/ meltfptr[1])) ==
       MELTOBMAG_CLOSURE);;
    MELT_LOCATION ("warmelt-hooks.melt:186:/ cond");
    /*cond */ if ( /*_#IS_CLOSURE__L3*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:187:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1])),
					      (melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */
				 meltfrout->tabval[1])) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
     /*_.DELQU_FIRST__V6*/ meltfptr[2] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_.DELQU_FIRST__V6*/ meltfptr[2] = NULL;;
	    }
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:187:/ locexp");
	    meltgc_append_list ((melt_ptr_t)
				( /*_.DELQU_FIRST__V6*/ meltfptr[2]),
				(melt_ptr_t) ( /*_.CLO__V2*/ meltfptr[1]));
	  }
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:188:/ apply");
	  /*apply */
	  {
	    /*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6] =
	      melt_apply ((meltclosure_ptr_t)
			  (( /*!ENABLE_OVERRIDE_GATE */ meltfrout->
			    tabval[3])), (melt_ptr_t) (NULL), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:186:/ quasiblock");


	  /*_.PROGN___V8*/ meltfptr[7] =
	    /*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6];;
	  /*^compute */
	  /*_._IF___V5*/ meltfptr[3] = /*_.PROGN___V8*/ meltfptr[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:186:/ clear");
	     /*clear *//*_.DELQU_FIRST__V6*/ meltfptr[2] = 0;
	  /*^clear */
	     /*clear *//*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6] = 0;
	  /*^clear */
	     /*clear *//*_.PROGN___V8*/ meltfptr[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

  /*_._IF___V5*/ meltfptr[3] = NULL;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:182:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = /*_._IF___V5*/ meltfptr[3];;

    {
      MELT_LOCATION ("warmelt-hooks.melt:182:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*epilog */

    /*^clear */
	   /*clear *//*_#IS_CLOSURE__L3*/ meltfnum[1] = 0;
    /*^clear */
	   /*clear *//*_._IF___V5*/ meltfptr[3] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("REGISTER_OVERRIDE_GATE_FIRST", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST (meltclosure_ptr_t
						       meltclosp_,
						       melt_ptr_t
						       meltfirstargp_,
						       const
						       melt_argdescr_cell_t
						       meltxargdescr_[],
						       union meltparam_un *
						       meltxargtab_,
						       const
						       melt_argdescr_cell_t
						       meltxresdescr_[],
						       union meltparam_un *
						       meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 8
    melt_ptr_t mcfr_varptr[8];
#define MELTFRAM_NBVARNUM 3
    long mcfr_varnum[3];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct
	 meltframe_meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST_st *)
	meltfirstargp_;
      /* use arguments meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 8; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST nbval 8*/
  meltfram__.mcfr_nbvar = 8 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("REGISTER_OVERRIDE_GATE_LAST", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:190:/ getarg");
 /*_.CLO__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:193:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:193:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:193:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 193;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "register_override_gate_last clo=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.CLO__V2*/ meltfptr[1];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:193:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:193:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	     /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
 /*_#IS_CLOSURE__L3*/ meltfnum[1] =
      (melt_magic_discr ((melt_ptr_t) ( /*_.CLO__V2*/ meltfptr[1])) ==
       MELTOBMAG_CLOSURE);;
    MELT_LOCATION ("warmelt-hooks.melt:194:/ cond");
    /*cond */ if ( /*_#IS_CLOSURE__L3*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:195:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1])),
					      (melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */
				 meltfrout->tabval[1])) /*=obj*/ ;
		melt_object_get_field (slot, obj, 3, "DELQU_LAST");
     /*_.DELQU_LAST__V6*/ meltfptr[2] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_.DELQU_LAST__V6*/ meltfptr[2] = NULL;;
	    }
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:195:/ locexp");
	    meltgc_append_list ((melt_ptr_t)
				( /*_.DELQU_LAST__V6*/ meltfptr[2]),
				(melt_ptr_t) ( /*_.CLO__V2*/ meltfptr[1]));
	  }
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:196:/ apply");
	  /*apply */
	  {
	    /*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6] =
	      melt_apply ((meltclosure_ptr_t)
			  (( /*!ENABLE_OVERRIDE_GATE */ meltfrout->
			    tabval[3])), (melt_ptr_t) (NULL), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:194:/ quasiblock");


	  /*_.PROGN___V8*/ meltfptr[7] =
	    /*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6];;
	  /*^compute */
	  /*_._IF___V5*/ meltfptr[3] = /*_.PROGN___V8*/ meltfptr[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:194:/ clear");
	     /*clear *//*_.DELQU_LAST__V6*/ meltfptr[2] = 0;
	  /*^clear */
	     /*clear *//*_.ENABLE_OVERRIDE_GATE__V7*/ meltfptr[6] = 0;
	  /*^clear */
	     /*clear *//*_.PROGN___V8*/ meltfptr[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

  /*_._IF___V5*/ meltfptr[3] = NULL;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:190:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = /*_._IF___V5*/ meltfptr[3];;

    {
      MELT_LOCATION ("warmelt-hooks.melt:190:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*epilog */

    /*^clear */
	   /*clear *//*_#IS_CLOSURE__L3*/ meltfnum[1] = 0;
    /*^clear */
	   /*clear *//*_._IF___V5*/ meltfptr[3] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("REGISTER_OVERRIDE_GATE_LAST", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST (meltclosure_ptr_t
							  meltclosp_,
							  melt_ptr_t
							  meltfirstargp_,
							  const
							  melt_argdescr_cell_t
							  meltxargdescr_[],
							  union meltparam_un *
							  meltxargtab_,
							  const
							  melt_argdescr_cell_t
							  meltxresdescr_[],
							  union meltparam_un *
							  meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 19
    melt_ptr_t mcfr_varptr[19];
#define MELTFRAM_NBVARNUM 11
    long mcfr_varnum[11];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct
	 meltframe_meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST_st
	 *) meltfirstargp_;
      /* use arguments meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 19; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST nbval 19*/
  meltfram__.mcfr_nbvar = 19 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("UNREGISTER_OVERRIDE_GATE_FIRST", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:198:/ getarg");
 /*_.CLO__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:202:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:202:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:202:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 202;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"unregister_override_gate_first clo=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.CLO__V2*/ meltfptr[1];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:202:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:202:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	     /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:203:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*!OVERRIDE_GATE_DELAYED_QUEUE */
					  meltfrout->tabval[1])),
					(melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->
			   tabval[1])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
   /*_.OLDLIS__V6*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

  /*_.OLDLIS__V6*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
 /*_.NEWLIS__V7*/ meltfptr[6] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*!DISCR_LIST */ meltfrout->tabval[3]))));;
    /*^compute */
 /*_#COUNT__L3*/ meltfnum[1] = 0;;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_list_first ((melt_ptr_t) /*_.OLDLIS__V6*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]))
	{
	  /*_.CURCLO__V9*/ meltfptr[8] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]);



	  MELT_CHECK_SIGNAL ();
	  ;
  /*_#eqeq__L4*/ meltfnum[0] =
	    (( /*_.CURCLO__V9*/ meltfptr[8]) ==
	     ( /*_.CLO__V2*/ meltfptr[1]));;
	  MELT_LOCATION ("warmelt-hooks.melt:210:/ cond");
	  /*cond */ if ( /*_#eqeq__L4*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

    /*_#plI__L6*/ meltfnum[5] =
		  (( /*_#COUNT__L3*/ meltfnum[1]) + (1));;
		MELT_LOCATION ("warmelt-hooks.melt:211:/ compute");
		/*_#COUNT__L3*/ meltfnum[1] = /*_#SETQ___L7*/ meltfnum[6] =
		  /*_#plI__L6*/ meltfnum[5];;
		/*_#_IFELSE___L5*/ meltfnum[4] = /*_#SETQ___L7*/ meltfnum[6];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:210:/ clear");
	      /*clear *//*_#plI__L6*/ meltfnum[5] = 0;
		/*^clear */
	      /*clear *//*_#SETQ___L7*/ meltfnum[6] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

	      /*^block */
	      /*anyblock */
	      {




		{
		  MELT_LOCATION ("warmelt-hooks.melt:212:/ locexp");
		  meltgc_append_list ((melt_ptr_t)
				      ( /*_.NEWLIS__V7*/ meltfptr[6]),
				      (melt_ptr_t) ( /*_.CURCLO__V9*/
						    meltfptr[8]));
		}
		;
	      /*clear *//*_#_IFELSE___L5*/ meltfnum[4] = 0;
		/*epilog */
	      }
	      ;
	    }
	  ;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.CURPAIR__V8*/ meltfptr[7] = NULL;
     /*_.CURCLO__V9*/ meltfptr[8] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:207:/ clear");
	    /*clear *//*_.CURPAIR__V8*/ meltfptr[7] = 0;
      /*^clear */
	    /*clear *//*_.CURCLO__V9*/ meltfptr[8] = 0;
      /*^clear */
	    /*clear *//*_#eqeq__L4*/ meltfnum[0] = 0;
      /*^clear */
	    /*clear *//*_#_IFELSE___L5*/ meltfnum[4] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:213:/ cond");
    /*cond */ if ( /*_#COUNT__L3*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:214:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1])),
					      (melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

		/*^putslot */
		/*putslot */
		melt_assertmsg ("checkobj putslot  _ @DELQU_FIRST",
				melt_magic_discr ((melt_ptr_t)
						  (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1]))) == MELTOBMAG_OBJECT);
		melt_putfield_object ((( /*!OVERRIDE_GATE_DELAYED_QUEUE */
					meltfrout->tabval[1])), (2),
				      ( /*_.NEWLIS__V7*/ meltfptr[6]),
				      "DELQU_FIRST");
		;
		/*^touch */
		meltgc_touch (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->
			       tabval[1]));
		;
		/*^touchobj */

		melt_dbgtrace_written_object (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1]), "put-fields");
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:215:/ apply");
	  /*apply */
	  {
	    /*_.MAYBE_DISABLE_OVERRIDE_GATE__V11*/ meltfptr[10] =
	      melt_apply ((meltclosure_ptr_t)
			  (( /*!MAYBE_DISABLE_OVERRIDE_GATE */ meltfrout->
			    tabval[4])), (melt_ptr_t) (NULL), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:216:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L8*/ meltfnum[5] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:216:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L8*/ meltfnum[5])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L9*/ meltfnum[6] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:216:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[5];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L9*/ meltfnum[6];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 216;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "unregister_override_gate_first count=";
		    /*^apply.arg */
		    argtab[4].meltbp_long = /*_#COUNT__L3*/ meltfnum[1];
		    /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*!MELT_DEBUG_FUN */ meltfrout->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V12*/ meltfptr[11] =
		    /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:216:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L9*/ meltfnum[6] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V12*/ meltfptr[11] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:216:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L8*/ meltfnum[5] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V12*/ meltfptr[11] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;
   /*_.BOX__V14*/ meltfptr[12] =
	    /*full constboxing *//*boxing ctype_long */
	    meltgc_new_int ((meltobject_ptr_t)
			    (((melt_ptr_t)
			      (MELT_PREDEF (DISCR_CONSTANT_INTEGER)))),
			    ( /*_#COUNT__L3*/ meltfnum[1]));;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:217:/ quasiblock");


	  /*_._RETVAL___V1*/ meltfptr[0] = /*_.BOX__V14*/ meltfptr[12];;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:217:/ locexp");
	    /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
	    if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	      melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
	    ;
	  }
	  ;
	  /*^finalreturn */
	  ;
	  /*finalret */ goto meltlabend_rout;
	  MELT_LOCATION ("warmelt-hooks.melt:213:/ quasiblock");


	  /*_.PROGN___V16*/ meltfptr[15] = /*_.RETURN___V15*/ meltfptr[11];;
	  /*^compute */
	  /*_._IF___V10*/ meltfptr[9] = /*_.PROGN___V16*/ meltfptr[15];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:213:/ clear");
	     /*clear *//*_.MAYBE_DISABLE_OVERRIDE_GATE__V11*/ meltfptr[10] = 0;
	  /*^clear */
	     /*clear *//*_.BOX__V14*/ meltfptr[12] = 0;
	  /*^clear */
	     /*clear *//*_.RETURN___V15*/ meltfptr[11] = 0;
	  /*^clear */
	     /*clear *//*_.PROGN___V16*/ meltfptr[15] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

  /*_._IF___V10*/ meltfptr[9] = NULL;;
      }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:218:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L10*/ meltfnum[6] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:218:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L10*/ meltfnum[6])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L11*/ meltfnum[5] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:218:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[4];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L11*/ meltfnum[5];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 218;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"unregister_override_gate_first fail";
	      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[12] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab,
			    "", (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V17*/ meltfptr[10] =
	      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[12];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:218:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L11*/ meltfnum[5] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V18*/ meltfptr[12] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V17*/ meltfptr[10] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:218:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L10*/ meltfnum[6] = 0;
      /*^clear */
	     /*clear *//*_._IF___V17*/ meltfptr[10] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:219:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = ( /*nil */ NULL);;

    {
      MELT_LOCATION ("warmelt-hooks.melt:219:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*_.LET___V5*/ meltfptr[3] = /*_.RETURN___V19*/ meltfptr[11];;

    MELT_LOCATION ("warmelt-hooks.melt:203:/ clear");
	   /*clear *//*_.OLDLIS__V6*/ meltfptr[2] = 0;
    /*^clear */
	   /*clear *//*_.NEWLIS__V7*/ meltfptr[6] = 0;
    /*^clear */
	   /*clear *//*_#COUNT__L3*/ meltfnum[1] = 0;
    /*^clear */
	   /*clear *//*_._IF___V10*/ meltfptr[9] = 0;
    /*^clear */
	   /*clear *//*_.RETURN___V19*/ meltfptr[11] = 0;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:198:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = /*_.LET___V5*/ meltfptr[3];;

    {
      MELT_LOCATION ("warmelt-hooks.melt:198:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*epilog */

    /*^clear */
	   /*clear *//*_.LET___V5*/ meltfptr[3] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("UNREGISTER_OVERRIDE_GATE_FIRST", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST (meltclosure_ptr_t
							 meltclosp_,
							 melt_ptr_t
							 meltfirstargp_,
							 const
							 melt_argdescr_cell_t
							 meltxargdescr_[],
							 union meltparam_un *
							 meltxargtab_,
							 const
							 melt_argdescr_cell_t
							 meltxresdescr_[],
							 union meltparam_un *
							 meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 19
    melt_ptr_t mcfr_varptr[19];
#define MELTFRAM_NBVARNUM 11
    long mcfr_varnum[11];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct
	 meltframe_meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST_st
	 *) meltfirstargp_;
      /* use arguments meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 19; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST nbval 19*/
  meltfram__.mcfr_nbvar = 19 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("UNREGISTER_OVERRIDE_GATE_LAST", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:221:/ getarg");
 /*_.CLO__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:225:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:225:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:225:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 225;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "unregister_override_gate_last clo=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.CLO__V2*/ meltfptr[1];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:225:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:225:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	     /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:226:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*!OVERRIDE_GATE_DELAYED_QUEUE */
					  meltfrout->tabval[1])),
					(melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->
			   tabval[1])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
   /*_.OLDLIS__V6*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

  /*_.OLDLIS__V6*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
 /*_.NEWLIS__V7*/ meltfptr[6] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*!DISCR_LIST */ meltfrout->tabval[3]))));;
    /*^compute */
 /*_#COUNT__L3*/ meltfnum[1] = 0;;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_list_first ((melt_ptr_t) /*_.OLDLIS__V6*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]))
	{
	  /*_.CURCLO__V9*/ meltfptr[8] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]);



	  MELT_CHECK_SIGNAL ();
	  ;
  /*_#eqeq__L4*/ meltfnum[0] =
	    (( /*_.CURCLO__V9*/ meltfptr[8]) ==
	     ( /*_.CLO__V2*/ meltfptr[1]));;
	  MELT_LOCATION ("warmelt-hooks.melt:233:/ cond");
	  /*cond */ if ( /*_#eqeq__L4*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

    /*_#plI__L6*/ meltfnum[5] =
		  (( /*_#COUNT__L3*/ meltfnum[1]) + (1));;
		MELT_LOCATION ("warmelt-hooks.melt:234:/ compute");
		/*_#COUNT__L3*/ meltfnum[1] = /*_#SETQ___L7*/ meltfnum[6] =
		  /*_#plI__L6*/ meltfnum[5];;
		/*_#_IFELSE___L5*/ meltfnum[4] = /*_#SETQ___L7*/ meltfnum[6];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:233:/ clear");
	      /*clear *//*_#plI__L6*/ meltfnum[5] = 0;
		/*^clear */
	      /*clear *//*_#SETQ___L7*/ meltfnum[6] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

	      /*^block */
	      /*anyblock */
	      {




		{
		  MELT_LOCATION ("warmelt-hooks.melt:235:/ locexp");
		  meltgc_append_list ((melt_ptr_t)
				      ( /*_.NEWLIS__V7*/ meltfptr[6]),
				      (melt_ptr_t) ( /*_.CURCLO__V9*/
						    meltfptr[8]));
		}
		;
	      /*clear *//*_#_IFELSE___L5*/ meltfnum[4] = 0;
		/*epilog */
	      }
	      ;
	    }
	  ;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.CURPAIR__V8*/ meltfptr[7] = NULL;
     /*_.CURCLO__V9*/ meltfptr[8] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:230:/ clear");
	    /*clear *//*_.CURPAIR__V8*/ meltfptr[7] = 0;
      /*^clear */
	    /*clear *//*_.CURCLO__V9*/ meltfptr[8] = 0;
      /*^clear */
	    /*clear *//*_#eqeq__L4*/ meltfnum[0] = 0;
      /*^clear */
	    /*clear *//*_#_IFELSE___L5*/ meltfnum[4] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:236:/ cond");
    /*cond */ if ( /*_#COUNT__L3*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:237:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1])),
					      (melt_ptr_t) (( /*!CLASS_DELAYED_QUEUE */ meltfrout->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

		/*^putslot */
		/*putslot */
		melt_assertmsg ("checkobj putslot  _ @DELQU_LAST",
				melt_magic_discr ((melt_ptr_t)
						  (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1]))) == MELTOBMAG_OBJECT);
		melt_putfield_object ((( /*!OVERRIDE_GATE_DELAYED_QUEUE */
					meltfrout->tabval[1])), (3),
				      ( /*_.NEWLIS__V7*/ meltfptr[6]),
				      "DELQU_LAST");
		;
		/*^touch */
		meltgc_touch (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->
			       tabval[1]));
		;
		/*^touchobj */

		melt_dbgtrace_written_object (( /*!OVERRIDE_GATE_DELAYED_QUEUE */ meltfrout->tabval[1]), "put-fields");
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:238:/ apply");
	  /*apply */
	  {
	    /*_.MAYBE_DISABLE_OVERRIDE_GATE__V11*/ meltfptr[10] =
	      melt_apply ((meltclosure_ptr_t)
			  (( /*!MAYBE_DISABLE_OVERRIDE_GATE */ meltfrout->
			    tabval[4])), (melt_ptr_t) (NULL), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:239:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L8*/ meltfnum[5] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:239:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L8*/ meltfnum[5])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L9*/ meltfnum[6] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:239:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[5];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L9*/ meltfnum[6];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 239;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "unregister_override_gate_last count=";
		    /*^apply.arg */
		    argtab[4].meltbp_long = /*_#COUNT__L3*/ meltfnum[1];
		    /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*!MELT_DEBUG_FUN */ meltfrout->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V12*/ meltfptr[11] =
		    /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:239:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L9*/ meltfnum[6] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V12*/ meltfptr[11] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:239:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L8*/ meltfnum[5] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V12*/ meltfptr[11] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;
   /*_.BOX__V14*/ meltfptr[12] =
	    /*full constboxing *//*boxing ctype_long */
	    meltgc_new_int ((meltobject_ptr_t)
			    (((melt_ptr_t)
			      (MELT_PREDEF (DISCR_CONSTANT_INTEGER)))),
			    ( /*_#COUNT__L3*/ meltfnum[1]));;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:240:/ quasiblock");


	  /*_._RETVAL___V1*/ meltfptr[0] = /*_.BOX__V14*/ meltfptr[12];;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:240:/ locexp");
	    /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
	    if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	      melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
	    ;
	  }
	  ;
	  /*^finalreturn */
	  ;
	  /*finalret */ goto meltlabend_rout;
	  MELT_LOCATION ("warmelt-hooks.melt:236:/ quasiblock");


	  /*_.PROGN___V16*/ meltfptr[15] = /*_.RETURN___V15*/ meltfptr[11];;
	  /*^compute */
	  /*_._IF___V10*/ meltfptr[9] = /*_.PROGN___V16*/ meltfptr[15];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:236:/ clear");
	     /*clear *//*_.MAYBE_DISABLE_OVERRIDE_GATE__V11*/ meltfptr[10] = 0;
	  /*^clear */
	     /*clear *//*_.BOX__V14*/ meltfptr[12] = 0;
	  /*^clear */
	     /*clear *//*_.RETURN___V15*/ meltfptr[11] = 0;
	  /*^clear */
	     /*clear *//*_.PROGN___V16*/ meltfptr[15] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

  /*_._IF___V10*/ meltfptr[9] = NULL;;
      }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:241:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
   /*_#MELT_NEED_DBG__L10*/ meltfnum[6] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:241:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L10*/ meltfnum[6])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

     /*_#MELT_CALLCOUNT__L11*/ meltfnum[5] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:241:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[4];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L11*/ meltfnum[5];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 241;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "unregister_override_gate_last fail";
	      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[12] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*!MELT_DEBUG_FUN */ meltfrout->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab,
			    "", (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V17*/ meltfptr[10] =
	      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[12];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:241:/ clear");
	       /*clear *//*_#MELT_CALLCOUNT__L11*/ meltfnum[5] = 0;
	    /*^clear */
	       /*clear *//*_.MELT_DEBUG_FUN__V18*/ meltfptr[12] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

    /*_._IF___V17*/ meltfptr[10] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:241:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	     /*clear *//*_#MELT_NEED_DBG__L10*/ meltfnum[6] = 0;
      /*^clear */
	     /*clear *//*_._IF___V17*/ meltfptr[10] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:242:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = ( /*nil */ NULL);;

    {
      MELT_LOCATION ("warmelt-hooks.melt:242:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*_.LET___V5*/ meltfptr[3] = /*_.RETURN___V19*/ meltfptr[11];;

    MELT_LOCATION ("warmelt-hooks.melt:226:/ clear");
	   /*clear *//*_.OLDLIS__V6*/ meltfptr[2] = 0;
    /*^clear */
	   /*clear *//*_.NEWLIS__V7*/ meltfptr[6] = 0;
    /*^clear */
	   /*clear *//*_#COUNT__L3*/ meltfnum[1] = 0;
    /*^clear */
	   /*clear *//*_._IF___V10*/ meltfptr[9] = 0;
    /*^clear */
	   /*clear *//*_.RETURN___V19*/ meltfptr[11] = 0;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:221:/ quasiblock");


    /*_._RETVAL___V1*/ meltfptr[0] = /*_.LET___V5*/ meltfptr[3];;

    {
      MELT_LOCATION ("warmelt-hooks.melt:221:/ locexp");
      /*ochecknores compilobj_nrep_return */
#if MELT_HAVE_DEBUG
      if (meltxresdescr_ && meltxresdescr_[0] && meltxrestab_)
	melt_warn_for_no_expected_secondary_results ();
/* we warned when secondary results are expected but not returned. */
#endif /*MELT_HAVE_DEBUG */
      ;
    }
    ;
    /*^finalreturn */
    ;
    /*finalret */ goto meltlabend_rout;
    /*epilog */

    /*^clear */
	   /*clear *//*_.LET___V5*/ meltfptr[3] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("UNREGISTER_OVERRIDE_GATE_LAST", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*_._RETVAL___V1*/ meltfptr[0]);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 (meltclosure_ptr_t meltclosp_,
				      melt_ptr_t meltfirstargp_,
				      const melt_argdescr_cell_t
				      meltxargdescr_[],
				      union meltparam_un * meltxargtab_,
				      const melt_argdescr_cell_t
				      meltxresdescr_[],
				      union meltparam_un * meltxrestab_)
{
  long current_blocklevel_signals_meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1_melt =
    melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 4
    melt_ptr_t mcfr_varptr[4];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct meltframe_meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1_st *)
	meltfirstargp_;
      /* use arguments meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 4; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 nbval 4*/
  meltfram__.mcfr_nbvar = 4 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("LAMBDA_cl1", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:275:/ getarg");
 /*_.FIRSTPROC__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {

    MELT_LOCATION ("warmelt-hooks.melt:276:/ quasiblock");


    /*^getslot */
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj = (melt_ptr_t) (( /*~RESCONT */ meltfclos->tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 0, "REFERENCED_VALUE");
  /*_.PREVRES__V3*/ meltfptr[2] = slot;
    };
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:277:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & ( /*!START_UNIT_DELAYED_QUEUE */ meltfrout->
			  tabval[0]);
      /*_.NEXTRES__V4*/ meltfptr[3] =
	melt_apply ((meltclosure_ptr_t) ( /*_.FIRSTPROC__V2*/ meltfptr[1]),
		    (melt_ptr_t) ( /*_.PREVRES__V3*/ meltfptr[2]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:279:/ quasiblock");


    /*^putslot */
    /*putslot */
    melt_assertmsg ("checkobj putslot  _ @REFERENCED_VALUE",
		    melt_magic_discr ((melt_ptr_t)
				      (( /*~RESCONT */ meltfclos->
					tabval[0]))) == MELTOBMAG_OBJECT);
    melt_putfield_object ((( /*~RESCONT */ meltfclos->tabval[0])), (0),
			  ( /*_.NEXTRES__V4*/ meltfptr[3]),
			  "REFERENCED_VALUE");
    ;
    /*^touch */
    meltgc_touch (( /*~RESCONT */ meltfclos->tabval[0]));
    ;
    /*^touchobj */

    melt_dbgtrace_written_object (( /*~RESCONT */ meltfclos->tabval[0]),
				  "put-fields");
    ;


    MELT_LOCATION ("warmelt-hooks.melt:276:/ clear");
	   /*clear *//*_.PREVRES__V3*/ meltfptr[2] = 0;
    /*^clear */
	   /*clear *//*_.NEXTRES__V4*/ meltfptr[3] = 0;
    /*epilog */
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("LAMBDA_cl1", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1 */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un * meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un * meltxrestab_)
{
  long current_blocklevel_signals_meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2_melt =
    melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 2
    melt_ptr_t mcfr_varptr[2];
#define MELTFRAM_NBVARNUM 1
    long mcfr_varnum[1];
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct meltframe_meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2_st *)
	meltfirstargp_;
      /* use arguments meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 2; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 nbval 2*/
  meltfram__.mcfr_nbvar = 2 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("LAMBDA_cl2", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:284:/ getarg");
 /*_.LASTPROC__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {


    MELT_CHECK_SIGNAL ();
    ;
 /*_#IS_CLOSURE__L1*/ meltfnum[0] =
      (melt_magic_discr ((melt_ptr_t) ( /*_.LASTPROC__V2*/ meltfptr[1])) ==
       MELTOBMAG_CLOSURE);;
    MELT_LOCATION ("warmelt-hooks.melt:285:/ cond");
    /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  {
	    /*^locexp */
	    meltgc_prepend_list ((melt_ptr_t)
				 (( /*~REVLASTLIST */ meltfclos->tabval[0])),
				 (melt_ptr_t) ( /*_.LASTPROC__V2*/
					       meltfptr[1]));
	  }
	  ;
	  /*epilog */
	}
	;
      }				/*noelse */
    ;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:284:/ clear");
	   /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("LAMBDA_cl2", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2 */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 (meltclosure_ptr_t meltclosp_,
				       melt_ptr_t meltfirstargp_,
				       const melt_argdescr_cell_t
				       meltxargdescr_[],
				       union meltparam_un * meltxargtab_,
				       const melt_argdescr_cell_t
				       meltxresdescr_[],
				       union meltparam_un * meltxrestab_)
{
  long current_blocklevel_signals_meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3_melt =
    melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 4
    melt_ptr_t mcfr_varptr[4];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct meltframe_meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3_st *)
	meltfirstargp_;
      /* use arguments meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 4; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 nbval 4*/
  meltfram__.mcfr_nbvar = 4 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("LAMBDA_cl3", meltcallcount);
/*getargs*/

  /*getarg#0 */
  MELT_LOCATION ("warmelt-hooks.melt:289:/ getarg");
 /*_.LASTPROC__V2*/ meltfptr[1] = (melt_ptr_t) meltfirstargp_;
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
/*^block*/
/*anyblock*/
  {

    MELT_LOCATION ("warmelt-hooks.melt:290:/ quasiblock");


    /*^getslot */
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj = (melt_ptr_t) (( /*~RESCONT */ meltfclos->tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 0, "REFERENCED_VALUE");
  /*_.PREVRES__V3*/ meltfptr[2] = slot;
    };
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:291:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & ( /*!START_UNIT_DELAYED_QUEUE */ meltfrout->
			  tabval[0]);
      /*_.NEXTRES__V4*/ meltfptr[3] =
	melt_apply ((meltclosure_ptr_t) ( /*_.LASTPROC__V2*/ meltfptr[1]),
		    (melt_ptr_t) ( /*_.PREVRES__V3*/ meltfptr[2]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:293:/ quasiblock");


    /*^putslot */
    /*putslot */
    melt_assertmsg ("checkobj putslot  _ @REFERENCED_VALUE",
		    melt_magic_discr ((melt_ptr_t)
				      (( /*~RESCONT */ meltfclos->
					tabval[0]))) == MELTOBMAG_OBJECT);
    melt_putfield_object ((( /*~RESCONT */ meltfclos->tabval[0])), (0),
			  ( /*_.NEXTRES__V4*/ meltfptr[3]),
			  "REFERENCED_VALUE");
    ;
    /*^touch */
    meltgc_touch (( /*~RESCONT */ meltfclos->tabval[0]));
    ;
    /*^touchobj */

    melt_dbgtrace_written_object (( /*~RESCONT */ meltfclos->tabval[0]),
				  "put-fields");
    ;


    MELT_LOCATION ("warmelt-hooks.melt:290:/ clear");
	   /*clear *//*_.PREVRES__V3*/ meltfptr[2] = 0;
    /*^clear */
	   /*clear *//*_.NEXTRES__V4*/ meltfptr[3] = 0;
    /*epilog */
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("LAMBDA_cl3", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3 */

/* frame for melthook_HOOK_START_UNIT hook: */
typedef struct meltframe_melthook_HOOK_START_UNIT_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
  long _spare_;
}
melthookframe_HOOK_START_UNIT_t;	/* end of hook frame melthook_HOOK_START_UNIT */


/** implementation of hook melthook_HOOK_START_UNIT */
void
melthook_HOOK_START_UNIT (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_START_UNIT from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_START_UNIT hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_START_UNIT;
  long melt_thishookcall_counter_HOOK_START_UNIT ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_START_UNIT++;
#define meltcallcount melt_thishookcall_counter_HOOK_START_UNIT
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_START_UNIT_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_START_UNIT */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -131 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_START_UNIT_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_START_UNIT*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_START_UNIT hook */
  MELT_LOCATION ("warmelt-hooks.melt:265:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:267:/ quasiblock");


    /*^getslot */
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj =
	(melt_ptr_t) (( /*~START_UNIT_DELAYED_QUEUE */ meltfhook->
		       tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
   /*_.FIRSTLIST__V3*/ meltfptr[2] = slot;
    };
    ;
    MELT_LOCATION ("warmelt-hooks.melt:268:/ getslot");
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj =
	(melt_ptr_t) (( /*~START_UNIT_DELAYED_QUEUE */ meltfhook->
		       tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 3, "DELQU_LAST");
   /*_.LASTLIST__V4*/ meltfptr[3] = slot;
    };
    ;
  /*_.REVLASTLIST__V5*/ meltfptr[4] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[1]))));;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:270:/ quasiblock");


    /*^rawallocobj */
    /*rawallocobj */
    {
      melt_ptr_t newobj = 0;
      melt_raw_object_create (newobj,
			      (melt_ptr_t) (( /*~CLASS_REFERENCE */
					     meltfhook->tabval[2])), (1),
			      "CLASS_REFERENCE");
   /*_.INST__V7*/ meltfptr[6] =
	newobj;
    };
    ;
    /*^touchobj */

    melt_dbgtrace_written_object ( /*_.INST__V7*/ meltfptr[6],
				  "newly made instance");
    ;
    /*_.RESCONT__V6*/ meltfptr[5] = /*_.INST__V7*/ meltfptr[6];;
    MELT_LOCATION ("warmelt-hooks.melt:275:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V9*/ meltfptr[8] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #4",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(4))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V9*/ meltfptr[8])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V9*/ meltfptr[8])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V9*/ meltfptr[8])->tabval[0] =
      (melt_ptr_t) ( /*_.RESCONT__V6*/ meltfptr[5]);
    ;
    /*_.LAMBDA___V8*/ meltfptr[7] = /*_.LAMBDA___V9*/ meltfptr[8];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:273:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr = (melt_ptr_t *) & /*_.LAMBDA___V8*/ meltfptr[7];
      /*_.LIST_EVERY__V10*/ meltfptr[9] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.FIRSTLIST__V3*/ meltfptr[2]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:284:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V12*/ meltfptr[11] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #5",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(5))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V12*/ meltfptr[11])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V12*/ meltfptr[11])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V12*/ meltfptr[11])->tabval[0] =
      (melt_ptr_t) ( /*_.REVLASTLIST__V5*/ meltfptr[4]);
    ;
    /*_.LAMBDA___V11*/ meltfptr[10] = /*_.LAMBDA___V12*/ meltfptr[11];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:282:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & /*_.LAMBDA___V11*/ meltfptr[10];
      /*_.LIST_EVERY__V13*/ meltfptr[12] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.LASTLIST__V4*/ meltfptr[3]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:289:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V15*/ meltfptr[14] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #6",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(6))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V15*/ meltfptr[14])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V15*/ meltfptr[14])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V15*/ meltfptr[14])->tabval[0] =
      (melt_ptr_t) ( /*_.RESCONT__V6*/ meltfptr[5]);
    ;
    /*_.LAMBDA___V14*/ meltfptr[13] = /*_.LAMBDA___V15*/ meltfptr[14];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:287:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & /*_.LAMBDA___V14*/ meltfptr[13];
      /*_.LIST_EVERY__V16*/ meltfptr[15] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.REVLASTLIST__V5*/ meltfptr[4]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    /*_.LET___V2*/ meltfptr[1] = /*_.LIST_EVERY__V16*/ meltfptr[15];;

    MELT_LOCATION ("warmelt-hooks.melt:267:/ clear");
	    /*clear *//*_.FIRSTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V5*/ meltfptr[4] = 0;
    /*^clear */
	    /*clear *//*_.RESCONT__V6*/ meltfptr[5] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V8*/ meltfptr[7] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V10*/ meltfptr[9] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V11*/ meltfptr[10] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V13*/ meltfptr[12] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V14*/ meltfptr[13] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V16*/ meltfptr[15] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:265:/ clear");
	    /*clear *//*_.LET___V2*/ meltfptr[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_START_UNIT hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_START_UNIT hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_START_UNIT hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_START_UNIThook */
void
melthookmark_HOOK_START_UNIT_rout (struct melt_callframe_st *meltcfram,
				   int meltmarking)
{

  melthookframe_HOOK_START_UNIT_t *meltframptr_
    = (melthookframe_HOOK_START_UNIT_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_START_UNIT good hash",
		  meltframptr_->mcfr_nbvar == -131);
  if (meltmarking)
    {				/* marking hook HOOK_START_UNIT */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_START_UNIT */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_START_UNIT */
}				/* end  melthookmark_HOOK_START_UNIT_rout */





melt_ptr_t MELT_MODULE_VISIBILITY
meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT (meltclosure_ptr_t meltclosp_,
					      melt_ptr_t meltfirstargp_,
					      const melt_argdescr_cell_t
					      meltxargdescr_[],
					      union meltparam_un
					      *meltxargtab_,
					      const melt_argdescr_cell_t
					      meltxresdescr_[],
					      union meltparam_un
					      *meltxrestab_)
{
  long
    current_blocklevel_signals_meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT_melt
    = melt_blocklevel_signals;

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct meltframe_meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT_st
  {
    int mcfr_nbvar;
#if MELT_HAVE_DEBUG
    const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
    const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
    struct meltclosure_st *mcfr_clos;
    struct excepth_melt_st *mcfr_exh;
    struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 1
    melt_ptr_t mcfr_varptr[1];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
    long _spare_;
  }
   *meltframptr_ = 0, meltfram__;	/*declfrastruct */
#define meltframe meltfram__
  /*meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT is not initial declstructinit */
  if (MELT_UNLIKELY (meltxargdescr_ == MELTPAR_MARKGGC))
    {				/*mark for ggc */
      int meltix;
      meltframptr_ =
	(struct meltframe_meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT_st *)
	meltfirstargp_;
      /* use arguments meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT output_curframe_declstruct_init */
      (void) meltclosp_;
      (void) meltfirstargp_;
      (void) meltxargdescr_;
      (void) meltxargtab_;
      (void) meltxresdescr_;
      (void) meltxrestab_;
      /* marking closure */
      gt_ggc_mx_melt_un (meltframptr_->mcfr_clos);
      for (meltix = 0; meltix < 1; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      return NULL;
    } /*end markggc */ ;
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit plain routine meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT nbval 1*/
  meltfram__.mcfr_nbvar = 1 /*nbval */ ;
  meltfram__.mcfr_clos = meltclosp_;
  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
  melt_trace_start ("ENABLE_START_UNIT", meltcallcount);
/*getargs*/
  ;
  goto meltlab_endgetargs;
meltlab_endgetargs:;
/*body*/
  MELT_LOCATION ("warmelt-hooks.melt:313:/ block");
/*anyblock*/
  {


    {
      MELT_LOCATION ("warmelt-hooks.melt:314:/ locexp");

      if (!melthk_start_unit_registered_flag)
	{
	  melthk_start_unit_registered_flag = true;
	  register_callback (melt_plugin_name, PLUGIN_START_UNIT,
			     melt_startunithook_callback, NULL);
	}
      ;
    }
    ;
    /*epilog */
  }

  ;
  goto meltlabend_rout;
meltlabend_rout:
  melt_trace_end ("ENABLE_START_UNIT", meltcallcount);
  MELT_TRACE_EXIT_LOCATION ();
  melt_blocklevel_signals =
    current_blocklevel_signals_meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT_melt;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
  return (melt_ptr_t) ( /*noretval */ NULL);
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR
}				/*end meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT */

/* frame for melthook_HOOK_FINISH_UNIT hook: */
typedef struct meltframe_melthook_HOOK_FINISH_UNIT_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
  long _spare_;
}
melthookframe_HOOK_FINISH_UNIT_t;	/* end of hook frame melthook_HOOK_FINISH_UNIT */


/** implementation of hook melthook_HOOK_FINISH_UNIT */
void
melthook_HOOK_FINISH_UNIT (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_FINISH_UNIT from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_FINISH_UNIT hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_FINISH_UNIT;
  long melt_thishookcall_counter_HOOK_FINISH_UNIT ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_FINISH_UNIT++;
#define meltcallcount melt_thishookcall_counter_HOOK_FINISH_UNIT
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_FINISH_UNIT_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_FINISH_UNIT */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -942 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_FINISH_UNIT_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_FINISH_UNIT*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_FINISH_UNIT hook */
  MELT_LOCATION ("warmelt-hooks.melt:367:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:369:/ quasiblock");


    /*^getslot */
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj =
	(melt_ptr_t) (( /*~FINISH_UNIT_DELAYED_QUEUE */ meltfhook->
		       tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
   /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
    };
    ;
    MELT_LOCATION ("warmelt-hooks.melt:370:/ getslot");
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj =
	(melt_ptr_t) (( /*~FINISH_UNIT_DELAYED_QUEUE */ meltfhook->
		       tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 3, "DELQU_LAST");
   /*_.LASTLIST__V3*/ meltfptr[2] = slot;
    };
    ;
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[1]))));;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:372:/ quasiblock");


    /*^rawallocobj */
    /*rawallocobj */
    {
      melt_ptr_t newobj = 0;
      melt_raw_object_create (newobj,
			      (melt_ptr_t) (( /*~CLASS_REFERENCE */
					     meltfhook->tabval[2])), (1),
			      "CLASS_REFERENCE");
   /*_.INST__V6*/ meltfptr[5] =
	newobj;
    };
    ;
    /*^touchobj */

    melt_dbgtrace_written_object ( /*_.INST__V6*/ meltfptr[5],
				  "newly made instance");
    ;
    /*_.RESCONT__V5*/ meltfptr[4] = /*_.INST__V6*/ meltfptr[5];;
    MELT_LOCATION ("warmelt-hooks.melt:377:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V8*/ meltfptr[7] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #4",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(4))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V8*/ meltfptr[7])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V8*/ meltfptr[7])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V8*/ meltfptr[7])->tabval[0] =
      (melt_ptr_t) ( /*_.RESCONT__V5*/ meltfptr[4]);
    ;
    /*_.LAMBDA___V7*/ meltfptr[6] = /*_.LAMBDA___V8*/ meltfptr[7];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:375:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr = (melt_ptr_t *) & /*_.LAMBDA___V7*/ meltfptr[6];
      /*_.LIST_EVERY__V9*/ meltfptr[8] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.FIRSTLIST__V2*/ meltfptr[1]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:386:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V11*/ meltfptr[10] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #5",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(5))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V11*/ meltfptr[10])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V11*/ meltfptr[10])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V11*/ meltfptr[10])->tabval[0] =
      (melt_ptr_t) ( /*_.REVLASTLIST__V4*/ meltfptr[3]);
    ;
    /*_.LAMBDA___V10*/ meltfptr[9] = /*_.LAMBDA___V11*/ meltfptr[10];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:384:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr = (melt_ptr_t *) & /*_.LAMBDA___V10*/ meltfptr[9];
      /*_.LIST_EVERY__V12*/ meltfptr[11] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.LASTLIST__V3*/ meltfptr[2]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:391:/ quasiblock");


    /*^newclosure */
		  /*newclosure *//*_.LAMBDA___V14*/ meltfptr[13] =
      (melt_ptr_t)
      meltgc_new_closure ((meltobject_ptr_t)
			  (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE)))),
			  (meltroutine_ptr_t) ( /*hooknth */
					       MELT_HOOK_NTH_SLOT
					       (" fromhook _HOOKDATA___V1 #6",
						( /*_._HOOKDATA___V1*/
						 meltfptr[0]), /*rank= */ 
						(6))), (1));
    ;
    /*^putclosedv */
    /*putclosv */
    melt_assertmsg ("putclosv checkclo",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_.LAMBDA___V14*/ meltfptr[13])) ==
		    MELTOBMAG_CLOSURE);
    melt_assertmsg ("putclosv checkoff", 0 >= 0
		    && 0 <
		    melt_closure_size ((melt_ptr_t)
				       ( /*_.LAMBDA___V14*/ meltfptr[13])));
    ((meltclosure_ptr_t) /*_.LAMBDA___V14*/ meltfptr[13])->tabval[0] =
      (melt_ptr_t) ( /*_.RESCONT__V5*/ meltfptr[4]);
    ;
    /*_.LAMBDA___V13*/ meltfptr[12] = /*_.LAMBDA___V14*/ meltfptr[13];;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:389:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & /*_.LAMBDA___V13*/ meltfptr[12];
      /*_.LIST_EVERY__V15*/ meltfptr[14] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_EVERY */ meltfhook->tabval[3])),
		    (melt_ptr_t) ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:398:/ locexp");
      /*hook_finish_unit FINISHUNITMINORGC_CHK__1 */ melt_garbcoll (0,
								    MELT_ONLY_MINOR);
    }
    ;

    MELT_LOCATION ("warmelt-hooks.melt:369:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RESCONT__V5*/ meltfptr[4] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V7*/ meltfptr[6] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V9*/ meltfptr[8] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V10*/ meltfptr[9] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V12*/ meltfptr[11] = 0;
    /*^clear */
	    /*clear *//*_.LAMBDA___V13*/ meltfptr[12] = 0;
    /*^clear */
	    /*clear *//*_.LIST_EVERY__V15*/ meltfptr[14] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_FINISH_UNIT hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_FINISH_UNIT hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_FINISH_UNIT hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_FINISH_UNIThook */
void
melthookmark_HOOK_FINISH_UNIT_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_FINISH_UNIT_t *meltframptr_
    = (melthookframe_HOOK_FINISH_UNIT_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_FINISH_UNIT good hash",
		  meltframptr_->mcfr_nbvar == -942);
  if (meltmarking)
    {				/* marking hook HOOK_FINISH_UNIT */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_FINISH_UNIT */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_FINISH_UNIT */
}				/* end  melthookmark_HOOK_FINISH_UNIT_rout */

/* frame for melthook_HOOK_ALL_PASSES_START hook: */
typedef struct meltframe_melthook_HOOK_ALL_PASSES_START_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_ALL_PASSES_START_t;	/* end of hook frame melthook_HOOK_ALL_PASSES_START */


/** implementation of hook melthook_HOOK_ALL_PASSES_START */
void
melthook_HOOK_ALL_PASSES_START (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_ALL_PASSES_START from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_ALL_PASSES_START hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_ALL_PASSES_START;
  long melt_thishookcall_counter_HOOK_ALL_PASSES_START ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_ALL_PASSES_START++;
#define meltcallcount melt_thishookcall_counter_HOOK_ALL_PASSES_START
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_ALL_PASSES_START_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_ALL_PASSES_START */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2207 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_ALL_PASSES_START_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_ALL_PASSES_START*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_ALL_PASSES_START hook */
  MELT_LOCATION ("warmelt-hooks.melt:478:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:480:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_PASSES_START_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:481:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_PASSES_START_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:489:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:486:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:495:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:492:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:497:/ cond");
    /*cond */ if ( /*_.LASTLIST__V3*/ meltfptr[2])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  /*citerblock FOREACH_IN_LIST */
	  {
	    /* start foreach_in_list meltcit3__EACHLIST */
	    for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/
				  meltfptr[3]);
		 melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				   meltfptr[11]) == MELTOBMAG_PAIR;
		 /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				 meltfptr[11]))
	      {
		/*_.REVLASTPROC__V13*/ meltfptr[12] =
		  melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				  meltfptr[11]);



		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:501:/ apply");
		/*apply */
		{
		  /*_.REVLASTPROC__V14*/ meltfptr[13] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.REVLASTPROC__V13*/ meltfptr[12]),
				(melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]),
				(""), (union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		/*^compute */
		/*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
		  /*_.REVLASTPROC__V14*/ meltfptr[13];;
	      }			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


	    /*citerepilog */

	    MELT_LOCATION ("warmelt-hooks.melt:498:/ clear");
	       /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
	    /*^clear */
	       /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
	  }			/*endciterblock FOREACH_IN_LIST */
	  ;
	  /*epilog */
	}
	;
      }				/*noelse */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:480:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_ALL_PASSES_START hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_ALL_PASSES_START hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_ALL_PASSES_START hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_ALL_PASSES_STARThook */
void
melthookmark_HOOK_ALL_PASSES_START_rout (struct melt_callframe_st *meltcfram,
					 int meltmarking)
{

  melthookframe_HOOK_ALL_PASSES_START_t *meltframptr_
    = (melthookframe_HOOK_ALL_PASSES_START_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_ALL_PASSES_START good hash",
		  meltframptr_->mcfr_nbvar == -2207);
  if (meltmarking)
    {				/* marking hook HOOK_ALL_PASSES_START */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_ALL_PASSES_START */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_ALL_PASSES_START */
}				/* end  melthookmark_HOOK_ALL_PASSES_START_rout */

/* frame for melthook_HOOK_ALL_PASSES_END hook: */
typedef struct meltframe_melthook_HOOK_ALL_PASSES_END_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_ALL_PASSES_END_t;	/* end of hook frame melthook_HOOK_ALL_PASSES_END */


/** implementation of hook melthook_HOOK_ALL_PASSES_END */
void
melthook_HOOK_ALL_PASSES_END (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_ALL_PASSES_END from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_ALL_PASSES_END hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_ALL_PASSES_END;
  long melt_thishookcall_counter_HOOK_ALL_PASSES_END ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_ALL_PASSES_END++;
#define meltcallcount melt_thishookcall_counter_HOOK_ALL_PASSES_END
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_ALL_PASSES_END_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_ALL_PASSES_END */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -896 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_ALL_PASSES_END_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_ALL_PASSES_END*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_ALL_PASSES_END hook */
  MELT_LOCATION ("warmelt-hooks.melt:602:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:604:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_PASSES_END_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_PASSES_END_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:605:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_PASSES_END_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_PASSES_END_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:613:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:610:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:619:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:616:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]))
	{
	  /*_.REVLASTPROC__V13*/ meltfptr[12] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:624:/ apply");
	  /*apply */
	  {
	    /*_.REVLASTPROC__V14*/ meltfptr[13] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V13*/ meltfptr[12]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
	    /*_.REVLASTPROC__V14*/ meltfptr[13];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:621:/ clear");
	     /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:604:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_ALL_PASSES_END hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_ALL_PASSES_END hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_ALL_PASSES_END hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_ALL_PASSES_ENDhook */
void
melthookmark_HOOK_ALL_PASSES_END_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_ALL_PASSES_END_t *meltframptr_
    = (melthookframe_HOOK_ALL_PASSES_END_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_ALL_PASSES_END good hash",
		  meltframptr_->mcfr_nbvar == -896);
  if (meltmarking)
    {				/* marking hook HOOK_ALL_PASSES_END */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_ALL_PASSES_END */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_ALL_PASSES_END */
}				/* end  melthookmark_HOOK_ALL_PASSES_END_rout */

/* frame for melthook_HOOK_ALL_IPA_PASSES_START hook: */
typedef struct meltframe_melthook_HOOK_ALL_IPA_PASSES_START_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_ALL_IPA_PASSES_START_t;	/* end of hook frame melthook_HOOK_ALL_IPA_PASSES_START */


/** implementation of hook melthook_HOOK_ALL_IPA_PASSES_START */
void
melthook_HOOK_ALL_IPA_PASSES_START (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_ALL_IPA_PASSES_START from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_ALL_IPA_PASSES_START hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_ALL_IPA_PASSES_START;
  long melt_thishookcall_counter_HOOK_ALL_IPA_PASSES_START ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_ALL_IPA_PASSES_START++;
#define meltcallcount melt_thishookcall_counter_HOOK_ALL_IPA_PASSES_START
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_ALL_IPA_PASSES_START_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_ALL_IPA_PASSES_START */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -1836 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_ALL_IPA_PASSES_START_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_ALL_IPA_PASSES_START*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_ALL_IPA_PASSES_START hook */
  MELT_LOCATION ("warmelt-hooks.melt:723:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:725:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_IPA_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_IPA_PASSES_START_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:726:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_IPA_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_IPA_PASSES_START_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:734:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:731:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:740:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:737:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:742:/ cond");
    /*cond */ if ( /*_.LASTLIST__V3*/ meltfptr[2])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  /*citerblock FOREACH_IN_LIST */
	  {
	    /* start foreach_in_list meltcit3__EACHLIST */
	    for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/
				  meltfptr[3]);
		 melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				   meltfptr[11]) == MELTOBMAG_PAIR;
		 /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				 meltfptr[11]))
	      {
		/*_.REVLASTPROC__V13*/ meltfptr[12] =
		  melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				  meltfptr[11]);



		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:746:/ apply");
		/*apply */
		{
		  /*_.REVLASTPROC__V14*/ meltfptr[13] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.REVLASTPROC__V13*/ meltfptr[12]),
				(melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]),
				(""), (union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		/*^compute */
		/*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
		  /*_.REVLASTPROC__V14*/ meltfptr[13];;
	      }			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


	    /*citerepilog */

	    MELT_LOCATION ("warmelt-hooks.melt:743:/ clear");
	       /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
	    /*^clear */
	       /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
	  }			/*endciterblock FOREACH_IN_LIST */
	  ;
	  /*epilog */
	}
	;
      }				/*noelse */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:725:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_ALL_IPA_PASSES_START hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_ALL_IPA_PASSES_START hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_ALL_IPA_PASSES_START hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_ALL_IPA_PASSES_STARThook */
void
melthookmark_HOOK_ALL_IPA_PASSES_START_rout (struct melt_callframe_st
					     *meltcfram, int meltmarking)
{

  melthookframe_HOOK_ALL_IPA_PASSES_START_t *meltframptr_
    = (melthookframe_HOOK_ALL_IPA_PASSES_START_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_ALL_IPA_PASSES_START good hash",
		  meltframptr_->mcfr_nbvar == -1836);
  if (meltmarking)
    {				/* marking hook HOOK_ALL_IPA_PASSES_START */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_ALL_IPA_PASSES_START */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_ALL_IPA_PASSES_START */
}				/* end  melthookmark_HOOK_ALL_IPA_PASSES_START_rout */

/* frame for melthook_HOOK_ALL_IPA_PASSES_END hook: */
typedef struct meltframe_melthook_HOOK_ALL_IPA_PASSES_END_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_ALL_IPA_PASSES_END_t;	/* end of hook frame melthook_HOOK_ALL_IPA_PASSES_END */


/** implementation of hook melthook_HOOK_ALL_IPA_PASSES_END */
void
melthook_HOOK_ALL_IPA_PASSES_END (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_ALL_IPA_PASSES_END from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_ALL_IPA_PASSES_END hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_ALL_IPA_PASSES_END;
  long melt_thishookcall_counter_HOOK_ALL_IPA_PASSES_END ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_ALL_IPA_PASSES_END++;
#define meltcallcount melt_thishookcall_counter_HOOK_ALL_IPA_PASSES_END
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_ALL_IPA_PASSES_END_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_ALL_IPA_PASSES_END */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -4076 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_ALL_IPA_PASSES_END_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_ALL_IPA_PASSES_END*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_ALL_IPA_PASSES_END hook */
  MELT_LOCATION ("warmelt-hooks.melt:847:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:849:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_IPA_PASSES_END_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_IPA_PASSES_END_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:850:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ALL_IPA_PASSES_END_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ALL_IPA_PASSES_END_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:858:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:855:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:864:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:861:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]))
	{
	  /*_.REVLASTPROC__V13*/ meltfptr[12] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:869:/ apply");
	  /*apply */
	  {
	    /*_.REVLASTPROC__V14*/ meltfptr[13] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V13*/ meltfptr[12]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
	    /*_.REVLASTPROC__V14*/ meltfptr[13];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:866:/ clear");
	     /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:849:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_ALL_IPA_PASSES_END hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_ALL_IPA_PASSES_END hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_ALL_IPA_PASSES_END hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_ALL_IPA_PASSES_ENDhook */
void
melthookmark_HOOK_ALL_IPA_PASSES_END_rout (struct melt_callframe_st
					   *meltcfram, int meltmarking)
{

  melthookframe_HOOK_ALL_IPA_PASSES_END_t *meltframptr_
    = (melthookframe_HOOK_ALL_IPA_PASSES_END_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_ALL_IPA_PASSES_END good hash",
		  meltframptr_->mcfr_nbvar == -4076);
  if (meltmarking)
    {				/* marking hook HOOK_ALL_IPA_PASSES_END */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_ALL_IPA_PASSES_END */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_ALL_IPA_PASSES_END */
}				/* end  melthookmark_HOOK_ALL_IPA_PASSES_END_rout */

/* frame for melthook_HOOK_EARLY_GIMPLE_PASSES_START hook: */
typedef struct meltframe_melthook_HOOK_EARLY_GIMPLE_PASSES_START_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_EARLY_GIMPLE_PASSES_START_t;	/* end of hook frame melthook_HOOK_EARLY_GIMPLE_PASSES_START */


/** implementation of hook melthook_HOOK_EARLY_GIMPLE_PASSES_START */
void
melthook_HOOK_EARLY_GIMPLE_PASSES_START (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_EARLY_GIMPLE_PASSES_START from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_EARLY_GIMPLE_PASSES_START;
  long melt_thishookcall_counter_HOOK_EARLY_GIMPLE_PASSES_START
    ATTRIBUTE_UNUSED = melthook_call_counter_HOOK_EARLY_GIMPLE_PASSES_START++;
#define meltcallcount melt_thishookcall_counter_HOOK_EARLY_GIMPLE_PASSES_START
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_EARLY_GIMPLE_PASSES_START_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_EARLY_GIMPLE_PASSES_START */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2967 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_EARLY_GIMPLE_PASSES_START_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_EARLY_GIMPLE_PASSES_START*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */
  MELT_LOCATION ("warmelt-hooks.melt:969:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:971:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:972:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:980:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:977:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:986:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:983:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:988:/ cond");
    /*cond */ if ( /*_.LASTLIST__V3*/ meltfptr[2])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  /*citerblock FOREACH_IN_LIST */
	  {
	    /* start foreach_in_list meltcit3__EACHLIST */
	    for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/
				  meltfptr[3]);
		 melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				   meltfptr[11]) == MELTOBMAG_PAIR;
		 /*_.REVLASTPAIR__V12*/ meltfptr[11] =
		 melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				 meltfptr[11]))
	      {
		/*_.REVLASTPROC__V13*/ meltfptr[12] =
		  melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/
				  meltfptr[11]);



		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:992:/ apply");
		/*apply */
		{
		  /*_.REVLASTPROC__V14*/ meltfptr[13] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.REVLASTPROC__V13*/ meltfptr[12]),
				(melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]),
				(""), (union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		/*^compute */
		/*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
		  /*_.REVLASTPROC__V14*/ meltfptr[13];;
	      }			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


	    /*citerepilog */

	    MELT_LOCATION ("warmelt-hooks.melt:989:/ clear");
	       /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
	    /*^clear */
	       /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
	    /*^clear */
	       /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
	  }			/*endciterblock FOREACH_IN_LIST */
	  ;
	  /*epilog */
	}
	;
      }				/*noelse */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:971:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_EARLY_GIMPLE_PASSES_START hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_EARLY_GIMPLE_PASSES_STARThook */
void
melthookmark_HOOK_EARLY_GIMPLE_PASSES_START_rout (struct melt_callframe_st
						  *meltcfram, int meltmarking)
{

  melthookframe_HOOK_EARLY_GIMPLE_PASSES_START_t *meltframptr_
    = (melthookframe_HOOK_EARLY_GIMPLE_PASSES_START_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_EARLY_GIMPLE_PASSES_START good hash",
		  meltframptr_->mcfr_nbvar == -2967);
  if (meltmarking)
    {				/* marking hook HOOK_EARLY_GIMPLE_PASSES_START */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_EARLY_GIMPLE_PASSES_START */
  if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_EARLY_GIMPLE_PASSES_START */
}				/* end  melthookmark_HOOK_EARLY_GIMPLE_PASSES_START_rout */

/* frame for melthook_HOOK_EARLY_GIMPLE_PASSES_END hook: */
typedef struct meltframe_melthook_HOOK_EARLY_GIMPLE_PASSES_END_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 15
  melt_ptr_t mcfr_varptr[15];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  long _spare_;
}
melthookframe_HOOK_EARLY_GIMPLE_PASSES_END_t;	/* end of hook frame melthook_HOOK_EARLY_GIMPLE_PASSES_END */


/** implementation of hook melthook_HOOK_EARLY_GIMPLE_PASSES_END */
void
melthook_HOOK_EARLY_GIMPLE_PASSES_END (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_EARLY_GIMPLE_PASSES_END from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_EARLY_GIMPLE_PASSES_END;
  long melt_thishookcall_counter_HOOK_EARLY_GIMPLE_PASSES_END ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_EARLY_GIMPLE_PASSES_END++;
#define meltcallcount melt_thishookcall_counter_HOOK_EARLY_GIMPLE_PASSES_END
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_EARLY_GIMPLE_PASSES_END_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_EARLY_GIMPLE_PASSES_END */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -500 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_EARLY_GIMPLE_PASSES_END_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_EARLY_GIMPLE_PASSES_END*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */
  MELT_LOCATION ("warmelt-hooks.melt:1093:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1095:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1096:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */
			   meltfhook->tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V6*/ meltfptr[5] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]))
	{
	  /*_.FIRSTPROC__V7*/ meltfptr[6] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V6*/ meltfptr[5]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1104:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V8*/ meltfptr[7] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V7*/ meltfptr[6]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V9*/ meltfptr[8] =
	    /*_.FIRSTPROC__V8*/ meltfptr[7];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V6*/ meltfptr[5] = NULL;
     /*_.FIRSTPROC__V7*/ meltfptr[6] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1101:/ clear");
	     /*clear *//*_.FIRSTPAIR__V6*/ meltfptr[5] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1110:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1107:/ clear");
	     /*clear *//*_.LASTPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V12*/ meltfptr[11] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]))
	{
	  /*_.REVLASTPROC__V13*/ meltfptr[12] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V12*/ meltfptr[11]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1115:/ apply");
	  /*apply */
	  {
	    /*_.REVLASTPROC__V14*/ meltfptr[13] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V13*/ meltfptr[12]),
			  (melt_ptr_t) ( /*_.RES__V5*/ meltfptr[4]), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V15*/ meltfptr[14] =
	    /*_.REVLASTPROC__V14*/ meltfptr[13];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V12*/ meltfptr[11] = NULL;
     /*_.REVLASTPROC__V13*/ meltfptr[12] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1112:/ clear");
	     /*clear *//*_.REVLASTPAIR__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V15*/ meltfptr[14] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:1095:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_EARLY_GIMPLE_PASSES_END hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_EARLY_GIMPLE_PASSES_ENDhook */
void
melthookmark_HOOK_EARLY_GIMPLE_PASSES_END_rout (struct melt_callframe_st
						*meltcfram, int meltmarking)
{

  melthookframe_HOOK_EARLY_GIMPLE_PASSES_END_t *meltframptr_
    = (melthookframe_HOOK_EARLY_GIMPLE_PASSES_END_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_EARLY_GIMPLE_PASSES_END good hash",
		  meltframptr_->mcfr_nbvar == -500);
  if (meltmarking)
    {				/* marking hook HOOK_EARLY_GIMPLE_PASSES_END */
      int meltix;
      for (meltix = 0; meltix < 15; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_EARLY_GIMPLE_PASSES_END */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 15; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_EARLY_GIMPLE_PASSES_END */
}				/* end  melthookmark_HOOK_EARLY_GIMPLE_PASSES_END_rout */

/* frame for melthook_HOOK_PRE_GENERICIZE hook: */
typedef struct meltframe_melthook_HOOK_PRE_GENERICIZE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  tree loc_TREE__o0;
  long _spare_;
}
melthookframe_HOOK_PRE_GENERICIZE_t;	/* end of hook frame melthook_HOOK_PRE_GENERICIZE */


/** implementation of hook melthook_HOOK_PRE_GENERICIZE */
void
melthook_HOOK_PRE_GENERICIZE (melt_ptr_t melthookdata, tree meltinp0_TFNDECL)
{				/* body of hook melthook_HOOK_PRE_GENERICIZE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_PRE_GENERICIZE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_PRE_GENERICIZE;
  long melt_thishookcall_counter_HOOK_PRE_GENERICIZE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_PRE_GENERICIZE++;
#define meltcallcount melt_thishookcall_counter_HOOK_PRE_GENERICIZE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_PRE_GENERICIZE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_PRE_GENERICIZE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -3107 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_PRE_GENERICIZE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_PRE_GENERICIZE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_PRE_GENERICIZE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1243:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_?*/ meltfram__.loc_TREE__o0 = /*gethookinput */ meltinp0_TFNDECL;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1245:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~PREGENERICIZE_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~PREGENERICIZE_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1246:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~PREGENERICIZE_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~PREGENERICIZE_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    MELT_LOCATION ("warmelt-hooks.melt:1250:/ quasiblock");


  /*_.CFNDECLV__V6*/ meltfptr[5] =
      /*full constboxing */
      meltgc_new_tree ((meltobject_ptr_t)
		       (((melt_ptr_t) (MELT_PREDEF (DISCR_CONSTANT_TREE)))),
		       ( /*_?*/ meltfram__.loc_TREE__o0));;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]))
	{
	  /*_.FIRSTPROC__V8*/ meltfptr[7] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1256:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.FIRSTPROC__V9*/ meltfptr[8] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V8*/ meltfptr[7]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V10*/ meltfptr[9] =
	    /*_.FIRSTPROC__V9*/ meltfptr[8];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V7*/ meltfptr[6] = NULL;
     /*_.FIRSTPROC__V8*/ meltfptr[7] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1253:/ clear");
	     /*clear *//*_.FIRSTPAIR__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V10*/ meltfptr[9] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]))
	{
	  /*_.LASTPROC__V12*/ meltfptr[11] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V12*/ meltfptr[11])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1262:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V12*/
						     meltfptr[11]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V11*/ meltfptr[10] = NULL;
     /*_.LASTPROC__V12*/ meltfptr[11] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1259:/ clear");
	     /*clear *//*_.LASTPAIR__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]))
	{
	  /*_.REVLASTPROC__V14*/ meltfptr[13] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1267:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.REVLASTPROC__V15*/ meltfptr[14] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V14*/ meltfptr[13]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V16*/ meltfptr[15] =
	    /*_.REVLASTPROC__V15*/ meltfptr[14];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V13*/ meltfptr[12] = NULL;
     /*_.REVLASTPROC__V14*/ meltfptr[13] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1264:/ clear");
	     /*clear *//*_.REVLASTPAIR__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V15*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V16*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:1250:/ clear");
	    /*clear *//*_.CFNDECLV__V6*/ meltfptr[5] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:1245:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_PRE_GENERICIZE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_PRE_GENERICIZE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_PRE_GENERICIZE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_PRE_GENERICIZEhook */
void
melthookmark_HOOK_PRE_GENERICIZE_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_PRE_GENERICIZE_t *meltframptr_
    = (melthookframe_HOOK_PRE_GENERICIZE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_PRE_GENERICIZE good hash",
		  meltframptr_->mcfr_nbvar == -3107);
  if (meltmarking)
    {				/* marking hook HOOK_PRE_GENERICIZE */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      if (meltframptr_->loc_TREE__o0)
	gt_ggc_mx_tree_node (meltframptr_->loc_TREE__o0);
    }
  else /* copying hook HOOK_PRE_GENERICIZE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_PRE_GENERICIZE */
}				/* end  melthookmark_HOOK_PRE_GENERICIZE_rout */

/* frame for melthook_HOOK_FINISH_TYPE hook: */
typedef struct meltframe_melthook_HOOK_FINISH_TYPE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  tree loc_TREE__o0;
  long _spare_;
}
melthookframe_HOOK_FINISH_TYPE_t;	/* end of hook frame melthook_HOOK_FINISH_TYPE */


/** implementation of hook melthook_HOOK_FINISH_TYPE */
void
melthook_HOOK_FINISH_TYPE (melt_ptr_t melthookdata, tree meltinp0_TFNDECL)
{				/* body of hook melthook_HOOK_FINISH_TYPE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_FINISH_TYPE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_FINISH_TYPE;
  long melt_thishookcall_counter_HOOK_FINISH_TYPE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_FINISH_TYPE++;
#define meltcallcount melt_thishookcall_counter_HOOK_FINISH_TYPE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_FINISH_TYPE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_FINISH_TYPE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -4083 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_FINISH_TYPE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_FINISH_TYPE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_FINISH_TYPE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1372:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_?*/ meltfram__.loc_TREE__o0 = /*gethookinput */ meltinp0_TFNDECL;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1374:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINISHTYPE_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINISHTYPE_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1375:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINISHTYPE_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINISHTYPE_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    MELT_LOCATION ("warmelt-hooks.melt:1379:/ quasiblock");


  /*_.CFNDECLV__V6*/ meltfptr[5] =
      /*full constboxing */
      meltgc_new_tree ((meltobject_ptr_t)
		       (((melt_ptr_t) (MELT_PREDEF (DISCR_CONSTANT_TREE)))),
		       ( /*_?*/ meltfram__.loc_TREE__o0));;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]))
	{
	  /*_.FIRSTPROC__V8*/ meltfptr[7] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1385:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.FIRSTPROC__V9*/ meltfptr[8] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V8*/ meltfptr[7]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V10*/ meltfptr[9] =
	    /*_.FIRSTPROC__V9*/ meltfptr[8];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V7*/ meltfptr[6] = NULL;
     /*_.FIRSTPROC__V8*/ meltfptr[7] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1382:/ clear");
	     /*clear *//*_.FIRSTPAIR__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V10*/ meltfptr[9] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]))
	{
	  /*_.LASTPROC__V12*/ meltfptr[11] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V12*/ meltfptr[11])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1391:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V12*/
						     meltfptr[11]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V11*/ meltfptr[10] = NULL;
     /*_.LASTPROC__V12*/ meltfptr[11] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1388:/ clear");
	     /*clear *//*_.LASTPAIR__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]))
	{
	  /*_.REVLASTPROC__V14*/ meltfptr[13] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1396:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.REVLASTPROC__V15*/ meltfptr[14] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V14*/ meltfptr[13]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V16*/ meltfptr[15] =
	    /*_.REVLASTPROC__V15*/ meltfptr[14];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V13*/ meltfptr[12] = NULL;
     /*_.REVLASTPROC__V14*/ meltfptr[13] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1393:/ clear");
	     /*clear *//*_.REVLASTPAIR__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V15*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V16*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:1379:/ clear");
	    /*clear *//*_.CFNDECLV__V6*/ meltfptr[5] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:1374:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_FINISH_TYPE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_FINISH_TYPE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_FINISH_TYPE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_FINISH_TYPEhook */
void
melthookmark_HOOK_FINISH_TYPE_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_FINISH_TYPE_t *meltframptr_
    = (melthookframe_HOOK_FINISH_TYPE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_FINISH_TYPE good hash",
		  meltframptr_->mcfr_nbvar == -4083);
  if (meltmarking)
    {				/* marking hook HOOK_FINISH_TYPE */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      if (meltframptr_->loc_TREE__o0)
	gt_ggc_mx_tree_node (meltframptr_->loc_TREE__o0);
    }
  else /* copying hook HOOK_FINISH_TYPE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_FINISH_TYPE */
}				/* end  melthookmark_HOOK_FINISH_TYPE_rout */

/* frame for melthook_HOOK_FINISH_DECL hook: */
typedef struct meltframe_melthook_HOOK_FINISH_DECL_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
#define MELTFRAM_NBVARNUM 1
  long mcfr_varnum[1];
/*others*/
  tree loc_TREE__o0;
  long _spare_;
}
melthookframe_HOOK_FINISH_DECL_t;	/* end of hook frame melthook_HOOK_FINISH_DECL */


/** implementation of hook melthook_HOOK_FINISH_DECL */
void
melthook_HOOK_FINISH_DECL (melt_ptr_t melthookdata, tree meltinp0_TFNDECL)
{				/* body of hook melthook_HOOK_FINISH_DECL from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_FINISH_DECL hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_FINISH_DECL;
  long melt_thishookcall_counter_HOOK_FINISH_DECL ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_FINISH_DECL++;
#define meltcallcount melt_thishookcall_counter_HOOK_FINISH_DECL
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_FINISH_DECL_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_FINISH_DECL */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -1491 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_FINISH_DECL_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_FINISH_DECL*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_FINISH_DECL hook */
  MELT_LOCATION ("warmelt-hooks.melt:1568:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_?*/ meltfram__.loc_TREE__o0 = /*gethookinput */ meltinp0_TFNDECL;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1570:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINISHDECL_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINISHDECL_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V2*/ meltfptr[1] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1571:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINISHDECL_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINISHDECL_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V4*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V5*/ meltfptr[4] = ( /*nil */ NULL);;
    MELT_LOCATION ("warmelt-hooks.melt:1575:/ quasiblock");


  /*_.CFNDECLV__V6*/ meltfptr[5] =
      /*full constboxing */
      meltgc_new_tree ((meltobject_ptr_t)
		       (((melt_ptr_t) (MELT_PREDEF (DISCR_CONSTANT_TREE)))),
		       ( /*_?*/ meltfram__.loc_TREE__o0));;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V2*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]))
	{
	  /*_.FIRSTPROC__V8*/ meltfptr[7] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1581:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.FIRSTPROC__V9*/ meltfptr[8] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V8*/ meltfptr[7]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V10*/ meltfptr[9] =
	    /*_.FIRSTPROC__V9*/ meltfptr[8];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V7*/ meltfptr[6] = NULL;
     /*_.FIRSTPROC__V8*/ meltfptr[7] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1578:/ clear");
	     /*clear *//*_.FIRSTPAIR__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V10*/ meltfptr[9] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]))
	{
	  /*_.LASTPROC__V12*/ meltfptr[11] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L1*/ meltfnum[0] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V12*/ meltfptr[11])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1587:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L1*/ meltfnum[0])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V4*/ meltfptr[3]),
				       (melt_ptr_t) ( /*_.LASTPROC__V12*/
						     meltfptr[11]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V11*/ meltfptr[10] = NULL;
     /*_.LASTPROC__V12*/ meltfptr[11] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1584:/ clear");
	     /*clear *//*_.LASTPAIR__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L1*/ meltfnum[0] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]))
	{
	  /*_.REVLASTPROC__V14*/ meltfptr[13] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1592:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[1];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V5*/ meltfptr[4];
	    /*_.REVLASTPROC__V15*/ meltfptr[14] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V14*/ meltfptr[13]),
			  (melt_ptr_t) ( /*_.CFNDECLV__V6*/ meltfptr[5]),
			  (MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V5*/ meltfptr[4] = /*_.SETQ___V16*/ meltfptr[15] =
	    /*_.REVLASTPROC__V15*/ meltfptr[14];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V13*/ meltfptr[12] = NULL;
     /*_.REVLASTPROC__V14*/ meltfptr[13] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1589:/ clear");
	     /*clear *//*_.REVLASTPAIR__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V15*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V16*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:1575:/ clear");
	    /*clear *//*_.CFNDECLV__V6*/ meltfptr[5] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:1570:/ clear");
	    /*clear *//*_.FIRSTLIST__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.RES__V5*/ meltfptr[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_FINISH_DECL hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_FINISH_DECL hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_FINISH_DECL hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_FINISH_DECLhook */
void
melthookmark_HOOK_FINISH_DECL_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_FINISH_DECL_t *meltframptr_
    = (melthookframe_HOOK_FINISH_DECL_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_FINISH_DECL good hash",
		  meltframptr_->mcfr_nbvar == -1491);
  if (meltmarking)
    {				/* marking hook HOOK_FINISH_DECL */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      if (meltframptr_->loc_TREE__o0)
	gt_ggc_mx_tree_node (meltframptr_->loc_TREE__o0);
    }
  else /* copying hook HOOK_FINISH_DECL */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_FINISH_DECL */
}				/* end  melthookmark_HOOK_FINISH_DECL_rout */

/* frame for melthook_HOOK_PASS_EXECUTION hook: */
typedef struct meltframe_melthook_HOOK_PASS_EXECUTION_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
#define MELTFRAM_NBVARNUM 2
  long mcfr_varnum[2];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_PASS_EXECUTION_t;	/* end of hook frame melthook_HOOK_PASS_EXECUTION */


/** implementation of hook melthook_HOOK_PASS_EXECUTION */
void
melthook_HOOK_PASS_EXECUTION (melt_ptr_t melthookdata,
			      const char *meltinp0_PASSNAME,
			      long meltinp1_PASSNUM)
{				/* body of hook melthook_HOOK_PASS_EXECUTION from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_PASS_EXECUTION hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_PASS_EXECUTION;
  long melt_thishookcall_counter_HOOK_PASS_EXECUTION ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_PASS_EXECUTION++;
#define meltcallcount melt_thishookcall_counter_HOOK_PASS_EXECUTION
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_PASS_EXECUTION_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_PASS_EXECUTION */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -3680 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_PASS_EXECUTION_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_PASS_EXECUTION*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_PASS_EXECUTION hook */
  MELT_LOCATION ("warmelt-hooks.melt:1694:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_?*/ meltfram__.loc_CSTRING__o0 = /*gethookinput */ meltinp0_PASSNAME;;
  /*^compute */
  /*_#PASSNUM__L1*/ meltfnum[0] = /*gethookinput */ meltinp1_PASSNUM;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1696:/ quasiblock");


  /*_.PASSNAMEVAL__V2*/ meltfptr[1] =
      /*hook_pass_execution MAKEPASSNAME_CHK__1 */
      meltgc_new_stringdup ((meltobject_ptr_t) MELT_PREDEF (DISCR_STRING),
		       /*_?*/ meltfram__.loc_CSTRING__o0)
      ;;
    MELT_LOCATION ("warmelt-hooks.melt:1705:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~PASS_EXECUTION_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~PASS_EXECUTION_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1706:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~PASS_EXECUTION_DELAYED_QUEUE */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~PASS_EXECUTION_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V4*/ meltfptr[3] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V4*/ meltfptr[3] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V5*/ meltfptr[4] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;
    /*^compute */
    /*_.RES__V6*/ meltfptr[5] = ( /*nil */ NULL);;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]) ==
	   MELTOBMAG_PAIR;
	   /*_.FIRSTPAIR__V7*/ meltfptr[6] =
	   melt_pair_tail ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]))
	{
	  /*_.FIRSTPROC__V8*/ meltfptr[7] =
	    melt_pair_head ((melt_ptr_t) /*_.FIRSTPAIR__V7*/ meltfptr[6]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1714:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[2];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_long = /*_#PASSNUM__L1*/ meltfnum[0];
	    /*^apply.arg */
	    argtab[1].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V6*/ meltfptr[5];
	    /*_.FIRSTPROC__V9*/ meltfptr[8] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V8*/ meltfptr[7]),
			  (melt_ptr_t) ( /*_.PASSNAMEVAL__V2*/ meltfptr[1]),
			  (MELTBPARSTR_LONG MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V6*/ meltfptr[5] = /*_.SETQ___V10*/ meltfptr[9] =
	    /*_.FIRSTPROC__V9*/ meltfptr[8];;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.FIRSTPAIR__V7*/ meltfptr[6] = NULL;
     /*_.FIRSTPROC__V8*/ meltfptr[7] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1711:/ clear");
	     /*clear *//*_.FIRSTPAIR__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V10*/ meltfptr[9] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]) ==
	   MELTOBMAG_PAIR;
	   /*_.LASTPAIR__V11*/ meltfptr[10] =
	   melt_pair_tail ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]))
	{
	  /*_.LASTPROC__V12*/ meltfptr[11] =
	    melt_pair_head ((melt_ptr_t) /*_.LASTPAIR__V11*/ meltfptr[10]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L2*/ meltfnum[1] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V12*/ meltfptr[11])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1720:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L2*/ meltfnum[1])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V5*/ meltfptr[4]),
				       (melt_ptr_t) ( /*_.LASTPROC__V12*/
						     meltfptr[11]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.LASTPAIR__V11*/ meltfptr[10] = NULL;
     /*_.LASTPROC__V12*/ meltfptr[11] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1717:/ clear");
	     /*clear *//*_.LASTPAIR__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L2*/ meltfnum[1] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V5*/ meltfptr[4]);
	   melt_magic_discr ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12])
	   == MELTOBMAG_PAIR;
	   /*_.REVLASTPAIR__V13*/ meltfptr[12] =
	   melt_pair_tail ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]))
	{
	  /*_.REVLASTPROC__V14*/ meltfptr[13] =
	    melt_pair_head ((melt_ptr_t) /*_.REVLASTPAIR__V13*/ meltfptr[12]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1725:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[2];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_long = /*_#PASSNUM__L1*/ meltfnum[0];
	    /*^apply.arg */
	    argtab[1].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RES__V6*/ meltfptr[5];
	    /*_.REVLASTPROC__V15*/ meltfptr[14] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.REVLASTPROC__V14*/ meltfptr[13]),
			  (melt_ptr_t) ( /*_.PASSNAMEVAL__V2*/ meltfptr[1]),
			  (MELTBPARSTR_LONG MELTBPARSTR_PTR ""), argtab, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	  /*^compute */
	  /*_.RES__V6*/ meltfptr[5] = /*_.SETQ___V16*/ meltfptr[15] =
	    /*_.REVLASTPROC__V15*/ meltfptr[14];;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.REVLASTPAIR__V13*/ meltfptr[12] = NULL;
     /*_.REVLASTPROC__V14*/ meltfptr[13] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:1722:/ clear");
	     /*clear *//*_.REVLASTPAIR__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.REVLASTPROC__V15*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.SETQ___V16*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:1696:/ clear");
	    /*clear *//*_.PASSNAMEVAL__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.FIRSTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V5*/ meltfptr[4] = 0;
    /*^clear */
	    /*clear *//*_.RES__V6*/ meltfptr[5] = 0;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1730:/ locexp");
      melt_garbcoll ((1024), MELT_MINOR_OR_FULL);
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_PASS_EXECUTION hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_PASS_EXECUTION hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_PASS_EXECUTION hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_PASS_EXECUTIONhook */
void
melthookmark_HOOK_PASS_EXECUTION_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_PASS_EXECUTION_t *meltframptr_
    = (melthookframe_HOOK_PASS_EXECUTION_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_PASS_EXECUTION good hash",
		  meltframptr_->mcfr_nbvar == -3680);
  if (meltmarking)
    {				/* marking hook HOOK_PASS_EXECUTION */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_PASS_EXECUTION */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_PASS_EXECUTION */
}				/* end  melthookmark_HOOK_PASS_EXECUTION_rout */

/* frame for melthook_HOOK_GIMPLE_GATE hook: */
typedef struct meltframe_melthook_HOOK_GIMPLE_GATE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 22
  melt_ptr_t mcfr_varptr[22];
#define MELTFRAM_NBVARNUM 33
  long mcfr_varnum[33];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_GIMPLE_GATE_t;	/* end of hook frame melthook_HOOK_GIMPLE_GATE */


/** implementation of hook melthook_HOOK_GIMPLE_GATE */
long
melthook_HOOK_GIMPLE_GATE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_GIMPLE_GATE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_GIMPLE_GATE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_GIMPLE_GATE;
  long melt_thishookcall_counter_HOOK_GIMPLE_GATE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_GIMPLE_GATE++;
#define meltcallcount melt_thishookcall_counter_HOOK_GIMPLE_GATE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_GIMPLE_GATE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_GIMPLE_GATE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2525 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_GIMPLE_GATE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_GIMPLE_GATE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_GIMPLE_GATE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1779:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1782:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:1784:/ getslot");
    {
      melt_ptr_t slot = NULL, obj = NULL;
      obj =
	(melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
		       tabval[0])) /*=obj*/ ;
      melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
   /*_.PASSDICT__V2*/ meltfptr[1] = slot;
    };
    ;
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1788:/ locexp");
      /* hook_gimple_gate GETHASMODE_CHK__1 */
      static const char *GETHASMODE_CHK__1modstr;
      if (!GETHASMODE_CHK__1modstr)
	GETHASMODE_CHK__1modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__1modstr != NULL
	&& GETHASMODE_CHK__1modstr[0] != (char) 0;
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L6*/ meltfnum[5] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:1795:/ cond");
    /*cond */ if ( /*_#NOT__L6*/ meltfnum[5])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1796:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:1796:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*_#_IF___L7*/ meltfnum[6] = /*_#RETURN___L8*/ meltfnum[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1795:/ clear");
	      /*clear *//*_#RETURN___L8*/ meltfnum[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L7*/ meltfnum[6] = 0;;
      }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1797:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L9*/ meltfnum[7] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1797:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L9*/ meltfnum[7])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L10*/ meltfnum[9] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1797:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[7];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L10*/ meltfnum[9];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1797;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_gimple_gate passdict=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.PASSDICT__V2*/ meltfptr[1];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = "\n initial_system_data=";
	      /*^apply.arg */
	      argtab[6].meltbp_aptr =
		(melt_ptr_t *) & ( /*~INITIAL_SYSTEM_DATA */ meltfhook->
				  tabval[0]);
	      /*_.MELT_DEBUG_FUN__V5*/ meltfptr[4] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[1])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V4*/ meltfptr[3] =
	      /*_.MELT_DEBUG_FUN__V5*/ meltfptr[4];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1797:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L10*/ meltfnum[9] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V5*/ meltfptr[4] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V4*/ meltfptr[3] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1797:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L9*/ meltfnum[7] = 0;
      /*^clear */
	      /*clear *//*_._IF___V4*/ meltfptr[3] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1798:/ locexp");
      /* hook_gimple_gate GETMYPASS_CHK__1 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      debugeprintf ("hook_gimple_gate current_pass %p named %s",
		    (void *) current_pass->name, current_pass->name);
      gcc_assert (current_pass->type == GIMPLE_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
     /*_#PASSNUM__L5*/ meltfnum[4] = current_pass->static_pass_number;
      ;
    }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1810:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L11*/ meltfnum[9] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1810:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L11*/ meltfnum[9])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L12*/ meltfnum[7] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1810:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[7];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L12*/ meltfnum[7];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1810;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_gimple_gate mypass=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = "\n.. passnum=";
	      /*^apply.arg */
	      argtab[6].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
	      /*_.MELT_DEBUG_FUN__V7*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[1])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V6*/ meltfptr[4] =
	      /*_.MELT_DEBUG_FUN__V7*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1810:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L12*/ meltfnum[7] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V7*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V6*/ meltfptr[4] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1810:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L11*/ meltfnum[9] = 0;
      /*^clear */
	      /*clear *//*_._IF___V6*/ meltfptr[4] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1811:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L13*/ meltfnum[7] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1811:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L13*/ meltfnum[7])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L14*/ meltfnum[9] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1811:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L14*/ meltfnum[9];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1811;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"hook_gimple_gate class_gcc_gimple_pass=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & ( /*~CLASS_GCC_GIMPLE_PASS */ meltfhook->
				  tabval[2]);
	      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[4] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[1])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V8*/ meltfptr[3] =
	      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[4];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1811:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L14*/ meltfnum[9] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[4] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V8*/ meltfptr[3] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1811:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L13*/ meltfnum[7] = 0;
      /*^clear */
	      /*clear *//*_._IF___V8*/ meltfptr[3] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L15*/ meltfnum[9] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_GIMPLE_PASS */
					  meltfhook->tabval[2])));;
    MELT_LOCATION ("warmelt-hooks.melt:1812:/ cond");
    /*cond */ if ( /*_#IS_A__L15*/ meltfnum[9])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:1813:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[3])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "GCCPASS_GATE");
      /*_.GATEFUN__V10*/ meltfptr[4] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.GATEFUN__V10*/ meltfptr[4] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:1816:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
      /*_#MELT_NEED_DBG__L18*/ meltfnum[17] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:1816:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L18*/ meltfnum[17])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

	/*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:1816:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[5];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L19*/ meltfnum[18];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 1816;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring = "hook_gimple_gate gatefun=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.GATEFUN__V10*/ meltfptr[4];
		    /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[1])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V11*/ meltfptr[3] =
		    /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:1816:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L19*/ meltfnum[18] = 0;
		  /*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

       /*_._IF___V11*/ meltfptr[3] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:1816:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L18*/ meltfnum[17] = 0;
	    /*^clear */
		/*clear *//*_._IF___V11*/ meltfptr[3] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
    /*_#IS_CLOSURE__L20*/ meltfnum[18] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.GATEFUN__V10*/ meltfptr[4]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1817:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L20*/ meltfnum[18])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {




		{
		  MELT_LOCATION ("warmelt-hooks.melt:1818:/ locexp");
		  /* hook_gimple_gate DOGATEFUN_CHK__1 */
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	       /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1824:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L22*/ meltfnum[21] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1824:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L22*/ meltfnum[21])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L23*/ meltfnum[22] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1824:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L23*/ meltfnum[22];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1824;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_gimple_gate curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*_.MELT_DEBUG_FUN__V14*/ meltfptr[3] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[1])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V13*/ meltfptr[11] =
			      /*_.MELT_DEBUG_FUN__V14*/ meltfptr[3];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1824:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L23*/ meltfnum[22] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V14*/ meltfptr[3] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V13*/ meltfptr[11] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1824:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L22*/ meltfnum[21] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V13*/ meltfptr[11] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1825:/ apply");
		    /*apply */
		    {
		      /*_.GATEFUN__V15*/ meltfptr[3] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.GATEFUN__V10*/ meltfptr[4]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]), (""),
				    (union meltparam_un *) 0, "",
				    (union meltparam_un *) 0);
		    }
		    ;
		    /*^cond */
		    /*cond */ if ( /*_.GATEFUN__V15*/ meltfptr[3])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:1826:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L25*/ meltfnum[21] = 1;;
			  /*_#_IF___L24*/ meltfnum[22] =
			    /*_#SETQ___L25*/ meltfnum[21];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:1825:/ clear");
		    /*clear *//*_#SETQ___L25*/ meltfnum[21] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

	 /*_#_IF___L24*/ meltfnum[22] = 0;;
		      }
		    ;

#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1827:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L26*/ meltfnum[21] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1827:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L26*/ meltfnum[21])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L27*/ meltfnum[26] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1827:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[5];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L27*/ meltfnum[26];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1827;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_gimple_gate after call okres=";
			      /*^apply.arg */
			      argtab[4].meltbp_long =
				/*_#OKRES__L4*/ meltfnum[3];
			      /*_.MELT_DEBUG_FUN__V17*/ meltfptr[16] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[1])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V16*/ meltfptr[11] =
			      /*_.MELT_DEBUG_FUN__V17*/ meltfptr[16];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1827:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L27*/ meltfnum[26] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V17*/ meltfptr[16] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V16*/ meltfptr[11] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1827:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L26*/ meltfnum[21] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V16*/ meltfptr[11] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:1828:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1823:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:1818:/ clear");
		  /*clear *//*_.GATEFUN__V15*/ meltfptr[3] = 0;
		    /*^clear */
		  /*clear *//*_#_IF___L24*/ meltfnum[22] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;
		/*clear *//*_#_IFELSE___L21*/ meltfnum[17] = 0;
		/*epilog */
	      }
	      ;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:1817:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {

		MELT_LOCATION ("warmelt-hooks.melt:1833:/ compute");
		/*_#OKRES__L4*/ meltfnum[3] = /*_#SETQ___L28*/ meltfnum[26] =
		  1;;
		/*_#_IFELSE___L21*/ meltfnum[17] =
		  /*_#SETQ___L28*/ meltfnum[26];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:1817:/ clear");
		/*clear *//*_#SETQ___L28*/ meltfnum[26] = 0;
	      }
	      ;
	    }
	  ;
	  /*_#LET___L17*/ meltfnum[16] = /*_#_IFELSE___L21*/ meltfnum[17];;

	  MELT_LOCATION ("warmelt-hooks.melt:1813:/ clear");
	      /*clear *//*_.GATEFUN__V10*/ meltfptr[4] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L20*/ meltfnum[18] = 0;
	  /*^clear */
	      /*clear *//*_#_IFELSE___L21*/ meltfnum[17] = 0;
	  /*_#_IFELSE___L16*/ meltfnum[7] = /*_#LET___L17*/ meltfnum[16];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1812:/ clear");
	      /*clear *//*_#LET___L17*/ meltfnum[16] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

	/*^block */
	/*anyblock */
	{


#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:1835:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
      /*_#MELT_NEED_DBG__L29*/ meltfnum[21] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:1835:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L29*/ meltfnum[21])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

	/*_#MELT_CALLCOUNT__L30*/ meltfnum[22] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;
		  /*^compute */
	/*_.DISCRIM__V19*/ meltfptr[11] =
		    ((melt_ptr_t)
		     (melt_discr
		      ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]))));;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:1835:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[7];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L30*/ meltfnum[22];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 1835;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "hook_gimple_gate strange mypass=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
		    /*^apply.arg */
		    argtab[5].meltbp_cstring = "\n.. of discrim=";
		    /*^apply.arg */
		    argtab[6].meltbp_aptr =
		      (melt_ptr_t *) & /*_.DISCRIM__V19*/ meltfptr[11];
		    /*_.MELT_DEBUG_FUN__V20*/ meltfptr[3] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[1])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V18*/ meltfptr[16] =
		    /*_.MELT_DEBUG_FUN__V20*/ meltfptr[3];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:1835:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L30*/ meltfnum[22] = 0;
		  /*^clear */
		  /*clear *//*_.DISCRIM__V19*/ meltfptr[11] = 0;
		  /*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V20*/ meltfptr[3] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

       /*_._IF___V18*/ meltfptr[16] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:1835:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L29*/ meltfnum[21] = 0;
	    /*^clear */
		/*clear *//*_._IF___V18*/ meltfptr[16] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {




	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
		/*clear *//*_#_IFELSE___L16*/ meltfnum[7] = 0;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;
	  /*epilog */
	}
	;
      }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1837:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L31*/ meltfnum[26] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1837:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L31*/ meltfnum[26])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L32*/ meltfnum[18] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1837:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L32*/ meltfnum[18];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1837;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_gimple_gate final okres=";
	      /*^apply.arg */
	      argtab[4].meltbp_long = /*_#OKRES__L4*/ meltfnum[3];
	      /*_.MELT_DEBUG_FUN__V22*/ meltfptr[11] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[1])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V21*/ meltfptr[4] =
	      /*_.MELT_DEBUG_FUN__V22*/ meltfptr[11];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1837:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L32*/ meltfnum[18] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V22*/ meltfptr[11] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V21*/ meltfptr[4] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1837:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L31*/ meltfnum[26] = 0;
      /*^clear */
	      /*clear *//*_._IF___V21*/ meltfptr[4] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1838:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:1838:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L33*/ meltfnum[17];;

    MELT_LOCATION ("warmelt-hooks.melt:1782:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L6*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L7*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L15*/ meltfnum[9] = 0;
    /*^clear */
	    /*clear *//*_#_IFELSE___L16*/ meltfnum[7] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L33*/ meltfnum[17] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:1779:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_GIMPLE_GATE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_GIMPLE_GATE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_GIMPLE_GATE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_GIMPLE_GATEhook */
void
melthookmark_HOOK_GIMPLE_GATE_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_GIMPLE_GATE_t *meltframptr_
    = (melthookframe_HOOK_GIMPLE_GATE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_GIMPLE_GATE good hash",
		  meltframptr_->mcfr_nbvar == -2525);
  if (meltmarking)
    {				/* marking hook HOOK_GIMPLE_GATE */
      int meltix;
      for (meltix = 0; meltix < 22; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_GIMPLE_GATE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 22; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_GIMPLE_GATE */
}				/* end  melthookmark_HOOK_GIMPLE_GATE_rout */

/* frame for melthook_HOOK_GIMPLE_EXECUTE hook: */
typedef struct meltframe_melthook_HOOK_GIMPLE_EXECUTE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 20
  melt_ptr_t mcfr_varptr[20];
#define MELTFRAM_NBVARNUM 28
  long mcfr_varnum[28];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_GIMPLE_EXECUTE_t;	/* end of hook frame melthook_HOOK_GIMPLE_EXECUTE */


/** implementation of hook melthook_HOOK_GIMPLE_EXECUTE */
long
melthook_HOOK_GIMPLE_EXECUTE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_GIMPLE_EXECUTE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_GIMPLE_EXECUTE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_GIMPLE_EXECUTE;
  long melt_thishookcall_counter_HOOK_GIMPLE_EXECUTE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_GIMPLE_EXECUTE++;
#define meltcallcount melt_thishookcall_counter_HOOK_GIMPLE_EXECUTE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_GIMPLE_EXECUTE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_GIMPLE_EXECUTE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2088 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_GIMPLE_EXECUTE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_GIMPLE_EXECUTE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_GIMPLE_EXECUTE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1843:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1846:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:1849:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~INITIAL_SYSTEM_DATA */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_SYSTEM_DATA */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
    /*_.PASSDICT__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.PASSDICT__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1852:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L6*/ meltfnum[5] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1852:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L6*/ meltfnum[5])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L7*/ meltfnum[6] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1852:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[4];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L7*/ meltfnum[6];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1852;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_gimple_execute start";
	      /*_.MELT_DEBUG_FUN__V5*/ meltfptr[4] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[2])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""), argtab,
			    "", (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V4*/ meltfptr[3] =
	      /*_.MELT_DEBUG_FUN__V5*/ meltfptr[4];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1852:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L7*/ meltfnum[6] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V5*/ meltfptr[4] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V4*/ meltfptr[3] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1852:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L6*/ meltfnum[5] = 0;
      /*^clear */
	      /*clear *//*_._IF___V4*/ meltfptr[3] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1853:/ locexp");
      /* hook_gimple_execute GETHASMODE_CHK__2 */
      static const char *GETHASMODE_CHK__2modstr;
      if (!GETHASMODE_CHK__2modstr)
	GETHASMODE_CHK__2modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__2modstr != NULL
	&& GETHASMODE_CHK__2modstr[0];
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L8*/ meltfnum[6] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:1860:/ cond");
    /*cond */ if ( /*_#NOT__L8*/ meltfnum[6])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:1861:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
      /*_#MELT_NEED_DBG__L10*/ meltfnum[9] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:1861:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L10*/ meltfnum[9])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

	/*_#MELT_CALLCOUNT__L11*/ meltfnum[10] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:1861:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[4];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L11*/ meltfnum[10];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 1861;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring = "hook_gimple_execute no mode";
		    /*_.MELT_DEBUG_FUN__V7*/ meltfptr[3] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[2])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""),
				  argtab, "", (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V6*/ meltfptr[4] =
		    /*_.MELT_DEBUG_FUN__V7*/ meltfptr[3];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:1861:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L11*/ meltfnum[10] = 0;
		  /*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V7*/ meltfptr[3] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

       /*_._IF___V6*/ meltfptr[4] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:1861:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L10*/ meltfnum[9] = 0;
	    /*^clear */
		/*clear *//*_._IF___V6*/ meltfptr[4] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1862:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:1862:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  MELT_LOCATION ("warmelt-hooks.melt:1860:/ quasiblock");


	  /*_#PROGN___L13*/ meltfnum[9] = /*_#RETURN___L12*/ meltfnum[10];;
	  /*^compute */
	  /*_#_IF___L9*/ meltfnum[5] = /*_#PROGN___L13*/ meltfnum[9];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1860:/ clear");
	      /*clear *//*_#RETURN___L12*/ meltfnum[10] = 0;
	  /*^clear */
	      /*clear *//*_#PROGN___L13*/ meltfnum[9] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L9*/ meltfnum[5] = 0;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1863:/ locexp");
      /* hook_gimple_execute GETMYPASS_CHK__2 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      gcc_assert (current_pass->type == GIMPLE_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
     /*_#PASSNUM__L5*/ meltfnum[4] = current_pass->static_pass_number;
      ;
    }
    ;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:1873:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L14*/ meltfnum[10] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:1873:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L14*/ meltfnum[10])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L15*/ meltfnum[9] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:1873:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[7];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L15*/ meltfnum[9];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 1873;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_gimple_execute mypass=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = "\n.. passnum=";
	      /*^apply.arg */
	      argtab[6].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
	      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[4] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[2])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V8*/ meltfptr[3] =
	      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[4];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:1873:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L15*/ meltfnum[9] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[4] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V8*/ meltfptr[3] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:1873:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L14*/ meltfnum[10] = 0;
      /*^clear */
	      /*clear *//*_._IF___V8*/ meltfptr[3] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L16*/ meltfnum[9] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_GIMPLE_PASS */
					  meltfhook->tabval[3])));;
    MELT_LOCATION ("warmelt-hooks.melt:1874:/ cond");
    /*cond */ if ( /*_#IS_A__L16*/ meltfnum[9])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:1875:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[4])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 3, "GCCPASS_EXEC");
      /*_.EXECFUN__V12*/ meltfptr[11] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.EXECFUN__V12*/ meltfptr[11] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
    /*_#IS_CLOSURE__L17*/ meltfnum[10] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.EXECFUN__V12*/ meltfptr[11])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1878:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L17*/ meltfnum[10])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:1879:/ locexp");
		  /* hook_gimple_execute DOEXECFUN_CHK__1 */
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	     /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1885:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L18*/ meltfnum[17] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1885:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L18*/ meltfnum[17])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1885:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[9];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L19*/ meltfnum[18];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1885;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_gimple_execute curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*^apply.arg */
			      argtab[7].meltbp_cstring = " passnum=";
			      /*^apply.arg */
			      argtab[8].meltbp_long =
				/*_#PASSNUM__L5*/ meltfnum[4];
			      /*_.MELT_DEBUG_FUN__V15*/ meltfptr[14] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[2])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V14*/ meltfptr[13] =
			      /*_.MELT_DEBUG_FUN__V15*/ meltfptr[14];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1885:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V15*/ meltfptr[14] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V14*/ meltfptr[13] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1885:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L18*/ meltfnum[17] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V14*/ meltfptr[13] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1887:/ quasiblock");


		    /*^multiapply */
		    /*multiapply 2args, 1x.res */
		    {
		      union meltparam_un argtab[1];

		      union meltparam_un restab[1];
		      memset (&restab, 0, sizeof (restab));
		      memset (&argtab, 0, sizeof (argtab));
		      /*^multiapply.arg */
		      argtab[0].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
		      /*^multiapply.xres */
		      restab[0].meltbp_longptr =
			& /*_#FLAGEXEC__L21*/ meltfnum[17];
		      /*^multiapply.appl */
		      /*_.RESEXEC__V16*/ meltfptr[14] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.EXECFUN__V12*/ meltfptr[11]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]),
				    (MELTBPARSTR_LONG ""), argtab,
				    (MELTBPARSTR_LONG ""), restab);
		    }
		    ;
		    /*^quasiblock */



#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1890:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L22*/ meltfnum[21] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1890:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L22*/ meltfnum[21])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L23*/ meltfnum[22] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1890:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L23*/ meltfnum[22];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1890;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_gimple_execute after call resexec=";
			      /*^apply.arg */
			      argtab[4].meltbp_aptr =
				(melt_ptr_t *) & /*_.RESEXEC__V16*/
				meltfptr[14];
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " flagexec=";
			      /*^apply.arg */
			      argtab[6].meltbp_long =
				/*_#FLAGEXEC__L21*/ meltfnum[17];
			      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[17] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[2])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V17*/ meltfptr[13] =
			      /*_.MELT_DEBUG_FUN__V18*/ meltfptr[17];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1890:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L23*/ meltfnum[22] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V18*/ meltfptr[17] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V17*/ meltfptr[13] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1890:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L22*/ meltfnum[21] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V17*/ meltfptr[13] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
	/*_#NULL__L24*/ meltfnum[22] =
		      (( /*_.RESEXEC__V16*/ meltfptr[14]) == NULL);;
		    MELT_LOCATION ("warmelt-hooks.melt:1892:/ cond");
		    /*cond */ if ( /*_#NULL__L24*/ meltfnum[22])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:1893:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L26*/ meltfnum[25] =
			    /*_#FLAGEXEC__L21*/ meltfnum[17];;
			  /*_#_IFELSE___L25*/ meltfnum[21] =
			    /*_#SETQ___L26*/ meltfnum[25];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:1892:/ clear");
		    /*clear *//*_#SETQ___L26*/ meltfnum[25] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:1894:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L27*/ meltfnum[25] = 1;;
			  /*_#_IFELSE___L25*/ meltfnum[21] =
			    /*_#SETQ___L27*/ meltfnum[25];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:1892:/ clear");
		    /*clear *//*_#SETQ___L27*/ meltfnum[25] = 0;
			}
			;
		      }
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    /*_#MULTI___L20*/ meltfnum[18] =
		      /*_#_IFELSE___L25*/ meltfnum[21];;

		    MELT_LOCATION ("warmelt-hooks.melt:1887:/ clear");
		  /*clear *//*_#NULL__L24*/ meltfnum[22] = 0;
		    /*^clear */
		  /*clear *//*_#_IFELSE___L25*/ meltfnum[21] = 0;

		    /*^clear */
		  /*clear *//*_#FLAGEXEC__L21*/ meltfnum[17] = 0;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:1896:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1884:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:1879:/ clear");
		  /*clear *//*_#MULTI___L20*/ meltfnum[18] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:1901:/ apply");
		/*apply */
		{
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V19*/ meltfptr[17] =
		    melt_apply ((meltclosure_ptr_t)
				(( /*~RUN_ENDMELTPASS_FUNCTIONS */ meltfhook->
				  tabval[5])), (melt_ptr_t) (NULL), (""),
				(union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		MELT_LOCATION ("warmelt-hooks.melt:1878:/ quasiblock");


		/*_.PROGN___V20*/ meltfptr[13] =
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V19*/ meltfptr[17];;
		/*^compute */
		/*_._IF___V13*/ meltfptr[12] =
		  /*_.PROGN___V20*/ meltfptr[13];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:1878:/ clear");
		/*clear *//*_.RUN_ENDMELTPASS_FUNCTIONS__V19*/ meltfptr[17] =
		  0;
		/*^clear */
		/*clear *//*_.PROGN___V20*/ meltfptr[13] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_._IF___V13*/ meltfptr[12] = NULL;;
	    }
	  ;
	  /*^compute */
	  /*_.LET___V11*/ meltfptr[3] = /*_._IF___V13*/ meltfptr[12];;

	  MELT_LOCATION ("warmelt-hooks.melt:1875:/ clear");
	      /*clear *//*_.EXECFUN__V12*/ meltfptr[11] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L17*/ meltfnum[10] = 0;
	  /*^clear */
	      /*clear *//*_._IF___V13*/ meltfptr[12] = 0;
	  /*_._IF___V10*/ meltfptr[4] = /*_.LET___V11*/ meltfptr[3];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1874:/ clear");
	      /*clear *//*_.LET___V11*/ meltfptr[3] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_._IF___V10*/ meltfptr[4] = NULL;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1903:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:1903:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L28*/ meltfnum[25];;

    MELT_LOCATION ("warmelt-hooks.melt:1846:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L8*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L9*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L16*/ meltfnum[9] = 0;
    /*^clear */
	    /*clear *//*_._IF___V10*/ meltfptr[4] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L28*/ meltfnum[25] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:1843:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_GIMPLE_EXECUTE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_GIMPLE_EXECUTE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_GIMPLE_EXECUTE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_GIMPLE_EXECUTEhook */
void
melthookmark_HOOK_GIMPLE_EXECUTE_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_GIMPLE_EXECUTE_t *meltframptr_
    = (melthookframe_HOOK_GIMPLE_EXECUTE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_GIMPLE_EXECUTE good hash",
		  meltframptr_->mcfr_nbvar == -2088);
  if (meltmarking)
    {				/* marking hook HOOK_GIMPLE_EXECUTE */
      int meltix;
      for (meltix = 0; meltix < 20; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_GIMPLE_EXECUTE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 20; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_GIMPLE_EXECUTE */
}				/* end  melthookmark_HOOK_GIMPLE_EXECUTE_rout */

/* frame for melthook_HOOK_RTL_GATE hook: */
typedef struct meltframe_melthook_HOOK_RTL_GATE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 9
  melt_ptr_t mcfr_varptr[9];
#define MELTFRAM_NBVARNUM 21
  long mcfr_varnum[21];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_RTL_GATE_t;	/* end of hook frame melthook_HOOK_RTL_GATE */


/** implementation of hook melthook_HOOK_RTL_GATE */
long
melthook_HOOK_RTL_GATE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_RTL_GATE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_RTL_GATE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_RTL_GATE;
  long melt_thishookcall_counter_HOOK_RTL_GATE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_RTL_GATE++;
#define meltcallcount melt_thishookcall_counter_HOOK_RTL_GATE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_RTL_GATE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_RTL_GATE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -3792 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_RTL_GATE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_RTL_GATE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_RTL_GATE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1910:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1913:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:1915:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~INITIAL_SYSTEM_DATA */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_SYSTEM_DATA */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
    /*_.PASSDICT__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.PASSDICT__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1919:/ locexp");
      /* hook_rtl_gate GETHASMODE_CHK__3 */
      static const char *GETHASMODE_CHK__3modstr;
      if (!GETHASMODE_CHK__3modstr)
	GETHASMODE_CHK__3modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__3modstr != NULL
	&& GETHASMODE_CHK__3modstr[0];
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L6*/ meltfnum[5] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:1926:/ cond");
    /*cond */ if ( /*_#NOT__L6*/ meltfnum[5])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1927:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:1927:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*_#_IF___L7*/ meltfnum[6] = /*_#RETURN___L8*/ meltfnum[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1926:/ clear");
	      /*clear *//*_#RETURN___L8*/ meltfnum[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L7*/ meltfnum[6] = 0;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1928:/ locexp");
      /* hook_rtl_gate GETMYPASS_CHK__3 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      gcc_assert (current_pass->type == RTL_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L9*/ meltfnum[7] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_RTL_PASS */
					  meltfhook->tabval[2])));;
    MELT_LOCATION ("warmelt-hooks.melt:1937:/ cond");
    /*cond */ if ( /*_#IS_A__L9*/ meltfnum[7])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:1938:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[3])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "GCCPASS_GATE");
      /*_.GATEFUN__V4*/ meltfptr[3] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.GATEFUN__V4*/ meltfptr[3] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
    /*_#IS_CLOSURE__L12*/ meltfnum[11] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.GATEFUN__V4*/ meltfptr[3]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1941:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L12*/ meltfnum[11])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {




		{
		  MELT_LOCATION ("warmelt-hooks.melt:1942:/ locexp");
		  /* hook_rtl_gate DOGATEFUN_CHK__2 */
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	       /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
	       /*_#PASSNUM__L5*/ meltfnum[4] =
		    current_pass->static_pass_number;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1949:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L14*/ meltfnum[13] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1949:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L14*/ meltfnum[13])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L15*/ meltfnum[14] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1949:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L15*/ meltfnum[14];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1949;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_rtl_gate curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V5*/ meltfptr[4] =
			      /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1949:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L15*/ meltfnum[14] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V6*/ meltfptr[5] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V5*/ meltfptr[4] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1949:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L14*/ meltfnum[13] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V5*/ meltfptr[4] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1950:/ apply");
		    /*apply */
		    {
		      union meltparam_un argtab[1];
		      memset (&argtab, 0, sizeof (argtab));
		      /*^apply.arg */
		      argtab[0].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
		      /*_.GATEFUN__V7*/ meltfptr[5] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.GATEFUN__V4*/ meltfptr[3]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]),
				    (MELTBPARSTR_LONG ""), argtab, "",
				    (union meltparam_un *) 0);
		    }
		    ;
		    /*^cond */
		    /*cond */ if ( /*_.GATEFUN__V7*/ meltfptr[5])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:1951:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L17*/ meltfnum[13] = 1;;
			  /*_#_IF___L16*/ meltfnum[14] =
			    /*_#SETQ___L17*/ meltfnum[13];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:1950:/ clear");
		    /*clear *//*_#SETQ___L17*/ meltfnum[13] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

	 /*_#_IF___L16*/ meltfnum[14] = 0;;
		      }
		    ;

#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:1952:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L18*/ meltfnum[13] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:1952:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L18*/ meltfnum[13])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:1952:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[5];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L19*/ meltfnum[18];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 1952;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_rtl_gate after call okres=";
			      /*^apply.arg */
			      argtab[4].meltbp_long =
				/*_#OKRES__L4*/ meltfnum[3];
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V8*/ meltfptr[4] =
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:1952:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V8*/ meltfptr[4] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:1952:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L18*/ meltfnum[13] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V8*/ meltfptr[4] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:1953:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:1948:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:1942:/ clear");
		  /*clear *//*_.GATEFUN__V7*/ meltfptr[5] = 0;
		    /*^clear */
		  /*clear *//*_#_IF___L16*/ meltfnum[14] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;
		/*clear *//*_#_IFELSE___L13*/ meltfnum[12] = 0;
		/*epilog */
	      }
	      ;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:1941:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {

		MELT_LOCATION ("warmelt-hooks.melt:1958:/ compute");
		/*_#OKRES__L4*/ meltfnum[3] = /*_#SETQ___L20*/ meltfnum[18] =
		  1;;
		/*_#_IFELSE___L13*/ meltfnum[12] =
		  /*_#SETQ___L20*/ meltfnum[18];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:1941:/ clear");
		/*clear *//*_#SETQ___L20*/ meltfnum[18] = 0;
	      }
	      ;
	    }
	  ;
	  /*_#LET___L11*/ meltfnum[10] = /*_#_IFELSE___L13*/ meltfnum[12];;

	  MELT_LOCATION ("warmelt-hooks.melt:1938:/ clear");
	      /*clear *//*_.GATEFUN__V4*/ meltfptr[3] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L12*/ meltfnum[11] = 0;
	  /*^clear */
	      /*clear *//*_#_IFELSE___L13*/ meltfnum[12] = 0;
	  /*_#_IF___L10*/ meltfnum[9] = /*_#LET___L11*/ meltfnum[10];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1937:/ clear");
	      /*clear *//*_#LET___L11*/ meltfnum[10] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L10*/ meltfnum[9] = 0;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:1960:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:1960:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L21*/ meltfnum[13];;

    MELT_LOCATION ("warmelt-hooks.melt:1913:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L6*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L7*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L9*/ meltfnum[7] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L10*/ meltfnum[9] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L21*/ meltfnum[13] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:1910:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_RTL_GATE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_RTL_GATE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_RTL_GATE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_RTL_GATEhook */
void
melthookmark_HOOK_RTL_GATE_rout (struct melt_callframe_st *meltcfram,
				 int meltmarking)
{

  melthookframe_HOOK_RTL_GATE_t *meltframptr_
    = (melthookframe_HOOK_RTL_GATE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_RTL_GATE good hash",
		  meltframptr_->mcfr_nbvar == -3792);
  if (meltmarking)
    {				/* marking hook HOOK_RTL_GATE */
      int meltix;
      for (meltix = 0; meltix < 9; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_RTL_GATE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 9; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_RTL_GATE */
}				/* end  melthookmark_HOOK_RTL_GATE_rout */

/* frame for melthook_HOOK_RTL_EXECUTE hook: */
typedef struct meltframe_melthook_HOOK_RTL_EXECUTE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 14
  melt_ptr_t mcfr_varptr[14];
#define MELTFRAM_NBVARNUM 21
  long mcfr_varnum[21];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_RTL_EXECUTE_t;	/* end of hook frame melthook_HOOK_RTL_EXECUTE */


/** implementation of hook melthook_HOOK_RTL_EXECUTE */
long
melthook_HOOK_RTL_EXECUTE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_RTL_EXECUTE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_RTL_EXECUTE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_RTL_EXECUTE;
  long melt_thishookcall_counter_HOOK_RTL_EXECUTE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_RTL_EXECUTE++;
#define meltcallcount melt_thishookcall_counter_HOOK_RTL_EXECUTE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_RTL_EXECUTE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_RTL_EXECUTE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -207 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_RTL_EXECUTE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_RTL_EXECUTE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_RTL_EXECUTE hook */
  MELT_LOCATION ("warmelt-hooks.melt:1965:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:1968:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:1970:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~INITIAL_SYSTEM_DATA */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_SYSTEM_DATA */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
    /*_.PASSDICT__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.PASSDICT__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1974:/ locexp");
      /* hook_rtl_execute GETHASMODE_CHK__4 */
      static const char *GETHASMODE_CHK__4modstr;
      if (!GETHASMODE_CHK__4modstr)
	GETHASMODE_CHK__4modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__4modstr != NULL
	&& GETHASMODE_CHK__4modstr[0];
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L6*/ meltfnum[5] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:1981:/ cond");
    /*cond */ if ( /*_#NOT__L6*/ meltfnum[5])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:1982:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:1982:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*_#_IF___L7*/ meltfnum[6] = /*_#RETURN___L8*/ meltfnum[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1981:/ clear");
	      /*clear *//*_#RETURN___L8*/ meltfnum[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L7*/ meltfnum[6] = 0;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:1983:/ locexp");
      /* hook_rtl_execute GETMYPASS_CHK__4 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      gcc_assert (current_pass->type == RTL_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L9*/ meltfnum[7] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_RTL_PASS */
					  meltfhook->tabval[2])));;
    MELT_LOCATION ("warmelt-hooks.melt:1992:/ cond");
    /*cond */ if ( /*_#IS_A__L9*/ meltfnum[7])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:1993:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[3])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 3, "GCCPASS_EXEC");
      /*_.EXECFUN__V6*/ meltfptr[5] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.EXECFUN__V6*/ meltfptr[5] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
    /*_#IS_CLOSURE__L10*/ meltfnum[9] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.EXECFUN__V6*/ meltfptr[5]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:1996:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L10*/ meltfnum[9])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:1997:/ locexp");
		  /* hook_rtl_execute DOEXECFUN_CHK__2 */
	       /*_#PASSNUM__L5*/ meltfnum[4] =
		    current_pass->static_pass_number;
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	       /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2004:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L11*/ meltfnum[10] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2004:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L11*/ meltfnum[10])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L12*/ meltfnum[11] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2004:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[9];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L12*/ meltfnum[11];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2004;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_rtl_execute curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*^apply.arg */
			      argtab[7].meltbp_cstring = " passnum=";
			      /*^apply.arg */
			      argtab[8].meltbp_long =
				/*_#PASSNUM__L5*/ meltfnum[4];
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V8*/ meltfptr[7] =
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2004:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L12*/ meltfnum[11] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V8*/ meltfptr[7] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2004:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L11*/ meltfnum[10] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V8*/ meltfptr[7] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2006:/ quasiblock");


		    /*^multiapply */
		    /*multiapply 2args, 1x.res */
		    {
		      union meltparam_un argtab[1];

		      union meltparam_un restab[1];
		      memset (&restab, 0, sizeof (restab));
		      memset (&argtab, 0, sizeof (argtab));
		      /*^multiapply.arg */
		      argtab[0].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
		      /*^multiapply.xres */
		      restab[0].meltbp_longptr =
			& /*_#FLAGEXEC__L14*/ meltfnum[10];
		      /*^multiapply.appl */
		      /*_.RESEXEC__V10*/ meltfptr[8] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.EXECFUN__V6*/ meltfptr[5]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]),
				    (MELTBPARSTR_LONG ""), argtab,
				    (MELTBPARSTR_LONG ""), restab);
		    }
		    ;
		    /*^quasiblock */



#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2009:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L15*/ meltfnum[14] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2009:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L15*/ meltfnum[14])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L16*/ meltfnum[15] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2009:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L16*/ meltfnum[15];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2009;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_rtl_execute after call resexec=";
			      /*^apply.arg */
			      argtab[4].meltbp_aptr =
				(melt_ptr_t *) & /*_.RESEXEC__V10*/
				meltfptr[8];
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " flagexec=";
			      /*^apply.arg */
			      argtab[6].meltbp_long =
				/*_#FLAGEXEC__L14*/ meltfnum[10];
			      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V11*/ meltfptr[7] =
			      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2009:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L16*/ meltfnum[15] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V11*/ meltfptr[7] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2009:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L15*/ meltfnum[14] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V11*/ meltfptr[7] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
	/*_#NULL__L17*/ meltfnum[15] =
		      (( /*_.RESEXEC__V10*/ meltfptr[8]) == NULL);;
		    MELT_LOCATION ("warmelt-hooks.melt:2011:/ cond");
		    /*cond */ if ( /*_#NULL__L17*/ meltfnum[15])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:2012:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L19*/ meltfnum[18] =
			    /*_#FLAGEXEC__L14*/ meltfnum[10];;
			  /*_#_IFELSE___L18*/ meltfnum[14] =
			    /*_#SETQ___L19*/ meltfnum[18];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2011:/ clear");
		    /*clear *//*_#SETQ___L19*/ meltfnum[18] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:2013:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L20*/ meltfnum[18] = 1;;
			  /*_#_IFELSE___L18*/ meltfnum[14] =
			    /*_#SETQ___L20*/ meltfnum[18];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2011:/ clear");
		    /*clear *//*_#SETQ___L20*/ meltfnum[18] = 0;
			}
			;
		      }
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    /*_#MULTI___L13*/ meltfnum[11] =
		      /*_#_IFELSE___L18*/ meltfnum[14];;

		    MELT_LOCATION ("warmelt-hooks.melt:2006:/ clear");
		  /*clear *//*_#NULL__L17*/ meltfnum[15] = 0;
		    /*^clear */
		  /*clear *//*_#_IFELSE___L18*/ meltfnum[14] = 0;

		    /*^clear */
		  /*clear *//*_#FLAGEXEC__L14*/ meltfnum[10] = 0;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:2015:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2003:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:1997:/ clear");
		  /*clear *//*_#MULTI___L13*/ meltfnum[11] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2020:/ apply");
		/*apply */
		{
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11] =
		    melt_apply ((meltclosure_ptr_t)
				(( /*~RUN_ENDMELTPASS_FUNCTIONS */ meltfhook->
				  tabval[5])), (melt_ptr_t) (NULL), (""),
				(union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		MELT_LOCATION ("warmelt-hooks.melt:1996:/ quasiblock");


		/*_.PROGN___V14*/ meltfptr[7] =
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11];;
		/*^compute */
		/*_._IF___V7*/ meltfptr[6] = /*_.PROGN___V14*/ meltfptr[7];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:1996:/ clear");
		/*clear *//*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11] =
		  0;
		/*^clear */
		/*clear *//*_.PROGN___V14*/ meltfptr[7] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_._IF___V7*/ meltfptr[6] = NULL;;
	    }
	  ;
	  /*^compute */
	  /*_.LET___V5*/ meltfptr[4] = /*_._IF___V7*/ meltfptr[6];;

	  MELT_LOCATION ("warmelt-hooks.melt:1993:/ clear");
	      /*clear *//*_.EXECFUN__V6*/ meltfptr[5] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L10*/ meltfnum[9] = 0;
	  /*^clear */
	      /*clear *//*_._IF___V7*/ meltfptr[6] = 0;
	  /*_._IF___V4*/ meltfptr[3] = /*_.LET___V5*/ meltfptr[4];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:1992:/ clear");
	      /*clear *//*_.LET___V5*/ meltfptr[4] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_._IF___V4*/ meltfptr[3] = NULL;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2022:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:2022:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L21*/ meltfnum[18];;

    MELT_LOCATION ("warmelt-hooks.melt:1968:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L6*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L7*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L9*/ meltfnum[7] = 0;
    /*^clear */
	    /*clear *//*_._IF___V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L21*/ meltfnum[18] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:1965:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_RTL_EXECUTE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_RTL_EXECUTE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_RTL_EXECUTE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_RTL_EXECUTEhook */
void
melthookmark_HOOK_RTL_EXECUTE_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_RTL_EXECUTE_t *meltframptr_
    = (melthookframe_HOOK_RTL_EXECUTE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_RTL_EXECUTE good hash",
		  meltframptr_->mcfr_nbvar == -207);
  if (meltmarking)
    {				/* marking hook HOOK_RTL_EXECUTE */
      int meltix;
      for (meltix = 0; meltix < 14; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_RTL_EXECUTE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 14; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_RTL_EXECUTE */
}				/* end  melthookmark_HOOK_RTL_EXECUTE_rout */

/* frame for melthook_HOOK_SIMPLE_IPA_GATE hook: */
typedef struct meltframe_melthook_HOOK_SIMPLE_IPA_GATE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 9
  melt_ptr_t mcfr_varptr[9];
#define MELTFRAM_NBVARNUM 21
  long mcfr_varnum[21];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_SIMPLE_IPA_GATE_t;	/* end of hook frame melthook_HOOK_SIMPLE_IPA_GATE */


/** implementation of hook melthook_HOOK_SIMPLE_IPA_GATE */
long
melthook_HOOK_SIMPLE_IPA_GATE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_SIMPLE_IPA_GATE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_SIMPLE_IPA_GATE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_SIMPLE_IPA_GATE;
  long melt_thishookcall_counter_HOOK_SIMPLE_IPA_GATE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_SIMPLE_IPA_GATE++;
#define meltcallcount melt_thishookcall_counter_HOOK_SIMPLE_IPA_GATE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_SIMPLE_IPA_GATE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_SIMPLE_IPA_GATE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -816 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_SIMPLE_IPA_GATE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_SIMPLE_IPA_GATE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_SIMPLE_IPA_GATE hook */
  MELT_LOCATION ("warmelt-hooks.melt:2028:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:2031:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:2033:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~INITIAL_SYSTEM_DATA */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_SYSTEM_DATA */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
    /*_.PASSDICT__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.PASSDICT__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:2037:/ locexp");
      /* hook_simple_ipa_gate GETHASMODE_CHK__5 */
      static const char *GETHASMODE_CHK__5modstr;
      if (!GETHASMODE_CHK__5modstr)
	GETHASMODE_CHK__5modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__5modstr != NULL
	&& GETHASMODE_CHK__5modstr[0];
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L6*/ meltfnum[5] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:2044:/ cond");
    /*cond */ if ( /*_#NOT__L6*/ meltfnum[5])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2045:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:2045:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*_#_IF___L7*/ meltfnum[6] = /*_#RETURN___L8*/ meltfnum[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2044:/ clear");
	      /*clear *//*_#RETURN___L8*/ meltfnum[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L7*/ meltfnum[6] = 0;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:2046:/ locexp");
      /* hook_simple_ipa_gate GETMYPASS_CHK__5 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      gcc_assert (current_pass->type == SIMPLE_IPA_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L9*/ meltfnum[7] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_SIMPLE_IPA_PASS */
					  meltfhook->tabval[2])));;
    MELT_LOCATION ("warmelt-hooks.melt:2055:/ cond");
    /*cond */ if ( /*_#IS_A__L9*/ meltfnum[7])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:2056:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[3])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "GCCPASS_GATE");
      /*_.GATEFUN__V4*/ meltfptr[3] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.GATEFUN__V4*/ meltfptr[3] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
    /*_#IS_CLOSURE__L12*/ meltfnum[11] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.GATEFUN__V4*/ meltfptr[3]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2059:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L12*/ meltfnum[11])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {




		{
		  MELT_LOCATION ("warmelt-hooks.melt:2060:/ locexp");
		  /* hook_simple_ipa_gate DOGATEFUN_CHK__3 */
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	       /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
	       /*_#PASSNUM__L5*/ meltfnum[4] =
		    current_pass->static_pass_number;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2067:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L14*/ meltfnum[13] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2067:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L14*/ meltfnum[13])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L15*/ meltfnum[14] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2067:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L15*/ meltfnum[14];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2067;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_simple_ipa_gate curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V5*/ meltfptr[4] =
			      /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2067:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L15*/ meltfnum[14] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V6*/ meltfptr[5] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V5*/ meltfptr[4] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2067:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L14*/ meltfnum[13] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V5*/ meltfptr[4] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2068:/ apply");
		    /*apply */
		    {
		      union meltparam_un argtab[1];
		      memset (&argtab, 0, sizeof (argtab));
		      /*^apply.arg */
		      argtab[0].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
		      /*_.GATEFUN__V7*/ meltfptr[5] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.GATEFUN__V4*/ meltfptr[3]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]),
				    (MELTBPARSTR_LONG ""), argtab, "",
				    (union meltparam_un *) 0);
		    }
		    ;
		    /*^cond */
		    /*cond */ if ( /*_.GATEFUN__V7*/ meltfptr[5])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:2069:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L17*/ meltfnum[13] = 1;;
			  /*_#_IF___L16*/ meltfnum[14] =
			    /*_#SETQ___L17*/ meltfnum[13];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2068:/ clear");
		    /*clear *//*_#SETQ___L17*/ meltfnum[13] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

	 /*_#_IF___L16*/ meltfnum[14] = 0;;
		      }
		    ;

#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2070:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L18*/ meltfnum[13] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2070:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L18*/ meltfnum[13])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2070:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[5];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L19*/ meltfnum[18];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2070;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_simple_ipa_gate after call okres=";
			      /*^apply.arg */
			      argtab[4].meltbp_long =
				/*_#OKRES__L4*/ meltfnum[3];
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V8*/ meltfptr[4] =
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2070:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L19*/ meltfnum[18] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V8*/ meltfptr[4] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2070:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L18*/ meltfnum[13] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V8*/ meltfptr[4] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:2071:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2066:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:2060:/ clear");
		  /*clear *//*_.GATEFUN__V7*/ meltfptr[5] = 0;
		    /*^clear */
		  /*clear *//*_#_IF___L16*/ meltfnum[14] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;
		/*clear *//*_#_IFELSE___L13*/ meltfnum[12] = 0;
		/*epilog */
	      }
	      ;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2059:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {

		MELT_LOCATION ("warmelt-hooks.melt:2076:/ compute");
		/*_#OKRES__L4*/ meltfnum[3] = /*_#SETQ___L20*/ meltfnum[18] =
		  1;;
		/*_#_IFELSE___L13*/ meltfnum[12] =
		  /*_#SETQ___L20*/ meltfnum[18];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2059:/ clear");
		/*clear *//*_#SETQ___L20*/ meltfnum[18] = 0;
	      }
	      ;
	    }
	  ;
	  /*_#LET___L11*/ meltfnum[10] = /*_#_IFELSE___L13*/ meltfnum[12];;

	  MELT_LOCATION ("warmelt-hooks.melt:2056:/ clear");
	      /*clear *//*_.GATEFUN__V4*/ meltfptr[3] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L12*/ meltfnum[11] = 0;
	  /*^clear */
	      /*clear *//*_#_IFELSE___L13*/ meltfnum[12] = 0;
	  /*_#_IF___L10*/ meltfnum[9] = /*_#LET___L11*/ meltfnum[10];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2055:/ clear");
	      /*clear *//*_#LET___L11*/ meltfnum[10] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L10*/ meltfnum[9] = 0;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2078:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:2078:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L21*/ meltfnum[13];;

    MELT_LOCATION ("warmelt-hooks.melt:2031:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L6*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L7*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L9*/ meltfnum[7] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L10*/ meltfnum[9] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L21*/ meltfnum[13] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:2028:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_SIMPLE_IPA_GATE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_SIMPLE_IPA_GATE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_SIMPLE_IPA_GATE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_SIMPLE_IPA_GATEhook */
void
melthookmark_HOOK_SIMPLE_IPA_GATE_rout (struct melt_callframe_st *meltcfram,
					int meltmarking)
{

  melthookframe_HOOK_SIMPLE_IPA_GATE_t *meltframptr_
    = (melthookframe_HOOK_SIMPLE_IPA_GATE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_SIMPLE_IPA_GATE good hash",
		  meltframptr_->mcfr_nbvar == -816);
  if (meltmarking)
    {				/* marking hook HOOK_SIMPLE_IPA_GATE */
      int meltix;
      for (meltix = 0; meltix < 9; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_SIMPLE_IPA_GATE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 9; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_SIMPLE_IPA_GATE */
}				/* end  melthookmark_HOOK_SIMPLE_IPA_GATE_rout */

/* frame for melthook_HOOK_SIMPLE_IPA_EXECUTE hook: */
typedef struct meltframe_melthook_HOOK_SIMPLE_IPA_EXECUTE_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 14
  melt_ptr_t mcfr_varptr[14];
#define MELTFRAM_NBVARNUM 21
  long mcfr_varnum[21];
/*others*/
  const char *loc_CSTRING__o0;
  long _spare_;
}
melthookframe_HOOK_SIMPLE_IPA_EXECUTE_t;	/* end of hook frame melthook_HOOK_SIMPLE_IPA_EXECUTE */


/** implementation of hook melthook_HOOK_SIMPLE_IPA_EXECUTE */
long
melthook_HOOK_SIMPLE_IPA_EXECUTE (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_SIMPLE_IPA_EXECUTE from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_SIMPLE_IPA_EXECUTE hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_SIMPLE_IPA_EXECUTE;
  long melt_thishookcall_counter_HOOK_SIMPLE_IPA_EXECUTE ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_SIMPLE_IPA_EXECUTE++;
#define meltcallcount melt_thishookcall_counter_HOOK_SIMPLE_IPA_EXECUTE
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_SIMPLE_IPA_EXECUTE_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_SIMPLE_IPA_EXECUTE */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2192 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_SIMPLE_IPA_EXECUTE_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_SIMPLE_IPA_EXECUTE*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_SIMPLE_IPA_EXECUTE hook */
  MELT_LOCATION ("warmelt-hooks.melt:2083:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:2086:/ quasiblock");


  /*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;;
    /*^compute */
  /*_#OKRES__L4*/ meltfnum[3] = 0;;
    MELT_LOCATION ("warmelt-hooks.melt:2088:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~INITIAL_SYSTEM_DATA */
					  meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_SYSTEM_DATA */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~INITIAL_SYSTEM_DATA */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 5, "SYSDATA_PASS_DICT");
    /*_.PASSDICT__V2*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.PASSDICT__V2*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
    /*_.MYPASS__V3*/ meltfptr[2] = ( /*nil */ NULL);;
    /*^compute */
  /*_#PASSNUM__L5*/ meltfnum[4] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:2092:/ locexp");
      /* hook_simple_ipa_execute GETHASMODE_CHK__6 */
      static const char *GETHASMODE_CHK__6modstr;
      if (!GETHASMODE_CHK__6modstr)
	GETHASMODE_CHK__6modstr = melt_argument ("mode");
		/*_#HASMODEFLAG__L3*/ meltfnum[2] = GETHASMODE_CHK__6modstr != NULL
	&& GETHASMODE_CHK__6modstr[0];
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#NOT__L6*/ meltfnum[5] =
      (!( /*_#HASMODEFLAG__L3*/ meltfnum[2]));;
    MELT_LOCATION ("warmelt-hooks.melt:2099:/ cond");
    /*cond */ if ( /*_#NOT__L6*/ meltfnum[5])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2100:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = 0;;
	  MELT_LOCATION ("warmelt-hooks.melt:2100:/ finalreturn");
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*_#_IF___L7*/ meltfnum[6] = /*_#RETURN___L8*/ meltfnum[7];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2099:/ clear");
	      /*clear *//*_#RETURN___L8*/ meltfnum[7] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_#_IF___L7*/ meltfnum[6] = 0;;
      }
    ;

    {
      MELT_LOCATION ("warmelt-hooks.melt:2101:/ locexp");
      /* hook_simple_ipa_execute GETMYPASS_CHK__6 */
      gcc_assert (current_pass != NULL);
      gcc_assert (current_pass->name != NULL);
      gcc_assert (current_pass->type == SIMPLE_IPA_PASS);
      /*_.MYPASS__V3*/ meltfptr[2] =
	melt_get_mapstrings ((struct meltmapstrings_st *) /*_.PASSDICT__V2*/
			     meltfptr[1],
			     current_pass->name);
      ;
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#IS_A__L9*/ meltfnum[7] =
      melt_is_instance_of ((melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]),
			   (melt_ptr_t) (( /*~CLASS_GCC_SIMPLE_IPA_PASS */
					  meltfhook->tabval[2])));;
    MELT_LOCATION ("warmelt-hooks.melt:2110:/ cond");
    /*cond */ if ( /*_#IS_A__L9*/ meltfnum[7])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

	  MELT_LOCATION ("warmelt-hooks.melt:2111:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.MYPASS__V3*/ meltfptr[2]),
					      (melt_ptr_t) (( /*~CLASS_GCC_PASS */ meltfhook->tabval[3])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj = (melt_ptr_t) ( /*_.MYPASS__V3*/ meltfptr[2]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 3, "GCCPASS_EXEC");
      /*_.EXECFUN__V6*/ meltfptr[5] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_.EXECFUN__V6*/ meltfptr[5] = NULL;;
	    }
	  ;
	  /*^compute */
    /*_?*/ meltfram__.loc_CSTRING__o0 =
	    (char *) 0;;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
    /*_#IS_CLOSURE__L10*/ meltfnum[9] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.EXECFUN__V6*/ meltfptr[5]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2114:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L10*/ meltfnum[9])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:2115:/ locexp");
		  /* hook_simple_ipa_execute DOEXECFUN_CHK__3 */
	       /*_#PASSNUM__L5*/ meltfnum[4] =
		    current_pass->static_pass_number;
		  FILE *oldf = meltgc_set_dump_file (dump_file);
	       /*_?*/ meltfram__.loc_CSTRING__o0 = current_pass->name;
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2122:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L11*/ meltfnum[10] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2122:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L11*/ meltfnum[10])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L12*/ meltfnum[11] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2122:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[9];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L12*/ meltfnum[11];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2122;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_simple_ipa_execute curpassname=";
			      /*^apply.arg */
			      argtab[4].meltbp_cstring =
				/*_?*/ meltfram__.loc_CSTRING__o0;
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " mypass=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.MYPASS__V3*/ meltfptr[2];
			      /*^apply.arg */
			      argtab[7].meltbp_cstring = " passnum=";
			      /*^apply.arg */
			      argtab[8].meltbp_long =
				/*_#PASSNUM__L5*/ meltfnum[4];
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V8*/ meltfptr[7] =
			      /*_.MELT_DEBUG_FUN__V9*/ meltfptr[8];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2122:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L12*/ meltfnum[11] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V9*/ meltfptr[8] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V8*/ meltfptr[7] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2122:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L11*/ meltfnum[10] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V8*/ meltfptr[7] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2124:/ quasiblock");


		    /*^multiapply */
		    /*multiapply 2args, 1x.res */
		    {
		      union meltparam_un argtab[1];

		      union meltparam_un restab[1];
		      memset (&restab, 0, sizeof (restab));
		      memset (&argtab, 0, sizeof (argtab));
		      /*^multiapply.arg */
		      argtab[0].meltbp_long = /*_#PASSNUM__L5*/ meltfnum[4];
		      /*^multiapply.xres */
		      restab[0].meltbp_longptr =
			& /*_#FLAGEXEC__L14*/ meltfnum[10];
		      /*^multiapply.appl */
		      /*_.RESEXEC__V10*/ meltfptr[8] =
			melt_apply ((meltclosure_ptr_t)
				    ( /*_.EXECFUN__V6*/ meltfptr[5]),
				    (melt_ptr_t) ( /*_.MYPASS__V3*/
						  meltfptr[2]),
				    (MELTBPARSTR_LONG ""), argtab,
				    (MELTBPARSTR_LONG ""), restab);
		    }
		    ;
		    /*^quasiblock */



#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2127:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	  /*_#MELT_NEED_DBG__L15*/ meltfnum[14] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2127:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L15*/ meltfnum[14])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	    /*_#MELT_CALLCOUNT__L16*/ meltfnum[15] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2127:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L16*/ meltfnum[15];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2127;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_simple_ipa_execute after call resexec=";
			      /*^apply.arg */
			      argtab[4].meltbp_aptr =
				(melt_ptr_t *) & /*_.RESEXEC__V10*/
				meltfptr[8];
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " flagexec=";
			      /*^apply.arg */
			      argtab[6].meltbp_long =
				/*_#FLAGEXEC__L14*/ meltfnum[10];
			      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[4])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V11*/ meltfptr[7] =
			      /*_.MELT_DEBUG_FUN__V12*/ meltfptr[11];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2127:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L16*/ meltfnum[15] =
			      0;
			    /*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V12*/ meltfptr[11] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	   /*_._IF___V11*/ meltfptr[7] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2127:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L15*/ meltfnum[14] = 0;
		      /*^clear */
		    /*clear *//*_._IF___V11*/ meltfptr[7] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
	/*_#NULL__L17*/ meltfnum[15] =
		      (( /*_.RESEXEC__V10*/ meltfptr[8]) == NULL);;
		    MELT_LOCATION ("warmelt-hooks.melt:2129:/ cond");
		    /*cond */ if ( /*_#NULL__L17*/ meltfnum[15])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:2130:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L19*/ meltfnum[18] =
			    /*_#FLAGEXEC__L14*/ meltfnum[10];;
			  /*_#_IFELSE___L18*/ meltfnum[14] =
			    /*_#SETQ___L19*/ meltfnum[18];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2129:/ clear");
		    /*clear *//*_#SETQ___L19*/ meltfnum[18] = 0;
			}
			;
		      }
		    else
		      {		/*^cond.else */

			/*^block */
			/*anyblock */
			{

			  MELT_LOCATION ("warmelt-hooks.melt:2131:/ compute");
			  /*_#OKRES__L4*/ meltfnum[3] =
			    /*_#SETQ___L20*/ meltfnum[18] = 1;;
			  /*_#_IFELSE___L18*/ meltfnum[14] =
			    /*_#SETQ___L20*/ meltfnum[18];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2129:/ clear");
		    /*clear *//*_#SETQ___L20*/ meltfnum[18] = 0;
			}
			;
		      }
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
		    /*_#MULTI___L13*/ meltfnum[11] =
		      /*_#_IFELSE___L18*/ meltfnum[14];;

		    MELT_LOCATION ("warmelt-hooks.melt:2124:/ clear");
		  /*clear *//*_#NULL__L17*/ meltfnum[15] = 0;
		    /*^clear */
		  /*clear *//*_#_IFELSE___L18*/ meltfnum[14] = 0;

		    /*^clear */
		  /*clear *//*_#FLAGEXEC__L14*/ meltfnum[10] = 0;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:2133:/ locexp");
		      /*void */ (void) 0;
		    }
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2121:/ quasiblock");


		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:2115:/ clear");
		  /*clear *//*_#MULTI___L13*/ meltfnum[11] = 0;
		  }

		  meltgc_restore_dump_file (oldf);
		  oldf = NULL;
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2138:/ apply");
		/*apply */
		{
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11] =
		    melt_apply ((meltclosure_ptr_t)
				(( /*~RUN_ENDMELTPASS_FUNCTIONS */ meltfhook->
				  tabval[5])), (melt_ptr_t) (NULL), (""),
				(union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;
		MELT_LOCATION ("warmelt-hooks.melt:2114:/ quasiblock");


		/*_.PROGN___V14*/ meltfptr[7] =
		  /*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11];;
		/*^compute */
		/*_._IF___V7*/ meltfptr[6] = /*_.PROGN___V14*/ meltfptr[7];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2114:/ clear");
		/*clear *//*_.RUN_ENDMELTPASS_FUNCTIONS__V13*/ meltfptr[11] =
		  0;
		/*^clear */
		/*clear *//*_.PROGN___V14*/ meltfptr[7] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

     /*_._IF___V7*/ meltfptr[6] = NULL;;
	    }
	  ;
	  /*^compute */
	  /*_.LET___V5*/ meltfptr[4] = /*_._IF___V7*/ meltfptr[6];;

	  MELT_LOCATION ("warmelt-hooks.melt:2111:/ clear");
	      /*clear *//*_.EXECFUN__V6*/ meltfptr[5] = 0;
	  /*^clear */
	      /*clear *//*_?*/ meltfram__.loc_CSTRING__o0 = 0;
	  /*^clear */
	      /*clear *//*_#IS_CLOSURE__L10*/ meltfnum[9] = 0;
	  /*^clear */
	      /*clear *//*_._IF___V7*/ meltfptr[6] = 0;
	  /*_._IF___V4*/ meltfptr[3] = /*_.LET___V5*/ meltfptr[4];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2110:/ clear");
	      /*clear *//*_.LET___V5*/ meltfptr[4] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

   /*_._IF___V4*/ meltfptr[3] = NULL;;
      }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2140:/ quasiblock");


    /*_#_RESHOOK___L1*/ meltfnum[0] = /*_#OKRES__L4*/ meltfnum[3];;
    MELT_LOCATION ("warmelt-hooks.melt:2140:/ finalreturn");
    ;
    /*finalret */ goto meltlabend_rout;
    /*_#LET___L2*/ meltfnum[1] = /*_#RETURN___L21*/ meltfnum[18];;

    MELT_LOCATION ("warmelt-hooks.melt:2086:/ clear");
	    /*clear *//*_#HASMODEFLAG__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#OKRES__L4*/ meltfnum[3] = 0;
    /*^clear */
	    /*clear *//*_.PASSDICT__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.MYPASS__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#PASSNUM__L5*/ meltfnum[4] = 0;
    /*^clear */
	    /*clear *//*_#NOT__L6*/ meltfnum[5] = 0;
    /*^clear */
	    /*clear *//*_#_IF___L7*/ meltfnum[6] = 0;
    /*^clear */
	    /*clear *//*_#IS_A__L9*/ meltfnum[7] = 0;
    /*^clear */
	    /*clear *//*_._IF___V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_#RETURN___L21*/ meltfnum[18] = 0;
    /*epilog */

    MELT_LOCATION ("warmelt-hooks.melt:2083:/ clear");
	    /*clear *//*_#LET___L2*/ meltfnum[1] = 0;
  }
  ;
  /* epilogue of melthook_HOOK_SIMPLE_IPA_EXECUTE hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_SIMPLE_IPA_EXECUTE hook */
  melt_topframe = meltfram__.mcfr_prev;
  return
   /*_#_RESHOOK___L1*/ meltfnum[0];
}				/* end of melthook_HOOK_SIMPLE_IPA_EXECUTE hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_SIMPLE_IPA_EXECUTEhook */
void
melthookmark_HOOK_SIMPLE_IPA_EXECUTE_rout (struct melt_callframe_st
					   *meltcfram, int meltmarking)
{

  melthookframe_HOOK_SIMPLE_IPA_EXECUTE_t *meltframptr_
    = (melthookframe_HOOK_SIMPLE_IPA_EXECUTE_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_SIMPLE_IPA_EXECUTE good hash",
		  meltframptr_->mcfr_nbvar == -2192);
  if (meltmarking)
    {				/* marking hook HOOK_SIMPLE_IPA_EXECUTE */
      int meltix;
      for (meltix = 0; meltix < 14; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_SIMPLE_IPA_EXECUTE */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 14; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_SIMPLE_IPA_EXECUTE */
}				/* end  melthookmark_HOOK_SIMPLE_IPA_EXECUTE_rout */

/* frame for melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook: */
typedef struct meltframe_melthook_HOOK_MELT_ATTRIBUTE_DEFINER_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 16
  melt_ptr_t mcfr_varptr[16];
#define MELTFRAM_NBVARNUM 3
  long mcfr_varnum[3];
/*others*/
  tree loc_TREE__o0;
  tree loc_TREE__o1;
  const char *loc_CSTRING__o2;
  long _spare_;
}
melthookframe_HOOK_MELT_ATTRIBUTE_DEFINER_t;	/* end of hook frame melthook_HOOK_MELT_ATTRIBUTE_DEFINER */


/** implementation of hook melthook_HOOK_MELT_ATTRIBUTE_DEFINER */
void
melthook_HOOK_MELT_ATTRIBUTE_DEFINER (melt_ptr_t melthookdata,
				      tree meltinp0_DECL,
				      tree meltinp1_NAME,
				      melt_ptr_t meltinp2_ATTRSEQ,
				      const char *meltinp3_FILELOC,
				      long meltinp4_LINENO)
{				/* body of hook melthook_HOOK_MELT_ATTRIBUTE_DEFINER from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_MELT_ATTRIBUTE_DEFINER;
  long melt_thishookcall_counter_HOOK_MELT_ATTRIBUTE_DEFINER ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_MELT_ATTRIBUTE_DEFINER++;
#define meltcallcount melt_thishookcall_counter_HOOK_MELT_ATTRIBUTE_DEFINER
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_MELT_ATTRIBUTE_DEFINER_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_MELT_ATTRIBUTE_DEFINER */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -37 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_MELT_ATTRIBUTE_DEFINER_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_MELT_ATTRIBUTE_DEFINER*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */
  MELT_LOCATION ("warmelt-hooks.melt:2156:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_?*/ meltfram__.loc_TREE__o0 = /*gethookinput */ meltinp0_DECL;;
  /*^compute */
  /*_?*/ meltfram__.loc_TREE__o1 = /*gethookinput */ meltinp1_NAME;;
  /*^compute */
  /*_.ATTRSEQ__V2*/ meltfptr[1] = /*gethookinput */ meltinp2_ATTRSEQ;;
  /*^compute */
  /*_?*/ meltfram__.loc_CSTRING__o2 = /*gethookinput */ meltinp3_FILELOC;;
  /*^compute */
  /*_#LINENO__L1*/ meltfnum[0] = /*gethookinput */ meltinp4_LINENO;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:2162:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ATTRIBUTE_DEFINER_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ATTRIBUTE_DEFINER_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V3*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V3*/ meltfptr[2] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2163:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~ATTRIBUTE_DEFINER_DELAYED_QUEUE */ meltfhook->tabval[0])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[1])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~ATTRIBUTE_DEFINER_DELAYED_QUEUE */ meltfhook->
			   tabval[0])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V4*/ meltfptr[3] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V4*/ meltfptr[3] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V5*/ meltfptr[4] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[2]))));;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2165:/ quasiblock");


    /*^rawallocobj */
    /*rawallocobj */
    {
      melt_ptr_t newobj = 0;
      melt_raw_object_create (newobj,
			      (melt_ptr_t) (( /*~CLASS_REFERENCE */
					     meltfhook->tabval[3])), (1),
			      "CLASS_REFERENCE");
   /*_.INST__V7*/ meltfptr[6] =
	newobj;
    };
    ;
    /*^touchobj */

    melt_dbgtrace_written_object ( /*_.INST__V7*/ meltfptr[6],
				  "newly made instance");
    ;
    /*_.RESCONT__V6*/ meltfptr[5] = /*_.INST__V7*/ meltfptr[6];;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V3*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V8*/ meltfptr[7] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]))
	{
	  /*_.FIRSTPROC__V9*/ meltfptr[8] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V8*/ meltfptr[7]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L2*/ meltfnum[1] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.FIRSTPROC__V9*/ meltfptr[8])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2171:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L2*/ meltfnum[1])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2172:/ apply");
		/*apply */
		{
		  union meltparam_un argtab[5];
		  memset (&argtab, 0, sizeof (argtab));
		  /*^apply.arg */
		  argtab[0].meltbp_aptr =
		    (melt_ptr_t *) & /*_.RESCONT__V6*/ meltfptr[5];
		  /*^apply.arg */
		  argtab[1].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o0;
		  /*^apply.arg */
		  argtab[2].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o1;
		  /*^apply.arg */
		  argtab[3].meltbp_cstring =
		    /*_?*/ meltfram__.loc_CSTRING__o2;
		  /*^apply.arg */
		  argtab[4].meltbp_long = /*_#LINENO__L1*/ meltfnum[0];
		  /*_.FIRSTPROC__V11*/ meltfptr[10] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.FIRSTPROC__V9*/ meltfptr[8]),
				(melt_ptr_t) ( /*_.ATTRSEQ__V2*/ meltfptr[1]),
				(MELTBPARSTR_PTR MELTBPARSTR_TREE
				 MELTBPARSTR_TREE MELTBPARSTR_CSTRING
				 MELTBPARSTR_LONG ""), argtab, "",
				(union meltparam_un *) 0);
		}
		;
		/*_._IF___V10*/ meltfptr[9] =
		  /*_.FIRSTPROC__V11*/ meltfptr[10];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2171:/ clear");
	       /*clear *//*_.FIRSTPROC__V11*/ meltfptr[10] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_._IF___V10*/ meltfptr[9] = NULL;;
	    }
	  ;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.CURPAIR__V8*/ meltfptr[7] = NULL;
     /*_.FIRSTPROC__V9*/ meltfptr[8] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2168:/ clear");
	     /*clear *//*_.CURPAIR__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L2*/ meltfnum[1] = 0;
      /*^clear */
	     /*clear *//*_._IF___V10*/ meltfptr[9] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.CURPAIR__V12*/ meltfptr[10] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V4*/ meltfptr[3]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[10]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V12*/ meltfptr[10] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[10]))
	{
	  /*_.LASTPROC__V13*/ meltfptr[12] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[10]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L3*/ meltfnum[2] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V13*/ meltfptr[12])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2178:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L3*/ meltfnum[2])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V5*/ meltfptr[4]),
				       (melt_ptr_t) ( /*_.LASTPROC__V13*/
						     meltfptr[12]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.CURPAIR__V12*/ meltfptr[10] = NULL;
     /*_.LASTPROC__V13*/ meltfptr[12] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2175:/ clear");
	     /*clear *//*_.CURPAIR__V12*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L3*/ meltfnum[2] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.CURPAIR__V14*/ meltfptr[13] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V5*/ meltfptr[4]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V14*/ meltfptr[13]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V14*/ meltfptr[13] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V14*/ meltfptr[13]))
	{
	  /*_.LASTPROC__V15*/ meltfptr[14] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V14*/ meltfptr[13]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2183:/ apply");
	  /*apply */
	  {
	    union meltparam_un argtab[5];
	    memset (&argtab, 0, sizeof (argtab));
	    /*^apply.arg */
	    argtab[0].meltbp_aptr =
	      (melt_ptr_t *) & /*_.RESCONT__V6*/ meltfptr[5];
	    /*^apply.arg */
	    argtab[1].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o0;
	    /*^apply.arg */
	    argtab[2].meltbp_tree = /*_?*/ meltfram__.loc_TREE__o1;
	    /*^apply.arg */
	    argtab[3].meltbp_cstring = /*_?*/ meltfram__.loc_CSTRING__o2;
	    /*^apply.arg */
	    argtab[4].meltbp_long = /*_#LINENO__L1*/ meltfnum[0];
	    /*_.LASTPROC__V16*/ meltfptr[15] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.LASTPROC__V15*/ meltfptr[14]),
			  (melt_ptr_t) ( /*_.ATTRSEQ__V2*/ meltfptr[1]),
			  (MELTBPARSTR_PTR MELTBPARSTR_TREE MELTBPARSTR_TREE
			   MELTBPARSTR_CSTRING MELTBPARSTR_LONG ""), argtab,
			  "", (union meltparam_un *) 0);
	  }
	  ;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.CURPAIR__V14*/ meltfptr[13] = NULL;
     /*_.LASTPROC__V15*/ meltfptr[14] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2180:/ clear");
	     /*clear *//*_.CURPAIR__V14*/ meltfptr[13] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V15*/ meltfptr[14] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V16*/ meltfptr[15] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:2162:/ clear");
	    /*clear *//*_.FIRSTLIST__V3*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V4*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V5*/ meltfptr[4] = 0;
    /*^clear */
	    /*clear *//*_.RESCONT__V6*/ meltfptr[5] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_MELT_ATTRIBUTE_DEFINER hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_MELT_ATTRIBUTE_DEFINERhook */
void
melthookmark_HOOK_MELT_ATTRIBUTE_DEFINER_rout (struct melt_callframe_st
					       *meltcfram, int meltmarking)
{

  melthookframe_HOOK_MELT_ATTRIBUTE_DEFINER_t *meltframptr_
    = (melthookframe_HOOK_MELT_ATTRIBUTE_DEFINER_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_MELT_ATTRIBUTE_DEFINER good hash",
		  meltframptr_->mcfr_nbvar == -37);
  if (meltmarking)
    {				/* marking hook HOOK_MELT_ATTRIBUTE_DEFINER */
      int meltix;
      for (meltix = 0; meltix < 16; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
      if (meltframptr_->loc_TREE__o0)
	gt_ggc_mx_tree_node (meltframptr_->loc_TREE__o0);
      if (meltframptr_->loc_TREE__o1)
	gt_ggc_mx_tree_node (meltframptr_->loc_TREE__o1);
    }
  else /* copying hook HOOK_MELT_ATTRIBUTE_DEFINER */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 16; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_MELT_ATTRIBUTE_DEFINER */
}				/* end  melthookmark_HOOK_MELT_ATTRIBUTE_DEFINER_rout */

/* frame for melthook_HOOK_EXIT_FINALIZER hook: */
typedef struct meltframe_melthook_HOOK_EXIT_FINALIZER_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 14
  melt_ptr_t mcfr_varptr[14];
#define MELTFRAM_NBVARNUM 3
  long mcfr_varnum[3];
/*others*/
  long _spare_;
}
melthookframe_HOOK_EXIT_FINALIZER_t;	/* end of hook frame melthook_HOOK_EXIT_FINALIZER */


/** implementation of hook melthook_HOOK_EXIT_FINALIZER */
void
melthook_HOOK_EXIT_FINALIZER (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_EXIT_FINALIZER from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_EXIT_FINALIZER hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_EXIT_FINALIZER;
  long melt_thishookcall_counter_HOOK_EXIT_FINALIZER ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_EXIT_FINALIZER++;
#define meltcallcount melt_thishookcall_counter_HOOK_EXIT_FINALIZER
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_EXIT_FINALIZER_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_EXIT_FINALIZER */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2533 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_EXIT_FINALIZER_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_EXIT_FINALIZER*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_EXIT_FINALIZER hook */
  MELT_LOCATION ("warmelt-hooks.melt:2215:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:2217:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:2217:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2217:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 2217;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"hook_exit_finalizer final_exit_delayed_queue=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & ( /*~FINAL_EXIT_DELAYED_QUEUE */ meltfhook->
				  tabval[1]);
	      /*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V2*/ meltfptr[1] =
	      /*_.MELT_DEBUG_FUN__V3*/ meltfptr[2];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:2217:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V3*/ meltfptr[2] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V2*/ meltfptr[1] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:2217:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	      /*clear *//*_._IF___V2*/ meltfptr[1] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2218:/ quasiblock");


    /*^cond */
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINAL_EXIT_DELAYED_QUEUE */
					  meltfhook->tabval[1])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[2])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINAL_EXIT_DELAYED_QUEUE */ meltfhook->
			   tabval[1])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 2, "DELQU_FIRST");
    /*_.FIRSTLIST__V4*/ meltfptr[2] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.FIRSTLIST__V4*/ meltfptr[2] = NULL;;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2219:/ cond");
    /*cond */ if (
		   /*ifisa */
		   melt_is_instance_of ((melt_ptr_t)
					(( /*~FINAL_EXIT_DELAYED_QUEUE */
					  meltfhook->tabval[1])),
					(melt_ptr_t) (( /*~CLASS_DELAYED_QUEUE */ meltfhook->tabval[2])))
      )				/*then */
      {
	/*^cond.then */
	/*^getslot */
	{
	  melt_ptr_t slot = NULL, obj = NULL;
	  obj =
	    (melt_ptr_t) (( /*~FINAL_EXIT_DELAYED_QUEUE */ meltfhook->
			   tabval[1])) /*=obj*/ ;
	  melt_object_get_field (slot, obj, 3, "DELQU_LAST");
    /*_.LASTLIST__V5*/ meltfptr[1] = slot;
	};
	;
      }
    else
      {				/*^cond.else */

   /*_.LASTLIST__V5*/ meltfptr[1] = NULL;;
      }
    ;
    /*^compute */
  /*_.REVLASTLIST__V6*/ meltfptr[5] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[3]))));;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit1__EACHLIST */
      for ( /*_.CURPAIR__V7*/ meltfptr[6] =
	   melt_list_first ((melt_ptr_t) /*_.FIRSTLIST__V4*/ meltfptr[2]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V7*/ meltfptr[6]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V7*/ meltfptr[6] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V7*/ meltfptr[6]))
	{
	  /*_.FIRSTPROC__V8*/ meltfptr[7] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V7*/ meltfptr[6]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2226:/ apply");
	  /*apply */
	  {
	    /*_.FIRSTPROC__V9*/ meltfptr[8] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.FIRSTPROC__V8*/ meltfptr[7]),
			  (melt_ptr_t) (( /*nil */ NULL)), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	}			/* end foreach_in_list meltcit1__EACHLIST */
     /*_.CURPAIR__V7*/ meltfptr[6] = NULL;
     /*_.FIRSTPROC__V8*/ meltfptr[7] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2223:/ clear");
	     /*clear *//*_.CURPAIR__V7*/ meltfptr[6] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V8*/ meltfptr[7] = 0;
      /*^clear */
	     /*clear *//*_.FIRSTPROC__V9*/ meltfptr[8] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit2__EACHLIST */
      for ( /*_.CURPAIR__V10*/ meltfptr[9] =
	   melt_list_first ((melt_ptr_t) /*_.LASTLIST__V5*/ meltfptr[1]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V10*/ meltfptr[9]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V10*/ meltfptr[9] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V10*/ meltfptr[9]))
	{
	  /*_.LASTPROC__V11*/ meltfptr[10] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V10*/ meltfptr[9]);



	  MELT_CHECK_SIGNAL ();
	  ;
   /*_#IS_CLOSURE__L3*/ meltfnum[1] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.LASTPROC__V11*/ meltfptr[10])) ==
	     MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2232:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L3*/ meltfnum[1])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  meltgc_prepend_list ((melt_ptr_t)
				       ( /*_.REVLASTLIST__V6*/ meltfptr[5]),
				       (melt_ptr_t) ( /*_.LASTPROC__V11*/
						     meltfptr[10]));
		}
		;
		/*epilog */
	      }
	      ;
	    }			/*noelse */
	  ;
	}			/* end foreach_in_list meltcit2__EACHLIST */
     /*_.CURPAIR__V10*/ meltfptr[9] = NULL;
     /*_.LASTPROC__V11*/ meltfptr[10] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2229:/ clear");
	     /*clear *//*_.CURPAIR__V10*/ meltfptr[9] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V11*/ meltfptr[10] = 0;
      /*^clear */
	     /*clear *//*_#IS_CLOSURE__L3*/ meltfnum[1] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;
    /*citerblock FOREACH_IN_LIST */
    {
      /* start foreach_in_list meltcit3__EACHLIST */
      for ( /*_.CURPAIR__V12*/ meltfptr[11] =
	   melt_list_first ((melt_ptr_t) /*_.REVLASTLIST__V6*/ meltfptr[5]);
	   melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[11]) ==
	   MELTOBMAG_PAIR;
	   /*_.CURPAIR__V12*/ meltfptr[11] =
	   melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[11]))
	{
	  /*_.LASTPROC__V13*/ meltfptr[12] =
	    melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V12*/ meltfptr[11]);



	  MELT_CHECK_SIGNAL ();
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2237:/ apply");
	  /*apply */
	  {
	    /*_.LASTPROC__V14*/ meltfptr[13] =
	      melt_apply ((meltclosure_ptr_t)
			  ( /*_.LASTPROC__V13*/ meltfptr[12]),
			  (melt_ptr_t) (( /*nil */ NULL)), (""),
			  (union meltparam_un *) 0, "",
			  (union meltparam_un *) 0);
	  }
	  ;
	}			/* end foreach_in_list meltcit3__EACHLIST */
     /*_.CURPAIR__V12*/ meltfptr[11] = NULL;
     /*_.LASTPROC__V13*/ meltfptr[12] = NULL;


      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2234:/ clear");
	     /*clear *//*_.CURPAIR__V12*/ meltfptr[11] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V13*/ meltfptr[12] = 0;
      /*^clear */
	     /*clear *//*_.LASTPROC__V14*/ meltfptr[13] = 0;
    }				/*endciterblock FOREACH_IN_LIST */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:2218:/ clear");
	    /*clear *//*_.FIRSTLIST__V4*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.LASTLIST__V5*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_.REVLASTLIST__V6*/ meltfptr[5] = 0;

    MELT_CHECK_SIGNAL ();
    ;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_EXIT_FINALIZER hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_EXIT_FINALIZER hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_EXIT_FINALIZER hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_EXIT_FINALIZERhook */
void
melthookmark_HOOK_EXIT_FINALIZER_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_EXIT_FINALIZER_t *meltframptr_
    = (melthookframe_HOOK_EXIT_FINALIZER_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_EXIT_FINALIZER good hash",
		  meltframptr_->mcfr_nbvar == -2533);
  if (meltmarking)
    {				/* marking hook HOOK_EXIT_FINALIZER */
      int meltix;
      for (meltix = 0; meltix < 14; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_EXIT_FINALIZER */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 14; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_EXIT_FINALIZER */
}				/* end  melthookmark_HOOK_EXIT_FINALIZER_rout */

/* frame for melthook_HOOK_POLL_INPUTS hook: */
typedef struct meltframe_melthook_HOOK_POLL_INPUTS_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 38
  melt_ptr_t mcfr_varptr[38];
#define MELTFRAM_NBVARNUM 41
  long mcfr_varnum[41];
/*others*/
  long _spare_;
}
melthookframe_HOOK_POLL_INPUTS_t;	/* end of hook frame melthook_HOOK_POLL_INPUTS */


/** implementation of hook melthook_HOOK_POLL_INPUTS */
void
melthook_HOOK_POLL_INPUTS (melt_ptr_t melthookdata, long meltinp0_DELAYMS)
{				/* body of hook melthook_HOOK_POLL_INPUTS from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_POLL_INPUTS hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_POLL_INPUTS;
  long melt_thishookcall_counter_HOOK_POLL_INPUTS ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_POLL_INPUTS++;
#define meltcallcount melt_thishookcall_counter_HOOK_POLL_INPUTS
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_POLL_INPUTS_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_POLL_INPUTS */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -1576 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_POLL_INPUTS_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_POLL_INPUTS*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_POLL_INPUTS hook */
  MELT_LOCATION ("warmelt-hooks.melt:2423:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^compute */
  /*_#DELAYMS__L1*/ meltfnum[0] = /*gethookinput */ meltinp0_DELAYMS;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:2434:/ quasiblock");


  /*_.INCHBUCK__V2*/ meltfptr[1] =
      (melt_module_var_fetch (meltmodvarix_MELT_INPCHANBUCK_symb));;
    /*^compute */
  /*_#NBINCH__L2*/ meltfnum[1] =
      melt_longsbucket_count ((melt_ptr_t) /*_.INCHBUCK__V2*/ meltfptr[1]);;
    /*^compute */
  /*_#RESPOLL__L3*/ meltfnum[2] = 0;;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:2438:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L4*/ meltfnum[3] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:2438:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L4*/ meltfnum[3])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L5*/ meltfnum[4] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2438:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[7];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L5*/ meltfnum[4];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 2438;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring = "hook_poll_inputs inchbuck=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.INCHBUCK__V2*/ meltfptr[1];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = " delayms=";
	      /*^apply.arg */
	      argtab[6].meltbp_long = /*_#DELAYMS__L1*/ meltfnum[0];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:2438:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L5*/ meltfnum[4] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:2438:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L4*/ meltfnum[3] = 0;
      /*^clear */
	      /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
  /*_#eqeqI__L6*/ meltfnum[4] =
      (( /*_#NBINCH__L2*/ meltfnum[1]) == (0));;
    MELT_LOCATION ("warmelt-hooks.melt:2439:/ cond");
    /*cond */ if ( /*_#eqeqI__L6*/ meltfnum[4])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{


#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:2440:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
      /*_#MELT_NEED_DBG__L7*/ meltfnum[3] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:2440:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L7*/ meltfnum[3])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

	/*_#MELT_CALLCOUNT__L8*/ meltfnum[7] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:2440:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[4];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L8*/ meltfnum[7];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 2440;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring =
		      "hook_poll_inputs empty inchbuck";
		    /*_.MELT_DEBUG_FUN__V6*/ meltfptr[2] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""),
				  argtab, "", (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V5*/ meltfptr[3] =
		    /*_.MELT_DEBUG_FUN__V6*/ meltfptr[2];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:2440:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L8*/ meltfnum[7] = 0;
		  /*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V6*/ meltfptr[2] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

       /*_._IF___V5*/ meltfptr[3] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2440:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L7*/ meltfnum[3] = 0;
	    /*^clear */
		/*clear *//*_._IF___V5*/ meltfptr[3] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2441:/ locexp");
	    /* hook_poll_inputs POLLSLEEP_CHK__1 do the poll */
	    /*_#RESPOLL__L3*/ meltfnum[2] =
	      poll (NULL, 0, /*_#DELAYMS__L1*/ meltfnum[0]);
	    ;
	  }
	  ;
	  MELT_LOCATION ("warmelt-hooks.melt:2446:/ quasiblock");


	  /*^finalreturn */
	  ;
	  /*finalret */ goto meltlabend_rout;
	  MELT_LOCATION ("warmelt-hooks.melt:2439:/ quasiblock");


	  /*epilog */
	}
	;
      }				/*noelse */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2447:/ quasiblock");


  /*_.TUPINCH__V7*/ meltfptr[2] =
      (meltgc_new_multiple
       ((meltobject_ptr_t) (( /*~DISCR_MULTIPLE */ meltfhook->tabval[1])),
	( /*_#NBINCH__L2*/ meltfnum[1])));;
    /*^compute */
  /*_#NBFD__L9*/ meltfnum[7] = 0;;

    {
      MELT_LOCATION ("warmelt-hooks.melt:2451:/ locexp");
      /* hook_poll_inputs POLLIN_CHK__1 start */
      struct pollfd *fdtab
	=
	(struct pollfd *) xcalloc ( /*_#NBINCH__L2*/ meltfnum[1] + 1,
				   sizeof (struct pollfd));
      /* hook_poll_inputs POLLIN_CHK__1 iteration to fill fdtab */
      /*^block */
      /*anyblock */
      {

	/*citerblock FOREACH_IN_BUCKETLONG */
	{
	  /*foreach_in_bucketlong meltcit1__EACHBUCKLONG */ unsigned
	    meltcit1__EACHBUCKLONG_ix = 0, meltcit1__EACHBUCKLONG_cnt = 0;
  /*_#CURFD__L10*/ meltfnum[3] = 0L;
  /*_.CURINCHD__V8*/ meltfptr[3] = NULL;
	  for (meltcit1__EACHBUCKLONG_ix = 0;
	       /* retrieve in meltcit1__EACHBUCKLONG iteration the count, it might change! */
	       (meltcit1__EACHBUCKLONG_cnt =
		melt_longsbucket_count ((melt_ptr_t) /*_.INCHBUCK__V2*/
					meltfptr[1])) > 0
	       && meltcit1__EACHBUCKLONG_ix < meltcit1__EACHBUCKLONG_cnt;
	       meltcit1__EACHBUCKLONG_ix++)
	    {
     /*_#CURFD__L10*/ meltfnum[3] = 0L;
     /*_.CURINCHD__V8*/ meltfptr[3] = NULL;
	      {
		struct melt_bucketlongentry_st *meltcit1__EACHBUCKLONG_buent
		  =
		  ((struct meltbucketlongs_st *) /*_.INCHBUCK__V2*/
		   meltfptr[1])->buckl_entab + meltcit1__EACHBUCKLONG_ix;
		if (!meltcit1__EACHBUCKLONG_buent->ebl_va)
		  continue;
       /*_#CURFD__L10*/ meltfnum[3] =
		  meltcit1__EACHBUCKLONG_buent->ebl_at;
       /*_.CURINCHD__V8*/ meltfptr[3] =
		  meltcit1__EACHBUCKLONG_buent->ebl_va;
		meltcit1__EACHBUCKLONG_buent = NULL;
	      }
	      /*foreach_in_bucketlong meltcit1__EACHBUCKLONG body: */




#if MELT_HAVE_DEBUG
	      MELT_LOCATION ("warmelt-hooks.melt:2460:/ cppif.then");
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		  melt_dbgcounter++;
#endif
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
       /*_#MELT_NEED_DBG__L11*/ meltfnum[10] =
		  /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		  ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		  0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		  ;;
		MELT_LOCATION ("warmelt-hooks.melt:2460:/ cond");
		/*cond */ if ( /*_#MELT_NEED_DBG__L11*/ meltfnum[10])	/*then */
		  {
		    /*^cond.then */
		    /*^block */
		    /*anyblock */
		    {

	 /*_#MELT_CALLCOUNT__L12*/ meltfnum[11] =
			/* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			meltcallcount	/* melt_callcount debugging */
#else
			0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			;;

		      MELT_CHECK_SIGNAL ();
		      ;
		      MELT_LOCATION ("warmelt-hooks.melt:2460:/ apply");
		      /*apply */
		      {
			union meltparam_un argtab[7];
			memset (&argtab, 0, sizeof (argtab));
			/*^apply.arg */
			argtab[0].meltbp_long =
			  /*_#MELT_CALLCOUNT__L12*/ meltfnum[11];
			/*^apply.arg */
			argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			/*^apply.arg */
			argtab[2].meltbp_long = 2460;
			/*^apply.arg */
			argtab[3].meltbp_cstring = "hook_poll_inputs curfd#";
			/*^apply.arg */
			argtab[4].meltbp_long = /*_#CURFD__L10*/ meltfnum[3];
			/*^apply.arg */
			argtab[5].meltbp_cstring = ", curinchd=";
			/*^apply.arg */
			argtab[6].meltbp_aptr =
			  (melt_ptr_t *) & /*_.CURINCHD__V8*/ meltfptr[3];
			/*_.MELT_DEBUG_FUN__V10*/ meltfptr[9] =
			  melt_apply ((meltclosure_ptr_t)
				      (( /*~MELT_DEBUG_FUN */ meltfhook->
					tabval[0])),
				      (melt_ptr_t) (( /*nil */ NULL)),
				      (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_PTR ""), argtab, "",
				      (union meltparam_un *) 0);
		      }
		      ;
		      /*_._IF___V9*/ meltfptr[8] =
			/*_.MELT_DEBUG_FUN__V10*/ meltfptr[9];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2460:/ clear");
		   /*clear *//*_#MELT_CALLCOUNT__L12*/ meltfnum[11] = 0;
		      /*^clear */
		   /*clear *//*_.MELT_DEBUG_FUN__V10*/ meltfptr[9] = 0;
		    }
		    ;
		  }
		else
		  {		/*^cond.else */

	/*_._IF___V9*/ meltfptr[8] = NULL;;
		  }
		;

		{
		  MELT_LOCATION ("warmelt-hooks.melt:2460:/ locexp");
		  /*void */ (void) 0;
		}
		;
		/*^quasiblock */


		/*epilog */

		/*^clear */
		 /*clear *//*_#MELT_NEED_DBG__L11*/ meltfnum[10] = 0;
		/*^clear */
		 /*clear *//*_._IF___V9*/ meltfptr[8] = 0;
	      }

#else /*MELT_HAVE_DEBUG */
	      /*^cppif.else */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*void */ (void) 0;
		}
		;
		/*epilog */
	      }

#endif /*MELT_HAVE_DEBUG */
	      ;

	      MELT_CHECK_SIGNAL ();
	      ;
     /*_#IS_A__L13*/ meltfnum[11] =
		melt_is_instance_of ((melt_ptr_t)
				     ( /*_.CURINCHD__V8*/ meltfptr[3]),
				     (melt_ptr_t) (( /*~CLASS_INPUT_CHANNEL_HANDLER */ meltfhook->tabval[2])));;
	      MELT_LOCATION ("warmelt-hooks.melt:2461:/ cond");
	      /*cond */ if ( /*_#IS_A__L13*/ meltfnum[11])	/*then */
		{
		  /*^cond.then */
		  /*^block */
		  /*anyblock */
		  {


#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2462:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      MELT_CHECK_SIGNAL ();
		      ;
	 /*_#GET_INT__L15*/ meltfnum[14] =
			(melt_get_int
			 ((melt_ptr_t) ( /*_.CURINCHD__V8*/ meltfptr[3])));;
		      /*^compute */
	 /*_#eqeqI__L16*/ meltfnum[15] =
			(( /*_#GET_INT__L15*/ meltfnum[14]) ==
			 ( /*_#CURFD__L10*/ meltfnum[3]));;
		      MELT_LOCATION ("warmelt-hooks.melt:2462:/ cond");
		      /*cond */ if ( /*_#eqeqI__L16*/ meltfnum[15])	/*then */
			{
			  /*^cond.then */
			  /*_._IFELSE___V12*/ meltfptr[8] = ( /*nil */ NULL);;
			}
		      else
			{
			  MELT_LOCATION
			    ("warmelt-hooks.melt:2462:/ cond.else");

			  /*^block */
			  /*anyblock */
			  {




			    {
			      /*^locexp */
			      melt_assert_failed (("check curinchd"),
						  ("warmelt-hooks.melt")
						  ? ("warmelt-hooks.melt") :
						  __FILE__,
						  (2462) ? (2462) : __LINE__,
						  __FUNCTION__);
			      ;
			    }
			    ;
		     /*clear *//*_._IFELSE___V12*/ meltfptr[8] = 0;
			    /*epilog */
			  }
			  ;
			}
		      ;
		      /*^compute */
		      /*_.IFCPP___V11*/ meltfptr[9] =
			/*_._IFELSE___V12*/ meltfptr[8];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2462:/ clear");
		   /*clear *//*_#GET_INT__L15*/ meltfnum[14] = 0;
		      /*^clear */
		   /*clear *//*_#eqeqI__L16*/ meltfnum[15] = 0;
		      /*^clear */
		   /*clear *//*_._IFELSE___V12*/ meltfptr[8] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*_.IFCPP___V11*/ meltfptr[9] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
		    ;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:2463:/ locexp");
		      /* hook_poll_inputs POLLIN_CHK__1 with ADDFD_CHK__1 */
		      fdtab[ /*_#NBFD__L9*/ meltfnum[7]].fd =
			(int) /*_#CURFD__L10*/ meltfnum[3];
		      fdtab[ /*_#NBFD__L9*/ meltfnum[7]].events = POLLIN;
		      fdtab[ /*_#NBFD__L9*/ meltfnum[7]].revents = 0;
		      ;
		    }
		    ;

		    {
		      MELT_LOCATION ("warmelt-hooks.melt:2470:/ locexp");
		      meltgc_multiple_put_nth ((melt_ptr_t)
					       ( /*_.TUPINCH__V7*/
						meltfptr[2]),
					       ( /*_#NBFD__L9*/ meltfnum[7]),
					       (melt_ptr_t) ( /*_.CURINCHD__V8*/ meltfptr[3]));
		    }
		    ;
       /*_#plI__L17*/ meltfnum[14] =
		      (( /*_#NBFD__L9*/ meltfnum[7]) + (1));;
		    MELT_LOCATION ("warmelt-hooks.melt:2471:/ compute");
		    /*_#NBFD__L9*/ meltfnum[7] =
		      /*_#SETQ___L18*/ meltfnum[15] =
		      /*_#plI__L17*/ meltfnum[14];;
		    MELT_LOCATION ("warmelt-hooks.melt:2461:/ quasiblock");


		    /*_#PROGN___L19*/ meltfnum[18] =
		      /*_#SETQ___L18*/ meltfnum[15];;
		    /*^compute */
		    /*_#_IF___L14*/ meltfnum[10] =
		      /*_#PROGN___L19*/ meltfnum[18];;
		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:2461:/ clear");
		 /*clear *//*_.IFCPP___V11*/ meltfptr[9] = 0;
		    /*^clear */
		 /*clear *//*_#plI__L17*/ meltfnum[14] = 0;
		    /*^clear */
		 /*clear *//*_#SETQ___L18*/ meltfnum[15] = 0;
		    /*^clear */
		 /*clear *//*_#PROGN___L19*/ meltfnum[18] = 0;
		  }
		  ;
		}
	      else
		{		/*^cond.else */

      /*_#_IF___L14*/ meltfnum[10] = 0;;
		}
	      ;
	      /* ending foreach_in_bucketlong meltcit1__EACHBUCKLONG */
     /*_#CURFD__L10*/ meltfnum[3] = 0L;
     /*_.CURINCHD__V8*/ meltfptr[3] = NULL;
	    }			/* end foreach_in_bucketlong meltcit1__EACHBUCKLONG_ix */


	  /*citerepilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2457:/ clear");
	       /*clear *//*_#CURFD__L10*/ meltfnum[3] = 0;
	  /*^clear */
	       /*clear *//*_.CURINCHD__V8*/ meltfptr[3] = 0;
	  /*^clear */
	       /*clear *//*_#IS_A__L13*/ meltfnum[11] = 0;
	  /*^clear */
	       /*clear *//*_#_IF___L14*/ meltfnum[10] = 0;
	}			/*endciterblock FOREACH_IN_BUCKETLONG */
	;
	/*epilog */
      }

      MELT_LOCATION ("warmelt-hooks.melt:2451:/ block");
      /*anyblock */
      {


#if MELT_HAVE_DEBUG
	MELT_LOCATION ("warmelt-hooks.melt:2474:/ cppif.then");
	/*^block */
	/*anyblock */
	{


	  {
	    /*^locexp */
	    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	    melt_dbgcounter++;
#endif
	    ;
	  }
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
      /*_#MELT_NEED_DBG__L20*/ meltfnum[14] =
	    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	    0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	    ;;
	  MELT_LOCATION ("warmelt-hooks.melt:2474:/ cond");
	  /*cond */ if ( /*_#MELT_NEED_DBG__L20*/ meltfnum[14])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

	/*_#MELT_CALLCOUNT__L21*/ meltfnum[15] =
		  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		  meltcallcount	/* melt_callcount debugging */
#else
		  0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		  ;;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2474:/ apply");
		/*apply */
		{
		  union meltparam_un argtab[7];
		  memset (&argtab, 0, sizeof (argtab));
		  /*^apply.arg */
		  argtab[0].meltbp_long =
		    /*_#MELT_CALLCOUNT__L21*/ meltfnum[15];
		  /*^apply.arg */
		  argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		  /*^apply.arg */
		  argtab[2].meltbp_long = 2474;
		  /*^apply.arg */
		  argtab[3].meltbp_cstring = "hook_poll_inputs nbfd=";
		  /*^apply.arg */
		  argtab[4].meltbp_long = /*_#NBFD__L9*/ meltfnum[7];
		  /*^apply.arg */
		  argtab[5].meltbp_cstring = " tupinch=";
		  /*^apply.arg */
		  argtab[6].meltbp_aptr =
		    (melt_ptr_t *) & /*_.TUPINCH__V7*/ meltfptr[2];
		  /*_.MELT_DEBUG_FUN__V14*/ meltfptr[9] =
		    melt_apply ((meltclosure_ptr_t)
				(( /*~MELT_DEBUG_FUN */ meltfhook->
				  tabval[0])),
				(melt_ptr_t) (( /*nil */ NULL)),
				(MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_PTR ""), argtab, "",
				(union meltparam_un *) 0);
		}
		;
		/*_._IF___V13*/ meltfptr[8] =
		  /*_.MELT_DEBUG_FUN__V14*/ meltfptr[9];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2474:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L21*/ meltfnum[15] = 0;
		/*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V14*/ meltfptr[9] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

       /*_._IF___V13*/ meltfptr[8] = NULL;;
	    }
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2474:/ locexp");
	    /*void */ (void) 0;
	  }
	  ;
	  /*^quasiblock */


	  /*epilog */

	  /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L20*/ meltfnum[14] = 0;
	  /*^clear */
		/*clear *//*_._IF___V13*/ meltfptr[8] = 0;
	}

#else /*MELT_HAVE_DEBUG */
	/*^cppif.else */
	/*^block */
	/*anyblock */
	{


	  {
	    /*^locexp */
	    /*void */ (void) 0;
	  }
	  ;
	  /*epilog */
	}

#endif /*MELT_HAVE_DEBUG */
	;

	{
	  /*^locexp */
	  /*void */ (void) 0;
	}
	;
	/*^quasiblock */


	/*epilog */
      }

      /* hook_poll_inputs POLLIN_CHK__1 do the poll */
      /*_#RESPOLL__L3*/ meltfnum[2] =
	poll (fdtab, /*_#NBFD__L9*/ meltfnum[7], /*_#DELAYMS__L1*/
	      meltfnum[0]);
      debugeprintf ("hook_poll_inputs respoll=%ld", /*_#RESPOLL__L3*/
		    meltfnum[2]);
      MELT_LOCATION ("warmelt-hooks.melt:2451:/ block");
      /*anyblock */
      {


	MELT_CHECK_SIGNAL ();
	;
    /*_#gtI__L22*/ meltfnum[18] =
	  (( /*_#RESPOLL__L3*/ meltfnum[2]) > (0));;
	MELT_LOCATION ("warmelt-hooks.melt:2478:/ cond");
	/*cond */ if ( /*_#gtI__L22*/ meltfnum[18])	/*then */
	  {
	    /*^cond.then */
	    /*^block */
	    /*anyblock */
	    {

	      MELT_LOCATION ("warmelt-hooks.melt:2479:/ quasiblock");


      /*_.TUPSTATE__V15*/ meltfptr[9] =
		(meltgc_new_multiple
		 ((meltobject_ptr_t)
		  (( /*~DISCR_MULTIPLE */ meltfhook->tabval[1])),
		  ( /*_#NBFD__L9*/ meltfnum[7])));;
	      /*^compute */
      /*_.BADINCHLIST__V16*/ meltfptr[8] =
		(meltgc_new_list
		 ((meltobject_ptr_t)
		  (( /*~DISCR_LIST */ meltfhook->tabval[3]))));;
	      /*^compute */
      /*_#miI__L23*/ meltfnum[15] =
		(( /*_#NBFD__L9*/ meltfnum[7]) - (1));;
	      /*citerblock FOREACH_LONG_UPTO */
	      {
		/* foreach_long_upto start meltcit2__EACHLONG */
		long meltcit2__EACHLONG_min = 0;
		long meltcit2__EACHLONG_max = /*_#miI__L23*/ meltfnum[15];
		long meltcit2__EACHLONG_cur = 0;
		for (meltcit2__EACHLONG_cur = meltcit2__EACHLONG_min;
		     meltcit2__EACHLONG_cur <= meltcit2__EACHLONG_max;
		     meltcit2__EACHLONG_cur++)
		  {
	    /*_#IX__L24*/ meltfnum[14] = meltcit2__EACHLONG_cur;



		    MELT_LOCATION ("warmelt-hooks.melt:2486:/ quasiblock");


       /*_.CURINCHD__V18*/ meltfptr[17] =
		      (melt_multiple_nth
		       ((melt_ptr_t) ( /*_.TUPINCH__V7*/ meltfptr[2]),
			( /*_#IX__L24*/ meltfnum[14])));;

#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2488:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	 /*_#MELT_NEED_DBG__L25*/ meltfnum[24] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2488:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L25*/ meltfnum[24])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	   /*_#MELT_CALLCOUNT__L26*/ meltfnum[25] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2488:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[7];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L26*/ meltfnum[25];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2488;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_poll_inputs ix#";
			      /*^apply.arg */
			      argtab[4].meltbp_long =
				/*_#IX__L24*/ meltfnum[14];
			      /*^apply.arg */
			      argtab[5].meltbp_cstring = " curinchd=";
			      /*^apply.arg */
			      argtab[6].meltbp_aptr =
				(melt_ptr_t *) & /*_.CURINCHD__V18*/
				meltfptr[17];
			      /*_.MELT_DEBUG_FUN__V20*/ meltfptr[19] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[0])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V19*/ meltfptr[18] =
			      /*_.MELT_DEBUG_FUN__V20*/ meltfptr[19];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2488:/ clear");
		     /*clear *//*_#MELT_CALLCOUNT__L26*/ meltfnum[25] =
			      0;
			    /*^clear */
		     /*clear *//*_.MELT_DEBUG_FUN__V20*/ meltfptr[19] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	  /*_._IF___V19*/ meltfptr[18] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2488:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		   /*clear *//*_#MELT_NEED_DBG__L25*/ meltfnum[24] = 0;
		      /*^clear */
		   /*clear *//*_._IF___V19*/ meltfptr[18] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;

		    MELT_CHECK_SIGNAL ();
		    ;
       /*_#TESTPOLLIN_CHK__L27*/ meltfnum[25] =
		      /* hook_poll_inputs TESTPOLLIN_CHK__1 */
		      fdtab[ /*_#IX__L24*/ meltfnum[14]].revents & POLLIN;;
		    MELT_LOCATION ("warmelt-hooks.melt:2490:/ cond");
		    /*cond */ if ( /*_#TESTPOLLIN_CHK__L27*/ meltfnum[25])	/*then */
		      {
			/*^cond.then */
			/*^block */
			/*anyblock */
			{


#if MELT_HAVE_DEBUG
			  MELT_LOCATION
			    ("warmelt-hooks.melt:2493:/ cppif.then");
			  /*^block */
			  /*anyblock */
			  {


			    {
			      /*^locexp */
			      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			      melt_dbgcounter++;
#endif
			      ;
			    }
			    ;

			    MELT_CHECK_SIGNAL ();
			    ;
	   /*_#MELT_NEED_DBG__L28*/ meltfnum[24] =
			      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			      0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			      ;;
			    MELT_LOCATION ("warmelt-hooks.melt:2493:/ cond");
			    /*cond */ if ( /*_#MELT_NEED_DBG__L28*/ meltfnum[24])	/*then */
			      {
				/*^cond.then */
				/*^block */
				/*anyblock */
				{

	     /*_#MELT_CALLCOUNT__L29*/ meltfnum[28] =
				    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
				    meltcallcount	/* melt_callcount debugging */
#else
				    0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
				    ;;

				  MELT_CHECK_SIGNAL ();
				  ;
				  MELT_LOCATION
				    ("warmelt-hooks.melt:2493:/ apply");
				  /*apply */
				  {
				    union meltparam_un argtab[5];
				    memset (&argtab, 0, sizeof (argtab));
				    /*^apply.arg */
				    argtab[0].meltbp_long =
				      /*_#MELT_CALLCOUNT__L29*/ meltfnum[28];
				    /*^apply.arg */
				    argtab[1].meltbp_cstring =
				      "warmelt-hooks.melt";
				    /*^apply.arg */
				    argtab[2].meltbp_long = 2493;
				    /*^apply.arg */
				    argtab[3].meltbp_cstring =
				      "hook_poll_inputs POLLIN ix#";
				    /*^apply.arg */
				    argtab[4].meltbp_long =
				      /*_#IX__L24*/ meltfnum[14];
				    /*_.MELT_DEBUG_FUN__V23*/ meltfptr[22] =
				      melt_apply ((meltclosure_ptr_t)
						  (( /*~MELT_DEBUG_FUN */
						    meltfhook->tabval[0])),
						  (melt_ptr_t) (( /*nil */
								 NULL)),
						  (MELTBPARSTR_LONG
						   MELTBPARSTR_CSTRING
						   MELTBPARSTR_LONG
						   MELTBPARSTR_CSTRING
						   MELTBPARSTR_LONG ""),
						  argtab, "",
						  (union meltparam_un *) 0);
				  }
				  ;
				  /*_._IF___V22*/ meltfptr[18] =
				    /*_.MELT_DEBUG_FUN__V23*/ meltfptr[22];;
				  /*epilog */

				  MELT_LOCATION
				    ("warmelt-hooks.melt:2493:/ clear");
		       /*clear *//*_#MELT_CALLCOUNT__L29*/
				    meltfnum[28] = 0;
				  /*^clear */
		       /*clear *//*_.MELT_DEBUG_FUN__V23*/
				    meltfptr[22] = 0;
				}
				;
			      }
			    else
			      {	/*^cond.else */

	    /*_._IF___V22*/ meltfptr[18] = NULL;;
			      }
			    ;

			    {
			      MELT_LOCATION
				("warmelt-hooks.melt:2493:/ locexp");
			      /*void */ (void) 0;
			    }
			    ;
			    /*^quasiblock */


			    /*epilog */

			    /*^clear */
		     /*clear *//*_#MELT_NEED_DBG__L28*/ meltfnum[24] =
			      0;
			    /*^clear */
		     /*clear *//*_._IF___V22*/ meltfptr[18] = 0;
			  }

#else /*MELT_HAVE_DEBUG */
			  /*^cppif.else */
			  /*^block */
			  /*anyblock */
			  {


			    {
			      /*^locexp */
			      /*void */ (void) 0;
			    }
			    ;
			    /*epilog */
			  }

#endif /*MELT_HAVE_DEBUG */
			  ;

			  {
			    MELT_LOCATION
			      ("warmelt-hooks.melt:2494:/ locexp");
			    meltgc_multiple_put_nth ((melt_ptr_t)
						     ( /*_.TUPSTATE__V15*/
						      meltfptr[9]),
						     ( /*_#IX__L24*/
						      meltfnum[14]),
						     (melt_ptr_t) ( /*hooknth */ MELT_HOOK_NTH_SLOT (" fromhook _HOOKDATA___V1 #5", ( /*_._HOOKDATA___V1*/ meltfptr[0]), /*rank= */ (5))));
			  }
			  ;
			  MELT_LOCATION
			    ("warmelt-hooks.melt:2490:/ quasiblock");


			  /*epilog */
			}
			;
		      }
		    else
		      {		/*^cond.else */

			/*^block */
			/*anyblock */
			{


			  MELT_CHECK_SIGNAL ();
			  ;
	 /*_#TESTPOLLNVAL_CHK__L30*/ meltfnum[28] =
			    /* hook_poll_inputs TESTPOLLNVAL_CHK__1 */
			    fdtab[ /*_#IX__L24*/ meltfnum[14]].
			    revents & POLLNVAL;;
			  MELT_LOCATION ("warmelt-hooks.melt:2497:/ cond");
			  /*cond */ if ( /*_#TESTPOLLNVAL_CHK__L30*/ meltfnum[28])	/*then */
			    {
			      /*^cond.then */
			      /*^block */
			      /*anyblock */
			      {


#if MELT_HAVE_DEBUG
				MELT_LOCATION
				  ("warmelt-hooks.melt:2500:/ cppif.then");
				/*^block */
				/*anyblock */
				{


				  {
				    /*^locexp */
				    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
				    melt_dbgcounter++;
#endif
				    ;
				  }
				  ;

				  MELT_CHECK_SIGNAL ();
				  ;
	     /*_#MELT_NEED_DBG__L31*/ meltfnum[24] =
				    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
				    ( /*melt_need_dbg */
				     melt_need_debug ((int) 0))
#else
				    0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
				    ;;
				  MELT_LOCATION
				    ("warmelt-hooks.melt:2500:/ cond");
				  /*cond */ if ( /*_#MELT_NEED_DBG__L31*/ meltfnum[24])	/*then */
				    {
				      /*^cond.then */
				      /*^block */
				      /*anyblock */
				      {

	       /*_#MELT_CALLCOUNT__L32*/ meltfnum[31]
					  =
					  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
					  meltcallcount	/* melt_callcount debugging */
#else
					  0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
					  ;;

					MELT_CHECK_SIGNAL ();
					;
					MELT_LOCATION
					  ("warmelt-hooks.melt:2500:/ apply");
					/*apply */
					{
					  union meltparam_un argtab[5];
					  memset (&argtab, 0,
						  sizeof (argtab));
					  /*^apply.arg */
					  argtab[0].meltbp_long =
					    /*_#MELT_CALLCOUNT__L32*/
					    meltfnum[31];
					  /*^apply.arg */
					  argtab[1].meltbp_cstring =
					    "warmelt-hooks.melt";
					  /*^apply.arg */
					  argtab[2].meltbp_long = 2500;
					  /*^apply.arg */
					  argtab[3].meltbp_cstring =
					    "hook_poll_inputs POLLNVAL ix#";
					  /*^apply.arg */
					  argtab[4].meltbp_long =
					    /*_#IX__L24*/ meltfnum[14];
					  /*_.MELT_DEBUG_FUN__V26*/
					    meltfptr[25] =
					    melt_apply ((meltclosure_ptr_t)
							(( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])), (melt_ptr_t) (( /*nil */ NULL)), (MELTBPARSTR_LONG MELTBPARSTR_CSTRING MELTBPARSTR_LONG MELTBPARSTR_CSTRING MELTBPARSTR_LONG ""), argtab, "", (union meltparam_un *) 0);
					}
					;
					/*_._IF___V25*/ meltfptr[18] =
					  /*_.MELT_DEBUG_FUN__V26*/
					  meltfptr[25];;
					/*epilog */

					MELT_LOCATION
					  ("warmelt-hooks.melt:2500:/ clear");
			 /*clear *//*_#MELT_CALLCOUNT__L32*/
					  meltfnum[31] = 0;
					/*^clear */
			 /*clear *//*_.MELT_DEBUG_FUN__V26*/
					  meltfptr[25] = 0;
				      }
				      ;
				    }
				  else
				    {	/*^cond.else */

	      /*_._IF___V25*/ meltfptr[18] = NULL;;
				    }
				  ;

				  {
				    MELT_LOCATION
				      ("warmelt-hooks.melt:2500:/ locexp");
				    /*void */ (void) 0;
				  }
				  ;
				  /*^quasiblock */


				  /*epilog */

				  /*^clear */
		       /*clear *//*_#MELT_NEED_DBG__L31*/
				    meltfnum[24] = 0;
				  /*^clear */
		       /*clear *//*_._IF___V25*/ meltfptr[18] = 0;
				}

#else /*MELT_HAVE_DEBUG */
				/*^cppif.else */
				/*^block */
				/*anyblock */
				{


				  {
				    /*^locexp */
				    /*void */ (void) 0;
				  }
				  ;
				  /*epilog */
				}

#endif /*MELT_HAVE_DEBUG */
				;

				{
				  MELT_LOCATION
				    ("warmelt-hooks.melt:2501:/ locexp");
				  meltgc_multiple_put_nth ((melt_ptr_t)
							   ( /*_.TUPSTATE__V15*/ meltfptr[9]), ( /*_#IX__L24*/ meltfnum[14]), (melt_ptr_t) (( /*nil */ NULL)));
				}
				;

				{
				  MELT_LOCATION
				    ("warmelt-hooks.melt:2502:/ locexp");
				  meltgc_append_list ((melt_ptr_t)
						      ( /*_.BADINCHLIST__V16*/
						       meltfptr[8]),
						      (melt_ptr_t) ( /*_.CURINCHD__V18*/ meltfptr[17]));
				}
				;
				MELT_LOCATION
				  ("warmelt-hooks.melt:2497:/ quasiblock");


				/*epilog */
			      }
			      ;
			    }
			  else
			    {	/*^cond.else */

	  /*_._IFELSE___V24*/ meltfptr[22] = NULL;;
			    }
			  ;
			  /*^compute */
			  /*_._IFELSE___V21*/ meltfptr[19] =
			    /*_._IFELSE___V24*/ meltfptr[22];;
			  /*epilog */

			  MELT_LOCATION ("warmelt-hooks.melt:2490:/ clear");
		   /*clear *//*_#TESTPOLLNVAL_CHK__L30*/ meltfnum[28] =
			    0;
			  /*^clear */
		   /*clear *//*_._IFELSE___V24*/ meltfptr[22] = 0;
			}
			;
		      }
		    ;
		    /*_.LET___V17*/ meltfptr[16] =
		      /*_._IFELSE___V21*/ meltfptr[19];;

		    MELT_LOCATION ("warmelt-hooks.melt:2486:/ clear");
		 /*clear *//*_.CURINCHD__V18*/ meltfptr[17] = 0;
		    /*^clear */
		 /*clear *//*_#TESTPOLLIN_CHK__L27*/ meltfnum[25] = 0;
		    /*^clear */
		 /*clear *//*_._IFELSE___V21*/ meltfptr[19] = 0;
		  }		/*end foreach_long_upto meltcit2__EACHLONG */

		/*citerepilog */

		MELT_LOCATION ("warmelt-hooks.melt:2483:/ clear");
		 /*clear *//*_#IX__L24*/ meltfnum[14] = 0;
		/*^clear */
		 /*clear *//*_.LET___V17*/ meltfptr[16] = 0;
	      }			/*endciterblock FOREACH_LONG_UPTO */
	      ;

#if MELT_HAVE_DEBUG
	      MELT_LOCATION ("warmelt-hooks.melt:2506:/ cppif.then");
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		  melt_dbgcounter++;
#endif
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
	/*_#MELT_NEED_DBG__L33*/ meltfnum[31] =
		  /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		  ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		  0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		  ;;
		MELT_LOCATION ("warmelt-hooks.melt:2506:/ cond");
		/*cond */ if ( /*_#MELT_NEED_DBG__L33*/ meltfnum[31])	/*then */
		  {
		    /*^cond.then */
		    /*^block */
		    /*anyblock */
		    {

	  /*_#MELT_CALLCOUNT__L34*/ meltfnum[24] =
			/* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			meltcallcount	/* melt_callcount debugging */
#else
			0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			;;

		      MELT_CHECK_SIGNAL ();
		      ;
		      MELT_LOCATION ("warmelt-hooks.melt:2506:/ apply");
		      /*apply */
		      {
			union meltparam_un argtab[9];
			memset (&argtab, 0, sizeof (argtab));
			/*^apply.arg */
			argtab[0].meltbp_long =
			  /*_#MELT_CALLCOUNT__L34*/ meltfnum[24];
			/*^apply.arg */
			argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			/*^apply.arg */
			argtab[2].meltbp_long = 2506;
			/*^apply.arg */
			argtab[3].meltbp_cstring = "hook_poll_inputs nbfd#";
			/*^apply.arg */
			argtab[4].meltbp_long = /*_#NBFD__L9*/ meltfnum[7];
			/*^apply.arg */
			argtab[5].meltbp_cstring = "\n.. tupstate=";
			/*^apply.arg */
			argtab[6].meltbp_aptr =
			  (melt_ptr_t *) & /*_.TUPSTATE__V15*/ meltfptr[9];
			/*^apply.arg */
			argtab[7].meltbp_cstring = "\n.. badinchlist=";
			/*^apply.arg */
			argtab[8].meltbp_aptr =
			  (melt_ptr_t *) & /*_.BADINCHLIST__V16*/ meltfptr[8];
			/*_.MELT_DEBUG_FUN__V28*/ meltfptr[18] =
			  melt_apply ((meltclosure_ptr_t)
				      (( /*~MELT_DEBUG_FUN */ meltfhook->
					tabval[0])),
				      (melt_ptr_t) (( /*nil */ NULL)),
				      (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				       MELTBPARSTR_PTR ""), argtab, "",
				      (union meltparam_un *) 0);
		      }
		      ;
		      /*_._IF___V27*/ meltfptr[25] =
			/*_.MELT_DEBUG_FUN__V28*/ meltfptr[18];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2506:/ clear");
		    /*clear *//*_#MELT_CALLCOUNT__L34*/ meltfnum[24] = 0;
		      /*^clear */
		    /*clear *//*_.MELT_DEBUG_FUN__V28*/ meltfptr[18] = 0;
		    }
		    ;
		  }
		else
		  {		/*^cond.else */

	 /*_._IF___V27*/ meltfptr[25] = NULL;;
		  }
		;

		{
		  MELT_LOCATION ("warmelt-hooks.melt:2506:/ locexp");
		  /*void */ (void) 0;
		}
		;
		/*^quasiblock */


		/*epilog */

		/*^clear */
		  /*clear *//*_#MELT_NEED_DBG__L33*/ meltfnum[31] = 0;
		/*^clear */
		  /*clear *//*_._IF___V27*/ meltfptr[25] = 0;
	      }

#else /*MELT_HAVE_DEBUG */
	      /*^cppif.else */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*void */ (void) 0;
		}
		;
		/*epilog */
	      }

#endif /*MELT_HAVE_DEBUG */
	      ;
	      /*citerblock FOREACH_IN_LIST */
	      {
		/* start foreach_in_list meltcit3__EACHLIST */
		for ( /*_.CURPAIR__V29*/ meltfptr[22] =
		     melt_list_first ((melt_ptr_t) /*_.BADINCHLIST__V16*/
				      meltfptr[8]);
		     melt_magic_discr ((melt_ptr_t) /*_.CURPAIR__V29*/
				       meltfptr[22]) == MELTOBMAG_PAIR;
		     /*_.CURPAIR__V29*/ meltfptr[22] =
		     melt_pair_tail ((melt_ptr_t) /*_.CURPAIR__V29*/
				     meltfptr[22]))
		  {
		    /*_.CURINCHB__V30*/ meltfptr[17] =
		      melt_pair_head ((melt_ptr_t) /*_.CURPAIR__V29*/
				      meltfptr[22]);



#if MELT_HAVE_DEBUG
		    MELT_LOCATION ("warmelt-hooks.melt:2512:/ cppif.then");
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			melt_dbgcounter++;
#endif
			;
		      }
		      ;

		      MELT_CHECK_SIGNAL ();
		      ;
	 /*_#MELT_NEED_DBG__L35*/ meltfnum[28] =
			/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			;;
		      MELT_LOCATION ("warmelt-hooks.melt:2512:/ cond");
		      /*cond */ if ( /*_#MELT_NEED_DBG__L35*/ meltfnum[28])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	   /*_#MELT_CALLCOUNT__L36*/ meltfnum[25] =
			      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			      meltcallcount	/* melt_callcount debugging */
#else
			      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			      ;;

			    MELT_CHECK_SIGNAL ();
			    ;
			    MELT_LOCATION ("warmelt-hooks.melt:2512:/ apply");
			    /*apply */
			    {
			      union meltparam_un argtab[5];
			      memset (&argtab, 0, sizeof (argtab));
			      /*^apply.arg */
			      argtab[0].meltbp_long =
				/*_#MELT_CALLCOUNT__L36*/ meltfnum[25];
			      /*^apply.arg */
			      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			      /*^apply.arg */
			      argtab[2].meltbp_long = 2512;
			      /*^apply.arg */
			      argtab[3].meltbp_cstring =
				"hook_poll_inputs bad curinchb=";
			      /*^apply.arg */
			      argtab[4].meltbp_aptr =
				(melt_ptr_t *) & /*_.CURINCHB__V30*/
				meltfptr[17];
			      /*_.MELT_DEBUG_FUN__V32*/ meltfptr[18] =
				melt_apply ((meltclosure_ptr_t)
					    (( /*~MELT_DEBUG_FUN */
					      meltfhook->tabval[0])),
					    (melt_ptr_t) (( /*nil */ NULL)),
					    (MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_LONG
					     MELTBPARSTR_CSTRING
					     MELTBPARSTR_PTR ""), argtab, "",
					    (union meltparam_un *) 0);
			    }
			    ;
			    /*_._IF___V31*/ meltfptr[19] =
			      /*_.MELT_DEBUG_FUN__V32*/ meltfptr[18];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2512:/ clear");
		     /*clear *//*_#MELT_CALLCOUNT__L36*/ meltfnum[25] =
			      0;
			    /*^clear */
		     /*clear *//*_.MELT_DEBUG_FUN__V32*/ meltfptr[18] =
			      0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	  /*_._IF___V31*/ meltfptr[19] = NULL;;
			}
		      ;

		      {
			MELT_LOCATION ("warmelt-hooks.melt:2512:/ locexp");
			/*void */ (void) 0;
		      }
		      ;
		      /*^quasiblock */


		      /*epilog */

		      /*^clear */
		   /*clear *//*_#MELT_NEED_DBG__L35*/ meltfnum[28] = 0;
		      /*^clear */
		   /*clear *//*_._IF___V31*/ meltfptr[19] = 0;
		    }

#else /*MELT_HAVE_DEBUG */
		    /*^cppif.else */
		    /*^block */
		    /*anyblock */
		    {


		      {
			/*^locexp */
			/*void */ (void) 0;
		      }
		      ;
		      /*epilog */
		    }

#endif /*MELT_HAVE_DEBUG */
		    ;
       /*_#GET_INT__L37*/ meltfnum[24] =
		      (melt_get_int
		       ((melt_ptr_t) ( /*_.CURINCHB__V30*/ meltfptr[17])));;
		    /*^compute */
       /*_.BUCKETLONG_PUT__V33*/ meltfptr[25] =
		      meltgc_longsbucket_put ((melt_ptr_t) /*_.INCHBUCK__V2*/
					      meltfptr[1],
					      ( /*_#GET_INT__L37*/
					       meltfnum[24]),
					      (melt_ptr_t) /*hooknth */
					      MELT_HOOK_NTH_SLOT
					      (" fromhook _HOOKDATA___V1 #5",
					       ( /*_._HOOKDATA___V1*/
						meltfptr[0]), /*rank= */ 
					       (5)));;
		  }		/* end foreach_in_list meltcit3__EACHLIST */
     /*_.CURPAIR__V29*/ meltfptr[22] = NULL;
     /*_.CURINCHB__V30*/ meltfptr[17] = NULL;


		/*citerepilog */

		MELT_LOCATION ("warmelt-hooks.melt:2509:/ clear");
		 /*clear *//*_.CURPAIR__V29*/ meltfptr[22] = 0;
		/*^clear */
		 /*clear *//*_.CURINCHB__V30*/ meltfptr[17] = 0;
		/*^clear */
		 /*clear *//*_#GET_INT__L37*/ meltfnum[24] = 0;
		/*^clear */
		 /*clear *//*_.BUCKETLONG_PUT__V33*/ meltfptr[25] = 0;
	      }			/*endciterblock FOREACH_IN_LIST */
	      ;

#if MELT_HAVE_DEBUG
	      MELT_LOCATION ("warmelt-hooks.melt:2515:/ cppif.then");
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		  melt_dbgcounter++;
#endif
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
	/*_#MELT_NEED_DBG__L38*/ meltfnum[31] =
		  /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		  ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		  0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		  ;;
		MELT_LOCATION ("warmelt-hooks.melt:2515:/ cond");
		/*cond */ if ( /*_#MELT_NEED_DBG__L38*/ meltfnum[31])	/*then */
		  {
		    /*^cond.then */
		    /*^block */
		    /*anyblock */
		    {

	  /*_#MELT_CALLCOUNT__L39*/ meltfnum[25] =
			/* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			meltcallcount	/* melt_callcount debugging */
#else
			0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			;;

		      MELT_CHECK_SIGNAL ();
		      ;
		      MELT_LOCATION ("warmelt-hooks.melt:2515:/ apply");
		      /*apply */
		      {
			union meltparam_un argtab[9];
			memset (&argtab, 0, sizeof (argtab));
			/*^apply.arg */
			argtab[0].meltbp_long =
			  /*_#MELT_CALLCOUNT__L39*/ meltfnum[25];
			/*^apply.arg */
			argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			/*^apply.arg */
			argtab[2].meltbp_long = 2515;
			/*^apply.arg */
			argtab[3].meltbp_cstring =
			  "hook_poll_inputs before melt_invoke_input_callbacks tupinch=";
			/*^apply.arg */
			argtab[4].meltbp_aptr =
			  (melt_ptr_t *) & /*_.TUPINCH__V7*/ meltfptr[2];
			/*^apply.arg */
			argtab[5].meltbp_cstring = "\n.. tupstate=";
			/*^apply.arg */
			argtab[6].meltbp_aptr =
			  (melt_ptr_t *) & /*_.TUPSTATE__V15*/ meltfptr[9];
			/*^apply.arg */
			argtab[7].meltbp_cstring = "\n.. nbfd=";
			/*^apply.arg */
			argtab[8].meltbp_long = /*_#NBFD__L9*/ meltfnum[7];
			/*_.MELT_DEBUG_FUN__V35*/ meltfptr[19] =
			  melt_apply ((meltclosure_ptr_t)
				      (( /*~MELT_DEBUG_FUN */ meltfhook->
					tabval[0])),
				      (melt_ptr_t) (( /*nil */ NULL)),
				      (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				       MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG ""), argtab, "",
				      (union meltparam_un *) 0);
		      }
		      ;
		      /*_._IF___V34*/ meltfptr[18] =
			/*_.MELT_DEBUG_FUN__V35*/ meltfptr[19];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2515:/ clear");
		    /*clear *//*_#MELT_CALLCOUNT__L39*/ meltfnum[25] = 0;
		      /*^clear */
		    /*clear *//*_.MELT_DEBUG_FUN__V35*/ meltfptr[19] = 0;
		    }
		    ;
		  }
		else
		  {		/*^cond.else */

	 /*_._IF___V34*/ meltfptr[18] = NULL;;
		  }
		;

		{
		  MELT_LOCATION ("warmelt-hooks.melt:2515:/ locexp");
		  /*void */ (void) 0;
		}
		;
		/*^quasiblock */


		/*epilog */

		/*^clear */
		  /*clear *//*_#MELT_NEED_DBG__L38*/ meltfnum[31] = 0;
		/*^clear */
		  /*clear *//*_._IF___V34*/ meltfptr[18] = 0;
	      }

#else /*MELT_HAVE_DEBUG */
	      /*^cppif.else */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*void */ (void) 0;
		}
		;
		/*epilog */
	      }

#endif /*MELT_HAVE_DEBUG */
	      ;

	      MELT_CHECK_SIGNAL ();
	      ;
	      MELT_LOCATION ("warmelt-hooks.melt:2517:/ apply");
	      /*apply */
	      {
		union meltparam_un argtab[2];
		memset (&argtab, 0, sizeof (argtab));
		/*^apply.arg */
		argtab[0].meltbp_aptr =
		  (melt_ptr_t *) & /*_.TUPSTATE__V15*/ meltfptr[9];
		/*^apply.arg */
		argtab[1].meltbp_long = /*_#NBFD__L9*/ meltfnum[7];
		/*_.MELT_INVOKE_INPUT_CALLBACKS__V36*/ meltfptr[19] =
		  melt_apply ((meltclosure_ptr_t)
			      (( /*~MELT_INVOKE_INPUT_CALLBACKS */ meltfhook->
				tabval[4])),
			      (melt_ptr_t) ( /*_.TUPINCH__V7*/ meltfptr[2]),
			      (MELTBPARSTR_PTR MELTBPARSTR_LONG ""), argtab,
			      "", (union meltparam_un *) 0);
	      }
	      ;

#if MELT_HAVE_DEBUG
	      MELT_LOCATION ("warmelt-hooks.melt:2518:/ cppif.then");
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		  melt_dbgcounter++;
#endif
		  ;
		}
		;

		MELT_CHECK_SIGNAL ();
		;
	/*_#MELT_NEED_DBG__L40*/ meltfnum[28] =
		  /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		  ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		  0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		  ;;
		MELT_LOCATION ("warmelt-hooks.melt:2518:/ cond");
		/*cond */ if ( /*_#MELT_NEED_DBG__L40*/ meltfnum[28])	/*then */
		  {
		    /*^cond.then */
		    /*^block */
		    /*anyblock */
		    {

	  /*_#MELT_CALLCOUNT__L41*/ meltfnum[25] =
			/* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
			meltcallcount	/* melt_callcount debugging */
#else
			0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
			;;

		      MELT_CHECK_SIGNAL ();
		      ;
		      MELT_LOCATION ("warmelt-hooks.melt:2518:/ apply");
		      /*apply */
		      {
			union meltparam_un argtab[5];
			memset (&argtab, 0, sizeof (argtab));
			/*^apply.arg */
			argtab[0].meltbp_long =
			  /*_#MELT_CALLCOUNT__L41*/ meltfnum[25];
			/*^apply.arg */
			argtab[1].meltbp_cstring = "warmelt-hooks.melt";
			/*^apply.arg */
			argtab[2].meltbp_long = 2518;
			/*^apply.arg */
			argtab[3].meltbp_cstring =
			  "hook_poll_inputs after melt_invoke_input_callbacks nbfd=";
			/*^apply.arg */
			argtab[4].meltbp_long = /*_#NBFD__L9*/ meltfnum[7];
			/*_.MELT_DEBUG_FUN__V38*/ meltfptr[37] =
			  melt_apply ((meltclosure_ptr_t)
				      (( /*~MELT_DEBUG_FUN */ meltfhook->
					tabval[0])),
				      (melt_ptr_t) (( /*nil */ NULL)),
				      (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				       MELTBPARSTR_LONG ""), argtab, "",
				      (union meltparam_un *) 0);
		      }
		      ;
		      /*_._IF___V37*/ meltfptr[18] =
			/*_.MELT_DEBUG_FUN__V38*/ meltfptr[37];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2518:/ clear");
		    /*clear *//*_#MELT_CALLCOUNT__L41*/ meltfnum[25] = 0;
		      /*^clear */
		    /*clear *//*_.MELT_DEBUG_FUN__V38*/ meltfptr[37] = 0;
		    }
		    ;
		  }
		else
		  {		/*^cond.else */

	 /*_._IF___V37*/ meltfptr[18] = NULL;;
		  }
		;

		{
		  MELT_LOCATION ("warmelt-hooks.melt:2518:/ locexp");
		  /*void */ (void) 0;
		}
		;
		/*^quasiblock */


		/*epilog */

		/*^clear */
		  /*clear *//*_#MELT_NEED_DBG__L40*/ meltfnum[28] = 0;
		/*^clear */
		  /*clear *//*_._IF___V37*/ meltfptr[18] = 0;
	      }

#else /*MELT_HAVE_DEBUG */
	      /*^cppif.else */
	      /*^block */
	      /*anyblock */
	      {


		{
		  /*^locexp */
		  /*void */ (void) 0;
		}
		;
		/*epilog */
	      }

#endif /*MELT_HAVE_DEBUG */
	      ;

	      {
		MELT_LOCATION ("warmelt-hooks.melt:2519:/ locexp");
		/*void */ (void) 0;
	      }
	      ;

	      MELT_LOCATION ("warmelt-hooks.melt:2479:/ clear");
		/*clear *//*_.TUPSTATE__V15*/ meltfptr[9] = 0;
	      /*^clear */
		/*clear *//*_.BADINCHLIST__V16*/ meltfptr[8] = 0;
	      /*^clear */
		/*clear *//*_#miI__L23*/ meltfnum[15] = 0;
	      /*^clear */
		/*clear *//*_.MELT_INVOKE_INPUT_CALLBACKS__V36*/ meltfptr[19] =
		0;
	      /*epilog */
	    }
	    ;
	  }			/*noelse */
	;
	/*epilog */

	MELT_LOCATION ("warmelt-hooks.melt:2451:/ clear");
	      /*clear *//*_#gtI__L22*/ meltfnum[18] = 0;
      }

      /* hook_poll_inputs POLLIN_CHK__1 final */
      free (fdtab);
      /* hook_poll_inputs POLLIN_CHK__1 end */ ;
    }
    ;

    MELT_LOCATION ("warmelt-hooks.melt:2447:/ clear");
	    /*clear *//*_.TUPINCH__V7*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_#NBFD__L9*/ meltfnum[7] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:2434:/ clear");
	    /*clear *//*_.INCHBUCK__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_#NBINCH__L2*/ meltfnum[1] = 0;
    /*^clear */
	    /*clear *//*_#RESPOLL__L3*/ meltfnum[2] = 0;
    /*^clear */
	    /*clear *//*_#eqeqI__L6*/ meltfnum[4] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_POLL_INPUTS hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_POLL_INPUTS hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_POLL_INPUTS hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_POLL_INPUTShook */
void
melthookmark_HOOK_POLL_INPUTS_rout (struct melt_callframe_st *meltcfram,
				    int meltmarking)
{

  melthookframe_HOOK_POLL_INPUTS_t *meltframptr_
    = (melthookframe_HOOK_POLL_INPUTS_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_POLL_INPUTS good hash",
		  meltframptr_->mcfr_nbvar == -1576);
  if (meltmarking)
    {				/* marking hook HOOK_POLL_INPUTS */
      int meltix;
      for (meltix = 0; meltix < 38; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_POLL_INPUTS */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 38; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_POLL_INPUTS */
}				/* end  melthookmark_HOOK_POLL_INPUTS_rout */

/* frame for melthook_HOOK_HANDLE_SIGIO hook: */
typedef struct meltframe_melthook_HOOK_HANDLE_SIGIO_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 1
  melt_ptr_t mcfr_varptr[1];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
  long _spare_;
}
melthookframe_HOOK_HANDLE_SIGIO_t;	/* end of hook frame melthook_HOOK_HANDLE_SIGIO */


/** implementation of hook melthook_HOOK_HANDLE_SIGIO */
void
melthook_HOOK_HANDLE_SIGIO (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_HANDLE_SIGIO from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_HANDLE_SIGIO hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_HANDLE_SIGIO;
  long melt_thishookcall_counter_HOOK_HANDLE_SIGIO ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_HANDLE_SIGIO++;
#define meltcallcount melt_thishookcall_counter_HOOK_HANDLE_SIGIO
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_HANDLE_SIGIO_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_HANDLE_SIGIO */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -2998 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_HANDLE_SIGIO_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_HANDLE_SIGIO*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_HANDLE_SIGIO hook */
  MELT_LOCATION ("warmelt-hooks.melt:2637:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {


    {
      MELT_LOCATION ("warmelt-hooks.melt:2641:/ locexp");
      /*hookcall */
	melthook_HOOK_POLL_INPUTS ((melt_ptr_t)
				   ( /*~HOOK_POLL_INPUTS */ meltfhook->
				    tabval[0]), 250);
    }
    ;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_HANDLE_SIGIO hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_HANDLE_SIGIO hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_HANDLE_SIGIO hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_HANDLE_SIGIOhook */
void
melthookmark_HOOK_HANDLE_SIGIO_rout (struct melt_callframe_st *meltcfram,
				     int meltmarking)
{

  melthookframe_HOOK_HANDLE_SIGIO_t *meltframptr_
    = (melthookframe_HOOK_HANDLE_SIGIO_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_HANDLE_SIGIO good hash",
		  meltframptr_->mcfr_nbvar == -2998);
  if (meltmarking)
    {				/* marking hook HOOK_HANDLE_SIGIO */
      int meltix;
      for (meltix = 0; meltix < 1; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_HANDLE_SIGIO */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 1; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_HANDLE_SIGIO */
}				/* end  melthookmark_HOOK_HANDLE_SIGIO_rout */

/* frame for melthook_HOOK_HANDLE_SIGALRM hook: */
typedef struct meltframe_melthook_HOOK_HANDLE_SIGALRM_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 30
  melt_ptr_t mcfr_varptr[30];
#define MELTFRAM_NBVARNUM 19
  long mcfr_varnum[19];
/*others*/
  long _spare_;
}
melthookframe_HOOK_HANDLE_SIGALRM_t;	/* end of hook frame melthook_HOOK_HANDLE_SIGALRM */


/** implementation of hook melthook_HOOK_HANDLE_SIGALRM */
void
melthook_HOOK_HANDLE_SIGALRM (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_HANDLE_SIGALRM from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_HANDLE_SIGALRM hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_HANDLE_SIGALRM;
  long melt_thishookcall_counter_HOOK_HANDLE_SIGALRM ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_HANDLE_SIGALRM++;
#define meltcallcount melt_thishookcall_counter_HOOK_HANDLE_SIGALRM
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_HANDLE_SIGALRM_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_HANDLE_SIGALRM */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -3956 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_HANDLE_SIGALRM_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_HANDLE_SIGALRM*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_HANDLE_SIGALRM hook */
  MELT_LOCATION ("warmelt-hooks.melt:2661:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {

    MELT_LOCATION ("warmelt-hooks.melt:2665:/ quasiblock");


  /*_.ALARMBUCK__V2*/ meltfptr[1] =
      (melt_module_var_fetch (meltmodvarix_MELT_ALARMBUCKET_symb));;
    /*^compute */
  /*_#CURELTIM__L1*/ meltfnum[0] =
      melt_relative_time_millisec ();;

#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:2668:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L2*/ meltfnum[1] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:2668:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L2*/ meltfnum[1])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L3*/ meltfnum[2] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2668:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[7];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L3*/ meltfnum[2];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 2668;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"hook_handle_sigalrm start alarmbuck=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.ALARMBUCK__V2*/ meltfptr[1];
	      /*^apply.arg */
	      argtab[5].meltbp_cstring = " cureltim=";
	      /*^apply.arg */
	      argtab[6].meltbp_long = /*_#CURELTIM__L1*/ meltfnum[0];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V3*/ meltfptr[2] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:2668:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L3*/ meltfnum[2] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V3*/ meltfptr[2] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:2668:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L2*/ meltfnum[1] = 0;
      /*^clear */
	      /*clear *//*_._IF___V3*/ meltfptr[2] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2669:/ cond");
    /*cond */ if ( /*_.ALARMBUCK__V2*/ meltfptr[1])	/*then */
      {
	/*^cond.then */
	/*_._IFELSE___V5*/ meltfptr[3] = ( /*nil */ NULL);;
      }
    else
      {
	MELT_LOCATION ("warmelt-hooks.melt:2669:/ cond.else");

	/*^block */
	/*anyblock */
	{

	  /*^quasiblock */


	  /*^finalreturn */
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*^quasiblock */


	  /*epilog */
	}
	;
      }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2671:/ loop");
    /*loop */
    {
    meltlabloop_HANDLELOOP_1:;	/*^loopbody */

      /*^block */
      /*anyblock */
      {


	MELT_CHECK_SIGNAL ();
	;

#if MELT_HAVE_DEBUG
	MELT_LOCATION ("warmelt-hooks.melt:2673:/ cppif.then");
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
      /*_#IS_BUCKETLONG__L4*/ meltfnum[2] =
	    (melt_magic_discr
	     ((melt_ptr_t) ( /*_.ALARMBUCK__V2*/ meltfptr[1])) ==
	     MELTOBMAG_BUCKETLONGS);;
	  MELT_LOCATION ("warmelt-hooks.melt:2673:/ cond");
	  /*cond */ if ( /*_#IS_BUCKETLONG__L4*/ meltfnum[2])	/*then */
	    {
	      /*^cond.then */
	      /*_._IFELSE___V9*/ meltfptr[8] = ( /*nil */ NULL);;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2673:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {




		{
		  /*^locexp */
		  melt_assert_failed (("check alarmbuck"),
				      ("warmelt-hooks.melt")
				      ? ("warmelt-hooks.melt") : __FILE__,
				      (2673) ? (2673) : __LINE__,
				      __FUNCTION__);
		  ;
		}
		;
		  /*clear *//*_._IFELSE___V9*/ meltfptr[8] = 0;
		/*epilog */
	      }
	      ;
	    }
	  ;
	  /*^compute */
	  /*_.IFCPP___V8*/ meltfptr[7] = /*_._IFELSE___V9*/ meltfptr[8];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2673:/ clear");
		/*clear *//*_#IS_BUCKETLONG__L4*/ meltfnum[2] = 0;
	  /*^clear */
		/*clear *//*_._IFELSE___V9*/ meltfptr[8] = 0;
	}

#else /*MELT_HAVE_DEBUG */
	/*^cppif.else */
	/*_.IFCPP___V8*/ meltfptr[7] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
	;

	MELT_CHECK_SIGNAL ();
	;
	/*^compute */
    /*_#BUCKETLONG_COUNT__L5*/ meltfnum[1] =
	  melt_longsbucket_count ((melt_ptr_t) /*_.ALARMBUCK__V2*/
				  meltfptr[1]);;
	MELT_LOCATION ("warmelt-hooks.melt:2674:/ cond");
	/*cond */ if ( /*_#BUCKETLONG_COUNT__L5*/ meltfnum[1])	/*then */
	  {
	    /*^cond.then */
	    /*_._IFELSE___V10*/ meltfptr[8] = ( /*nil */ NULL);;
	  }
	else
	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2674:/ cond.else");

	    /*^block */
	    /*anyblock */
	    {

	      /*^quasiblock */


	      /*^compute */
      /*_.HANDLELOOP__V7*/ meltfptr[6] = NULL;;

	      /*^exit */
	      /*exit */
	      {
		goto meltlabexit_HANDLELOOP_1;
	      }
	      ;
	      /*^quasiblock */


	      /*epilog */
	    }
	    ;
	  }
	;
	MELT_LOCATION ("warmelt-hooks.melt:2675:/ quasiblock");


    /*_#NEXTIM__L6*/ meltfnum[2] =
	  melt_longsbucket_nth_key ((melt_ptr_t) /*_.ALARMBUCK__V2*/
				    meltfptr[1], (int) 0);;
	/*^compute */
    /*_.NEXTALHD__V11*/ meltfptr[10] =
	  melt_longsbucket_nth_val ((melt_ptr_t) /*_.ALARMBUCK__V2*/
				    meltfptr[1], (int) 0);;

#if MELT_HAVE_DEBUG
	MELT_LOCATION ("warmelt-hooks.melt:2678:/ cppif.then");
	/*^block */
	/*anyblock */
	{


	  {
	    /*^locexp */
	    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	    melt_dbgcounter++;
#endif
	    ;
	  }
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
      /*_#MELT_NEED_DBG__L7*/ meltfnum[6] =
	    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	    0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	    ;;
	  MELT_LOCATION ("warmelt-hooks.melt:2678:/ cond");
	  /*cond */ if ( /*_#MELT_NEED_DBG__L7*/ meltfnum[6])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

	/*_#MELT_CALLCOUNT__L8*/ meltfnum[7] =
		  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		  meltcallcount	/* melt_callcount debugging */
#else
		  0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		  ;;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2678:/ apply");
		/*apply */
		{
		  union meltparam_un argtab[7];
		  memset (&argtab, 0, sizeof (argtab));
		  /*^apply.arg */
		  argtab[0].meltbp_long =
		    /*_#MELT_CALLCOUNT__L8*/ meltfnum[7];
		  /*^apply.arg */
		  argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		  /*^apply.arg */
		  argtab[2].meltbp_long = 2678;
		  /*^apply.arg */
		  argtab[3].meltbp_cstring = "hook_handle_sigalrm nextim=";
		  /*^apply.arg */
		  argtab[4].meltbp_long = /*_#NEXTIM__L6*/ meltfnum[2];
		  /*^apply.arg */
		  argtab[5].meltbp_cstring = " nextalhd=";
		  /*^apply.arg */
		  argtab[6].meltbp_aptr =
		    (melt_ptr_t *) & /*_.NEXTALHD__V11*/ meltfptr[10];
		  /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] =
		    melt_apply ((meltclosure_ptr_t)
				(( /*~MELT_DEBUG_FUN */ meltfhook->
				  tabval[0])),
				(melt_ptr_t) (( /*nil */ NULL)),
				(MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				 MELTBPARSTR_PTR ""), argtab, "",
				(union meltparam_un *) 0);
		}
		;
		/*_._IF___V12*/ meltfptr[11] =
		  /*_.MELT_DEBUG_FUN__V13*/ meltfptr[12];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2678:/ clear");
		  /*clear *//*_#MELT_CALLCOUNT__L8*/ meltfnum[7] = 0;
		/*^clear */
		  /*clear *//*_.MELT_DEBUG_FUN__V13*/ meltfptr[12] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

       /*_._IF___V12*/ meltfptr[11] = NULL;;
	    }
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2678:/ locexp");
	    /*void */ (void) 0;
	  }
	  ;
	  /*^quasiblock */


	  /*epilog */

	  /*^clear */
		/*clear *//*_#MELT_NEED_DBG__L7*/ meltfnum[6] = 0;
	  /*^clear */
		/*clear *//*_._IF___V12*/ meltfptr[11] = 0;
	}

#else /*MELT_HAVE_DEBUG */
	/*^cppif.else */
	/*^block */
	/*anyblock */
	{


	  {
	    /*^locexp */
	    /*void */ (void) 0;
	  }
	  ;
	  /*epilog */
	}

#endif /*MELT_HAVE_DEBUG */
	;

	MELT_CHECK_SIGNAL ();
	;
	MELT_LOCATION ("warmelt-hooks.melt:2679:/ cond");
	/*cond */ if ( /*_#NEXTIM__L6*/ meltfnum[2])	/*then */
	  {
	    /*^cond.then */
	    /*_._IFELSE___V14*/ meltfptr[12] = ( /*nil */ NULL);;
	  }
	else
	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2679:/ cond.else");

	    /*^block */
	    /*anyblock */
	    {

	      /*^quasiblock */


	      /*^compute */
      /*_.HANDLELOOP__V7*/ meltfptr[6] = NULL;;

	      /*^exit */
	      /*exit */
	      {
		goto meltlabexit_HANDLELOOP_1;
	      }
	      ;
	      /*^quasiblock */


	      /*epilog */
	    }
	    ;
	  }
	;

	MELT_CHECK_SIGNAL ();
	;
    /*_#gtI__L9*/ meltfnum[7] =
	  (( /*_#NEXTIM__L6*/ meltfnum[2]) >
	   ( /*_#CURELTIM__L1*/ meltfnum[0]));;
	MELT_LOCATION ("warmelt-hooks.melt:2680:/ cond");
	/*cond */ if ( /*_#gtI__L9*/ meltfnum[7])	/*then */
	  {
	    /*^cond.then */
	    /*_._IFELSE___V15*/ meltfptr[11] = ( /*nil */ NULL);;
	  }
	else
	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2680:/ cond.else");

	    /*^block */
	    /*anyblock */
	    {

	      /*^quasiblock */


	      /*^compute */
      /*_.HANDLELOOP__V7*/ meltfptr[6] = NULL;;

	      /*^exit */
	      /*exit */
	      {
		goto meltlabexit_HANDLELOOP_1;
	      }
	      ;
	      /*^quasiblock */


	      /*epilog */
	    }
	    ;
	  }
	;

#if MELT_HAVE_DEBUG
	MELT_LOCATION ("warmelt-hooks.melt:2681:/ cppif.then");
	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
      /*_#IS_A__L10*/ meltfnum[6] =
	    melt_is_instance_of ((melt_ptr_t)
				 ( /*_.NEXTALHD__V11*/ meltfptr[10]),
				 (melt_ptr_t) (( /*~CLASS_ALARM_HANDLER */
						meltfhook->tabval[1])));;
	  MELT_LOCATION ("warmelt-hooks.melt:2681:/ cond");
	  /*cond */ if ( /*_#IS_A__L10*/ meltfnum[6])	/*then */
	    {
	      /*^cond.then */
	      /*_._IFELSE___V17*/ meltfptr[16] = ( /*nil */ NULL);;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2681:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {




		{
		  /*^locexp */
		  melt_assert_failed (("check mextalhd"),
				      ("warmelt-hooks.melt")
				      ? ("warmelt-hooks.melt") : __FILE__,
				      (2681) ? (2681) : __LINE__,
				      __FUNCTION__);
		  ;
		}
		;
		  /*clear *//*_._IFELSE___V17*/ meltfptr[16] = 0;
		/*epilog */
	      }
	      ;
	    }
	  ;
	  /*^compute */
	  /*_.IFCPP___V16*/ meltfptr[15] = /*_._IFELSE___V17*/ meltfptr[16];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2681:/ clear");
		/*clear *//*_#IS_A__L10*/ meltfnum[6] = 0;
	  /*^clear */
		/*clear *//*_._IFELSE___V17*/ meltfptr[16] = 0;
	}

#else /*MELT_HAVE_DEBUG */
	/*^cppif.else */
	/*_.IFCPP___V16*/ meltfptr[15] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
	;
	/*^compute */
    /*_.BUCKETLONG_REMOVE__V18*/ meltfptr[16] =
	  meltgc_longsbucket_remove ((melt_ptr_t) /*_.ALARMBUCK__V2*/
				     meltfptr[1],
				     ( /*_#NEXTIM__L6*/ meltfnum[2]));;
	MELT_LOCATION ("warmelt-hooks.melt:2682:/ compute");
	/*_.ALARMBUCK__V2*/ meltfptr[1] = /*_.SETQ___V19*/ meltfptr[18] =
	  /*_.BUCKETLONG_REMOVE__V18*/ meltfptr[16];;
	/*citerblock BLOCK_SIGNALS */
	{
	  /* block_signals meltcit1__BLKSIGNAL start */
	  long meltcit1__BLKSIGNAL_lev = melt_blocklevel_signals;
	  melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev + 1;



	  MELT_LOCATION ("warmelt-hooks.melt:2685:/ quasiblock");


	  /*^cond */
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.NEXTALHD__V11*/
					       meltfptr[10]),
					      (melt_ptr_t) (( /*~CLASS_ALARM_HANDLER */ meltfhook->tabval[1])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) ( /*_.NEXTALHD__V11*/ meltfptr[10]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "ALARMH_CLOS");
       /*_.CLOS__V21*/ meltfptr[20] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

      /*_.CLOS__V21*/ meltfptr[20] = NULL;;
	    }
	  ;

	  MELT_CHECK_SIGNAL ();
	  ;
	  /*^compute */
     /*_#IS_CLOSURE__L11*/ meltfnum[6] =
	    (melt_magic_discr ((melt_ptr_t) ( /*_.CLOS__V21*/ meltfptr[20]))
	     == MELTOBMAG_CLOSURE);;
	  MELT_LOCATION ("warmelt-hooks.melt:2687:/ cond");
	  /*cond */ if ( /*_#IS_CLOSURE__L11*/ meltfnum[6])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {

		MELT_LOCATION ("warmelt-hooks.melt:2688:/ quasiblock");



		MELT_CHECK_SIGNAL ();
		;
		/*^apply */
		/*apply */
		{
		  /*_.RES__V24*/ meltfptr[23] =
		    melt_apply ((meltclosure_ptr_t)
				( /*_.CLOS__V21*/ meltfptr[20]),
				(melt_ptr_t) ( /*_.NEXTALHD__V11*/
					      meltfptr[10]), (""),
				(union meltparam_un *) 0, "",
				(union meltparam_un *) 0);
		}
		;

		MELT_CHECK_SIGNAL ();
		;
		MELT_LOCATION ("warmelt-hooks.melt:2690:/ cond");
		/*cond */ if ( /*_.RES__V24*/ meltfptr[23])	/*then */
		  {
		    /*^cond.then */
		    /*^block */
		    /*anyblock */
		    {

		      MELT_LOCATION ("warmelt-hooks.melt:2691:/ quasiblock");


		      /*^cond */
		      /*cond */ if (
				     /*ifisa */
				     melt_is_instance_of ((melt_ptr_t)
							  ( /*_.NEXTALHD__V11*/ meltfptr[10]),
							  (melt_ptr_t) (( /*~CLASS_ALARM_HANDLER */ meltfhook->tabval[1])))
			)	/*then */
			{
			  /*^cond.then */
			  /*^getslot */
			  {
			    melt_ptr_t slot = NULL, obj = NULL;
			    obj =
			      (melt_ptr_t) ( /*_.NEXTALHD__V11*/ meltfptr[10])
			      /*=obj*/ ;
			    melt_object_get_field (slot, obj, 1,
						   "ALARMH_PERIOD");
	   /*_.ALARMH_PERIOD__V27*/ meltfptr[26] = slot;
			  };
			  ;
			}
		      else
			{	/*^cond.else */

	  /*_.ALARMH_PERIOD__V27*/ meltfptr[26] = NULL;;
			}
		      ;
		      /*^compute */
	 /*_#NEWPERIOD__L12*/ meltfnum[11] =
			(melt_get_int
			 ((melt_ptr_t)
			  ( /*_.ALARMH_PERIOD__V27*/ meltfptr[26])));;

		      MELT_CHECK_SIGNAL ();
		      ;
		      /*^compute */
	 /*_#gtI__L13*/ meltfnum[12] =
			(( /*_#NEWPERIOD__L12*/ meltfnum[11]) > (10));;
		      MELT_LOCATION ("warmelt-hooks.melt:2693:/ cond");
		      /*cond */ if ( /*_#gtI__L13*/ meltfnum[12])	/*then */
			{
			  /*^cond.then */
			  /*^block */
			  /*anyblock */
			  {

	   /*_#plI__L14*/ meltfnum[13] =
			      (( /*_#NEWPERIOD__L12*/ meltfnum[11]) +
			       ( /*_#CURELTIM__L1*/ meltfnum[0]));;
			    /*^compute */
	   /*_.BUCKETLONG_PUT__V29*/ meltfptr[28] =
			      meltgc_longsbucket_put ((melt_ptr_t)
						      /*_.ALARMBUCK__V2*/
						      meltfptr[1],
						      ( /*_#plI__L14*/
						       meltfnum[13]),
						      (melt_ptr_t)
						      /*_.NEXTALHD__V11*/
						      meltfptr[10]);;
			    MELT_LOCATION
			      ("warmelt-hooks.melt:2694:/ compute");
			    /*_.ALARMBUCK__V2*/ meltfptr[1] =
			      /*_.SETQ___V30*/ meltfptr[29] =
			      /*_.BUCKETLONG_PUT__V29*/ meltfptr[28];;
			    /*_._IF___V28*/ meltfptr[27] =
			      /*_.SETQ___V30*/ meltfptr[29];;
			    /*epilog */

			    MELT_LOCATION ("warmelt-hooks.melt:2693:/ clear");
		     /*clear *//*_#plI__L14*/ meltfnum[13] = 0;
			    /*^clear */
		     /*clear *//*_.BUCKETLONG_PUT__V29*/ meltfptr[28] =
			      0;
			    /*^clear */
		     /*clear *//*_.SETQ___V30*/ meltfptr[29] = 0;
			  }
			  ;
			}
		      else
			{	/*^cond.else */

	  /*_._IF___V28*/ meltfptr[27] = NULL;;
			}
		      ;
		      /*^compute */
		      /*_.LET___V26*/ meltfptr[25] =
			/*_._IF___V28*/ meltfptr[27];;

		      MELT_LOCATION ("warmelt-hooks.melt:2691:/ clear");
		   /*clear *//*_.ALARMH_PERIOD__V27*/ meltfptr[26] = 0;
		      /*^clear */
		   /*clear *//*_#NEWPERIOD__L12*/ meltfnum[11] = 0;
		      /*^clear */
		   /*clear *//*_#gtI__L13*/ meltfnum[12] = 0;
		      /*^clear */
		   /*clear *//*_._IF___V28*/ meltfptr[27] = 0;
		      /*_._IF___V25*/ meltfptr[24] =
			/*_.LET___V26*/ meltfptr[25];;
		      /*epilog */

		      MELT_LOCATION ("warmelt-hooks.melt:2690:/ clear");
		   /*clear *//*_.LET___V26*/ meltfptr[25] = 0;
		    }
		    ;
		  }
		else
		  {		/*^cond.else */

	/*_._IF___V25*/ meltfptr[24] = NULL;;
		  }
		;
		/*^compute */
		/*_.LET___V23*/ meltfptr[22] = /*_._IF___V25*/ meltfptr[24];;

		MELT_LOCATION ("warmelt-hooks.melt:2688:/ clear");
		 /*clear *//*_.RES__V24*/ meltfptr[23] = 0;
		/*^clear */
		 /*clear *//*_._IF___V25*/ meltfptr[24] = 0;
		/*_._IF___V22*/ meltfptr[21] = /*_.LET___V23*/ meltfptr[22];;
		/*epilog */

		MELT_LOCATION ("warmelt-hooks.melt:2687:/ clear");
		 /*clear *//*_.LET___V23*/ meltfptr[22] = 0;
	      }
	      ;
	    }
	  else
	    {			/*^cond.else */

      /*_._IF___V22*/ meltfptr[21] = NULL;;
	    }
	  ;
	  /*^compute */
	  /*_.LET___V20*/ meltfptr[19] = /*_._IF___V22*/ meltfptr[21];;

	  MELT_LOCATION ("warmelt-hooks.melt:2685:/ clear");
	       /*clear *//*_.CLOS__V21*/ meltfptr[20] = 0;
	  /*^clear */
	       /*clear *//*_#IS_CLOSURE__L11*/ meltfnum[6] = 0;
	  /*^clear */
	       /*clear *//*_._IF___V22*/ meltfptr[21] = 0;
	  /* block_signals meltcit1__BLKSIGNAL end */
	  melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev;
	  MELT_CHECK_SIGNAL ();


	  /*citerepilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2683:/ clear");
	       /*clear *//*_.LET___V20*/ meltfptr[19] = 0;
	}			/*endciterblock BLOCK_SIGNALS */
	;

	MELT_LOCATION ("warmelt-hooks.melt:2675:/ clear");
	      /*clear *//*_#NEXTIM__L6*/ meltfnum[2] = 0;
	/*^clear */
	      /*clear *//*_.NEXTALHD__V11*/ meltfptr[10] = 0;
	/*^clear */
	      /*clear *//*_._IFELSE___V14*/ meltfptr[12] = 0;
	/*^clear */
	      /*clear *//*_#gtI__L9*/ meltfnum[7] = 0;
	/*^clear */
	      /*clear *//*_._IFELSE___V15*/ meltfptr[11] = 0;
	/*^clear */
	      /*clear *//*_.IFCPP___V16*/ meltfptr[15] = 0;
	/*^clear */
	      /*clear *//*_.BUCKETLONG_REMOVE__V18*/ meltfptr[16] = 0;
	/*^clear */
	      /*clear *//*_.SETQ___V19*/ meltfptr[18] = 0;

	MELT_CHECK_SIGNAL ();
	;
	/*epilog */

	MELT_LOCATION ("warmelt-hooks.melt:2671:/ clear");
	      /*clear *//*_.IFCPP___V8*/ meltfptr[7] = 0;
	/*^clear */
	      /*clear *//*_#BUCKETLONG_COUNT__L5*/ meltfnum[1] = 0;
	/*^clear */
	      /*clear *//*_._IFELSE___V10*/ meltfptr[8] = 0;
      }
      ;
      ;
      goto meltlabloop_HANDLELOOP_1;
    meltlabexit_HANDLELOOP_1:;	/*^loopepilog */
      /*loopepilog */
      /*_.FOREVER___V6*/ meltfptr[2] = /*_.HANDLELOOP__V7*/ meltfptr[6];;
    }
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2699:/ putmodvar");
    melt_module_var_put (meltmodvarix_MELT_ALARMBUCKET_symb,
			 (melt_ptr_t) ( /*_.ALARMBUCK__V2*/ meltfptr[1]));
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2700:/ quasiblock");


  /*_#NOWTIM__L15*/ meltfnum[13] =
      melt_relative_time_millisec ();;
    /*^compute */
  /*_#NEXTALARM__L16*/ meltfnum[11] =
      melt_longsbucket_nth_key ((melt_ptr_t) /*_.ALARMBUCK__V2*/ meltfptr[1],
				(int) 0);;

    MELT_CHECK_SIGNAL ();
    ;
    /*^compute */
  /*_#gtI__L17*/ meltfnum[12] =
      (( /*_#NEXTALARM__L16*/ meltfnum[11]) >
       ( /*_#NOWTIM__L15*/ meltfnum[13]));;
    MELT_LOCATION ("warmelt-hooks.melt:2703:/ cond");
    /*cond */ if ( /*_#gtI__L17*/ meltfnum[12])	/*then */
      {
	/*^cond.then */
	/*^block */
	/*anyblock */
	{

    /*_#miI__L18*/ meltfnum[6] =
	    (( /*_#NEXTALARM__L16*/ meltfnum[11]) -
	     ( /*_#NOWTIM__L15*/ meltfnum[13]));;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2705:/ locexp");
	    melt_set_real_timer_millisec ( /*_#miI__L18*/ meltfnum[6]);
	  }
	  ;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2703:/ clear");
	      /*clear *//*_#miI__L18*/ meltfnum[6] = 0;
	}
	;
      }
    else
      {				/*^cond.else */

	/*^block */
	/*anyblock */
	{


	  MELT_CHECK_SIGNAL ();
	  ;
    /*_#gtI__L19*/ meltfnum[2] =
	    (( /*_#NEXTALARM__L16*/ meltfnum[11]) > (0));;
	  MELT_LOCATION ("warmelt-hooks.melt:2706:/ cond");
	  /*cond */ if ( /*_#gtI__L19*/ meltfnum[2])	/*then */
	    {
	      /*^cond.then */
	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:2708:/ locexp");
		  melt_set_real_timer_millisec (30);
		}
		;
		/*epilog */
	      }
	      ;
	    }
	  else
	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2706:/ cond.else");

	      /*^block */
	      /*anyblock */
	      {


		{
		  MELT_LOCATION ("warmelt-hooks.melt:2711:/ locexp");
		  melt_set_real_timer_millisec (0);
		}
		;
		MELT_LOCATION ("warmelt-hooks.melt:2709:/ quasiblock");


		/*epilog */
	      }
	      ;
	    }
	  ;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:2703:/ clear");
	      /*clear *//*_#gtI__L19*/ meltfnum[2] = 0;
	}
	;
      }
    ;

    MELT_LOCATION ("warmelt-hooks.melt:2700:/ clear");
	    /*clear *//*_#NOWTIM__L15*/ meltfnum[13] = 0;
    /*^clear */
	    /*clear *//*_#NEXTALARM__L16*/ meltfnum[11] = 0;
    /*^clear */
	    /*clear *//*_#gtI__L17*/ meltfnum[12] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:2665:/ clear");
	    /*clear *//*_.ALARMBUCK__V2*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_#CURELTIM__L1*/ meltfnum[0] = 0;
    /*^clear */
	    /*clear *//*_._IFELSE___V5*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.FOREVER___V6*/ meltfptr[2] = 0;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_HANDLE_SIGALRM hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_HANDLE_SIGALRM hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_HANDLE_SIGALRM hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_HANDLE_SIGALRMhook */
void
melthookmark_HOOK_HANDLE_SIGALRM_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_HANDLE_SIGALRM_t *meltframptr_
    = (melthookframe_HOOK_HANDLE_SIGALRM_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_HANDLE_SIGALRM good hash",
		  meltframptr_->mcfr_nbvar == -3956);
  if (meltmarking)
    {				/* marking hook HOOK_HANDLE_SIGALRM */
      int meltix;
      for (meltix = 0; meltix < 30; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_HANDLE_SIGALRM */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 30; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_HANDLE_SIGALRM */
}				/* end  melthookmark_HOOK_HANDLE_SIGALRM_rout */

/* frame for melthook_HOOK_HANDLE_SIGCHLD hook: */
typedef struct meltframe_melthook_HOOK_HANDLE_SIGCHLD_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  struct meltclosure_st *mcfr_clos;
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 47
  melt_ptr_t mcfr_varptr[47];
#define MELTFRAM_NBVARNUM 27
  long mcfr_varnum[27];
/*others*/
  long _spare_;
}
melthookframe_HOOK_HANDLE_SIGCHLD_t;	/* end of hook frame melthook_HOOK_HANDLE_SIGCHLD */


/** implementation of hook melthook_HOOK_HANDLE_SIGCHLD */
void
melthook_HOOK_HANDLE_SIGCHLD (melt_ptr_t melthookdata)
{				/* body of hook melthook_HOOK_HANDLE_SIGCHLD from outpucod_hookroutine */
/* declare and initialize frame for melthook_HOOK_HANDLE_SIGCHLD hook */
#undef meltcallcount
#if MELT_HAVE_DEBUG
  static long melthook_call_counter_HOOK_HANDLE_SIGCHLD;
  long melt_thishookcall_counter_HOOK_HANDLE_SIGCHLD ATTRIBUTE_UNUSED
    = melthook_call_counter_HOOK_HANDLE_SIGCHLD++;
#define meltcallcount melt_thishookcall_counter_HOOK_HANDLE_SIGCHLD
#else
#define meltcallcount 0L
#endif
  melthookframe_HOOK_HANDLE_SIGCHLD_t meltfram__;
  /* clear and push the new call frame for hook melthook_HOOK_HANDLE_SIGCHLD */
  memset (&meltfram__, 0, sizeof (meltfram__));
#define meltframe meltfram__
  meltframe.mcfr_nbvar = -3946 /*hook minihash */ ;
  ((struct melt_callframe_st *) &meltframe)->mcfr_forwmarkrout
    = melthookmark_HOOK_HANDLE_SIGCHLD_rout;
  meltframe.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
#define meltfhook /*hook data of HOOK_HANDLE_SIGCHLD*/ ((melthook_ptr_t) (/*_._HOOKDATA___V1*/ meltfptr[0]))
  /* body of melthook_HOOK_HANDLE_SIGCHLD hook */
  MELT_LOCATION ("warmelt-hooks.melt:2783:/ compute");
  /*_._HOOKDATA___V1*/ meltfptr[0] = /*hookgetdata */ melthookdata;;
  /*^block */
  /*anyblock */
  {


#if MELT_HAVE_DEBUG
    MELT_LOCATION ("warmelt-hooks.melt:2787:/ cppif.then");
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	melt_dbgcounter++;
#endif
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
    /*_#MELT_NEED_DBG__L1*/ meltfnum[0] =
	/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	;;
      MELT_LOCATION ("warmelt-hooks.melt:2787:/ cond");
      /*cond */ if ( /*_#MELT_NEED_DBG__L1*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*^block */
	  /*anyblock */
	  {

      /*_#MELT_CALLCOUNT__L2*/ meltfnum[1] =
	      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
	      meltcallcount	/* melt_callcount debugging */
#else
	      0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
	      ;;
	    /*^compute */
      /*_.MELT_CHILDBUCK__V3*/ meltfptr[2] =
	      (melt_module_var_fetch (meltmodvarix_MELT_CHILDBUCK_symb));;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2787:/ apply");
	    /*apply */
	    {
	      union meltparam_un argtab[5];
	      memset (&argtab, 0, sizeof (argtab));
	      /*^apply.arg */
	      argtab[0].meltbp_long = /*_#MELT_CALLCOUNT__L2*/ meltfnum[1];
	      /*^apply.arg */
	      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
	      /*^apply.arg */
	      argtab[2].meltbp_long = 2787;
	      /*^apply.arg */
	      argtab[3].meltbp_cstring =
		"hook_handle_sigchld melt_childbuck=";
	      /*^apply.arg */
	      argtab[4].meltbp_aptr =
		(melt_ptr_t *) & /*_.MELT_CHILDBUCK__V3*/ meltfptr[2];
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] =
		melt_apply ((meltclosure_ptr_t)
			    (( /*~MELT_DEBUG_FUN */ meltfhook->tabval[0])),
			    (melt_ptr_t) (( /*nil */ NULL)),
			    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_LONG MELTBPARSTR_CSTRING
			     MELTBPARSTR_PTR ""), argtab, "",
			    (union meltparam_un *) 0);
	    }
	    ;
	    /*_._IF___V2*/ meltfptr[1] =
	      /*_.MELT_DEBUG_FUN__V4*/ meltfptr[3];;
	    /*epilog */

	    MELT_LOCATION ("warmelt-hooks.melt:2787:/ clear");
		/*clear *//*_#MELT_CALLCOUNT__L2*/ meltfnum[1] = 0;
	    /*^clear */
		/*clear *//*_.MELT_CHILDBUCK__V3*/ meltfptr[2] = 0;
	    /*^clear */
		/*clear *//*_.MELT_DEBUG_FUN__V4*/ meltfptr[3] = 0;
	  }
	  ;
	}
      else
	{			/*^cond.else */

     /*_._IF___V2*/ meltfptr[1] = NULL;;
	}
      ;

      {
	MELT_LOCATION ("warmelt-hooks.melt:2787:/ locexp");
	/*void */ (void) 0;
      }
      ;
      /*^quasiblock */


      /*epilog */

      /*^clear */
	      /*clear *//*_#MELT_NEED_DBG__L1*/ meltfnum[0] = 0;
      /*^clear */
	      /*clear *//*_._IF___V2*/ meltfptr[1] = 0;
    }

#else /*MELT_HAVE_DEBUG */
    /*^cppif.else */
    /*^block */
    /*anyblock */
    {


      {
	/*^locexp */
	/*void */ (void) 0;
      }
      ;
      /*epilog */
    }

#endif /*MELT_HAVE_DEBUG */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2788:/ quasiblock");


  /*_.LISCHPH__V5*/ meltfptr[2] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[1]))));;
    /*^compute */
  /*_.LISWSTAT__V6*/ meltfptr[3] =
      (meltgc_new_list
       ((meltobject_ptr_t) (( /*~DISCR_LIST */ meltfhook->tabval[1]))));;
    /*^compute */
  /*_.BUCK__V7*/ meltfptr[1] =
      (melt_module_var_fetch (meltmodvarix_MELT_CHILDBUCK_symb));;

    MELT_CHECK_SIGNAL ();
    ;
    /*^compute */
  /*_#IS_BUCKETLONG__L3*/ meltfnum[1] =
      (melt_magic_discr ((melt_ptr_t) ( /*_.BUCK__V7*/ meltfptr[1])) ==
       MELTOBMAG_BUCKETLONGS);;
    MELT_LOCATION ("warmelt-hooks.melt:2792:/ cond");
    /*cond */ if ( /*_#IS_BUCKETLONG__L3*/ meltfnum[1])	/*then */
      {
	/*^cond.then */
	/*_._IFELSE___V8*/ meltfptr[7] = ( /*nil */ NULL);;
      }
    else
      {
	MELT_LOCATION ("warmelt-hooks.melt:2792:/ cond.else");

	/*^block */
	/*anyblock */
	{

	  /*^quasiblock */


	  /*^finalreturn */
	  ;
	  /*finalret */ goto meltlabend_rout;
	  /*^quasiblock */


	  /*epilog */
	}
	;
      }
    ;
    /*citerblock BLOCK_SIGNALS */
    {
      /* block_signals meltcit1__BLKSIGNAL start */
      long meltcit1__BLKSIGNAL_lev = melt_blocklevel_signals;
      melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev + 1;



      MELT_LOCATION ("warmelt-hooks.melt:2795:/ quasiblock");


   /*_#WAITFAIL__L4*/ meltfnum[0] = 0;;
      /*^compute */
   /*_#PIDSTAT__L5*/ meltfnum[4] = 0;;

      {
	MELT_LOCATION ("warmelt-hooks.melt:2798:/ locexp");
	/* hook_handle_sigchld WAITPROBCHK__1 */
	/*_#WAITFAIL__L4*/ meltfnum[0] = melt_wait_for_probe (WNOHANG);
	;
      }
      ;

      MELT_CHECK_SIGNAL ();
      ;
      MELT_LOCATION ("warmelt-hooks.melt:2803:/ cond");
      /*cond */ if ( /*_#WAITFAIL__L4*/ meltfnum[0])	/*then */
	{
	  /*^cond.then */
	  /*_._IFELSE___V9*/ meltfptr[8] = ( /*nil */ NULL);;
	}
      else
	{
	  MELT_LOCATION ("warmelt-hooks.melt:2803:/ cond.else");

	  /*^block */
	  /*anyblock */
	  {


#if MELT_HAVE_DEBUG
	    MELT_LOCATION ("warmelt-hooks.melt:2804:/ cppif.then");
	    /*^block */
	    /*anyblock */
	    {


	      {
		/*^locexp */
		/*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
		melt_dbgcounter++;
#endif
		;
	      }
	      ;

	      MELT_CHECK_SIGNAL ();
	      ;
       /*_#MELT_NEED_DBG__L6*/ meltfnum[5] =
		/*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
		( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
		0		/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
		;;
	      MELT_LOCATION ("warmelt-hooks.melt:2804:/ cond");
	      /*cond */ if ( /*_#MELT_NEED_DBG__L6*/ meltfnum[5])	/*then */
		{
		  /*^cond.then */
		  /*^block */
		  /*anyblock */
		  {

	 /*_#MELT_CALLCOUNT__L7*/ meltfnum[6] =
		      /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		      meltcallcount	/* melt_callcount debugging */
#else
		      0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		      ;;

		    MELT_CHECK_SIGNAL ();
		    ;
		    MELT_LOCATION ("warmelt-hooks.melt:2804:/ apply");
		    /*apply */
		    {
		      union meltparam_un argtab[4];
		      memset (&argtab, 0, sizeof (argtab));
		      /*^apply.arg */
		      argtab[0].meltbp_long =
			/*_#MELT_CALLCOUNT__L7*/ meltfnum[6];
		      /*^apply.arg */
		      argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		      /*^apply.arg */
		      argtab[2].meltbp_long = 2804;
		      /*^apply.arg */
		      argtab[3].meltbp_cstring =
			"hook_handle_sigchld waited for probe";
		      /*_.MELT_DEBUG_FUN__V11*/ meltfptr[10] =
			melt_apply ((meltclosure_ptr_t)
				    (( /*~MELT_DEBUG_FUN */ meltfhook->
				      tabval[0])),
				    (melt_ptr_t) (( /*nil */ NULL)),
				    (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				     MELTBPARSTR_LONG MELTBPARSTR_CSTRING ""),
				    argtab, "", (union meltparam_un *) 0);
		    }
		    ;
		    /*_._IF___V10*/ meltfptr[9] =
		      /*_.MELT_DEBUG_FUN__V11*/ meltfptr[10];;
		    /*epilog */

		    MELT_LOCATION ("warmelt-hooks.melt:2804:/ clear");
		   /*clear *//*_#MELT_CALLCOUNT__L7*/ meltfnum[6] = 0;
		    /*^clear */
		   /*clear *//*_.MELT_DEBUG_FUN__V11*/ meltfptr[10] = 0;
		  }
		  ;
		}
	      else
		{		/*^cond.else */

	/*_._IF___V10*/ meltfptr[9] = NULL;;
		}
	      ;

	      {
		MELT_LOCATION ("warmelt-hooks.melt:2804:/ locexp");
		/*void */ (void) 0;
	      }
	      ;
	      /*^quasiblock */


	      /*epilog */

	      /*^clear */
		 /*clear *//*_#MELT_NEED_DBG__L6*/ meltfnum[5] = 0;
	      /*^clear */
		 /*clear *//*_._IF___V10*/ meltfptr[9] = 0;
	    }

#else /*MELT_HAVE_DEBUG */
	    /*^cppif.else */
	    /*^block */
	    /*anyblock */
	    {


	      {
		/*^locexp */
		/*void */ (void) 0;
	      }
	      ;
	      /*epilog */
	    }

#endif /*MELT_HAVE_DEBUG */
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2805:/ quasiblock");


	    /*^finalreturn */
	    ;
	    /*finalret */ goto meltlabend_rout;
	    MELT_LOCATION ("warmelt-hooks.melt:2803:/ quasiblock");


	    /*epilog */
	  }
	  ;
	}
      ;
      /*citerblock FOREACH_IN_BUCKETLONG */
      {
	/*foreach_in_bucketlong meltcit2__EACHBUCKLONG */ unsigned
	  meltcit2__EACHBUCKLONG_ix = 0, meltcit2__EACHBUCKLONG_cnt = 0;
  /*_#KEYPID__L8*/ meltfnum[6] = 0L;
  /*_.CHPH__V12*/ meltfptr[10] = NULL;
	for (meltcit2__EACHBUCKLONG_ix = 0;
	     /* retrieve in meltcit2__EACHBUCKLONG iteration the count, it might change! */
	     (meltcit2__EACHBUCKLONG_cnt =
	      melt_longsbucket_count ((melt_ptr_t) /*_.BUCK__V7*/
				      meltfptr[1])) > 0
	     && meltcit2__EACHBUCKLONG_ix < meltcit2__EACHBUCKLONG_cnt;
	     meltcit2__EACHBUCKLONG_ix++)
	  {
     /*_#KEYPID__L8*/ meltfnum[6] = 0L;
     /*_.CHPH__V12*/ meltfptr[10] = NULL;
	    {
	      struct melt_bucketlongentry_st *meltcit2__EACHBUCKLONG_buent
		=
		((struct meltbucketlongs_st *) /*_.BUCK__V7*/ meltfptr[1])->
		buckl_entab + meltcit2__EACHBUCKLONG_ix;
	      if (!meltcit2__EACHBUCKLONG_buent->ebl_va)
		continue;
       /*_#KEYPID__L8*/ meltfnum[6] =
		meltcit2__EACHBUCKLONG_buent->ebl_at;
       /*_.CHPH__V12*/ meltfptr[10] =
		meltcit2__EACHBUCKLONG_buent->ebl_va;
	      meltcit2__EACHBUCKLONG_buent = NULL;
	    }
	    /*foreach_in_bucketlong meltcit2__EACHBUCKLONG body: */




#if MELT_HAVE_DEBUG
	    MELT_LOCATION ("warmelt-hooks.melt:2809:/ cppif.then");
	    /*^block */
	    /*anyblock */
	    {


	      MELT_CHECK_SIGNAL ();
	      ;
      /*_#IS_A__L9*/ meltfnum[5] =
		melt_is_instance_of ((melt_ptr_t)
				     ( /*_.CHPH__V12*/ meltfptr[10]),
				     (melt_ptr_t) (( /*~CLASS_CHILD_PROCESS_HANDLER */ meltfhook->tabval[2])));;
	      MELT_LOCATION ("warmelt-hooks.melt:2809:/ cond");
	      /*cond */ if ( /*_#IS_A__L9*/ meltfnum[5])	/*then */
		{
		  /*^cond.then */
		  /*_._IFELSE___V14*/ meltfptr[13] = ( /*nil */ NULL);;
		}
	      else
		{
		  MELT_LOCATION ("warmelt-hooks.melt:2809:/ cond.else");

		  /*^block */
		  /*anyblock */
		  {




		    {
		      /*^locexp */
		      melt_assert_failed (("check chph"),
					  ("warmelt-hooks.melt")
					  ? ("warmelt-hooks.melt") : __FILE__,
					  (2809) ? (2809) : __LINE__,
					  __FUNCTION__);
		      ;
		    }
		    ;
		  /*clear *//*_._IFELSE___V14*/ meltfptr[13] = 0;
		    /*epilog */
		  }
		  ;
		}
	      ;
	      /*^compute */
	      /*_.IFCPP___V13*/ meltfptr[9] =
		/*_._IFELSE___V14*/ meltfptr[13];;
	      /*epilog */

	      MELT_LOCATION ("warmelt-hooks.melt:2809:/ clear");
		/*clear *//*_#IS_A__L9*/ meltfnum[5] = 0;
	      /*^clear */
		/*clear *//*_._IFELSE___V14*/ meltfptr[13] = 0;
	    }

#else /*MELT_HAVE_DEBUG */
	    /*^cppif.else */
	    /*_.IFCPP___V13*/ meltfptr[9] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
	    ;

#if MELT_HAVE_DEBUG
	    MELT_LOCATION ("warmelt-hooks.melt:2810:/ cppif.then");
	    /*^block */
	    /*anyblock */
	    {


	      MELT_CHECK_SIGNAL ();
	      ;
	      MELT_LOCATION ("warmelt-hooks.melt:2811:/ cond");
	      /*cond */ if (
			     /*ifisa */
			     melt_is_instance_of ((melt_ptr_t)
						  ( /*_.CHPH__V12*/
						   meltfptr[10]),
						  (melt_ptr_t) (( /*~CLASS_CHILD_PROCESS_HANDLER */ meltfhook->tabval[2])))
		)		/*then */
		{
		  /*^cond.then */
		  /*^getslot */
		  {
		    melt_ptr_t slot = NULL, obj = NULL;
		    obj =
		      (melt_ptr_t) ( /*_.CHPH__V12*/ meltfptr[10]) /*=obj*/ ;
		    melt_object_get_field (slot, obj, 1, "CHILPROH_PID");
	/*_.CHILPROH_PID__V16*/ meltfptr[15] = slot;
		  };
		  ;
		}
	      else
		{		/*^cond.else */

       /*_.CHILPROH_PID__V16*/ meltfptr[15] = NULL;;
		}
	      ;
	      /*^compute */
      /*_#GET_INT__L10*/ meltfnum[5] =
		(melt_get_int
		 ((melt_ptr_t) ( /*_.CHILPROH_PID__V16*/ meltfptr[15])));;
	      /*^compute */
      /*_#eqeqI__L11*/ meltfnum[10] =
		(( /*_#KEYPID__L8*/ meltfnum[6]) ==
		 ( /*_#GET_INT__L10*/ meltfnum[5]));;
	      MELT_LOCATION ("warmelt-hooks.melt:2810:/ cond");
	      /*cond */ if ( /*_#eqeqI__L11*/ meltfnum[10])	/*then */
		{
		  /*^cond.then */
		  /*_._IFELSE___V17*/ meltfptr[16] = ( /*nil */ NULL);;
		}
	      else
		{
		  MELT_LOCATION ("warmelt-hooks.melt:2810:/ cond.else");

		  /*^block */
		  /*anyblock */
		  {




		    {
		      /*^locexp */
		      melt_assert_failed (("check pid"),
					  ("warmelt-hooks.melt")
					  ? ("warmelt-hooks.melt") : __FILE__,
					  (2810) ? (2810) : __LINE__,
					  __FUNCTION__);
		      ;
		    }
		    ;
		  /*clear *//*_._IFELSE___V17*/ meltfptr[16] = 0;
		    /*epilog */
		  }
		  ;
		}
	      ;
	      /*^compute */
	      /*_.IFCPP___V15*/ meltfptr[13] =
		/*_._IFELSE___V17*/ meltfptr[16];;
	      /*epilog */

	      MELT_LOCATION ("warmelt-hooks.melt:2810:/ clear");
		/*clear *//*_.CHILPROH_PID__V16*/ meltfptr[15] = 0;
	      /*^clear */
		/*clear *//*_#GET_INT__L10*/ meltfnum[5] = 0;
	      /*^clear */
		/*clear *//*_#eqeqI__L11*/ meltfnum[10] = 0;
	      /*^clear */
		/*clear *//*_._IFELSE___V17*/ meltfptr[16] = 0;
	    }

#else /*MELT_HAVE_DEBUG */
	    /*^cppif.else */
	    /*_.IFCPP___V15*/ meltfptr[13] = ( /*nil */ NULL);
#endif /*MELT_HAVE_DEBUG */
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2812:/ locexp");
	      /* hook_handle_sigchld WAITPIDCHK__1 */
	      {
		pid_t wpid = 0;
		int pstatus = 0;
	 /*_#WAITFAIL__L4*/ meltfnum[0] = 0L;
	 /*_#PIDSTAT__L5*/ meltfnum[4] = 0L;
		wpid =
		  waitpid ((pid_t) /*_#KEYPID__L8*/ meltfnum[6], &pstatus,
			   WNOHANG);
		/*_#WAITFAIL__L4*/ meltfnum[0] =
		  (wpid != (pid_t) /*_#KEYPID__L8*/ meltfnum[6]);
		if (! /*_#WAITFAIL__L4*/ meltfnum[0])
	   /*_#PIDSTAT__L5*/ meltfnum[4] = pstatus;
	      } /* hook_handle_sigchld end WAITPIDCHK__1 */ ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2824:/ cond");
	    /*cond */ if ( /*_#WAITFAIL__L4*/ meltfnum[0])	/*then */
	      {
		/*^cond.then */
		/*_._IFELSE___V18*/ meltfptr[15] = ( /*nil */ NULL);;
	      }
	    else
	      {
		MELT_LOCATION ("warmelt-hooks.melt:2824:/ cond.else");

		/*^block */
		/*anyblock */
		{


		  {
		    MELT_LOCATION ("warmelt-hooks.melt:2825:/ locexp");
		    meltgc_append_list ((melt_ptr_t)
					( /*_.LISCHPH__V5*/ meltfptr[2]),
					(melt_ptr_t) ( /*_.CHPH__V12*/
						      meltfptr[10]));
		  }
		  ;
      /*_.MAKE_INTEGERBOX__V19*/ meltfptr[16] =
		    (meltgc_new_int
		     ((meltobject_ptr_t)
		      (( /*~DISCR_CONSTANT_INTEGER */ meltfhook->tabval[3])),
		      ( /*_#PIDSTAT__L5*/ meltfnum[4])));;

		  {
		    MELT_LOCATION ("warmelt-hooks.melt:2826:/ locexp");
		    meltgc_append_list ((melt_ptr_t)
					( /*_.LISWSTAT__V6*/ meltfptr[3]),
					(melt_ptr_t) ( /*_.MAKE_INTEGERBOX__V19*/ meltfptr[16]));
		  }
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:2824:/ quasiblock");


		  /*epilog */

		  /*^clear */
		/*clear *//*_.MAKE_INTEGERBOX__V19*/ meltfptr[16] = 0;
		}
		;
	      }
	    ;
	    /* ending foreach_in_bucketlong meltcit2__EACHBUCKLONG */
     /*_#KEYPID__L8*/ meltfnum[6] = 0L;
     /*_.CHPH__V12*/ meltfptr[10] = NULL;
	  }			/* end foreach_in_bucketlong meltcit2__EACHBUCKLONG_ix */


	/*citerepilog */

	MELT_LOCATION ("warmelt-hooks.melt:2806:/ clear");
	      /*clear *//*_#KEYPID__L8*/ meltfnum[6] = 0;
	/*^clear */
	      /*clear *//*_.CHPH__V12*/ meltfptr[10] = 0;
	/*^clear */
	      /*clear *//*_.IFCPP___V13*/ meltfptr[9] = 0;
	/*^clear */
	      /*clear *//*_.IFCPP___V15*/ meltfptr[13] = 0;
	/*^clear */
	      /*clear *//*_._IFELSE___V18*/ meltfptr[15] = 0;
      }				/*endciterblock FOREACH_IN_BUCKETLONG */
      ;

      MELT_LOCATION ("warmelt-hooks.melt:2795:/ clear");
	     /*clear *//*_#WAITFAIL__L4*/ meltfnum[0] = 0;
      /*^clear */
	     /*clear *//*_#PIDSTAT__L5*/ meltfnum[4] = 0;
      /*^clear */
	     /*clear *//*_._IFELSE___V9*/ meltfptr[8] = 0;
      /* block_signals meltcit1__BLKSIGNAL end */
      melt_blocklevel_signals = meltcit1__BLKSIGNAL_lev;
      MELT_CHECK_SIGNAL ();


      /*citerepilog */
    }				/*endciterblock BLOCK_SIGNALS */
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2830:/ quasiblock");



    MELT_CHECK_SIGNAL ();
    ;
    /*^apply */
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & ( /*~DISCR_MULTIPLE */ meltfhook->tabval[5]);
      /*_.TUPCHPH__V20*/ meltfptr[16] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_TO_MULTIPLE */ meltfhook->tabval[4])),
		    (melt_ptr_t) ( /*_.LISCHPH__V5*/ meltfptr[2]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;

    MELT_CHECK_SIGNAL ();
    ;
    MELT_LOCATION ("warmelt-hooks.melt:2831:/ apply");
    /*apply */
    {
      union meltparam_un argtab[1];
      memset (&argtab, 0, sizeof (argtab));
      /*^apply.arg */
      argtab[0].meltbp_aptr =
	(melt_ptr_t *) & ( /*~DISCR_MULTIPLE */ meltfhook->tabval[5]);
      /*_.TUPWSTAT__V21*/ meltfptr[8] =
	melt_apply ((meltclosure_ptr_t)
		    (( /*~LIST_TO_MULTIPLE */ meltfhook->tabval[4])),
		    (melt_ptr_t) ( /*_.LISWSTAT__V6*/ meltfptr[3]),
		    (MELTBPARSTR_PTR ""), argtab, "",
		    (union meltparam_un *) 0);
    }
    ;
    /*citerblock FOREACH_IN_MULTIPLE */
    {
      /* start foreach_in_multiple meltcit3__EACHTUP */
      long meltcit3__EACHTUP_ln =
	melt_multiple_length ((melt_ptr_t) /*_.TUPCHPH__V20*/ meltfptr[16]);
      for ( /*_#IX__L12*/ meltfnum[5] = 0;
	   ( /*_#IX__L12*/ meltfnum[5] >= 0)
	   && ( /*_#IX__L12*/ meltfnum[5] < meltcit3__EACHTUP_ln);
	/*_#IX__L12*/ meltfnum[5]++)
	{
	  /*_.CURCHPH__V22*/ meltfptr[21] =
	    melt_multiple_nth ((melt_ptr_t)
			       ( /*_.TUPCHPH__V20*/ meltfptr[16]),
			       /*_#IX__L12*/ meltfnum[5]);



	  MELT_LOCATION ("warmelt-hooks.melt:2836:/ quasiblock");


   /*_.MULTIPLE_NTH__V23*/ meltfptr[22] =
	    (melt_multiple_nth
	     ((melt_ptr_t) ( /*_.TUPWSTAT__V21*/ meltfptr[8]),
	      ( /*_#IX__L12*/ meltfnum[5])));;
	  /*^compute */
   /*_#CURWSTAT__L13*/ meltfnum[10] =
	    (melt_get_int
	     ((melt_ptr_t) ( /*_.MULTIPLE_NTH__V23*/ meltfptr[22])));;
	  MELT_LOCATION ("warmelt-hooks.melt:2837:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.CURCHPH__V22*/
					       meltfptr[21]),
					      (melt_ptr_t) (( /*~CLASS_CHILD_PROCESS_HANDLER */ meltfhook->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) ( /*_.CURCHPH__V22*/ meltfptr[21]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 1, "CHILPROH_PID");
     /*_.CHILPROH_PID__V24*/ meltfptr[23] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_.CHILPROH_PID__V24*/ meltfptr[23] = NULL;;
	    }
	  ;
	  /*^compute */
   /*_#CURPID__L14*/ meltfnum[0] =
	    (melt_get_int
	     ((melt_ptr_t) ( /*_.CHILPROH_PID__V24*/ meltfptr[23])));;
	  MELT_LOCATION ("warmelt-hooks.melt:2838:/ cond");
	  /*cond */ if (
			 /*ifisa */
			 melt_is_instance_of ((melt_ptr_t)
					      ( /*_.CURCHPH__V22*/
					       meltfptr[21]),
					      (melt_ptr_t) (( /*~CLASS_CHILD_PROCESS_HANDLER */ meltfhook->tabval[2])))
	    )			/*then */
	    {
	      /*^cond.then */
	      /*^getslot */
	      {
		melt_ptr_t slot = NULL, obj = NULL;
		obj =
		  (melt_ptr_t) ( /*_.CURCHPH__V22*/ meltfptr[21]) /*=obj*/ ;
		melt_object_get_field (slot, obj, 2, "CHILPROH_CLOS");
     /*_.CURCLOS__V25*/ meltfptr[24] = slot;
	      };
	      ;
	    }
	  else
	    {			/*^cond.else */

    /*_.CURCLOS__V25*/ meltfptr[24] = NULL;;
	    }
	  ;
	  /*^compute */
   /*_#EXITED__L15*/ meltfnum[4] = 0;;
	  /*^compute */
   /*_#EXITSTAT__L16*/ meltfnum[15] = 0;;
	  /*^compute */
   /*_#SIGNALED__L17*/ meltfnum[16] = 0;;
	  /*^compute */
   /*_#TERMSIG__L18*/ meltfnum[17] = 0;;
	  /*^compute */
	  /*_.TERMSIGNAME__V26*/ meltfptr[25] = ( /*nil */ NULL);;

#if MELT_HAVE_DEBUG
	  MELT_LOCATION ("warmelt-hooks.melt:2845:/ cppif.then");
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
	      melt_dbgcounter++;
#endif
	      ;
	    }
	    ;

	    MELT_CHECK_SIGNAL ();
	    ;
     /*_#MELT_NEED_DBG__L19*/ meltfnum[18] =
	      /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
	      ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
	      0			/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
	      ;;
	    MELT_LOCATION ("warmelt-hooks.melt:2845:/ cond");
	    /*cond */ if ( /*_#MELT_NEED_DBG__L19*/ meltfnum[18])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{

       /*_#MELT_CALLCOUNT__L20*/ meltfnum[19] =
		    /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
		    meltcallcount	/* melt_callcount debugging */
#else
		    0L		/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
		    ;;

		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:2845:/ apply");
		  /*apply */
		  {
		    union meltparam_un argtab[9];
		    memset (&argtab, 0, sizeof (argtab));
		    /*^apply.arg */
		    argtab[0].meltbp_long =
		      /*_#MELT_CALLCOUNT__L20*/ meltfnum[19];
		    /*^apply.arg */
		    argtab[1].meltbp_cstring = "warmelt-hooks.melt";
		    /*^apply.arg */
		    argtab[2].meltbp_long = 2845;
		    /*^apply.arg */
		    argtab[3].meltbp_cstring = "hook_handle_sigchld curchph=";
		    /*^apply.arg */
		    argtab[4].meltbp_aptr =
		      (melt_ptr_t *) & /*_.CURCHPH__V22*/ meltfptr[21];
		    /*^apply.arg */
		    argtab[5].meltbp_cstring = " curwstat=";
		    /*^apply.arg */
		    argtab[6].meltbp_long = /*_#CURWSTAT__L13*/ meltfnum[10];
		    /*^apply.arg */
		    argtab[7].meltbp_cstring = " ix=";
		    /*^apply.arg */
		    argtab[8].meltbp_long = /*_#IX__L12*/ meltfnum[5];
		    /*_.MELT_DEBUG_FUN__V28*/ meltfptr[27] =
		      melt_apply ((meltclosure_ptr_t)
				  (( /*~MELT_DEBUG_FUN */ meltfhook->
				    tabval[0])),
				  (melt_ptr_t) (( /*nil */ NULL)),
				  (MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_PTR MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG MELTBPARSTR_CSTRING
				   MELTBPARSTR_LONG ""), argtab, "",
				  (union meltparam_un *) 0);
		  }
		  ;
		  /*_._IF___V27*/ meltfptr[26] =
		    /*_.MELT_DEBUG_FUN__V28*/ meltfptr[27];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:2845:/ clear");
		 /*clear *//*_#MELT_CALLCOUNT__L20*/ meltfnum[19] = 0;
		  /*^clear */
		 /*clear *//*_.MELT_DEBUG_FUN__V28*/ meltfptr[27] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

      /*_._IF___V27*/ meltfptr[26] = NULL;;
	      }
	    ;

	    {
	      MELT_LOCATION ("warmelt-hooks.melt:2845:/ locexp");
	      /*void */ (void) 0;
	    }
	    ;
	    /*^quasiblock */


	    /*epilog */

	    /*^clear */
	       /*clear *//*_#MELT_NEED_DBG__L19*/ meltfnum[18] = 0;
	    /*^clear */
	       /*clear *//*_._IF___V27*/ meltfptr[26] = 0;
	  }

#else /*MELT_HAVE_DEBUG */
	  /*^cppif.else */
	  /*^block */
	  /*anyblock */
	  {


	    {
	      /*^locexp */
	      /*void */ (void) 0;
	    }
	    ;
	    /*epilog */
	  }

#endif /*MELT_HAVE_DEBUG */
	  ;
	  /*citerblock BLOCK_SIGNALS */
	  {
	    /* block_signals meltcit4__BLKSIGNAL start */
	    long meltcit4__BLKSIGNAL_lev = melt_blocklevel_signals;
	    melt_blocklevel_signals = meltcit4__BLKSIGNAL_lev + 1;



	    MELT_LOCATION ("warmelt-hooks.melt:2849:/ quasiblock");


    /*_.CBUCK__V29*/ meltfptr[27] =
	      (melt_module_var_fetch (meltmodvarix_MELT_CHILDBUCK_symb));;
	    /*^compute */
    /*_.BUCKETLONG_REMOVE__V30*/ meltfptr[26] =
	      meltgc_longsbucket_remove ((melt_ptr_t) /*_.CBUCK__V29*/
					 meltfptr[27],
					 ( /*_#CURPID__L14*/ meltfnum[0]));;
	    MELT_LOCATION ("warmelt-hooks.melt:2851:/ compute");
	    /*_.CBUCK__V29*/ meltfptr[27] = /*_.SETQ___V31*/ meltfptr[30] =
	      /*_.BUCKETLONG_REMOVE__V30*/ meltfptr[26];;
	    MELT_LOCATION ("warmelt-hooks.melt:2852:/ putmodvar");
	    melt_module_var_put (meltmodvarix_MELT_CHILDBUCK_symb,
				 (melt_ptr_t) ( /*_.CBUCK__V29*/
					       meltfptr[27]));
	    ;

	    MELT_LOCATION ("warmelt-hooks.melt:2849:/ clear");
	      /*clear *//*_.CBUCK__V29*/ meltfptr[27] = 0;
	    /*^clear */
	      /*clear *//*_.BUCKETLONG_REMOVE__V30*/ meltfptr[26] = 0;
	    /*^clear */
	      /*clear *//*_.SETQ___V31*/ meltfptr[30] = 0;
	    /* block_signals meltcit4__BLKSIGNAL end */
	    melt_blocklevel_signals = meltcit4__BLKSIGNAL_lev;
	    MELT_CHECK_SIGNAL ();


	    /*citerepilog */
	  }			/*endciterblock BLOCK_SIGNALS */
	  ;

	  {
	    MELT_LOCATION ("warmelt-hooks.melt:2854:/ locexp");
	    /* hook_handle_sigchld LOOKWSTATCHK__1 */
	    {
	      int wstat = (int) /*_#CURWSTAT__L13*/ meltfnum[10];
	      if (WIFEXITED (wstat))
		{
	  /*_#EXITED__L15*/ meltfnum[4] = 1;
	  /*_#EXITSTAT__L16*/ meltfnum[15] = WEXITSTATUS (wstat);
		}
	      else if (WIFSIGNALED (wstat))
		{
	  /*_#SIGNALED__L17*/ meltfnum[16] = 1;
	  /*_#TERMSIG__L18*/ meltfnum[17] = WTERMSIG (wstat);
	  /*_.TERMSIGNAME__V26*/ meltfptr[25] = meltgc_new_string
		    ((meltobject_ptr_t) MELT_PREDEF (DISCR_STRING),
		     strsignal ( /*_#TERMSIG__L18*/ meltfnum[17]));
		}
	    } /* end hook_handle_sigchld LOOKWSTATCHK__1 */ ;
	  }
	  ;
	  /*citerblock BLOCK_SIGNALS */
	  {
	    /* block_signals meltcit5__BLKSIGNAL start */
	    long meltcit5__BLKSIGNAL_lev = melt_blocklevel_signals;
	    melt_blocklevel_signals = meltcit5__BLKSIGNAL_lev + 1;




	    MELT_CHECK_SIGNAL ();
	    ;
	    MELT_LOCATION ("warmelt-hooks.melt:2874:/ cond");
	    /*cond */ if ( /*_#EXITED__L15*/ meltfnum[4])	/*then */
	      {
		/*^cond.then */
		/*^block */
		/*anyblock */
		{


		  MELT_CHECK_SIGNAL ();
		  ;
      /*_#eqeqI__L21*/ meltfnum[19] =
		    (( /*_#EXITSTAT__L16*/ meltfnum[15]) == (0));;
		  MELT_LOCATION ("warmelt-hooks.melt:2876:/ cond");
		  /*cond */ if ( /*_#eqeqI__L21*/ meltfnum[19])	/*then */
		    {
		      /*^cond.then */
		      /*^block */
		      /*anyblock */
		      {


#if MELT_HAVE_DEBUG
			MELT_LOCATION
			  ("warmelt-hooks.melt:2878:/ cppif.then");
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			    melt_dbgcounter++;
#endif
			    ;
			  }
			  ;

			  MELT_CHECK_SIGNAL ();
			  ;
	  /*_#MELT_NEED_DBG__L22*/ meltfnum[18] =
			    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			    0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			    ;;
			  MELT_LOCATION ("warmelt-hooks.melt:2878:/ cond");
			  /*cond */ if ( /*_#MELT_NEED_DBG__L22*/ meltfnum[18])	/*then */
			    {
			      /*^cond.then */
			      /*^block */
			      /*anyblock */
			      {

	    /*_#MELT_CALLCOUNT__L23*/ meltfnum[22] =
				  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
				  meltcallcount	/* melt_callcount debugging */
#else
				  0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
				  ;;

				MELT_CHECK_SIGNAL ();
				;
				MELT_LOCATION
				  ("warmelt-hooks.melt:2878:/ apply");
				/*apply */
				{
				  union meltparam_un argtab[5];
				  memset (&argtab, 0, sizeof (argtab));
				  /*^apply.arg */
				  argtab[0].meltbp_long =
				    /*_#MELT_CALLCOUNT__L23*/ meltfnum[22];
				  /*^apply.arg */
				  argtab[1].meltbp_cstring =
				    "warmelt-hooks.melt";
				  /*^apply.arg */
				  argtab[2].meltbp_long = 2878;
				  /*^apply.arg */
				  argtab[3].meltbp_cstring =
				    "hook_handle_sigchld successful curchph=";
				  /*^apply.arg */
				  argtab[4].meltbp_aptr =
				    (melt_ptr_t *) & /*_.CURCHPH__V22*/
				    meltfptr[21];
				  /*_.MELT_DEBUG_FUN__V35*/ meltfptr[34] =
				    melt_apply ((meltclosure_ptr_t)
						(( /*~MELT_DEBUG_FUN */
						  meltfhook->tabval[0])),
						(melt_ptr_t) (( /*nil */
							       NULL)),
						(MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_PTR ""), argtab,
						"", (union meltparam_un *) 0);
				}
				;
				/*_._IF___V34*/ meltfptr[30] =
				  /*_.MELT_DEBUG_FUN__V35*/ meltfptr[34];;
				/*epilog */

				MELT_LOCATION
				  ("warmelt-hooks.melt:2878:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L23*/
				  meltfnum[22] = 0;
				/*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V35*/
				  meltfptr[34] = 0;
			      }
			      ;
			    }
			  else
			    {	/*^cond.else */

	   /*_._IF___V34*/ meltfptr[30] = NULL;;
			    }
			  ;

			  {
			    MELT_LOCATION
			      ("warmelt-hooks.melt:2878:/ locexp");
			    /*void */ (void) 0;
			  }
			  ;
			  /*^quasiblock */


			  /*epilog */

			  /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L22*/ meltfnum[18] = 0;
			  /*^clear */
		    /*clear *//*_._IF___V34*/ meltfptr[30] = 0;
			}

#else /*MELT_HAVE_DEBUG */
			/*^cppif.else */
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*void */ (void) 0;
			  }
			  ;
			  /*epilog */
			}

#endif /*MELT_HAVE_DEBUG */
			;

			MELT_CHECK_SIGNAL ();
			;
			MELT_LOCATION ("warmelt-hooks.melt:2880:/ apply");
			/*apply */
			{
			  union meltparam_un argtab[1];
			  memset (&argtab, 0, sizeof (argtab));
			  /*^apply.arg */
			  argtab[0].meltbp_aptr =
			  /*nil */ (melt_ptr_t *) NULL;
			  /*_.CURCLOS__V36*/ meltfptr[34] =
			    melt_apply ((meltclosure_ptr_t)
					( /*_.CURCLOS__V25*/ meltfptr[24]),
					(melt_ptr_t) ( /*_.CURCHPH__V22*/
						      meltfptr[21]),
					(MELTBPARSTR_PTR ""), argtab, "",
					(union meltparam_un *) 0);
			}
			;
			MELT_LOCATION
			  ("warmelt-hooks.melt:2876:/ quasiblock");


			/*_.PROGN___V37*/ meltfptr[30] =
			  /*_.CURCLOS__V36*/ meltfptr[34];;
			/*^compute */
			/*_._IFELSE___V33*/ meltfptr[26] =
			  /*_.PROGN___V37*/ meltfptr[30];;
			/*epilog */

			MELT_LOCATION ("warmelt-hooks.melt:2876:/ clear");
		  /*clear *//*_.CURCLOS__V36*/ meltfptr[34] = 0;
			/*^clear */
		  /*clear *//*_.PROGN___V37*/ meltfptr[30] = 0;
		      }
		      ;
		    }
		  else
		    {		/*^cond.else */

		      /*^block */
		      /*anyblock */
		      {


#if MELT_HAVE_DEBUG
			MELT_LOCATION
			  ("warmelt-hooks.melt:2884:/ cppif.then");
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			    melt_dbgcounter++;
#endif
			    ;
			  }
			  ;

			  MELT_CHECK_SIGNAL ();
			  ;
	  /*_#MELT_NEED_DBG__L24*/ meltfnum[22] =
			    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			    0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			    ;;
			  MELT_LOCATION ("warmelt-hooks.melt:2884:/ cond");
			  /*cond */ if ( /*_#MELT_NEED_DBG__L24*/ meltfnum[22])	/*then */
			    {
			      /*^cond.then */
			      /*^block */
			      /*anyblock */
			      {

	    /*_#MELT_CALLCOUNT__L25*/ meltfnum[18] =
				  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
				  meltcallcount	/* melt_callcount debugging */
#else
				  0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
				  ;;

				MELT_CHECK_SIGNAL ();
				;
				MELT_LOCATION
				  ("warmelt-hooks.melt:2884:/ apply");
				/*apply */
				{
				  union meltparam_un argtab[7];
				  memset (&argtab, 0, sizeof (argtab));
				  /*^apply.arg */
				  argtab[0].meltbp_long =
				    /*_#MELT_CALLCOUNT__L25*/ meltfnum[18];
				  /*^apply.arg */
				  argtab[1].meltbp_cstring =
				    "warmelt-hooks.melt";
				  /*^apply.arg */
				  argtab[2].meltbp_long = 2884;
				  /*^apply.arg */
				  argtab[3].meltbp_cstring =
				    "hook_handle_sigchld failed curchph=";
				  /*^apply.arg */
				  argtab[4].meltbp_aptr =
				    (melt_ptr_t *) & /*_.CURCHPH__V22*/
				    meltfptr[21];
				  /*^apply.arg */
				  argtab[5].meltbp_cstring = " exitstat=";
				  /*^apply.arg */
				  argtab[6].meltbp_long =
				    /*_#EXITSTAT__L16*/ meltfnum[15];
				  /*_.MELT_DEBUG_FUN__V39*/ meltfptr[30] =
				    melt_apply ((meltclosure_ptr_t)
						(( /*~MELT_DEBUG_FUN */
						  meltfhook->tabval[0])),
						(melt_ptr_t) (( /*nil */
							       NULL)),
						(MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_PTR
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_LONG ""), argtab,
						"", (union meltparam_un *) 0);
				}
				;
				/*_._IF___V38*/ meltfptr[34] =
				  /*_.MELT_DEBUG_FUN__V39*/ meltfptr[30];;
				/*epilog */

				MELT_LOCATION
				  ("warmelt-hooks.melt:2884:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L25*/
				  meltfnum[18] = 0;
				/*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V39*/
				  meltfptr[30] = 0;
			      }
			      ;
			    }
			  else
			    {	/*^cond.else */

	   /*_._IF___V38*/ meltfptr[34] = NULL;;
			    }
			  ;

			  {
			    MELT_LOCATION
			      ("warmelt-hooks.melt:2884:/ locexp");
			    /*void */ (void) 0;
			  }
			  ;
			  /*^quasiblock */


			  /*epilog */

			  /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L24*/ meltfnum[22] = 0;
			  /*^clear */
		    /*clear *//*_._IF___V38*/ meltfptr[34] = 0;
			}

#else /*MELT_HAVE_DEBUG */
			/*^cppif.else */
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*void */ (void) 0;
			  }
			  ;
			  /*epilog */
			}

#endif /*MELT_HAVE_DEBUG */
			;
	/*_.MAKE_INTEGERBOX__V40*/ meltfptr[30] =
			  (meltgc_new_int
			   ((meltobject_ptr_t)
			    (( /*~DISCR_CONSTANT_INTEGER */ meltfhook->
			      tabval[3])),
			    ( /*_#EXITSTAT__L16*/ meltfnum[15])));;

			MELT_CHECK_SIGNAL ();
			;
			MELT_LOCATION ("warmelt-hooks.melt:2886:/ apply");
			/*apply */
			{
			  union meltparam_un argtab[1];
			  memset (&argtab, 0, sizeof (argtab));
			  /*^apply.arg */
			  argtab[0].meltbp_aptr =
			    (melt_ptr_t *) & /*_.MAKE_INTEGERBOX__V40*/
			    meltfptr[30];
			  /*_.CURCLOS__V41*/ meltfptr[34] =
			    melt_apply ((meltclosure_ptr_t)
					( /*_.CURCLOS__V25*/ meltfptr[24]),
					(melt_ptr_t) ( /*_.CURCHPH__V22*/
						      meltfptr[21]),
					(MELTBPARSTR_PTR ""), argtab, "",
					(union meltparam_un *) 0);
			}
			;
			MELT_LOCATION
			  ("warmelt-hooks.melt:2882:/ quasiblock");


			/*_.PROGN___V42*/ meltfptr[41] =
			  /*_.CURCLOS__V41*/ meltfptr[34];;
			/*^compute */
			/*_._IFELSE___V33*/ meltfptr[26] =
			  /*_.PROGN___V42*/ meltfptr[41];;
			/*epilog */

			MELT_LOCATION ("warmelt-hooks.melt:2876:/ clear");
		  /*clear *//*_.MAKE_INTEGERBOX__V40*/ meltfptr[30] = 0;
			/*^clear */
		  /*clear *//*_.CURCLOS__V41*/ meltfptr[34] = 0;
			/*^clear */
		  /*clear *//*_.PROGN___V42*/ meltfptr[41] = 0;
		      }
		      ;
		    }
		  ;
		  /*_._IFELSE___V32*/ meltfptr[27] =
		    /*_._IFELSE___V33*/ meltfptr[26];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:2874:/ clear");
		/*clear *//*_#eqeqI__L21*/ meltfnum[19] = 0;
		  /*^clear */
		/*clear *//*_._IFELSE___V33*/ meltfptr[26] = 0;
		}
		;
	      }
	    else
	      {			/*^cond.else */

		/*^block */
		/*anyblock */
		{


		  MELT_CHECK_SIGNAL ();
		  ;
		  MELT_LOCATION ("warmelt-hooks.melt:2890:/ cond");
		  /*cond */ if ( /*_#SIGNALED__L17*/ meltfnum[16])	/*then */
		    {
		      /*^cond.then */
		      /*^block */
		      /*anyblock */
		      {


#if MELT_HAVE_DEBUG
			MELT_LOCATION
			  ("warmelt-hooks.melt:2891:/ cppif.then");
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*melt_increment_dbgcounter */
#if MELT_HAVE_DEBUG
			    melt_dbgcounter++;
#endif
			    ;
			  }
			  ;

			  MELT_CHECK_SIGNAL ();
			  ;
	  /*_#MELT_NEED_DBG__L26*/ meltfnum[18] =
			    /*MELT_NEED_DBG */
#if MELT_HAVE_DEBUG
			    ( /*melt_need_dbg */ melt_need_debug ((int) 0))
#else
			    0	/* no melt_need_dbg */
#endif /*MELT_HAVE_DEBUG */
			    ;;
			  MELT_LOCATION ("warmelt-hooks.melt:2891:/ cond");
			  /*cond */ if ( /*_#MELT_NEED_DBG__L26*/ meltfnum[18])	/*then */
			    {
			      /*^cond.then */
			      /*^block */
			      /*anyblock */
			      {

	    /*_#MELT_CALLCOUNT__L27*/ meltfnum[22] =
				  /* for melt_callcount */
#if MELT_HAVE_DEBUG && defined (meltcallcount)
				  meltcallcount	/* melt_callcount debugging */
#else
				  0L	/* melt_callcount without debug */
#endif /* MELT_HAVE_DEBUG melt_callcount */
				  ;;

				MELT_CHECK_SIGNAL ();
				;
				MELT_LOCATION
				  ("warmelt-hooks.melt:2891:/ apply");
				/*apply */
				{
				  union meltparam_un argtab[7];
				  memset (&argtab, 0, sizeof (argtab));
				  /*^apply.arg */
				  argtab[0].meltbp_long =
				    /*_#MELT_CALLCOUNT__L27*/ meltfnum[22];
				  /*^apply.arg */
				  argtab[1].meltbp_cstring =
				    "warmelt-hooks.melt";
				  /*^apply.arg */
				  argtab[2].meltbp_long = 2891;
				  /*^apply.arg */
				  argtab[3].meltbp_cstring =
				    "hook_handle_sigchld signaled curchph=";
				  /*^apply.arg */
				  argtab[4].meltbp_aptr =
				    (melt_ptr_t *) & /*_.CURCHPH__V22*/
				    meltfptr[21];
				  /*^apply.arg */
				  argtab[5].meltbp_cstring = " termsigname=";
				  /*^apply.arg */
				  argtab[6].meltbp_aptr =
				    (melt_ptr_t *) & /*_.TERMSIGNAME__V26*/
				    meltfptr[25];
				  /*_.MELT_DEBUG_FUN__V45*/ meltfptr[41] =
				    melt_apply ((meltclosure_ptr_t)
						(( /*~MELT_DEBUG_FUN */
						  meltfhook->tabval[0])),
						(melt_ptr_t) (( /*nil */
							       NULL)),
						(MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_LONG
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_PTR
						 MELTBPARSTR_CSTRING
						 MELTBPARSTR_PTR ""), argtab,
						"", (union meltparam_un *) 0);
				}
				;
				/*_._IF___V44*/ meltfptr[34] =
				  /*_.MELT_DEBUG_FUN__V45*/ meltfptr[41];;
				/*epilog */

				MELT_LOCATION
				  ("warmelt-hooks.melt:2891:/ clear");
		      /*clear *//*_#MELT_CALLCOUNT__L27*/
				  meltfnum[22] = 0;
				/*^clear */
		      /*clear *//*_.MELT_DEBUG_FUN__V45*/
				  meltfptr[41] = 0;
			      }
			      ;
			    }
			  else
			    {	/*^cond.else */

	   /*_._IF___V44*/ meltfptr[34] = NULL;;
			    }
			  ;

			  {
			    MELT_LOCATION
			      ("warmelt-hooks.melt:2891:/ locexp");
			    /*void */ (void) 0;
			  }
			  ;
			  /*^quasiblock */


			  /*epilog */

			  /*^clear */
		    /*clear *//*_#MELT_NEED_DBG__L26*/ meltfnum[18] = 0;
			  /*^clear */
		    /*clear *//*_._IF___V44*/ meltfptr[34] = 0;
			}

#else /*MELT_HAVE_DEBUG */
			/*^cppif.else */
			/*^block */
			/*anyblock */
			{


			  {
			    /*^locexp */
			    /*void */ (void) 0;
			  }
			  ;
			  /*epilog */
			}

#endif /*MELT_HAVE_DEBUG */
			;

			MELT_CHECK_SIGNAL ();
			;
			MELT_LOCATION ("warmelt-hooks.melt:2893:/ apply");
			/*apply */
			{
			  union meltparam_un argtab[1];
			  memset (&argtab, 0, sizeof (argtab));
			  /*^apply.arg */
			  argtab[0].meltbp_aptr =
			    (melt_ptr_t *) & /*_.TERMSIGNAME__V26*/
			    meltfptr[25];
			  /*_.CURCLOS__V46*/ meltfptr[26] =
			    melt_apply ((meltclosure_ptr_t)
					( /*_.CURCLOS__V25*/ meltfptr[24]),
					(melt_ptr_t) ( /*_.CURCHPH__V22*/
						      meltfptr[21]),
					(MELTBPARSTR_PTR ""), argtab, "",
					(union meltparam_un *) 0);
			}
			;
			MELT_LOCATION
			  ("warmelt-hooks.melt:2890:/ quasiblock");


			/*_.PROGN___V47*/ meltfptr[41] =
			  /*_.CURCLOS__V46*/ meltfptr[26];;
			/*^compute */
			/*_._IFELSE___V43*/ meltfptr[30] =
			  /*_.PROGN___V47*/ meltfptr[41];;
			/*epilog */

			MELT_LOCATION ("warmelt-hooks.melt:2890:/ clear");
		  /*clear *//*_.CURCLOS__V46*/ meltfptr[26] = 0;
			/*^clear */
		  /*clear *//*_.PROGN___V47*/ meltfptr[41] = 0;
		      }
		      ;
		    }
		  else
		    {		/*^cond.else */

       /*_._IFELSE___V43*/ meltfptr[30] = NULL;;
		    }
		  ;
		  /*^compute */
		  /*_._IFELSE___V32*/ meltfptr[27] =
		    /*_._IFELSE___V43*/ meltfptr[30];;
		  /*epilog */

		  MELT_LOCATION ("warmelt-hooks.melt:2874:/ clear");
		/*clear *//*_._IFELSE___V43*/ meltfptr[30] = 0;
		}
		;
	      }
	    ;
	    /* block_signals meltcit5__BLKSIGNAL end */
	    melt_blocklevel_signals = meltcit5__BLKSIGNAL_lev;
	    MELT_CHECK_SIGNAL ();


	    /*citerepilog */

	    MELT_LOCATION ("warmelt-hooks.melt:2871:/ clear");
	      /*clear *//*_._IFELSE___V32*/ meltfptr[27] = 0;
	  }			/*endciterblock BLOCK_SIGNALS */
	  ;

	  MELT_LOCATION ("warmelt-hooks.melt:2836:/ clear");
	     /*clear *//*_.MULTIPLE_NTH__V23*/ meltfptr[22] = 0;
	  /*^clear */
	     /*clear *//*_#CURWSTAT__L13*/ meltfnum[10] = 0;
	  /*^clear */
	     /*clear *//*_.CHILPROH_PID__V24*/ meltfptr[23] = 0;
	  /*^clear */
	     /*clear *//*_#CURPID__L14*/ meltfnum[0] = 0;
	  /*^clear */
	     /*clear *//*_.CURCLOS__V25*/ meltfptr[24] = 0;
	  /*^clear */
	     /*clear *//*_#EXITED__L15*/ meltfnum[4] = 0;
	  /*^clear */
	     /*clear *//*_#EXITSTAT__L16*/ meltfnum[15] = 0;
	  /*^clear */
	     /*clear *//*_#SIGNALED__L17*/ meltfnum[16] = 0;
	  /*^clear */
	     /*clear *//*_#TERMSIG__L18*/ meltfnum[17] = 0;
	  /*^clear */
	     /*clear *//*_.TERMSIGNAME__V26*/ meltfptr[25] = 0;
	  if ( /*_#IX__L12*/ meltfnum[5] < 0)
	    break;
	}			/* end  foreach_in_multiple meltcit3__EACHTUP */

      /*citerepilog */

      MELT_LOCATION ("warmelt-hooks.melt:2833:/ clear");
	     /*clear *//*_.CURCHPH__V22*/ meltfptr[21] = 0;
      /*^clear */
	     /*clear *//*_#IX__L12*/ meltfnum[5] = 0;
    }				/*endciterblock FOREACH_IN_MULTIPLE */
    ;

    MELT_LOCATION ("warmelt-hooks.melt:2830:/ clear");
	    /*clear *//*_.TUPCHPH__V20*/ meltfptr[16] = 0;
    /*^clear */
	    /*clear *//*_.TUPWSTAT__V21*/ meltfptr[8] = 0;

    MELT_LOCATION ("warmelt-hooks.melt:2788:/ clear");
	    /*clear *//*_.LISCHPH__V5*/ meltfptr[2] = 0;
    /*^clear */
	    /*clear *//*_.LISWSTAT__V6*/ meltfptr[3] = 0;
    /*^clear */
	    /*clear *//*_.BUCK__V7*/ meltfptr[1] = 0;
    /*^clear */
	    /*clear *//*_#IS_BUCKETLONG__L3*/ meltfnum[1] = 0;
    /*^clear */
	    /*clear *//*_._IFELSE___V8*/ meltfptr[7] = 0;

    MELT_CHECK_SIGNAL ();
    ;
    /*epilog */
  }
  ;
  /* epilogue of melthook_HOOK_HANDLE_SIGCHLD hook */
  goto meltlabend_rout;
meltlabend_rout:;

  /* final of melthook_HOOK_HANDLE_SIGCHLD hook */
  melt_topframe = meltfram__.mcfr_prev;
  return;
}				/* end of melthook_HOOK_HANDLE_SIGCHLD hook */

#undef meltframe
#undef meltfram__
#undef meltfhook
#undef meltcallcount

/* define frame moving or marking routine for melthook_HOOK_HANDLE_SIGCHLDhook */
void
melthookmark_HOOK_HANDLE_SIGCHLD_rout (struct melt_callframe_st *meltcfram,
				       int meltmarking)
{

  melthookframe_HOOK_HANDLE_SIGCHLD_t *meltframptr_
    = (melthookframe_HOOK_HANDLE_SIGCHLD_t *) meltcfram;
  melt_assertmsg ("hook frame HOOK_HANDLE_SIGCHLD good hash",
		  meltframptr_->mcfr_nbvar == -3946);
  if (meltmarking)
    {				/* marking hook HOOK_HANDLE_SIGCHLD */
      int meltix;
      for (meltix = 0; meltix < 47; meltix++)
	if (meltframptr_->mcfr_varptr[meltix])
	  gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);
    }
  else /* copying hook HOOK_HANDLE_SIGCHLD */ if (melt_is_forwarding)
    {
      int meltvix;
      for (meltvix = 0; meltvix < 47; meltvix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltvix]);
    }				/* end copying hook HOOK_HANDLE_SIGCHLD */
}				/* end  melthookmark_HOOK_HANDLE_SIGCHLD_rout */



/*no syntax testing generated*/

/* the frame for initial routine */
struct melt_initial_frame_st
{
  int mcfr_nbvar;
#if MELT_HAVE_DEBUG
  const char *mcfr_flocs;
#else				/*!MELT_HAVE_DEBUG */
  const char *mcfr_unusedflocs;
#endif				/*MELT_HAVE_DEBUG */
  void (*mcfr_initforwmarkrout) (struct melt_callframe_st *, int);
  struct excepth_melt_st *mcfr_exh;
  struct melt_callframe_st *mcfr_prev;
#undef MELTFRAM_NBVARPTR
#undef MELTFRAM_NBVARNUM
#define MELTFRAM_NBVARPTR 537
  melt_ptr_t mcfr_varptr[537];
/*no varnum*/
#define MELTFRAM_NBVARNUM /*none*/0
/*others*/
  long _spare_;
}
 ;


static void
initialize_module_meltdata_WARMELTmiHOOKS (meltinitial_frame_t * iniframp__,
					   char meltpredefinited[])
{
#define meltfram__  (*iniframp__)

  /* curframe_cdat_struct */ struct meltcdata_st
  {
    void *meltcdata_inigap[2];	/* could help debugging */

    struct MELT_OBJECT_STRUCT (3)
      dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
    struct MELT_STRING_STRUCT (38) dstr_2__HOOK_FRESH_ENVIRONMENT_R;
    struct MELT_HOOK_STRUCT (1) dhook__3__HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_OBJECT_STRUCT (6) dobj_4__;
    struct MELT_STRING_STRUCT (23) dstr_5__HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_OBJECT_STRUCT (3) dsym_6__VAL;
    struct MELT_STRING_STRUCT (3) dstr_7__VAL;
    struct MELT_OBJECT_STRUCT (2) dobj_8;
    struct MELT_OBJECT_STRUCT (3) dsym_9__FILENAME;
    struct MELT_STRING_STRUCT (8) dstr_10__FILENAME;
    struct MELT_OBJECT_STRUCT (2) dobj_11;
    struct MELT_OBJECT_STRUCT (3) dsym_12__LINENO;
    struct MELT_STRING_STRUCT (6) dstr_13__LINENO;
    struct MELT_OBJECT_STRUCT (2) dobj_14;
    struct MELT_OBJECT_STRUCT (3) dsym_15__MSG;
    struct MELT_STRING_STRUCT (3) dstr_16__MSG;
    struct MELT_OBJECT_STRUCT (2) dobj_17;
    struct MELT_OBJECT_STRUCT (3) dsym_18__COUNT;
    struct MELT_STRING_STRUCT (5) dstr_19__COUNT;
    struct MELT_OBJECT_STRUCT (2) dobj_20;
    struct MELT_MULTIPLE_STRUCT (5) dtup_21___HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_MULTIPLE_STRUCT (0) dtup_22___HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_OBJECT_STRUCT (3) dsym_23__MELT_DEBUG_FUN;
    struct MELT_STRING_STRUCT (14) dstr_24__MELT_DEBUG_FUN;
    struct MELT_OBJECT_STRUCT (3) dsym_25__OVERRIDE_GATE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (27) dstr_26__OVERRIDE_GATE_DELAYED_QU;
    struct MELT_OBJECT_STRUCT (3) dsym_27__CLASS_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (19) dstr_28__CLASS_DELAYED_QUEUE;
    struct MELT_OBJECT_STRUCT (5) dobj_29__OVERRIDE_GATE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (27) dstr_30__override_gate_delayed_qu;
    struct MELT_OBJECT_STRUCT (3) dsym_31__DISCR_LIST;
    struct MELT_STRING_STRUCT (10) dstr_32__DISCR_LIST;
    struct MELT_HOOK_STRUCT (6) dhook__33__HOOK_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (6) dobj_34__;
    struct MELT_STRING_STRUCT (18) dstr_35__HOOK_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_36__BEFOREGATE;
    struct MELT_STRING_STRUCT (10) dstr_37__BEFOREGATE;
    struct MELT_OBJECT_STRUCT (2) dobj_38;
    struct MELT_MULTIPLE_STRUCT (1) dtup_39___HOOK_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_40__AFTERGATE;
    struct MELT_STRING_STRUCT (9) dstr_41__AFTERGATE;
    struct MELT_OBJECT_STRUCT (2) dobj_42;
    struct MELT_MULTIPLE_STRUCT (1) dtup_43___HOOK_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_44__TRUE;
    struct MELT_STRING_STRUCT (4) dstr_45__TRUE;
    struct MELT_OBJECT_STRUCT (3) dsym_46__CLASS_REFERENCE;
    struct MELT_STRING_STRUCT (15) dstr_47__CLASS_REFERENCE;
    struct MELT_ROUTINE_STRUCT (0) drout_48__ENABLE_OVERRIDE_GATE;
    struct MELT_CLOSURE_STRUCT (0) dclo_49__ENABLE_OVERRIDE_GATE;
    struct MELT_ROUTINE_STRUCT (2) drout_50__MAYBE_DISABLE_OVERRIDE_GATE;
    struct MELT_CLOSURE_STRUCT (0) dclo_51__MAYBE_DISABLE_OVERRIDE_GATE;
    struct MELT_ROUTINE_STRUCT (4) drout_52__REGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_53__REGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_54__REGISTER_OVERRIDE_GATE_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_55__REGISTER_OVERRIDE_GATE_LAST;
    struct MELT_ROUTINE_STRUCT (5) drout_56__UNREGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_57__UNREGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_ROUTINE_STRUCT (5) drout_58__UNREGISTER_OVERRIDE_GATE_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_59__UNREGISTER_OVERRIDE_GATE_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_60__START_UNIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_61__START_UNIT_DELAYED_QUEUE;
    struct MELT_OBJECT_STRUCT (5) dobj_62__START_UNIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_63__start_unit_delayed_queue;
    struct MELT_HOOK_STRUCT (7) dhook__64__HOOK_START_UNIT;
    struct MELT_OBJECT_STRUCT (6) dobj_65__;
    struct MELT_STRING_STRUCT (15) dstr_66__HOOK_START_UNIT;
    struct MELT_MULTIPLE_STRUCT (0) dtup_67___HOOK_START_UNIT;
    struct MELT_MULTIPLE_STRUCT (0) dtup_68___HOOK_START_UNIT;
    struct MELT_OBJECT_STRUCT (3) dsym_69__LIST_EVERY;
    struct MELT_STRING_STRUCT (10) dstr_70__LIST_EVERY;
    struct MELT_ROUTINE_STRUCT (1) drout_71__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (0) drout_72__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (1) drout_73__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (0) drout_74__ENABLE_START_UNIT;
    struct MELT_CLOSURE_STRUCT (0) dclo_75__ENABLE_START_UNIT;
    struct MELT_ROUTINE_STRUCT (2) drout_76__AT_START_UNIT_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_77__AT_START_UNIT_FIRST;
    struct MELT_ROUTINE_STRUCT (2) drout_78__AT_START_UNIT_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_79__AT_START_UNIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_80__FINISH_UNIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (25) dstr_81__FINISH_UNIT_DELAYED_QUEU;
    struct MELT_OBJECT_STRUCT (5) dobj_82__FINISH_UNIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (25) dstr_83__finish_unit_delayed_queu;
    struct MELT_HOOK_STRUCT (7) dhook__84__HOOK_FINISH_UNIT;
    struct MELT_OBJECT_STRUCT (6) dobj_85__;
    struct MELT_STRING_STRUCT (16) dstr_86__HOOK_FINISH_UNIT;
    struct MELT_MULTIPLE_STRUCT (0) dtup_87___HOOK_FINISH_UNIT;
    struct MELT_MULTIPLE_STRUCT (0) dtup_88___HOOK_FINISH_UNIT;
    struct MELT_ROUTINE_STRUCT (1) drout_89__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (0) drout_90__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (1) drout_91__LAMBDA_;
    struct MELT_ROUTINE_STRUCT (0) drout_92__ENABLE_FINISH_UNIT;
    struct MELT_CLOSURE_STRUCT (0) dclo_93__ENABLE_FINISH_UNIT;
    struct MELT_ROUTINE_STRUCT (2) drout_94__AT_FINISH_UNIT_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_95__AT_FINISH_UNIT_FIRST;
    struct MELT_ROUTINE_STRUCT (2) drout_96__AT_FINISH_UNIT_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_97__AT_FINISH_UNIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_98__ALL_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (30) dstr_99__ALL_PASSES_START_DELAYED;
    struct MELT_OBJECT_STRUCT (5) dobj_100__ALL_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (30) dstr_101__all_passes_start_delayed;
    struct MELT_HOOK_STRUCT (3) dhook__102__HOOK_ALL_PASSES_START;
    struct MELT_OBJECT_STRUCT (6) dobj_103__;
    struct MELT_STRING_STRUCT (21) dstr_104__HOOK_ALL_PASSES_START;
    struct MELT_MULTIPLE_STRUCT (0) dtup_105___HOOK_ALL_PASSES_START;
    struct MELT_MULTIPLE_STRUCT (0) dtup_106___HOOK_ALL_PASSES_START;
    struct MELT_ROUTINE_STRUCT (0) drout_107__ENABLE_ALL_PASSES_START;
    struct MELT_CLOSURE_STRUCT (0) dclo_108__ENABLE_ALL_PASSES_START;
    struct MELT_ROUTINE_STRUCT (4) drout_109__REGISTER_ALL_PASSES_START_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_110__REGISTER_ALL_PASSES_START_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_111__REGISTER_ALL_PASSES_START_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_112__REGISTER_ALL_PASSES_START_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_113__ALL_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (28) dstr_114__ALL_PASSES_END_DELAYED_Q;
    struct MELT_OBJECT_STRUCT (5) dobj_115__ALL_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (28) dstr_116__all_passes_end_delayed_q;
    struct MELT_HOOK_STRUCT (3) dhook__117__HOOK_ALL_PASSES_END;
    struct MELT_OBJECT_STRUCT (6) dobj_118__;
    struct MELT_STRING_STRUCT (19) dstr_119__HOOK_ALL_PASSES_END;
    struct MELT_MULTIPLE_STRUCT (0) dtup_120___HOOK_ALL_PASSES_END;
    struct MELT_MULTIPLE_STRUCT (0) dtup_121___HOOK_ALL_PASSES_END;
    struct MELT_ROUTINE_STRUCT (0) drout_122__ENABLE_ALL_PASSES_END;
    struct MELT_CLOSURE_STRUCT (0) dclo_123__ENABLE_ALL_PASSES_END;
    struct MELT_ROUTINE_STRUCT (4) drout_124__REGISTER_ALL_PASSES_END_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_125__REGISTER_ALL_PASSES_END_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_126__REGISTER_ALL_PASSES_END_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_127__REGISTER_ALL_PASSES_END_LAST;
    struct MELT_OBJECT_STRUCT (3)
      dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (34) dstr_129__ALL_IPA_PASSES_START_DEL;
    struct MELT_OBJECT_STRUCT (5)
      dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (34) dstr_131__all_ipa_passes_start_del;
    struct MELT_HOOK_STRUCT (3) dhook__132__HOOK_ALL_IPA_PASSES_START;
    struct MELT_OBJECT_STRUCT (6) dobj_133__;
    struct MELT_STRING_STRUCT (25) dstr_134__HOOK_ALL_IPA_PASSES_STAR;
    struct MELT_MULTIPLE_STRUCT (0) dtup_135___HOOK_ALL_IPA_PASSES_START;
    struct MELT_MULTIPLE_STRUCT (0) dtup_136___HOOK_ALL_IPA_PASSES_START;
    struct MELT_ROUTINE_STRUCT (0) drout_137__ENABLE_ALL_IPA_PASSES_START;
    struct MELT_CLOSURE_STRUCT (0) dclo_138__ENABLE_ALL_IPA_PASSES_START;
    struct MELT_ROUTINE_STRUCT (4)
      drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_140__REGISTER_ALL_IPA_PASSES_START_FIRST;
    struct MELT_ROUTINE_STRUCT (4)
      drout_141__REGISTER_ALL_IPA_PASSES_START_LAST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_142__REGISTER_ALL_IPA_PASSES_START_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (32) dstr_144__ALL_IPA_PASSES_END_DELAY;
    struct MELT_OBJECT_STRUCT (5) dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (32) dstr_146__all_ipa_passes_end_delay;
    struct MELT_HOOK_STRUCT (3) dhook__147__HOOK_ALL_IPA_PASSES_END;
    struct MELT_OBJECT_STRUCT (6) dobj_148__;
    struct MELT_STRING_STRUCT (23) dstr_149__HOOK_ALL_IPA_PASSES_END;
    struct MELT_MULTIPLE_STRUCT (0) dtup_150___HOOK_ALL_IPA_PASSES_END;
    struct MELT_MULTIPLE_STRUCT (0) dtup_151___HOOK_ALL_IPA_PASSES_END;
    struct MELT_ROUTINE_STRUCT (0) drout_152__ENABLE_ALL_IPA_PASSES_END;
    struct MELT_CLOSURE_STRUCT (0) dclo_153__ENABLE_ALL_IPA_PASSES_END;
    struct MELT_ROUTINE_STRUCT (4)
      drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_155__REGISTER_ALL_IPA_PASSES_END_FIRST;
    struct MELT_ROUTINE_STRUCT (4)
      drout_156__REGISTER_ALL_IPA_PASSES_END_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_157__REGISTER_ALL_IPA_PASSES_END_LAST;
    struct MELT_OBJECT_STRUCT (3)
      dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (39) dstr_159__EARLY_GIMPLE_PASSES_STAR;
    struct MELT_OBJECT_STRUCT (5)
      dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (39) dstr_161__early_gimple_passes_star;
    struct MELT_HOOK_STRUCT (3) dhook__162__HOOK_EARLY_GIMPLE_PASSES_START;
    struct MELT_OBJECT_STRUCT (6) dobj_163__;
    struct MELT_STRING_STRUCT (30) dstr_164__HOOK_EARLY_GIMPLE_PASSES;
    struct MELT_MULTIPLE_STRUCT (0) dtup_165___HOOK_EARLY_GIMPLE_PASSES_START;
    struct MELT_MULTIPLE_STRUCT (0) dtup_166___HOOK_EARLY_GIMPLE_PASSES_START;
    struct MELT_ROUTINE_STRUCT (0)
      drout_167__ENABLE_EARLY_GIMPLE_PASSES_START;
    struct MELT_CLOSURE_STRUCT (0) dclo_168__ENABLE_EARLY_GIMPLE_PASSES_START;
    struct MELT_ROUTINE_STRUCT (4)
      drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_170__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
    struct MELT_ROUTINE_STRUCT (4)
      drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_172__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
    struct MELT_OBJECT_STRUCT (3)
      dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (37) dstr_174__EARLY_GIMPLE_PASSES_END_;
    struct MELT_OBJECT_STRUCT (5)
      dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (37) dstr_176__early_gimple_passes_end_;
    struct MELT_HOOK_STRUCT (3) dhook__177__HOOK_EARLY_GIMPLE_PASSES_END;
    struct MELT_OBJECT_STRUCT (6) dobj_178__;
    struct MELT_STRING_STRUCT (28) dstr_179__HOOK_EARLY_GIMPLE_PASSES;
    struct MELT_MULTIPLE_STRUCT (0) dtup_180___HOOK_EARLY_GIMPLE_PASSES_END;
    struct MELT_MULTIPLE_STRUCT (0) dtup_181___HOOK_EARLY_GIMPLE_PASSES_END;
    struct MELT_ROUTINE_STRUCT (0) drout_182__ENABLE_EARLY_GIMPLE_PASSES_END;
    struct MELT_CLOSURE_STRUCT (0) dclo_183__ENABLE_EARLY_GIMPLE_PASSES_END;
    struct MELT_ROUTINE_STRUCT (4)
      drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_185__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
    struct MELT_ROUTINE_STRUCT (4)
      drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
    struct MELT_CLOSURE_STRUCT (0)
      dclo_187__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_188__PREGENERICIZE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (27) dstr_189__PREGENERICIZE_DELAYED_QU;
    struct MELT_OBJECT_STRUCT (5) dobj_190__PREGENERICIZE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (27) dstr_191__pregenericize_delayed_qu;
    struct MELT_ROUTINE_STRUCT (0) drout_192__ENABLE_PRE_GENERICIZE;
    struct MELT_CLOSURE_STRUCT (0) dclo_193__ENABLE_PRE_GENERICIZE;
    struct MELT_HOOK_STRUCT (3) dhook__194__HOOK_PRE_GENERICIZE;
    struct MELT_OBJECT_STRUCT (6) dobj_195__;
    struct MELT_STRING_STRUCT (19) dstr_196__HOOK_PRE_GENERICIZE;
    struct MELT_OBJECT_STRUCT (3) dsym_197__TFNDECL;
    struct MELT_STRING_STRUCT (7) dstr_198__TFNDECL;
    struct MELT_OBJECT_STRUCT (2) dobj_199;
    struct MELT_MULTIPLE_STRUCT (1) dtup_200___HOOK_PRE_GENERICIZE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_201___HOOK_PRE_GENERICIZE;
    struct MELT_ROUTINE_STRUCT (4) drout_202__REGISTER_PRE_GENERICIZE_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_203__REGISTER_PRE_GENERICIZE_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_204__REGISTER_PRE_GENERICIZE_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_205__REGISTER_PRE_GENERICIZE_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_206__FINISHTYPE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_207__FINISHTYPE_DELAYED_QUEUE;
    struct MELT_OBJECT_STRUCT (5) dobj_208__FINISHTYPE_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_209__finishtype_delayed_queue;
    struct MELT_ROUTINE_STRUCT (0) drout_210__ENABLE_FINISH_TYPE;
    struct MELT_CLOSURE_STRUCT (0) dclo_211__ENABLE_FINISH_TYPE;
    struct MELT_HOOK_STRUCT (3) dhook__212__HOOK_FINISH_TYPE;
    struct MELT_OBJECT_STRUCT (6) dobj_213__;
    struct MELT_STRING_STRUCT (16) dstr_214__HOOK_FINISH_TYPE;
    struct MELT_OBJECT_STRUCT (2) dobj_215;
    struct MELT_MULTIPLE_STRUCT (1) dtup_216___HOOK_FINISH_TYPE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_217___HOOK_FINISH_TYPE;
    struct MELT_ROUTINE_STRUCT (4) drout_218__REGISTER_FINISH_TYPE_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_219__REGISTER_FINISH_TYPE_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_220__REGISTER_FINISH_TYPE_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_221__REGISTER_FINISH_TYPE_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_222__ENDMELTPASS_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (25) dstr_223__ENDMELTPASS_DELAYED_QUEU;
    struct MELT_OBJECT_STRUCT (5) dobj_224__ENDMELTPASS_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (25) dstr_225__endmeltpass_delayed_queu;
    struct MELT_ROUTINE_STRUCT (4) drout_226__RUN_ENDMELTPASS_FUNCTIONS;
    struct MELT_CLOSURE_STRUCT (0) dclo_227__RUN_ENDMELTPASS_FUNCTIONS;
    struct MELT_OBJECT_STRUCT (3) dsym_228__CLASS_CONTAINER;
    struct MELT_STRING_STRUCT (15) dstr_229__CLASS_CONTAINER;
    struct MELT_ROUTINE_STRUCT (3) drout_230__AT_END_OF_THIS_MELT_PASS_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_231__AT_END_OF_THIS_MELT_PASS_FIRST;
    struct MELT_ROUTINE_STRUCT (3) drout_232__AT_END_OF_THIS_MELT_PASS_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_233__AT_END_OF_THIS_MELT_PASS_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_234__FINISHDECL_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_235__FINISHDECL_DELAYED_QUEUE;
    struct MELT_OBJECT_STRUCT (5) dobj_236__FINISHDECL_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_237__finishdecl_delayed_queue;
    struct MELT_ROUTINE_STRUCT (0) drout_238__ENABLE_FINISH_DECL;
    struct MELT_CLOSURE_STRUCT (0) dclo_239__ENABLE_FINISH_DECL;
    struct MELT_HOOK_STRUCT (3) dhook__240__HOOK_FINISH_DECL;
    struct MELT_OBJECT_STRUCT (6) dobj_241__;
    struct MELT_STRING_STRUCT (16) dstr_242__HOOK_FINISH_DECL;
    struct MELT_OBJECT_STRUCT (2) dobj_243;
    struct MELT_MULTIPLE_STRUCT (1) dtup_244___HOOK_FINISH_DECL;
    struct MELT_MULTIPLE_STRUCT (0) dtup_245___HOOK_FINISH_DECL;
    struct MELT_ROUTINE_STRUCT (4) drout_246__REGISTER_FINISH_DECL_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_247__REGISTER_FINISH_DECL_FIRST;
    struct MELT_ROUTINE_STRUCT (4) drout_248__REGISTER_FINISH_DECL_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_249__REGISTER_FINISH_DECL_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_250__PASS_EXECUTION_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (28) dstr_251__PASS_EXECUTION_DELAYED_Q;
    struct MELT_OBJECT_STRUCT (5) dobj_252__PASS_EXECUTION_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (28) dstr_253__pass_execution_delayed_q;
    struct MELT_HOOK_STRUCT (3) dhook__254__HOOK_PASS_EXECUTION;
    struct MELT_OBJECT_STRUCT (6) dobj_255__;
    struct MELT_STRING_STRUCT (19) dstr_256__HOOK_PASS_EXECUTION;
    struct MELT_OBJECT_STRUCT (3) dsym_257__PASSNAME;
    struct MELT_STRING_STRUCT (8) dstr_258__PASSNAME;
    struct MELT_OBJECT_STRUCT (2) dobj_259;
    struct MELT_OBJECT_STRUCT (3) dsym_260__PASSNUM;
    struct MELT_STRING_STRUCT (7) dstr_261__PASSNUM;
    struct MELT_OBJECT_STRUCT (2) dobj_262;
    struct MELT_MULTIPLE_STRUCT (2) dtup_263___HOOK_PASS_EXECUTION;
    struct MELT_MULTIPLE_STRUCT (0) dtup_264___HOOK_PASS_EXECUTION;
    struct MELT_ROUTINE_STRUCT (3) drout_265__REGISTER_PASS_EXECUTION_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_266__REGISTER_PASS_EXECUTION_FIRST;
    struct MELT_ROUTINE_STRUCT (3) drout_267__REGISTER_PASS_EXECUTION_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_268__REGISTER_PASS_EXECUTION_LAST;
    struct MELT_HOOK_STRUCT (4) dhook__269__HOOK_GIMPLE_GATE;
    struct MELT_OBJECT_STRUCT (6) dobj_270__;
    struct MELT_STRING_STRUCT (16) dstr_271__HOOK_GIMPLE_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_272___HOOK_GIMPLE_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_273___HOOK_GIMPLE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_274__INITIAL_SYSTEM_DATA;
    struct MELT_STRING_STRUCT (19) dstr_275__INITIAL_SYSTEM_DATA;
    struct MELT_OBJECT_STRUCT (3) dsym_276__CLASS_GCC_GIMPLE_PASS;
    struct MELT_STRING_STRUCT (21) dstr_277__CLASS_GCC_GIMPLE_PASS;
    struct MELT_OBJECT_STRUCT (3) dsym_278__CLASS_GCC_PASS;
    struct MELT_STRING_STRUCT (14) dstr_279__CLASS_GCC_PASS;
    struct MELT_HOOK_STRUCT (6) dhook__280__HOOK_GIMPLE_EXECUTE;
    struct MELT_OBJECT_STRUCT (6) dobj_281__;
    struct MELT_STRING_STRUCT (19) dstr_282__HOOK_GIMPLE_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_283___HOOK_GIMPLE_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_284___HOOK_GIMPLE_EXECUTE;
    struct MELT_OBJECT_STRUCT (3) dsym_285__CLASS_SYSTEM_DATA;
    struct MELT_STRING_STRUCT (17) dstr_286__CLASS_SYSTEM_DATA;
    struct MELT_HOOK_STRUCT (5) dhook__287__HOOK_RTL_GATE;
    struct MELT_OBJECT_STRUCT (6) dobj_288__;
    struct MELT_STRING_STRUCT (13) dstr_289__HOOK_RTL_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_290___HOOK_RTL_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_291___HOOK_RTL_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_292__CLASS_GCC_RTL_PASS;
    struct MELT_STRING_STRUCT (18) dstr_293__CLASS_GCC_RTL_PASS;
    struct MELT_HOOK_STRUCT (6) dhook__294__HOOK_RTL_EXECUTE;
    struct MELT_OBJECT_STRUCT (6) dobj_295__;
    struct MELT_STRING_STRUCT (16) dstr_296__HOOK_RTL_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_297___HOOK_RTL_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_298___HOOK_RTL_EXECUTE;
    struct MELT_HOOK_STRUCT (5) dhook__299__HOOK_SIMPLE_IPA_GATE;
    struct MELT_OBJECT_STRUCT (6) dobj_300__;
    struct MELT_STRING_STRUCT (20) dstr_301__HOOK_SIMPLE_IPA_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_302___HOOK_SIMPLE_IPA_GATE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_303___HOOK_SIMPLE_IPA_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_304__CLASS_GCC_SIMPLE_IPA_PASS;
    struct MELT_STRING_STRUCT (25) dstr_305__CLASS_GCC_SIMPLE_IPA_PAS;
    struct MELT_HOOK_STRUCT (6) dhook__306__HOOK_SIMPLE_IPA_EXECUTE;
    struct MELT_OBJECT_STRUCT (6) dobj_307__;
    struct MELT_STRING_STRUCT (23) dstr_308__HOOK_SIMPLE_IPA_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_309___HOOK_SIMPLE_IPA_EXECUTE;
    struct MELT_MULTIPLE_STRUCT (0) dtup_310___HOOK_SIMPLE_IPA_EXECUTE;
    struct MELT_OBJECT_STRUCT (3) dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (31) dstr_312__ATTRIBUTE_DEFINER_DELAYE;
    struct MELT_OBJECT_STRUCT (5) dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (31) dstr_314__attribute_definer_delaye;
    struct MELT_HOOK_STRUCT (4) dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER;
    struct MELT_OBJECT_STRUCT (6) dobj_316__;
    struct MELT_STRING_STRUCT (27) dstr_317__HOOK_MELT_ATTRIBUTE_DEFI;
    struct MELT_OBJECT_STRUCT (3) dsym_318__DECL;
    struct MELT_STRING_STRUCT (4) dstr_319__DECL;
    struct MELT_OBJECT_STRUCT (2) dobj_320;
    struct MELT_OBJECT_STRUCT (3) dsym_321__NAME;
    struct MELT_STRING_STRUCT (4) dstr_322__NAME;
    struct MELT_OBJECT_STRUCT (2) dobj_323;
    struct MELT_OBJECT_STRUCT (3) dsym_324__ATTRSEQ;
    struct MELT_STRING_STRUCT (7) dstr_325__ATTRSEQ;
    struct MELT_OBJECT_STRUCT (2) dobj_326;
    struct MELT_OBJECT_STRUCT (3) dsym_327__FILELOC;
    struct MELT_STRING_STRUCT (7) dstr_328__FILELOC;
    struct MELT_OBJECT_STRUCT (2) dobj_329;
    struct MELT_OBJECT_STRUCT (2) dobj_330;
    struct MELT_MULTIPLE_STRUCT (5) dtup_331___HOOK_MELT_ATTRIBUTE_DEFINER;
    struct MELT_MULTIPLE_STRUCT (0) dtup_332___HOOK_MELT_ATTRIBUTE_DEFINER;
    struct MELT_ROUTINE_STRUCT (1) drout_333__AT_MELT_ATTRIBUTE_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_334__AT_MELT_ATTRIBUTE_FIRST;
    struct MELT_ROUTINE_STRUCT (1) drout_335__AT_MELT_ATTRIBUTE_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_336__AT_MELT_ATTRIBUTE_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_337__FINAL_EXIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_338__FINAL_EXIT_DELAYED_QUEUE;
    struct MELT_OBJECT_STRUCT (5) dobj_339__FINAL_EXIT_DELAYED_QUEUE;
    struct MELT_STRING_STRUCT (24) dstr_340__final_exit_delayed_queue;
    struct MELT_HOOK_STRUCT (4) dhook__341__HOOK_EXIT_FINALIZER;
    struct MELT_OBJECT_STRUCT (6) dobj_342__;
    struct MELT_STRING_STRUCT (19) dstr_343__HOOK_EXIT_FINALIZER;
    struct MELT_MULTIPLE_STRUCT (0) dtup_344___HOOK_EXIT_FINALIZER;
    struct MELT_MULTIPLE_STRUCT (0) dtup_345___HOOK_EXIT_FINALIZER;
    struct MELT_ROUTINE_STRUCT (1) drout_346__AT_EXIT_FIRST;
    struct MELT_CLOSURE_STRUCT (0) dclo_347__AT_EXIT_FIRST;
    struct MELT_ROUTINE_STRUCT (1) drout_348__AT_EXIT_LAST;
    struct MELT_CLOSURE_STRUCT (0) dclo_349__AT_EXIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST;
    struct MELT_STRING_STRUCT (30) dstr_351__AT_END_OF_THIS_MELT_PASS;
    struct MELT_OBJECT_STRUCT (3) dsym_352__AT_END_OF_THIS_MELT_PASS_LAST;
    struct MELT_STRING_STRUCT (29) dstr_353__AT_END_OF_THIS_MELT_PASS;
    struct MELT_OBJECT_STRUCT (3) dsym_354__AT_EXIT_FIRST;
    struct MELT_STRING_STRUCT (13) dstr_355__AT_EXIT_FIRST;
    struct MELT_OBJECT_STRUCT (3) dsym_356__AT_EXIT_LAST;
    struct MELT_STRING_STRUCT (12) dstr_357__AT_EXIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_358__AT_FINISH_UNIT_FIRST;
    struct MELT_STRING_STRUCT (20) dstr_359__AT_FINISH_UNIT_FIRST;
    struct MELT_OBJECT_STRUCT (3) dsym_360__AT_FINISH_UNIT_LAST;
    struct MELT_STRING_STRUCT (19) dstr_361__AT_FINISH_UNIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_362__AT_MELT_ATTRIBUTE_FIRST;
    struct MELT_STRING_STRUCT (23) dstr_363__AT_MELT_ATTRIBUTE_FIRST;
    struct MELT_OBJECT_STRUCT (3) dsym_364__AT_MELT_ATTRIBUTE_LAST;
    struct MELT_STRING_STRUCT (22) dstr_365__AT_MELT_ATTRIBUTE_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_366__AT_START_UNIT_FIRST;
    struct MELT_STRING_STRUCT (19) dstr_367__AT_START_UNIT_FIRST;
    struct MELT_OBJECT_STRUCT (3) dsym_368__AT_START_UNIT_LAST;
    struct MELT_STRING_STRUCT (18) dstr_369__AT_START_UNIT_LAST;
    struct MELT_OBJECT_STRUCT (3) dsym_370__HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_STRING_STRUCT (23) dstr_371__HOOK_LOW_DEBUG_VALUE_AT;
    struct MELT_OBJECT_STRUCT (3) dsym_372__HOOK_OVERRIDE_GATE;
    struct MELT_STRING_STRUCT (18) dstr_373__HOOK_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST;
    struct MELT_STRING_STRUCT (33) dstr_375__REGISTER_ALL_IPA_PASSES_;
    struct MELT_OBJECT_STRUCT (3) dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST;
    struct MELT_STRING_STRUCT (32) dstr_377__REGISTER_ALL_IPA_PASSES_;
    struct MELT_OBJECT_STRUCT (3)
      dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST;
    struct MELT_STRING_STRUCT (35) dstr_379__REGISTER_ALL_IPA_PASSES_;
    struct MELT_OBJECT_STRUCT (3)
      dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST;
    struct MELT_STRING_STRUCT (34) dstr_381__REGISTER_ALL_IPA_PASSES_;
    struct MELT_OBJECT_STRUCT (3) dsym_382__REGISTER_ALL_PASSES_END_FIRST;
    struct MELT_STRING_STRUCT (29) dstr_383__REGISTER_ALL_PASSES_END_;
    struct MELT_OBJECT_STRUCT (3) dsym_384__REGISTER_ALL_PASSES_END_LAST;
    struct MELT_STRING_STRUCT (28) dstr_385__REGISTER_ALL_PASSES_END_;
    struct MELT_OBJECT_STRUCT (3) dsym_386__REGISTER_ALL_PASSES_START_FIRST;
    struct MELT_STRING_STRUCT (31) dstr_387__REGISTER_ALL_PASSES_STAR;
    struct MELT_OBJECT_STRUCT (3) dsym_388__REGISTER_ALL_PASSES_START_LAST;
    struct MELT_STRING_STRUCT (30) dstr_389__REGISTER_ALL_PASSES_STAR;
    struct MELT_OBJECT_STRUCT (3)
      dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
    struct MELT_STRING_STRUCT (38) dstr_391__REGISTER_EARLY_GIMPLE_PA;
    struct MELT_OBJECT_STRUCT (3)
      dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
    struct MELT_STRING_STRUCT (37) dstr_393__REGISTER_EARLY_GIMPLE_PA;
    struct MELT_OBJECT_STRUCT (3)
      dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
    struct MELT_STRING_STRUCT (40) dstr_395__REGISTER_EARLY_GIMPLE_PA;
    struct MELT_OBJECT_STRUCT (3)
      dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
    struct MELT_STRING_STRUCT (39) dstr_397__REGISTER_EARLY_GIMPLE_PA;
    struct MELT_OBJECT_STRUCT (3) dsym_398__REGISTER_FINISH_DECL_FIRST;
    struct MELT_STRING_STRUCT (26) dstr_399__REGISTER_FINISH_DECL_FIR;
    struct MELT_OBJECT_STRUCT (3) dsym_400__REGISTER_FINISH_DECL_LAST;
    struct MELT_STRING_STRUCT (25) dstr_401__REGISTER_FINISH_DECL_LAS;
    struct MELT_OBJECT_STRUCT (3) dsym_402__REGISTER_FINISH_TYPE_FIRST;
    struct MELT_STRING_STRUCT (26) dstr_403__REGISTER_FINISH_TYPE_FIR;
    struct MELT_OBJECT_STRUCT (3) dsym_404__REGISTER_FINISH_TYPE_LAST;
    struct MELT_STRING_STRUCT (25) dstr_405__REGISTER_FINISH_TYPE_LAS;
    struct MELT_OBJECT_STRUCT (3) dsym_406__REGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_STRING_STRUCT (28) dstr_407__REGISTER_OVERRIDE_GATE_F;
    struct MELT_OBJECT_STRUCT (3) dsym_408__REGISTER_OVERRIDE_GATE_LAST;
    struct MELT_STRING_STRUCT (27) dstr_409__REGISTER_OVERRIDE_GATE_L;
    struct MELT_OBJECT_STRUCT (3) dsym_410__REGISTER_PASS_EXECUTION_FIRST;
    struct MELT_STRING_STRUCT (29) dstr_411__REGISTER_PASS_EXECUTION_;
    struct MELT_OBJECT_STRUCT (3) dsym_412__REGISTER_PASS_EXECUTION_LAST;
    struct MELT_STRING_STRUCT (28) dstr_413__REGISTER_PASS_EXECUTION_;
    struct MELT_OBJECT_STRUCT (3) dsym_414__REGISTER_PRE_GENERICIZE_FIRST;
    struct MELT_STRING_STRUCT (29) dstr_415__REGISTER_PRE_GENERICIZE_;
    struct MELT_OBJECT_STRUCT (3) dsym_416__REGISTER_PRE_GENERICIZE_LAST;
    struct MELT_STRING_STRUCT (28) dstr_417__REGISTER_PRE_GENERICIZE_;
    struct MELT_OBJECT_STRUCT (3) dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST;
    struct MELT_STRING_STRUCT (30) dstr_419__UNREGISTER_OVERRIDE_GATE;
    struct MELT_OBJECT_STRUCT (3) dsym_420__UNREGISTER_OVERRIDE_GATE_LAST;
    struct MELT_STRING_STRUCT (29) dstr_421__UNREGISTER_OVERRIDE_GATE;
    struct MELT_ROUTINE_STRUCT (3) drout_422__MELT_INVOKE_INPUT_CALLBACKS;
    struct MELT_CLOSURE_STRUCT (0) dclo_423__MELT_INVOKE_INPUT_CALLBACKS;
    struct MELT_OBJECT_STRUCT (3) dsym_424__CLASS_INPUT_CHANNEL_HANDLER;
    struct MELT_STRING_STRUCT (27) dstr_425__CLASS_INPUT_CHANNEL_HAND;
    struct MELT_HOOK_STRUCT (6) dhook__426__HOOK_POLL_INPUTS;
    struct MELT_OBJECT_STRUCT (6) dobj_427__;
    struct MELT_STRING_STRUCT (16) dstr_428__HOOK_POLL_INPUTS;
    struct MELT_OBJECT_STRUCT (3) dsym_429__DELAYMS;
    struct MELT_STRING_STRUCT (7) dstr_430__DELAYMS;
    struct MELT_OBJECT_STRUCT (2) dobj_431;
    struct MELT_MULTIPLE_STRUCT (1) dtup_432___HOOK_POLL_INPUTS;
    struct MELT_MULTIPLE_STRUCT (0) dtup_433___HOOK_POLL_INPUTS;
    struct MELT_OBJECT_STRUCT (3) dsym_434__DISCR_MULTIPLE;
    struct MELT_STRING_STRUCT (14) dstr_435__DISCR_MULTIPLE;
    struct MELT_ROUTINE_STRUCT (1) drout_436__IS_POLLING_INPUTS;
    struct MELT_CLOSURE_STRUCT (0) dclo_437__IS_POLLING_INPUTS;
    struct MELT_ROUTINE_STRUCT (3) drout_438__EVERY_POLLING_INPUT;
    struct MELT_CLOSURE_STRUCT (0) dclo_439__EVERY_POLLING_INPUT;
    struct MELT_ROUTINE_STRUCT (1) drout_440__GET_POLLING_INPUT;
    struct MELT_CLOSURE_STRUCT (0) dclo_441__GET_POLLING_INPUT;
    struct MELT_ROUTINE_STRUCT (4) drout_442__REGISTER_INPUT_CHANNEL_HANDLER;
    struct MELT_CLOSURE_STRUCT (0) dclo_443__REGISTER_INPUT_CHANNEL_HANDLER;
    struct MELT_OBJECT_STRUCT (3) dsym_444__DISCR_STRBUF;
    struct MELT_STRING_STRUCT (12) dstr_445__DISCR_STRBUF;
    struct MELT_OBJECT_STRUCT (3) dsym_446__DISCR_BUCKET_LONGS;
    struct MELT_STRING_STRUCT (18) dstr_447__DISCR_BUCKET_LONGS;
    struct MELT_HOOK_STRUCT (1) dhook__448__HOOK_HANDLE_SIGIO;
    struct MELT_OBJECT_STRUCT (6) dobj_449__;
    struct MELT_STRING_STRUCT (17) dstr_450__HOOK_HANDLE_SIGIO;
    struct MELT_MULTIPLE_STRUCT (0) dtup_451___HOOK_HANDLE_SIGIO;
    struct MELT_MULTIPLE_STRUCT (0) dtup_452___HOOK_HANDLE_SIGIO;
    struct MELT_OBJECT_STRUCT (3) dsym_453__EVERY_POLLING_INPUT;
    struct MELT_STRING_STRUCT (19) dstr_454__EVERY_POLLING_INPUT;
    struct MELT_OBJECT_STRUCT (3) dsym_455__GET_POLLING_INPUT;
    struct MELT_STRING_STRUCT (17) dstr_456__GET_POLLING_INPUT;
    struct MELT_OBJECT_STRUCT (3) dsym_457__HOOK_HANDLE_SIGIO;
    struct MELT_STRING_STRUCT (17) dstr_458__HOOK_HANDLE_SIGIO;
    struct MELT_OBJECT_STRUCT (3) dsym_459__HOOK_POLL_INPUTS;
    struct MELT_STRING_STRUCT (16) dstr_460__HOOK_POLL_INPUTS;
    struct MELT_OBJECT_STRUCT (3) dsym_461__IS_POLLING_INPUTS;
    struct MELT_STRING_STRUCT (17) dstr_462__IS_POLLING_INPUTS;
    struct MELT_OBJECT_STRUCT (3) dsym_463__MELT_INVOKE_INPUT_CALLBACKS;
    struct MELT_STRING_STRUCT (27) dstr_464__MELT_INVOKE_INPUT_CALLBA;
    struct MELT_HOOK_STRUCT (2) dhook__465__HOOK_HANDLE_SIGALRM;
    struct MELT_OBJECT_STRUCT (6) dobj_466__;
    struct MELT_STRING_STRUCT (19) dstr_467__HOOK_HANDLE_SIGALRM;
    struct MELT_MULTIPLE_STRUCT (0) dtup_468___HOOK_HANDLE_SIGALRM;
    struct MELT_MULTIPLE_STRUCT (0) dtup_469___HOOK_HANDLE_SIGALRM;
    struct MELT_OBJECT_STRUCT (3) dsym_470__CLASS_ALARM_HANDLER;
    struct MELT_STRING_STRUCT (19) dstr_471__CLASS_ALARM_HANDLER;
    struct MELT_ROUTINE_STRUCT (4) drout_472__REGISTER_ALARM_TIMER;
    struct MELT_CLOSURE_STRUCT (0) dclo_473__REGISTER_ALARM_TIMER;
    struct MELT_OBJECT_STRUCT (3) dsym_474__DISCR_CONSTANT_INTEGER;
    struct MELT_STRING_STRUCT (22) dstr_475__DISCR_CONSTANT_INTEGER;
    struct MELT_ROUTINE_STRUCT (3) drout_476__UNREGISTER_ALARM_TIMER;
    struct MELT_CLOSURE_STRUCT (0) dclo_477__UNREGISTER_ALARM_TIMER;
    struct MELT_HOOK_STRUCT (6) dhook__478__HOOK_HANDLE_SIGCHLD;
    struct MELT_OBJECT_STRUCT (6) dobj_479__;
    struct MELT_STRING_STRUCT (19) dstr_480__HOOK_HANDLE_SIGCHLD;
    struct MELT_MULTIPLE_STRUCT (0) dtup_481___HOOK_HANDLE_SIGCHLD;
    struct MELT_MULTIPLE_STRUCT (0) dtup_482___HOOK_HANDLE_SIGCHLD;
    struct MELT_OBJECT_STRUCT (3) dsym_483__CLASS_CHILD_PROCESS_HANDLER;
    struct MELT_STRING_STRUCT (27) dstr_484__CLASS_CHILD_PROCESS_HAND;
    struct MELT_OBJECT_STRUCT (3) dsym_485__LIST_TO_MULTIPLE;
    struct MELT_STRING_STRUCT (16) dstr_486__LIST_TO_MULTIPLE;
    struct MELT_ROUTINE_STRUCT (4) drout_487__REGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_CLOSURE_STRUCT (0) dclo_488__REGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_ROUTINE_STRUCT (1)
      drout_489__UNREGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_CLOSURE_STRUCT (0) dclo_490__UNREGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_OBJECT_STRUCT (3) dsym_491__REGISTER_ALARM_TIMER;
    struct MELT_STRING_STRUCT (20) dstr_492__REGISTER_ALARM_TIMER;
    struct MELT_OBJECT_STRUCT (3) dsym_493__REGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_STRING_STRUCT (30) dstr_494__REGISTER_CHILD_PROCESS_H;
    struct MELT_OBJECT_STRUCT (3) dsym_495__REGISTER_INPUT_CHANNEL_HANDLER;
    struct MELT_STRING_STRUCT (30) dstr_496__REGISTER_INPUT_CHANNEL_H;
    struct MELT_OBJECT_STRUCT (3) dsym_497__UNREGISTER_ALARM_TIMER;
    struct MELT_STRING_STRUCT (22) dstr_498__UNREGISTER_ALARM_TIMER;
    struct MELT_OBJECT_STRUCT (3) dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER;
    struct MELT_STRING_STRUCT (32) dstr_500__UNREGISTER_CHILD_PROCESS;
    long spare_;
  } *meltcdat = NULL;
  dbgprintf ("start initialize_module_meltdata_WARMELTmiHOOKS iniframp__=%p",
	     (void *) iniframp__);
  (void) meltpredefinited;	/* avoid warning if non-used. */
  melt_assertmsg ("check module initial frame",
		  iniframp__->mcfr_nbvar == /*minihash */ -3283);
  /*curframe_cdat_fill */
  meltcdat = (struct meltcdata_st *) meltgc_allocate (sizeof (*meltcdat), 0);
  melt_prohibit_garbcoll = TRUE;
  /*initial routine predef */
  /*inipredefhook dhook__3__HOOK_LOW_DEBUG_VALUE_AT */
  if (!MELT_PREDEF (HOOK_LOW_DEBUG_VALUE_AT))
    MELT_STORE_PREDEF (HOOK_LOW_DEBUG_VALUE_AT,
		       (melt_ptr_t) & meltcdat->
		       dhook__3__HOOK_LOW_DEBUG_VALUE_AT);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_LOW_DEBUG_VALUE_AT) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_LOW_DEBUG_VALUE_AT", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__33__HOOK_OVERRIDE_GATE */
  if (!MELT_PREDEF (HOOK_OVERRIDE_GATE))
    MELT_STORE_PREDEF (HOOK_OVERRIDE_GATE,
		       (melt_ptr_t) & meltcdat->
		       dhook__33__HOOK_OVERRIDE_GATE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_OVERRIDE_GATE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_OVERRIDE_GATE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__64__HOOK_START_UNIT */
  if (!MELT_PREDEF (HOOK_START_UNIT))
    MELT_STORE_PREDEF (HOOK_START_UNIT,
		       (melt_ptr_t) & meltcdat->dhook__64__HOOK_START_UNIT);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_START_UNIT) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_START_UNIT", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__84__HOOK_FINISH_UNIT */
  if (!MELT_PREDEF (HOOK_FINISH_UNIT))
    MELT_STORE_PREDEF (HOOK_FINISH_UNIT,
		       (melt_ptr_t) & meltcdat->dhook__84__HOOK_FINISH_UNIT);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_FINISH_UNIT) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_FINISH_UNIT", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__102__HOOK_ALL_PASSES_START */
  if (!MELT_PREDEF (HOOK_ALL_PASSES_START))
    MELT_STORE_PREDEF (HOOK_ALL_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__102__HOOK_ALL_PASSES_START);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_ALL_PASSES_START) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_ALL_PASSES_START", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__117__HOOK_ALL_PASSES_END */
  if (!MELT_PREDEF (HOOK_ALL_PASSES_END))
    MELT_STORE_PREDEF (HOOK_ALL_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__117__HOOK_ALL_PASSES_END);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_ALL_PASSES_END) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_ALL_PASSES_END", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__132__HOOK_ALL_IPA_PASSES_START */
  if (!MELT_PREDEF (HOOK_ALL_IPA_PASSES_START))
    MELT_STORE_PREDEF (HOOK_ALL_IPA_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__132__HOOK_ALL_IPA_PASSES_START);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_ALL_IPA_PASSES_START) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_ALL_IPA_PASSES_START", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__147__HOOK_ALL_IPA_PASSES_END */
  if (!MELT_PREDEF (HOOK_ALL_IPA_PASSES_END))
    MELT_STORE_PREDEF (HOOK_ALL_IPA_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__147__HOOK_ALL_IPA_PASSES_END);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_ALL_IPA_PASSES_END) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_ALL_IPA_PASSES_END", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__162__HOOK_EARLY_GIMPLE_PASSES_START */
  if (!MELT_PREDEF (HOOK_EARLY_GIMPLE_PASSES_START))
    MELT_STORE_PREDEF (HOOK_EARLY_GIMPLE_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__162__HOOK_EARLY_GIMPLE_PASSES_START);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_EARLY_GIMPLE_PASSES_START) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_EARLY_GIMPLE_PASSES_START", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__177__HOOK_EARLY_GIMPLE_PASSES_END */
  if (!MELT_PREDEF (HOOK_EARLY_GIMPLE_PASSES_END))
    MELT_STORE_PREDEF (HOOK_EARLY_GIMPLE_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__177__HOOK_EARLY_GIMPLE_PASSES_END);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_EARLY_GIMPLE_PASSES_END) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_EARLY_GIMPLE_PASSES_END", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__194__HOOK_PRE_GENERICIZE */
  if (!MELT_PREDEF (HOOK_PRE_GENERICIZE))
    MELT_STORE_PREDEF (HOOK_PRE_GENERICIZE,
		       (melt_ptr_t) & meltcdat->
		       dhook__194__HOOK_PRE_GENERICIZE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_PRE_GENERICIZE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_PRE_GENERICIZE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__212__HOOK_FINISH_TYPE */
  if (!MELT_PREDEF (HOOK_FINISH_TYPE))
    MELT_STORE_PREDEF (HOOK_FINISH_TYPE,
		       (melt_ptr_t) & meltcdat->dhook__212__HOOK_FINISH_TYPE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_FINISH_TYPE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_FINISH_TYPE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__240__HOOK_FINISH_DECL */
  if (!MELT_PREDEF (HOOK_FINISH_DECL))
    MELT_STORE_PREDEF (HOOK_FINISH_DECL,
		       (melt_ptr_t) & meltcdat->dhook__240__HOOK_FINISH_DECL);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_FINISH_DECL) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_FINISH_DECL", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__254__HOOK_PASS_EXECUTION */
  if (!MELT_PREDEF (HOOK_PASS_EXECUTION))
    MELT_STORE_PREDEF (HOOK_PASS_EXECUTION,
		       (melt_ptr_t) & meltcdat->
		       dhook__254__HOOK_PASS_EXECUTION);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_PASS_EXECUTION) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_PASS_EXECUTION", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__269__HOOK_GIMPLE_GATE */
  if (!MELT_PREDEF (HOOK_GIMPLE_GATE))
    MELT_STORE_PREDEF (HOOK_GIMPLE_GATE,
		       (melt_ptr_t) & meltcdat->dhook__269__HOOK_GIMPLE_GATE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_GIMPLE_GATE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_GIMPLE_GATE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__280__HOOK_GIMPLE_EXECUTE */
  if (!MELT_PREDEF (HOOK_GIMPLE_EXECUTE))
    MELT_STORE_PREDEF (HOOK_GIMPLE_EXECUTE,
		       (melt_ptr_t) & meltcdat->
		       dhook__280__HOOK_GIMPLE_EXECUTE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_GIMPLE_EXECUTE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_GIMPLE_EXECUTE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__287__HOOK_RTL_GATE */
  if (!MELT_PREDEF (HOOK_RTL_GATE))
    MELT_STORE_PREDEF (HOOK_RTL_GATE,
		       (melt_ptr_t) & meltcdat->dhook__287__HOOK_RTL_GATE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_RTL_GATE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_RTL_GATE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__294__HOOK_RTL_EXECUTE */
  if (!MELT_PREDEF (HOOK_RTL_EXECUTE))
    MELT_STORE_PREDEF (HOOK_RTL_EXECUTE,
		       (melt_ptr_t) & meltcdat->dhook__294__HOOK_RTL_EXECUTE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_RTL_EXECUTE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_RTL_EXECUTE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__299__HOOK_SIMPLE_IPA_GATE */
  if (!MELT_PREDEF (HOOK_SIMPLE_IPA_GATE))
    MELT_STORE_PREDEF (HOOK_SIMPLE_IPA_GATE,
		       (melt_ptr_t) & meltcdat->
		       dhook__299__HOOK_SIMPLE_IPA_GATE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_SIMPLE_IPA_GATE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_SIMPLE_IPA_GATE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__306__HOOK_SIMPLE_IPA_EXECUTE */
  if (!MELT_PREDEF (HOOK_SIMPLE_IPA_EXECUTE))
    MELT_STORE_PREDEF (HOOK_SIMPLE_IPA_EXECUTE,
		       (melt_ptr_t) & meltcdat->
		       dhook__306__HOOK_SIMPLE_IPA_EXECUTE);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_SIMPLE_IPA_EXECUTE) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_SIMPLE_IPA_EXECUTE", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER */
  if (!MELT_PREDEF (HOOK_MELT_ATTRIBUTE_DEFINER))
    MELT_STORE_PREDEF (HOOK_MELT_ATTRIBUTE_DEFINER,
		       (melt_ptr_t) & meltcdat->
		       dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_MELT_ATTRIBUTE_DEFINER) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_MELT_ATTRIBUTE_DEFINER", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__341__HOOK_EXIT_FINALIZER */
  if (!MELT_PREDEF (HOOK_EXIT_FINALIZER))
    MELT_STORE_PREDEF (HOOK_EXIT_FINALIZER,
		       (melt_ptr_t) & meltcdat->
		       dhook__341__HOOK_EXIT_FINALIZER);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_EXIT_FINALIZER) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_EXIT_FINALIZER", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__426__HOOK_POLL_INPUTS */
  if (!MELT_PREDEF (HOOK_POLL_INPUTS))
    MELT_STORE_PREDEF (HOOK_POLL_INPUTS,
		       (melt_ptr_t) & meltcdat->dhook__426__HOOK_POLL_INPUTS);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_POLL_INPUTS) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_POLL_INPUTS", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__448__HOOK_HANDLE_SIGIO */
  if (!MELT_PREDEF (HOOK_HANDLE_SIGIO))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGIO,
		       (melt_ptr_t) & meltcdat->
		       dhook__448__HOOK_HANDLE_SIGIO);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_HANDLE_SIGIO) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_HANDLE_SIGIO", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__465__HOOK_HANDLE_SIGALRM */
  if (!MELT_PREDEF (HOOK_HANDLE_SIGALRM))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGALRM,
		       (melt_ptr_t) & meltcdat->
		       dhook__465__HOOK_HANDLE_SIGALRM);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_HANDLE_SIGALRM) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_HANDLE_SIGALRM", __FILE__, __LINE__);
    };

  /*^inipredefhook */
  /*inipredefhook dhook__478__HOOK_HANDLE_SIGCHLD */
  if (!MELT_PREDEF (HOOK_HANDLE_SIGCHLD))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGCHLD,
		       (melt_ptr_t) & meltcdat->
		       dhook__478__HOOK_HANDLE_SIGCHLD);
  else
    {
      MELTPREDEFIX (meltpredefinited, HOOK_HANDLE_SIGCHLD) = 1;
      fnotice (stderr, "MELT: predefined hook %s already defined <%s:%d>\n",
	       "HOOK_HANDLE_SIGCHLD", __FILE__, __LINE__);
    };

  /*initial routine fill */


/*iniobj dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V26*/ meltfptr[25])
/*_._VALDATA___V26*/ meltfptr[25] =
      (melt_ptr_t) & meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.obj_hash =
    824058733;
  meltcdat->dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER.obj_len = 3;


/*inistring dstr_2__HOOK_FRESH_ENVIRONMENT_R*/
 /*_._VALSTR___V27*/ meltfptr[26] =
    (melt_ptr_t) & meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R;
  meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.
				val, "HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER",
				sizeof (meltcdat->
					dstr_2__HOOK_FRESH_ENVIRONMENT_R.
					val) - 1);
  meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.val[38] = (char) 0;
  meltcdat->dstr_2__HOOK_FRESH_ENVIRONMENT_R.slen = 38;


/*inihook dhook__3__HOOK_LOW_DEBUG_VALUE_AT */
  meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_LOW_DEBUG_VALUE_AT data */
  meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT.nbval = 1;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT,
			  melthook_HOOK_LOW_DEBUG_VALUE_AT);
  meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT.hookdata =
    /*_._VALDATA___V29*/ meltfptr[28];
  strncpy (meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT.hookname,
	   "HOOK_LOW_DEBUG_VALUE_AT",
	   sizeof (meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT.hookname) - 1);
/*predefinedhook HOOK_LOW_DEBUG_VALUE_AT for dhook__3__HOOK_LOW_DEBUG_VALUE_AT*/
  if (!MELT_PREDEF (HOOK_LOW_DEBUG_VALUE_AT))
    MELT_STORE_PREDEF (HOOK_LOW_DEBUG_VALUE_AT,
		       (melt_ptr_t) & meltcdat->
		       dhook__3__HOOK_LOW_DEBUG_VALUE_AT);

  /*_._VALHOOK___V28*/ meltfptr[27] =
  /*inihooklocvar HOOK_LOW_DEBUG_VALUE_AT */
  (melt_ptr_t) & meltcdat->dhook__3__HOOK_LOW_DEBUG_VALUE_AT;

  /*done inihook dhook__3__HOOK_LOW_DEBUG_VALUE_AT */

  MELT_LOCATION ("warmelt-hooks.melt:32:/ iniobj");

/*iniobj dobj_4__*/
/*_._VALDATA___V29*/ meltfptr[28] = (melt_ptr_t) & meltcdat->dobj_4__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_4__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_4__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_4__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_4__.obj_hash = 25512549;
  meltcdat->dobj_4__.obj_len = 6;


/*inistring dstr_5__HOOK_LOW_DEBUG_VALUE_AT*/
 /*_._VALSTR___V30*/ meltfptr[29] =
    (melt_ptr_t) & meltcdat->dstr_5__HOOK_LOW_DEBUG_VALUE_AT;
  meltcdat->dstr_5__HOOK_LOW_DEBUG_VALUE_AT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_5__HOOK_LOW_DEBUG_VALUE_AT.val,
				"HOOK_LOW_DEBUG_VALUE_AT",
				sizeof (meltcdat->
					dstr_5__HOOK_LOW_DEBUG_VALUE_AT.val) -
				1);
  meltcdat->dstr_5__HOOK_LOW_DEBUG_VALUE_AT.val[23] = (char) 0;
  meltcdat->dstr_5__HOOK_LOW_DEBUG_VALUE_AT.slen = 23;


/*iniobj dsym_6__VAL*/
  /*uniqueobj*/ if (! /*_._VALDATA___V32*/ meltfptr[31])
/*_._VALDATA___V32*/ meltfptr[31] = (melt_ptr_t) & meltcdat->dsym_6__VAL;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_6__VAL",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_6__VAL",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_6__VAL.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_6__VAL.obj_hash = 122845685;
  meltcdat->dsym_6__VAL.obj_len = 3;


/*inistring dstr_7__VAL*/
 /*_._VALSTR___V33*/ meltfptr[32] = (melt_ptr_t) & meltcdat->dstr_7__VAL;
  meltcdat->dstr_7__VAL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_7__VAL.val, "VAL",
				sizeof (meltcdat->dstr_7__VAL.val) - 1);
  meltcdat->dstr_7__VAL.val[3] = (char) 0;
  meltcdat->dstr_7__VAL.slen = 3;

  /*^iniobj */

/*iniobj dobj_8*/
/*_._VALDATA___V31*/ meltfptr[30] = (melt_ptr_t) & meltcdat->dobj_8;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_8",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_8",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_8.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_8.obj_num = 0;
  meltcdat->dobj_8.obj_hash = 873475809;
  meltcdat->dobj_8.obj_len = 2;


/*iniobj dsym_9__FILENAME*/
  /*uniqueobj*/ if (! /*_._VALDATA___V35*/ meltfptr[34])
/*_._VALDATA___V35*/ meltfptr[34] =
      (melt_ptr_t) & meltcdat->dsym_9__FILENAME;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_9__FILENAME",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_9__FILENAME",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_9__FILENAME.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_9__FILENAME.obj_hash = 109653219;
  meltcdat->dsym_9__FILENAME.obj_len = 3;


/*inistring dstr_10__FILENAME*/
 /*_._VALSTR___V36*/ meltfptr[35] =
    (melt_ptr_t) & meltcdat->dstr_10__FILENAME;
  meltcdat->dstr_10__FILENAME.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_10__FILENAME.val, "FILENAME",
				sizeof (meltcdat->dstr_10__FILENAME.val) - 1);
  meltcdat->dstr_10__FILENAME.val[8] = (char) 0;
  meltcdat->dstr_10__FILENAME.slen = 8;

  /*^iniobj */

/*iniobj dobj_11*/
/*_._VALDATA___V34*/ meltfptr[33] = (melt_ptr_t) & meltcdat->dobj_11;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_11",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_11",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_11.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_11.obj_num = 1;
  meltcdat->dobj_11.obj_hash = 10304213;
  meltcdat->dobj_11.obj_len = 2;


/*iniobj dsym_12__LINENO*/
  /*uniqueobj*/ if (! /*_._VALDATA___V38*/ meltfptr[37])
/*_._VALDATA___V38*/ meltfptr[37] =
      (melt_ptr_t) & meltcdat->dsym_12__LINENO;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_12__LINENO",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_12__LINENO",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_12__LINENO.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_12__LINENO.obj_hash = 590813330;
  meltcdat->dsym_12__LINENO.obj_len = 3;


/*inistring dstr_13__LINENO*/
 /*_._VALSTR___V39*/ meltfptr[38] = (melt_ptr_t) & meltcdat->dstr_13__LINENO;
  meltcdat->dstr_13__LINENO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_13__LINENO.val, "LINENO",
				sizeof (meltcdat->dstr_13__LINENO.val) - 1);
  meltcdat->dstr_13__LINENO.val[6] = (char) 0;
  meltcdat->dstr_13__LINENO.slen = 6;

  /*^iniobj */

/*iniobj dobj_14*/
/*_._VALDATA___V37*/ meltfptr[36] = (melt_ptr_t) & meltcdat->dobj_14;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_14",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_14",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_14.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_14.obj_num = 2;
  meltcdat->dobj_14.obj_hash = 23293137;
  meltcdat->dobj_14.obj_len = 2;


/*iniobj dsym_15__MSG*/
  /*uniqueobj*/ if (! /*_._VALDATA___V41*/ meltfptr[40])
/*_._VALDATA___V41*/ meltfptr[40] = (melt_ptr_t) & meltcdat->dsym_15__MSG;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_15__MSG",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_15__MSG",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_15__MSG.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_15__MSG.obj_hash = 97118120;
  meltcdat->dsym_15__MSG.obj_len = 3;


/*inistring dstr_16__MSG*/
 /*_._VALSTR___V42*/ meltfptr[41] = (melt_ptr_t) & meltcdat->dstr_16__MSG;
  meltcdat->dstr_16__MSG.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_16__MSG.val, "MSG",
				sizeof (meltcdat->dstr_16__MSG.val) - 1);
  meltcdat->dstr_16__MSG.val[3] = (char) 0;
  meltcdat->dstr_16__MSG.slen = 3;

  /*^iniobj */

/*iniobj dobj_17*/
/*_._VALDATA___V40*/ meltfptr[39] = (melt_ptr_t) & meltcdat->dobj_17;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_17",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_17",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_17.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_17.obj_num = 3;
  meltcdat->dobj_17.obj_hash = 1058871849;
  meltcdat->dobj_17.obj_len = 2;


/*iniobj dsym_18__COUNT*/
  /*uniqueobj*/ if (! /*_._VALDATA___V44*/ meltfptr[43])
/*_._VALDATA___V44*/ meltfptr[43] =
      (melt_ptr_t) & meltcdat->dsym_18__COUNT;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_18__COUNT",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_18__COUNT",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_18__COUNT.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_18__COUNT.obj_hash = 929826072;
  meltcdat->dsym_18__COUNT.obj_len = 3;


/*inistring dstr_19__COUNT*/
 /*_._VALSTR___V45*/ meltfptr[44] = (melt_ptr_t) & meltcdat->dstr_19__COUNT;
  meltcdat->dstr_19__COUNT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_19__COUNT.val, "COUNT",
				sizeof (meltcdat->dstr_19__COUNT.val) - 1);
  meltcdat->dstr_19__COUNT.val[5] = (char) 0;
  meltcdat->dstr_19__COUNT.slen = 5;

  /*^iniobj */

/*iniobj dobj_20*/
/*_._VALDATA___V43*/ meltfptr[42] = (melt_ptr_t) & meltcdat->dobj_20;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_20",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_20",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_20.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_20.obj_num = 4;
  meltcdat->dobj_20.obj_hash = 361512512;
  meltcdat->dobj_20.obj_len = 2;

  /*inimult dtup_21___HOOK_LOW_DEBUG_VALUE_AT */
 /*_._VALTUP___V46*/ meltfptr[45] =
    (melt_ptr_t) & meltcdat->dtup_21___HOOK_LOW_DEBUG_VALUE_AT;
  meltcdat->dtup_21___HOOK_LOW_DEBUG_VALUE_AT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_21___HOOK_LOW_DEBUG_VALUE_AT.nbval = 5;
  /*inimult dtup_22___HOOK_LOW_DEBUG_VALUE_AT */
 /*_._VALTUP___V47*/ meltfptr[46] =
    (melt_ptr_t) & meltcdat->dtup_22___HOOK_LOW_DEBUG_VALUE_AT;
  meltcdat->dtup_22___HOOK_LOW_DEBUG_VALUE_AT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_22___HOOK_LOW_DEBUG_VALUE_AT.nbval = 0;

/*iniobj dsym_23__MELT_DEBUG_FUN*/
  /*uniqueobj*/ if (! /*_._VALDATA___V48*/ meltfptr[47])
/*_._VALDATA___V48*/ meltfptr[47] =
      (melt_ptr_t) & meltcdat->dsym_23__MELT_DEBUG_FUN;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_23__MELT_DEBUG_FUN",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_23__MELT_DEBUG_FUN",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_23__MELT_DEBUG_FUN.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_23__MELT_DEBUG_FUN.obj_hash = 972123377;
  meltcdat->dsym_23__MELT_DEBUG_FUN.obj_len = 3;


/*inistring dstr_24__MELT_DEBUG_FUN*/
 /*_._VALSTR___V49*/ meltfptr[48] =
    (melt_ptr_t) & meltcdat->dstr_24__MELT_DEBUG_FUN;
  meltcdat->dstr_24__MELT_DEBUG_FUN.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_24__MELT_DEBUG_FUN.val,
				"MELT_DEBUG_FUN",
				sizeof (meltcdat->dstr_24__MELT_DEBUG_FUN.
					val) - 1);
  meltcdat->dstr_24__MELT_DEBUG_FUN.val[14] = (char) 0;
  meltcdat->dstr_24__MELT_DEBUG_FUN.slen = 14;


/*iniobj dsym_25__OVERRIDE_GATE_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V50*/ meltfptr[49])
/*_._VALDATA___V50*/ meltfptr[49] =
      (melt_ptr_t) & meltcdat->dsym_25__OVERRIDE_GATE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_25__OVERRIDE_GATE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_25__OVERRIDE_GATE_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_25__OVERRIDE_GATE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_25__OVERRIDE_GATE_DELAYED_QUEUE.obj_hash = 225417214;
  meltcdat->dsym_25__OVERRIDE_GATE_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_26__OVERRIDE_GATE_DELAYED_QU*/
 /*_._VALSTR___V51*/ meltfptr[50] =
    (melt_ptr_t) & meltcdat->dstr_26__OVERRIDE_GATE_DELAYED_QU;
  meltcdat->dstr_26__OVERRIDE_GATE_DELAYED_QU.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_26__OVERRIDE_GATE_DELAYED_QU.
				val, "OVERRIDE_GATE_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_26__OVERRIDE_GATE_DELAYED_QU.
					val) - 1);
  meltcdat->dstr_26__OVERRIDE_GATE_DELAYED_QU.val[27] = (char) 0;
  meltcdat->dstr_26__OVERRIDE_GATE_DELAYED_QU.slen = 27;


/*iniobj dsym_27__CLASS_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V52*/ meltfptr[51])
/*_._VALDATA___V52*/ meltfptr[51] =
      (melt_ptr_t) & meltcdat->dsym_27__CLASS_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_27__CLASS_DELAYED_QUEUE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_27__CLASS_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_27__CLASS_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_27__CLASS_DELAYED_QUEUE.obj_hash = 761132519;
  meltcdat->dsym_27__CLASS_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_28__CLASS_DELAYED_QUEUE*/
 /*_._VALSTR___V53*/ meltfptr[52] =
    (melt_ptr_t) & meltcdat->dstr_28__CLASS_DELAYED_QUEUE;
  meltcdat->dstr_28__CLASS_DELAYED_QUEUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_28__CLASS_DELAYED_QUEUE.val,
				"CLASS_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_28__CLASS_DELAYED_QUEUE.val) -
				1);
  meltcdat->dstr_28__CLASS_DELAYED_QUEUE.val[19] = (char) 0;
  meltcdat->dstr_28__CLASS_DELAYED_QUEUE.slen = 19;

  MELT_LOCATION ("warmelt-hooks.melt:50:/ iniobj");

/*iniobj dobj_29__OVERRIDE_GATE_DELAYED_QUEUE*/
/*_._VALDATA___V54*/ meltfptr[53] =
    (melt_ptr_t) & meltcdat->dobj_29__OVERRIDE_GATE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_29__OVERRIDE_GATE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_29__OVERRIDE_GATE_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_29__OVERRIDE_GATE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_29__OVERRIDE_GATE_DELAYED_QUEUE.obj_hash = 235313549;
  meltcdat->dobj_29__OVERRIDE_GATE_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_30__override_gate_delayed_qu*/
 /*_._VALSTR___V57*/ meltfptr[56] =
    (melt_ptr_t) & meltcdat->dstr_30__override_gate_delayed_qu;
  meltcdat->dstr_30__override_gate_delayed_qu.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_30__override_gate_delayed_qu.
				val, "override_gate_delayed_queue",
				sizeof (meltcdat->
					dstr_30__override_gate_delayed_qu.
					val) - 1);
  meltcdat->dstr_30__override_gate_delayed_qu.val[27] = (char) 0;
  meltcdat->dstr_30__override_gate_delayed_qu.slen = 27;


/*iniobj dsym_31__DISCR_LIST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V58*/ meltfptr[57])
/*_._VALDATA___V58*/ meltfptr[57] =
      (melt_ptr_t) & meltcdat->dsym_31__DISCR_LIST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_31__DISCR_LIST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_31__DISCR_LIST",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_31__DISCR_LIST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_31__DISCR_LIST.obj_hash = 98407634;
  meltcdat->dsym_31__DISCR_LIST.obj_len = 3;


/*inistring dstr_32__DISCR_LIST*/
 /*_._VALSTR___V59*/ meltfptr[58] =
    (melt_ptr_t) & meltcdat->dstr_32__DISCR_LIST;
  meltcdat->dstr_32__DISCR_LIST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_32__DISCR_LIST.val,
				"DISCR_LIST",
				sizeof (meltcdat->dstr_32__DISCR_LIST.val) -
				1);
  meltcdat->dstr_32__DISCR_LIST.val[10] = (char) 0;
  meltcdat->dstr_32__DISCR_LIST.slen = 10;


/*inihook dhook__33__HOOK_OVERRIDE_GATE */
  meltcdat->dhook__33__HOOK_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_OVERRIDE_GATE data */
  meltcdat->dhook__33__HOOK_OVERRIDE_GATE.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__33__HOOK_OVERRIDE_GATE,
			  melthook_HOOK_OVERRIDE_GATE);
  meltcdat->dhook__33__HOOK_OVERRIDE_GATE.hookdata =
    /*_._VALDATA___V61*/ meltfptr[60];
  strncpy (meltcdat->dhook__33__HOOK_OVERRIDE_GATE.hookname,
	   "HOOK_OVERRIDE_GATE",
	   sizeof (meltcdat->dhook__33__HOOK_OVERRIDE_GATE.hookname) - 1);
/*predefinedhook HOOK_OVERRIDE_GATE for dhook__33__HOOK_OVERRIDE_GATE*/
  if (!MELT_PREDEF (HOOK_OVERRIDE_GATE))
    MELT_STORE_PREDEF (HOOK_OVERRIDE_GATE,
		       (melt_ptr_t) & meltcdat->
		       dhook__33__HOOK_OVERRIDE_GATE);

  /*_._VALHOOK___V60*/ meltfptr[59] =
  /*inihooklocvar HOOK_OVERRIDE_GATE */
  (melt_ptr_t) & meltcdat->dhook__33__HOOK_OVERRIDE_GATE;

  /*done inihook dhook__33__HOOK_OVERRIDE_GATE */

  MELT_LOCATION ("warmelt-hooks.melt:56:/ iniobj");

/*iniobj dobj_34__*/
/*_._VALDATA___V61*/ meltfptr[60] = (melt_ptr_t) & meltcdat->dobj_34__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_34__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_34__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_34__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_34__.obj_hash = 227873605;
  meltcdat->dobj_34__.obj_len = 6;


/*inistring dstr_35__HOOK_OVERRIDE_GATE*/
 /*_._VALSTR___V62*/ meltfptr[61] =
    (melt_ptr_t) & meltcdat->dstr_35__HOOK_OVERRIDE_GATE;
  meltcdat->dstr_35__HOOK_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_35__HOOK_OVERRIDE_GATE.val,
				"HOOK_OVERRIDE_GATE",
				sizeof (meltcdat->dstr_35__HOOK_OVERRIDE_GATE.
					val) - 1);
  meltcdat->dstr_35__HOOK_OVERRIDE_GATE.val[18] = (char) 0;
  meltcdat->dstr_35__HOOK_OVERRIDE_GATE.slen = 18;


/*iniobj dsym_36__BEFOREGATE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V64*/ meltfptr[63])
/*_._VALDATA___V64*/ meltfptr[63] =
      (melt_ptr_t) & meltcdat->dsym_36__BEFOREGATE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_36__BEFOREGATE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_36__BEFOREGATE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_36__BEFOREGATE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_36__BEFOREGATE.obj_hash = 841081062;
  meltcdat->dsym_36__BEFOREGATE.obj_len = 3;


/*inistring dstr_37__BEFOREGATE*/
 /*_._VALSTR___V65*/ meltfptr[64] =
    (melt_ptr_t) & meltcdat->dstr_37__BEFOREGATE;
  meltcdat->dstr_37__BEFOREGATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_37__BEFOREGATE.val,
				"BEFOREGATE",
				sizeof (meltcdat->dstr_37__BEFOREGATE.val) -
				1);
  meltcdat->dstr_37__BEFOREGATE.val[10] = (char) 0;
  meltcdat->dstr_37__BEFOREGATE.slen = 10;

  /*^iniobj */

/*iniobj dobj_38*/
/*_._VALDATA___V63*/ meltfptr[62] = (melt_ptr_t) & meltcdat->dobj_38;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_38",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_38",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_38.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_38.obj_num = 0;
  meltcdat->dobj_38.obj_hash = 980879501;
  meltcdat->dobj_38.obj_len = 2;

  /*inimult dtup_39___HOOK_OVERRIDE_GATE */
 /*_._VALTUP___V66*/ meltfptr[65] =
    (melt_ptr_t) & meltcdat->dtup_39___HOOK_OVERRIDE_GATE;
  meltcdat->dtup_39___HOOK_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_39___HOOK_OVERRIDE_GATE.nbval = 1;

/*iniobj dsym_40__AFTERGATE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V68*/ meltfptr[67])
/*_._VALDATA___V68*/ meltfptr[67] =
      (melt_ptr_t) & meltcdat->dsym_40__AFTERGATE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_40__AFTERGATE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_40__AFTERGATE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_40__AFTERGATE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_40__AFTERGATE.obj_hash = 561055110;
  meltcdat->dsym_40__AFTERGATE.obj_len = 3;


/*inistring dstr_41__AFTERGATE*/
 /*_._VALSTR___V69*/ meltfptr[68] =
    (melt_ptr_t) & meltcdat->dstr_41__AFTERGATE;
  meltcdat->dstr_41__AFTERGATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_41__AFTERGATE.val, "AFTERGATE",
				sizeof (meltcdat->dstr_41__AFTERGATE.val) -
				1);
  meltcdat->dstr_41__AFTERGATE.val[9] = (char) 0;
  meltcdat->dstr_41__AFTERGATE.slen = 9;

  /*^iniobj */

/*iniobj dobj_42*/
/*_._VALDATA___V67*/ meltfptr[66] = (melt_ptr_t) & meltcdat->dobj_42;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_42",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_42",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_42.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_42.obj_num = 0;
  meltcdat->dobj_42.obj_hash = 998008381;
  meltcdat->dobj_42.obj_len = 2;

  /*inimult dtup_43___HOOK_OVERRIDE_GATE */
 /*_._VALTUP___V70*/ meltfptr[69] =
    (melt_ptr_t) & meltcdat->dtup_43___HOOK_OVERRIDE_GATE;
  meltcdat->dtup_43___HOOK_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_43___HOOK_OVERRIDE_GATE.nbval = 1;

/*iniobj dsym_44__TRUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V71*/ meltfptr[70])
/*_._VALDATA___V71*/ meltfptr[70] =
      (melt_ptr_t) & meltcdat->dsym_44__TRUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_44__TRUE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_KEYWORD))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_44__TRUE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_KEYWORD)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_44__TRUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_KEYWORD))));
  meltcdat->dsym_44__TRUE.obj_hash = 576485513;
  meltcdat->dsym_44__TRUE.obj_len = 3;


/*inistring dstr_45__TRUE*/
 /*_._VALSTR___V72*/ meltfptr[71] = (melt_ptr_t) & meltcdat->dstr_45__TRUE;
  meltcdat->dstr_45__TRUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_45__TRUE.val, "TRUE",
				sizeof (meltcdat->dstr_45__TRUE.val) - 1);
  meltcdat->dstr_45__TRUE.val[4] = (char) 0;
  meltcdat->dstr_45__TRUE.slen = 4;


/*iniobj dsym_46__CLASS_REFERENCE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V73*/ meltfptr[72])
/*_._VALDATA___V73*/ meltfptr[72] =
      (melt_ptr_t) & meltcdat->dsym_46__CLASS_REFERENCE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_46__CLASS_REFERENCE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_46__CLASS_REFERENCE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_46__CLASS_REFERENCE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_46__CLASS_REFERENCE.obj_hash = 896623907;
  meltcdat->dsym_46__CLASS_REFERENCE.obj_len = 3;


/*inistring dstr_47__CLASS_REFERENCE*/
 /*_._VALSTR___V74*/ meltfptr[73] =
    (melt_ptr_t) & meltcdat->dstr_47__CLASS_REFERENCE;
  meltcdat->dstr_47__CLASS_REFERENCE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_47__CLASS_REFERENCE.val,
				"CLASS_REFERENCE",
				sizeof (meltcdat->dstr_47__CLASS_REFERENCE.
					val) - 1);
  meltcdat->dstr_47__CLASS_REFERENCE.val[15] = (char) 0;
  meltcdat->dstr_47__CLASS_REFERENCE.slen = 15;

  /*inirout drout_48__ENABLE_OVERRIDE_GATE */
 /*_._VALROUT___V75*/ meltfptr[74] =
    (melt_ptr_t) & meltcdat->drout_48__ENABLE_OVERRIDE_GATE;
  meltcdat->drout_48__ENABLE_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_48__ENABLE_OVERRIDE_GATE.routdescr,
	   "ENABLE_OVERRIDE_GATE @warmelt-hooks.melt:151",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_48__ENABLE_OVERRIDE_GATE.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_48__ENABLE_OVERRIDE_GATE,
			     meltrout_3_WARMELTmiHOOKS_ENABLE_OVERRIDE_GATE);

  /*iniclos dclo_49__ENABLE_OVERRIDE_GATE */
 /*_._VALCLO___V76*/ meltfptr[75] =
    (melt_ptr_t) & meltcdat->dclo_49__ENABLE_OVERRIDE_GATE;
  meltcdat->dclo_49__ENABLE_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_49__ENABLE_OVERRIDE_GATE.nbval = 0;

  /*inirout drout_50__MAYBE_DISABLE_OVERRIDE_GATE */
 /*_._VALROUT___V77*/ meltfptr[76] =
    (melt_ptr_t) & meltcdat->drout_50__MAYBE_DISABLE_OVERRIDE_GATE;
  meltcdat->drout_50__MAYBE_DISABLE_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_50__MAYBE_DISABLE_OVERRIDE_GATE.routdescr,
	   "MAYBE_DISABLE_OVERRIDE_GATE @warmelt-hooks.melt:166",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_50__MAYBE_DISABLE_OVERRIDE_GATE.nbval = 2;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_50__MAYBE_DISABLE_OVERRIDE_GATE,
			     meltrout_4_WARMELTmiHOOKS_MAYBE_DISABLE_OVERRIDE_GATE);

  /*iniclos dclo_51__MAYBE_DISABLE_OVERRIDE_GATE */
 /*_._VALCLO___V78*/ meltfptr[77] =
    (melt_ptr_t) & meltcdat->dclo_51__MAYBE_DISABLE_OVERRIDE_GATE;
  meltcdat->dclo_51__MAYBE_DISABLE_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_51__MAYBE_DISABLE_OVERRIDE_GATE.nbval = 0;

  /*inirout drout_52__REGISTER_OVERRIDE_GATE_FIRST */
 /*_._VALROUT___V79*/ meltfptr[78] =
    (melt_ptr_t) & meltcdat->drout_52__REGISTER_OVERRIDE_GATE_FIRST;
  meltcdat->drout_52__REGISTER_OVERRIDE_GATE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_52__REGISTER_OVERRIDE_GATE_FIRST.routdescr,
	   "REGISTER_OVERRIDE_GATE_FIRST @warmelt-hooks.melt:182",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_52__REGISTER_OVERRIDE_GATE_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_52__REGISTER_OVERRIDE_GATE_FIRST,
			     meltrout_5_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_FIRST);

  /*iniclos dclo_53__REGISTER_OVERRIDE_GATE_FIRST */
 /*_._VALCLO___V80*/ meltfptr[79] =
    (melt_ptr_t) & meltcdat->dclo_53__REGISTER_OVERRIDE_GATE_FIRST;
  meltcdat->dclo_53__REGISTER_OVERRIDE_GATE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_53__REGISTER_OVERRIDE_GATE_FIRST.nbval = 0;

  /*inirout drout_54__REGISTER_OVERRIDE_GATE_LAST */
 /*_._VALROUT___V81*/ meltfptr[80] =
    (melt_ptr_t) & meltcdat->drout_54__REGISTER_OVERRIDE_GATE_LAST;
  meltcdat->drout_54__REGISTER_OVERRIDE_GATE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_54__REGISTER_OVERRIDE_GATE_LAST.routdescr,
	   "REGISTER_OVERRIDE_GATE_LAST @warmelt-hooks.melt:190",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_54__REGISTER_OVERRIDE_GATE_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_54__REGISTER_OVERRIDE_GATE_LAST,
			     meltrout_6_WARMELTmiHOOKS_REGISTER_OVERRIDE_GATE_LAST);

  /*iniclos dclo_55__REGISTER_OVERRIDE_GATE_LAST */
 /*_._VALCLO___V82*/ meltfptr[81] =
    (melt_ptr_t) & meltcdat->dclo_55__REGISTER_OVERRIDE_GATE_LAST;
  meltcdat->dclo_55__REGISTER_OVERRIDE_GATE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_55__REGISTER_OVERRIDE_GATE_LAST.nbval = 0;

  /*inirout drout_56__UNREGISTER_OVERRIDE_GATE_FIRST */
 /*_._VALROUT___V83*/ meltfptr[82] =
    (melt_ptr_t) & meltcdat->drout_56__UNREGISTER_OVERRIDE_GATE_FIRST;
  meltcdat->drout_56__UNREGISTER_OVERRIDE_GATE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_56__UNREGISTER_OVERRIDE_GATE_FIRST.routdescr,
	   "UNREGISTER_OVERRIDE_GATE_FIRST @warmelt-hooks.melt:198",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_56__UNREGISTER_OVERRIDE_GATE_FIRST.nbval = 5;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_56__UNREGISTER_OVERRIDE_GATE_FIRST,
			     meltrout_7_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_FIRST);

  /*iniclos dclo_57__UNREGISTER_OVERRIDE_GATE_FIRST */
 /*_._VALCLO___V84*/ meltfptr[83] =
    (melt_ptr_t) & meltcdat->dclo_57__UNREGISTER_OVERRIDE_GATE_FIRST;
  meltcdat->dclo_57__UNREGISTER_OVERRIDE_GATE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_57__UNREGISTER_OVERRIDE_GATE_FIRST.nbval = 0;

  /*inirout drout_58__UNREGISTER_OVERRIDE_GATE_LAST */
 /*_._VALROUT___V85*/ meltfptr[84] =
    (melt_ptr_t) & meltcdat->drout_58__UNREGISTER_OVERRIDE_GATE_LAST;
  meltcdat->drout_58__UNREGISTER_OVERRIDE_GATE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_58__UNREGISTER_OVERRIDE_GATE_LAST.routdescr,
	   "UNREGISTER_OVERRIDE_GATE_LAST @warmelt-hooks.melt:221",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_58__UNREGISTER_OVERRIDE_GATE_LAST.nbval = 5;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_58__UNREGISTER_OVERRIDE_GATE_LAST,
			     meltrout_8_WARMELTmiHOOKS_UNREGISTER_OVERRIDE_GATE_LAST);

  /*iniclos dclo_59__UNREGISTER_OVERRIDE_GATE_LAST */
 /*_._VALCLO___V86*/ meltfptr[85] =
    (melt_ptr_t) & meltcdat->dclo_59__UNREGISTER_OVERRIDE_GATE_LAST;
  meltcdat->dclo_59__UNREGISTER_OVERRIDE_GATE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_59__UNREGISTER_OVERRIDE_GATE_LAST.nbval = 0;


/*iniobj dsym_60__START_UNIT_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V87*/ meltfptr[86])
/*_._VALDATA___V87*/ meltfptr[86] =
      (melt_ptr_t) & meltcdat->dsym_60__START_UNIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_60__START_UNIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_60__START_UNIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_60__START_UNIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_60__START_UNIT_DELAYED_QUEUE.obj_hash = 335728873;
  meltcdat->dsym_60__START_UNIT_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_61__START_UNIT_DELAYED_QUEUE*/
 /*_._VALSTR___V88*/ meltfptr[87] =
    (melt_ptr_t) & meltcdat->dstr_61__START_UNIT_DELAYED_QUEUE;
  meltcdat->dstr_61__START_UNIT_DELAYED_QUEUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_61__START_UNIT_DELAYED_QUEUE.
				val, "START_UNIT_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_61__START_UNIT_DELAYED_QUEUE.
					val) - 1);
  meltcdat->dstr_61__START_UNIT_DELAYED_QUEUE.val[24] = (char) 0;
  meltcdat->dstr_61__START_UNIT_DELAYED_QUEUE.slen = 24;

  MELT_LOCATION ("warmelt-hooks.melt:257:/ iniobj");

/*iniobj dobj_62__START_UNIT_DELAYED_QUEUE*/
/*_._VALDATA___V89*/ meltfptr[88] =
    (melt_ptr_t) & meltcdat->dobj_62__START_UNIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_62__START_UNIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_62__START_UNIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_62__START_UNIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_62__START_UNIT_DELAYED_QUEUE.obj_hash = 146249483;
  meltcdat->dobj_62__START_UNIT_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_63__start_unit_delayed_queue*/
 /*_._VALSTR___V92*/ meltfptr[91] =
    (melt_ptr_t) & meltcdat->dstr_63__start_unit_delayed_queue;
  meltcdat->dstr_63__start_unit_delayed_queue.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_63__start_unit_delayed_queue.
				val, "start_unit_delayed_queue",
				sizeof (meltcdat->
					dstr_63__start_unit_delayed_queue.
					val) - 1);
  meltcdat->dstr_63__start_unit_delayed_queue.val[24] = (char) 0;
  meltcdat->dstr_63__start_unit_delayed_queue.slen = 24;


/*inihook dhook__64__HOOK_START_UNIT */
  meltcdat->dhook__64__HOOK_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_START_UNIT data */
  meltcdat->dhook__64__HOOK_START_UNIT.nbval = 7;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__64__HOOK_START_UNIT,
			  melthook_HOOK_START_UNIT);
  meltcdat->dhook__64__HOOK_START_UNIT.hookdata =
    /*_._VALDATA___V94*/ meltfptr[93];
  strncpy (meltcdat->dhook__64__HOOK_START_UNIT.hookname, "HOOK_START_UNIT",
	   sizeof (meltcdat->dhook__64__HOOK_START_UNIT.hookname) - 1);
/*predefinedhook HOOK_START_UNIT for dhook__64__HOOK_START_UNIT*/
  if (!MELT_PREDEF (HOOK_START_UNIT))
    MELT_STORE_PREDEF (HOOK_START_UNIT,
		       (melt_ptr_t) & meltcdat->dhook__64__HOOK_START_UNIT);

  /*_._VALHOOK___V93*/ meltfptr[92] =
  /*inihooklocvar HOOK_START_UNIT */
  (melt_ptr_t) & meltcdat->dhook__64__HOOK_START_UNIT;

  /*done inihook dhook__64__HOOK_START_UNIT */

  MELT_LOCATION ("warmelt-hooks.melt:265:/ iniobj");

/*iniobj dobj_65__*/
/*_._VALDATA___V94*/ meltfptr[93] = (melt_ptr_t) & meltcdat->dobj_65__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_65__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_65__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_65__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_65__.obj_hash = 638731015;
  meltcdat->dobj_65__.obj_len = 6;


/*inistring dstr_66__HOOK_START_UNIT*/
 /*_._VALSTR___V95*/ meltfptr[94] =
    (melt_ptr_t) & meltcdat->dstr_66__HOOK_START_UNIT;
  meltcdat->dstr_66__HOOK_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_66__HOOK_START_UNIT.val,
				"HOOK_START_UNIT",
				sizeof (meltcdat->dstr_66__HOOK_START_UNIT.
					val) - 1);
  meltcdat->dstr_66__HOOK_START_UNIT.val[15] = (char) 0;
  meltcdat->dstr_66__HOOK_START_UNIT.slen = 15;

  /*inimult dtup_67___HOOK_START_UNIT */
 /*_._VALTUP___V96*/ meltfptr[95] =
    (melt_ptr_t) & meltcdat->dtup_67___HOOK_START_UNIT;
  meltcdat->dtup_67___HOOK_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_67___HOOK_START_UNIT.nbval = 0;
  /*inimult dtup_68___HOOK_START_UNIT */
 /*_._VALTUP___V97*/ meltfptr[96] =
    (melt_ptr_t) & meltcdat->dtup_68___HOOK_START_UNIT;
  meltcdat->dtup_68___HOOK_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_68___HOOK_START_UNIT.nbval = 0;

/*iniobj dsym_69__LIST_EVERY*/
  /*uniqueobj*/ if (! /*_._VALDATA___V101*/ meltfptr[100])
/*_._VALDATA___V101*/ meltfptr[100] =
      (melt_ptr_t) & meltcdat->dsym_69__LIST_EVERY;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_69__LIST_EVERY",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_69__LIST_EVERY",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_69__LIST_EVERY.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_69__LIST_EVERY.obj_hash = 942863429;
  meltcdat->dsym_69__LIST_EVERY.obj_len = 3;


/*inistring dstr_70__LIST_EVERY*/
 /*_._VALSTR___V102*/ meltfptr[101] =
    (melt_ptr_t) & meltcdat->dstr_70__LIST_EVERY;
  meltcdat->dstr_70__LIST_EVERY.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_70__LIST_EVERY.val,
				"LIST_EVERY",
				sizeof (meltcdat->dstr_70__LIST_EVERY.val) -
				1);
  meltcdat->dstr_70__LIST_EVERY.val[10] = (char) 0;
  meltcdat->dstr_70__LIST_EVERY.slen = 10;

  /*inirout drout_71__LAMBDA_ */
 /*_._VALROUT___V98*/ meltfptr[97] =
    (melt_ptr_t) & meltcdat->drout_71__LAMBDA_;
  meltcdat->drout_71__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_71__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:275", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_71__LAMBDA_.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_71__LAMBDA_,
			     meltrout_9_WARMELTmiHOOKS_LAMBDA_cl1);

  /*inirout drout_72__LAMBDA_ */
 /*_._VALROUT___V99*/ meltfptr[98] =
    (melt_ptr_t) & meltcdat->drout_72__LAMBDA_;
  meltcdat->drout_72__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_72__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:284", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_72__LAMBDA_.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_72__LAMBDA_,
			     meltrout_10_WARMELTmiHOOKS_LAMBDA_cl2);

  /*inirout drout_73__LAMBDA_ */
 /*_._VALROUT___V100*/ meltfptr[99] =
    (melt_ptr_t) & meltcdat->drout_73__LAMBDA_;
  meltcdat->drout_73__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_73__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:289", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_73__LAMBDA_.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_73__LAMBDA_,
			     meltrout_11_WARMELTmiHOOKS_LAMBDA_cl3);

  /*inirout drout_74__ENABLE_START_UNIT */
 /*_._VALROUT___V103*/ meltfptr[102] =
    (melt_ptr_t) & meltcdat->drout_74__ENABLE_START_UNIT;
  meltcdat->drout_74__ENABLE_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_74__ENABLE_START_UNIT.routdescr,
	   "ENABLE_START_UNIT @warmelt-hooks.melt:313",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_74__ENABLE_START_UNIT.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_74__ENABLE_START_UNIT,
			     meltrout_13_WARMELTmiHOOKS_ENABLE_START_UNIT);

  /*iniclos dclo_75__ENABLE_START_UNIT */
 /*_._VALCLO___V104*/ meltfptr[103] =
    (melt_ptr_t) & meltcdat->dclo_75__ENABLE_START_UNIT;
  meltcdat->dclo_75__ENABLE_START_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_75__ENABLE_START_UNIT.nbval = 0;

  /*inirout drout_76__AT_START_UNIT_FIRST */
 /*_._VALROUT___V105*/ meltfptr[104] =
    (melt_ptr_t) & meltcdat->drout_76__AT_START_UNIT_FIRST;
  meltcdat->drout_76__AT_START_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_76__AT_START_UNIT_FIRST.routdescr,
	   "AT_START_UNIT_FIRST @warmelt-hooks.melt:328",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_76__AT_START_UNIT_FIRST.nbval = 2;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_76__AT_START_UNIT_FIRST,
			     meltrout_14_WARMELTmiHOOKS_AT_START_UNIT_FIRST);

  /*iniclos dclo_77__AT_START_UNIT_FIRST */
 /*_._VALCLO___V106*/ meltfptr[105] =
    (melt_ptr_t) & meltcdat->dclo_77__AT_START_UNIT_FIRST;
  meltcdat->dclo_77__AT_START_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_77__AT_START_UNIT_FIRST.nbval = 0;

  /*inirout drout_78__AT_START_UNIT_LAST */
 /*_._VALROUT___V107*/ meltfptr[106] =
    (melt_ptr_t) & meltcdat->drout_78__AT_START_UNIT_LAST;
  meltcdat->drout_78__AT_START_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_78__AT_START_UNIT_LAST.routdescr,
	   "AT_START_UNIT_LAST @warmelt-hooks.melt:337",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_78__AT_START_UNIT_LAST.nbval = 2;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_78__AT_START_UNIT_LAST,
			     meltrout_15_WARMELTmiHOOKS_AT_START_UNIT_LAST);

  /*iniclos dclo_79__AT_START_UNIT_LAST */
 /*_._VALCLO___V108*/ meltfptr[107] =
    (melt_ptr_t) & meltcdat->dclo_79__AT_START_UNIT_LAST;
  meltcdat->dclo_79__AT_START_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_79__AT_START_UNIT_LAST.nbval = 0;


/*iniobj dsym_80__FINISH_UNIT_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V109*/ meltfptr[108])
/*_._VALDATA___V109*/ meltfptr[108] =
      (melt_ptr_t) & meltcdat->dsym_80__FINISH_UNIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_80__FINISH_UNIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_80__FINISH_UNIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_80__FINISH_UNIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_80__FINISH_UNIT_DELAYED_QUEUE.obj_hash = 456223898;
  meltcdat->dsym_80__FINISH_UNIT_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_81__FINISH_UNIT_DELAYED_QUEU*/
 /*_._VALSTR___V110*/ meltfptr[109] =
    (melt_ptr_t) & meltcdat->dstr_81__FINISH_UNIT_DELAYED_QUEU;
  meltcdat->dstr_81__FINISH_UNIT_DELAYED_QUEU.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_81__FINISH_UNIT_DELAYED_QUEU.
				val, "FINISH_UNIT_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_81__FINISH_UNIT_DELAYED_QUEU.
					val) - 1);
  meltcdat->dstr_81__FINISH_UNIT_DELAYED_QUEU.val[25] = (char) 0;
  meltcdat->dstr_81__FINISH_UNIT_DELAYED_QUEU.slen = 25;

  MELT_LOCATION ("warmelt-hooks.melt:353:/ iniobj");

/*iniobj dobj_82__FINISH_UNIT_DELAYED_QUEUE*/
/*_._VALDATA___V111*/ meltfptr[110] =
    (melt_ptr_t) & meltcdat->dobj_82__FINISH_UNIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_82__FINISH_UNIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_82__FINISH_UNIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_82__FINISH_UNIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_82__FINISH_UNIT_DELAYED_QUEUE.obj_hash = 863693806;
  meltcdat->dobj_82__FINISH_UNIT_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_83__finish_unit_delayed_queu*/
 /*_._VALSTR___V114*/ meltfptr[113] =
    (melt_ptr_t) & meltcdat->dstr_83__finish_unit_delayed_queu;
  meltcdat->dstr_83__finish_unit_delayed_queu.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_83__finish_unit_delayed_queu.
				val, "finish_unit_delayed_queue",
				sizeof (meltcdat->
					dstr_83__finish_unit_delayed_queu.
					val) - 1);
  meltcdat->dstr_83__finish_unit_delayed_queu.val[25] = (char) 0;
  meltcdat->dstr_83__finish_unit_delayed_queu.slen = 25;


/*inihook dhook__84__HOOK_FINISH_UNIT */
  meltcdat->dhook__84__HOOK_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_FINISH_UNIT data */
  meltcdat->dhook__84__HOOK_FINISH_UNIT.nbval = 7;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__84__HOOK_FINISH_UNIT,
			  melthook_HOOK_FINISH_UNIT);
  meltcdat->dhook__84__HOOK_FINISH_UNIT.hookdata =
    /*_._VALDATA___V116*/ meltfptr[115];
  strncpy (meltcdat->dhook__84__HOOK_FINISH_UNIT.hookname, "HOOK_FINISH_UNIT",
	   sizeof (meltcdat->dhook__84__HOOK_FINISH_UNIT.hookname) - 1);
/*predefinedhook HOOK_FINISH_UNIT for dhook__84__HOOK_FINISH_UNIT*/
  if (!MELT_PREDEF (HOOK_FINISH_UNIT))
    MELT_STORE_PREDEF (HOOK_FINISH_UNIT,
		       (melt_ptr_t) & meltcdat->dhook__84__HOOK_FINISH_UNIT);

  /*_._VALHOOK___V115*/ meltfptr[114] =
  /*inihooklocvar HOOK_FINISH_UNIT */
  (melt_ptr_t) & meltcdat->dhook__84__HOOK_FINISH_UNIT;

  /*done inihook dhook__84__HOOK_FINISH_UNIT */

  MELT_LOCATION ("warmelt-hooks.melt:367:/ iniobj");

/*iniobj dobj_85__*/
/*_._VALDATA___V116*/ meltfptr[115] = (melt_ptr_t) & meltcdat->dobj_85__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_85__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_85__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_85__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_85__.obj_hash = 345098903;
  meltcdat->dobj_85__.obj_len = 6;


/*inistring dstr_86__HOOK_FINISH_UNIT*/
 /*_._VALSTR___V117*/ meltfptr[116] =
    (melt_ptr_t) & meltcdat->dstr_86__HOOK_FINISH_UNIT;
  meltcdat->dstr_86__HOOK_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_86__HOOK_FINISH_UNIT.val,
				"HOOK_FINISH_UNIT",
				sizeof (meltcdat->dstr_86__HOOK_FINISH_UNIT.
					val) - 1);
  meltcdat->dstr_86__HOOK_FINISH_UNIT.val[16] = (char) 0;
  meltcdat->dstr_86__HOOK_FINISH_UNIT.slen = 16;

  /*inimult dtup_87___HOOK_FINISH_UNIT */
 /*_._VALTUP___V118*/ meltfptr[117] =
    (melt_ptr_t) & meltcdat->dtup_87___HOOK_FINISH_UNIT;
  meltcdat->dtup_87___HOOK_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_87___HOOK_FINISH_UNIT.nbval = 0;
  /*inimult dtup_88___HOOK_FINISH_UNIT */
 /*_._VALTUP___V119*/ meltfptr[118] =
    (melt_ptr_t) & meltcdat->dtup_88___HOOK_FINISH_UNIT;
  meltcdat->dtup_88___HOOK_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_88___HOOK_FINISH_UNIT.nbval = 0;
  /*inirout drout_89__LAMBDA_ */
 /*_._VALROUT___V120*/ meltfptr[119] =
    (melt_ptr_t) & meltcdat->drout_89__LAMBDA_;
  meltcdat->drout_89__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_89__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:377", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_89__LAMBDA_.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_89__LAMBDA_,
			     meltrout_16_WARMELTmiHOOKS_LAMBDA_cl4);

  /*inirout drout_90__LAMBDA_ */
 /*_._VALROUT___V121*/ meltfptr[120] =
    (melt_ptr_t) & meltcdat->drout_90__LAMBDA_;
  meltcdat->drout_90__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_90__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:386", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_90__LAMBDA_.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_90__LAMBDA_,
			     meltrout_17_WARMELTmiHOOKS_LAMBDA_cl5);

  /*inirout drout_91__LAMBDA_ */
 /*_._VALROUT___V122*/ meltfptr[121] =
    (melt_ptr_t) & meltcdat->drout_91__LAMBDA_;
  meltcdat->drout_91__LAMBDA_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_91__LAMBDA_.routdescr,
	   "LAMBDA_ @warmelt-hooks.melt:391", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_91__LAMBDA_.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_91__LAMBDA_,
			     meltrout_18_WARMELTmiHOOKS_LAMBDA_cl6);

  /*inirout drout_92__ENABLE_FINISH_UNIT */
 /*_._VALROUT___V123*/ meltfptr[122] =
    (melt_ptr_t) & meltcdat->drout_92__ENABLE_FINISH_UNIT;
  meltcdat->drout_92__ENABLE_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_92__ENABLE_FINISH_UNIT.routdescr,
	   "ENABLE_FINISH_UNIT @warmelt-hooks.melt:419",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_92__ENABLE_FINISH_UNIT.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_92__ENABLE_FINISH_UNIT,
			     meltrout_20_WARMELTmiHOOKS_ENABLE_FINISH_UNIT);

  /*iniclos dclo_93__ENABLE_FINISH_UNIT */
 /*_._VALCLO___V124*/ meltfptr[123] =
    (melt_ptr_t) & meltcdat->dclo_93__ENABLE_FINISH_UNIT;
  meltcdat->dclo_93__ENABLE_FINISH_UNIT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_93__ENABLE_FINISH_UNIT.nbval = 0;

  /*inirout drout_94__AT_FINISH_UNIT_FIRST */
 /*_._VALROUT___V125*/ meltfptr[124] =
    (melt_ptr_t) & meltcdat->drout_94__AT_FINISH_UNIT_FIRST;
  meltcdat->drout_94__AT_FINISH_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_94__AT_FINISH_UNIT_FIRST.routdescr,
	   "AT_FINISH_UNIT_FIRST @warmelt-hooks.melt:433",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_94__AT_FINISH_UNIT_FIRST.nbval = 2;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_94__AT_FINISH_UNIT_FIRST,
			     meltrout_21_WARMELTmiHOOKS_AT_FINISH_UNIT_FIRST);

  /*iniclos dclo_95__AT_FINISH_UNIT_FIRST */
 /*_._VALCLO___V126*/ meltfptr[125] =
    (melt_ptr_t) & meltcdat->dclo_95__AT_FINISH_UNIT_FIRST;
  meltcdat->dclo_95__AT_FINISH_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_95__AT_FINISH_UNIT_FIRST.nbval = 0;

  /*inirout drout_96__AT_FINISH_UNIT_LAST */
 /*_._VALROUT___V127*/ meltfptr[126] =
    (melt_ptr_t) & meltcdat->drout_96__AT_FINISH_UNIT_LAST;
  meltcdat->drout_96__AT_FINISH_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_96__AT_FINISH_UNIT_LAST.routdescr,
	   "AT_FINISH_UNIT_LAST @warmelt-hooks.melt:443",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_96__AT_FINISH_UNIT_LAST.nbval = 2;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_96__AT_FINISH_UNIT_LAST,
			     meltrout_22_WARMELTmiHOOKS_AT_FINISH_UNIT_LAST);

  /*iniclos dclo_97__AT_FINISH_UNIT_LAST */
 /*_._VALCLO___V128*/ meltfptr[127] =
    (melt_ptr_t) & meltcdat->dclo_97__AT_FINISH_UNIT_LAST;
  meltcdat->dclo_97__AT_FINISH_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_97__AT_FINISH_UNIT_LAST.nbval = 0;


/*iniobj dsym_98__ALL_PASSES_START_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V129*/ meltfptr[128])
/*_._VALDATA___V129*/ meltfptr[128] =
      (melt_ptr_t) & meltcdat->dsym_98__ALL_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_98__ALL_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_98__ALL_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_98__ALL_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_98__ALL_PASSES_START_DELAYED_QUEUE.obj_hash = 676258517;
  meltcdat->dsym_98__ALL_PASSES_START_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_99__ALL_PASSES_START_DELAYED*/
 /*_._VALSTR___V130*/ meltfptr[129] =
    (melt_ptr_t) & meltcdat->dstr_99__ALL_PASSES_START_DELAYED;
  meltcdat->dstr_99__ALL_PASSES_START_DELAYED.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_99__ALL_PASSES_START_DELAYED.
				val, "ALL_PASSES_START_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_99__ALL_PASSES_START_DELAYED.
					val) - 1);
  meltcdat->dstr_99__ALL_PASSES_START_DELAYED.val[30] = (char) 0;
  meltcdat->dstr_99__ALL_PASSES_START_DELAYED.slen = 30;

  MELT_LOCATION ("warmelt-hooks.melt:464:/ iniobj");

/*iniobj dobj_100__ALL_PASSES_START_DELAYED_QUEUE*/
/*_._VALDATA___V131*/ meltfptr[130] =
    (melt_ptr_t) & meltcdat->dobj_100__ALL_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_100__ALL_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_100__ALL_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_100__ALL_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_100__ALL_PASSES_START_DELAYED_QUEUE.obj_hash = 474081997;
  meltcdat->dobj_100__ALL_PASSES_START_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_101__all_passes_start_delayed*/
 /*_._VALSTR___V132*/ meltfptr[131] =
    (melt_ptr_t) & meltcdat->dstr_101__all_passes_start_delayed;
  meltcdat->dstr_101__all_passes_start_delayed.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_101__all_passes_start_delayed.
				val, "all_passes_start_delayed_queue",
				sizeof (meltcdat->
					dstr_101__all_passes_start_delayed.
					val) - 1);
  meltcdat->dstr_101__all_passes_start_delayed.val[30] = (char) 0;
  meltcdat->dstr_101__all_passes_start_delayed.slen = 30;


/*inihook dhook__102__HOOK_ALL_PASSES_START */
  meltcdat->dhook__102__HOOK_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_ALL_PASSES_START data */
  meltcdat->dhook__102__HOOK_ALL_PASSES_START.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__102__HOOK_ALL_PASSES_START,
			  melthook_HOOK_ALL_PASSES_START);
  meltcdat->dhook__102__HOOK_ALL_PASSES_START.hookdata =
    /*_._VALDATA___V134*/ meltfptr[133];
  strncpy (meltcdat->dhook__102__HOOK_ALL_PASSES_START.hookname,
	   "HOOK_ALL_PASSES_START",
	   sizeof (meltcdat->dhook__102__HOOK_ALL_PASSES_START.hookname) - 1);
/*predefinedhook HOOK_ALL_PASSES_START for dhook__102__HOOK_ALL_PASSES_START*/
  if (!MELT_PREDEF (HOOK_ALL_PASSES_START))
    MELT_STORE_PREDEF (HOOK_ALL_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__102__HOOK_ALL_PASSES_START);

  /*_._VALHOOK___V133*/ meltfptr[132] =
  /*inihooklocvar HOOK_ALL_PASSES_START */
  (melt_ptr_t) & meltcdat->dhook__102__HOOK_ALL_PASSES_START;

  /*done inihook dhook__102__HOOK_ALL_PASSES_START */

  MELT_LOCATION ("warmelt-hooks.melt:478:/ iniobj");

/*iniobj dobj_103__*/
/*_._VALDATA___V134*/ meltfptr[133] = (melt_ptr_t) & meltcdat->dobj_103__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_103__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_103__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_103__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_103__.obj_hash = 705348723;
  meltcdat->dobj_103__.obj_len = 6;


/*inistring dstr_104__HOOK_ALL_PASSES_START*/
 /*_._VALSTR___V135*/ meltfptr[134] =
    (melt_ptr_t) & meltcdat->dstr_104__HOOK_ALL_PASSES_START;
  meltcdat->dstr_104__HOOK_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_104__HOOK_ALL_PASSES_START.val,
				"HOOK_ALL_PASSES_START",
				sizeof (meltcdat->
					dstr_104__HOOK_ALL_PASSES_START.val) -
				1);
  meltcdat->dstr_104__HOOK_ALL_PASSES_START.val[21] = (char) 0;
  meltcdat->dstr_104__HOOK_ALL_PASSES_START.slen = 21;

  /*inimult dtup_105___HOOK_ALL_PASSES_START */
 /*_._VALTUP___V136*/ meltfptr[135] =
    (melt_ptr_t) & meltcdat->dtup_105___HOOK_ALL_PASSES_START;
  meltcdat->dtup_105___HOOK_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_105___HOOK_ALL_PASSES_START.nbval = 0;
  /*inimult dtup_106___HOOK_ALL_PASSES_START */
 /*_._VALTUP___V137*/ meltfptr[136] =
    (melt_ptr_t) & meltcdat->dtup_106___HOOK_ALL_PASSES_START;
  meltcdat->dtup_106___HOOK_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_106___HOOK_ALL_PASSES_START.nbval = 0;
  /*inirout drout_107__ENABLE_ALL_PASSES_START */
 /*_._VALROUT___V138*/ meltfptr[137] =
    (melt_ptr_t) & meltcdat->drout_107__ENABLE_ALL_PASSES_START;
  meltcdat->drout_107__ENABLE_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_107__ENABLE_ALL_PASSES_START.routdescr,
	   "ENABLE_ALL_PASSES_START @warmelt-hooks.melt:519",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_107__ENABLE_ALL_PASSES_START.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_107__ENABLE_ALL_PASSES_START,
			     meltrout_24_WARMELTmiHOOKS_ENABLE_ALL_PASSES_START);

  /*iniclos dclo_108__ENABLE_ALL_PASSES_START */
 /*_._VALCLO___V139*/ meltfptr[138] =
    (melt_ptr_t) & meltcdat->dclo_108__ENABLE_ALL_PASSES_START;
  meltcdat->dclo_108__ENABLE_ALL_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_108__ENABLE_ALL_PASSES_START.nbval = 0;

  /*inirout drout_109__REGISTER_ALL_PASSES_START_FIRST */
 /*_._VALROUT___V140*/ meltfptr[139] =
    (melt_ptr_t) & meltcdat->drout_109__REGISTER_ALL_PASSES_START_FIRST;
  meltcdat->drout_109__REGISTER_ALL_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_109__REGISTER_ALL_PASSES_START_FIRST.routdescr,
	   "REGISTER_ALL_PASSES_START_FIRST @warmelt-hooks.melt:532",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_109__REGISTER_ALL_PASSES_START_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_109__REGISTER_ALL_PASSES_START_FIRST,
			     meltrout_25_WARMELTmiHOOKS_REGISTER_ALL_PASSES_START_FIRST);

  /*iniclos dclo_110__REGISTER_ALL_PASSES_START_FIRST */
 /*_._VALCLO___V141*/ meltfptr[140] =
    (melt_ptr_t) & meltcdat->dclo_110__REGISTER_ALL_PASSES_START_FIRST;
  meltcdat->dclo_110__REGISTER_ALL_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_110__REGISTER_ALL_PASSES_START_FIRST.nbval = 0;

  /*inirout drout_111__REGISTER_ALL_PASSES_START_LAST */
 /*_._VALROUT___V142*/ meltfptr[141] =
    (melt_ptr_t) & meltcdat->drout_111__REGISTER_ALL_PASSES_START_LAST;
  meltcdat->drout_111__REGISTER_ALL_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_111__REGISTER_ALL_PASSES_START_LAST.routdescr,
	   "REGISTER_ALL_PASSES_START_LAST @warmelt-hooks.melt:555",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_111__REGISTER_ALL_PASSES_START_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_111__REGISTER_ALL_PASSES_START_LAST,
			     meltrout_26_WARMELTmiHOOKS_REGISTER_ALL_PASSES_START_LAST);

  /*iniclos dclo_112__REGISTER_ALL_PASSES_START_LAST */
 /*_._VALCLO___V143*/ meltfptr[142] =
    (melt_ptr_t) & meltcdat->dclo_112__REGISTER_ALL_PASSES_START_LAST;
  meltcdat->dclo_112__REGISTER_ALL_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_112__REGISTER_ALL_PASSES_START_LAST.nbval = 0;


/*iniobj dsym_113__ALL_PASSES_END_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V144*/ meltfptr[143])
/*_._VALDATA___V144*/ meltfptr[143] =
      (melt_ptr_t) & meltcdat->dsym_113__ALL_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_113__ALL_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_113__ALL_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_113__ALL_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_113__ALL_PASSES_END_DELAYED_QUEUE.obj_hash = 856751701;
  meltcdat->dsym_113__ALL_PASSES_END_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_114__ALL_PASSES_END_DELAYED_Q*/
 /*_._VALSTR___V145*/ meltfptr[144] =
    (melt_ptr_t) & meltcdat->dstr_114__ALL_PASSES_END_DELAYED_Q;
  meltcdat->dstr_114__ALL_PASSES_END_DELAYED_Q.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_114__ALL_PASSES_END_DELAYED_Q.
				val, "ALL_PASSES_END_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_114__ALL_PASSES_END_DELAYED_Q.
					val) - 1);
  meltcdat->dstr_114__ALL_PASSES_END_DELAYED_Q.val[28] = (char) 0;
  meltcdat->dstr_114__ALL_PASSES_END_DELAYED_Q.slen = 28;

  MELT_LOCATION ("warmelt-hooks.melt:595:/ iniobj");

/*iniobj dobj_115__ALL_PASSES_END_DELAYED_QUEUE*/
/*_._VALDATA___V146*/ meltfptr[145] =
    (melt_ptr_t) & meltcdat->dobj_115__ALL_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_115__ALL_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_115__ALL_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_115__ALL_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_115__ALL_PASSES_END_DELAYED_QUEUE.obj_hash = 641725606;
  meltcdat->dobj_115__ALL_PASSES_END_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_116__all_passes_end_delayed_q*/
 /*_._VALSTR___V147*/ meltfptr[146] =
    (melt_ptr_t) & meltcdat->dstr_116__all_passes_end_delayed_q;
  meltcdat->dstr_116__all_passes_end_delayed_q.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_116__all_passes_end_delayed_q.
				val, "all_passes_end_delayed_queue",
				sizeof (meltcdat->
					dstr_116__all_passes_end_delayed_q.
					val) - 1);
  meltcdat->dstr_116__all_passes_end_delayed_q.val[28] = (char) 0;
  meltcdat->dstr_116__all_passes_end_delayed_q.slen = 28;


/*inihook dhook__117__HOOK_ALL_PASSES_END */
  meltcdat->dhook__117__HOOK_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_ALL_PASSES_END data */
  meltcdat->dhook__117__HOOK_ALL_PASSES_END.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__117__HOOK_ALL_PASSES_END,
			  melthook_HOOK_ALL_PASSES_END);
  meltcdat->dhook__117__HOOK_ALL_PASSES_END.hookdata =
    /*_._VALDATA___V149*/ meltfptr[148];
  strncpy (meltcdat->dhook__117__HOOK_ALL_PASSES_END.hookname,
	   "HOOK_ALL_PASSES_END",
	   sizeof (meltcdat->dhook__117__HOOK_ALL_PASSES_END.hookname) - 1);
/*predefinedhook HOOK_ALL_PASSES_END for dhook__117__HOOK_ALL_PASSES_END*/
  if (!MELT_PREDEF (HOOK_ALL_PASSES_END))
    MELT_STORE_PREDEF (HOOK_ALL_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__117__HOOK_ALL_PASSES_END);

  /*_._VALHOOK___V148*/ meltfptr[147] =
  /*inihooklocvar HOOK_ALL_PASSES_END */
  (melt_ptr_t) & meltcdat->dhook__117__HOOK_ALL_PASSES_END;

  /*done inihook dhook__117__HOOK_ALL_PASSES_END */

  MELT_LOCATION ("warmelt-hooks.melt:602:/ iniobj");

/*iniobj dobj_118__*/
/*_._VALDATA___V149*/ meltfptr[148] = (melt_ptr_t) & meltcdat->dobj_118__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_118__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_118__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_118__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_118__.obj_hash = 756603586;
  meltcdat->dobj_118__.obj_len = 6;


/*inistring dstr_119__HOOK_ALL_PASSES_END*/
 /*_._VALSTR___V150*/ meltfptr[149] =
    (melt_ptr_t) & meltcdat->dstr_119__HOOK_ALL_PASSES_END;
  meltcdat->dstr_119__HOOK_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_119__HOOK_ALL_PASSES_END.val,
				"HOOK_ALL_PASSES_END",
				sizeof (meltcdat->
					dstr_119__HOOK_ALL_PASSES_END.val) -
				1);
  meltcdat->dstr_119__HOOK_ALL_PASSES_END.val[19] = (char) 0;
  meltcdat->dstr_119__HOOK_ALL_PASSES_END.slen = 19;

  /*inimult dtup_120___HOOK_ALL_PASSES_END */
 /*_._VALTUP___V151*/ meltfptr[150] =
    (melt_ptr_t) & meltcdat->dtup_120___HOOK_ALL_PASSES_END;
  meltcdat->dtup_120___HOOK_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_120___HOOK_ALL_PASSES_END.nbval = 0;
  /*inimult dtup_121___HOOK_ALL_PASSES_END */
 /*_._VALTUP___V152*/ meltfptr[151] =
    (melt_ptr_t) & meltcdat->dtup_121___HOOK_ALL_PASSES_END;
  meltcdat->dtup_121___HOOK_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_121___HOOK_ALL_PASSES_END.nbval = 0;
  /*inirout drout_122__ENABLE_ALL_PASSES_END */
 /*_._VALROUT___V153*/ meltfptr[152] =
    (melt_ptr_t) & meltcdat->drout_122__ENABLE_ALL_PASSES_END;
  meltcdat->drout_122__ENABLE_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_122__ENABLE_ALL_PASSES_END.routdescr,
	   "ENABLE_ALL_PASSES_END @warmelt-hooks.melt:642",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_122__ENABLE_ALL_PASSES_END.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_122__ENABLE_ALL_PASSES_END,
			     meltrout_28_WARMELTmiHOOKS_ENABLE_ALL_PASSES_END);

  /*iniclos dclo_123__ENABLE_ALL_PASSES_END */
 /*_._VALCLO___V154*/ meltfptr[153] =
    (melt_ptr_t) & meltcdat->dclo_123__ENABLE_ALL_PASSES_END;
  meltcdat->dclo_123__ENABLE_ALL_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_123__ENABLE_ALL_PASSES_END.nbval = 0;

  /*inirout drout_124__REGISTER_ALL_PASSES_END_FIRST */
 /*_._VALROUT___V155*/ meltfptr[154] =
    (melt_ptr_t) & meltcdat->drout_124__REGISTER_ALL_PASSES_END_FIRST;
  meltcdat->drout_124__REGISTER_ALL_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_124__REGISTER_ALL_PASSES_END_FIRST.routdescr,
	   "REGISTER_ALL_PASSES_END_FIRST @warmelt-hooks.melt:655",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_124__REGISTER_ALL_PASSES_END_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_124__REGISTER_ALL_PASSES_END_FIRST,
			     meltrout_29_WARMELTmiHOOKS_REGISTER_ALL_PASSES_END_FIRST);

  /*iniclos dclo_125__REGISTER_ALL_PASSES_END_FIRST */
 /*_._VALCLO___V156*/ meltfptr[155] =
    (melt_ptr_t) & meltcdat->dclo_125__REGISTER_ALL_PASSES_END_FIRST;
  meltcdat->dclo_125__REGISTER_ALL_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_125__REGISTER_ALL_PASSES_END_FIRST.nbval = 0;

  /*inirout drout_126__REGISTER_ALL_PASSES_END_LAST */
 /*_._VALROUT___V157*/ meltfptr[156] =
    (melt_ptr_t) & meltcdat->drout_126__REGISTER_ALL_PASSES_END_LAST;
  meltcdat->drout_126__REGISTER_ALL_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_126__REGISTER_ALL_PASSES_END_LAST.routdescr,
	   "REGISTER_ALL_PASSES_END_LAST @warmelt-hooks.melt:678",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_126__REGISTER_ALL_PASSES_END_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_126__REGISTER_ALL_PASSES_END_LAST,
			     meltrout_30_WARMELTmiHOOKS_REGISTER_ALL_PASSES_END_LAST);

  /*iniclos dclo_127__REGISTER_ALL_PASSES_END_LAST */
 /*_._VALCLO___V158*/ meltfptr[157] =
    (melt_ptr_t) & meltcdat->dclo_127__REGISTER_ALL_PASSES_END_LAST;
  meltcdat->dclo_127__REGISTER_ALL_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_127__REGISTER_ALL_PASSES_END_LAST.nbval = 0;


/*iniobj dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V159*/ meltfptr[158])
/*_._VALDATA___V159*/ meltfptr[158] =
      (melt_ptr_t) & meltcdat->dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE.obj_hash = 919668591;
  meltcdat->dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_129__ALL_IPA_PASSES_START_DEL*/
 /*_._VALSTR___V160*/ meltfptr[159] =
    (melt_ptr_t) & meltcdat->dstr_129__ALL_IPA_PASSES_START_DEL;
  meltcdat->dstr_129__ALL_IPA_PASSES_START_DEL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_129__ALL_IPA_PASSES_START_DEL.
				val, "ALL_IPA_PASSES_START_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_129__ALL_IPA_PASSES_START_DEL.
					val) - 1);
  meltcdat->dstr_129__ALL_IPA_PASSES_START_DEL.val[34] = (char) 0;
  meltcdat->dstr_129__ALL_IPA_PASSES_START_DEL.slen = 34;

  MELT_LOCATION ("warmelt-hooks.melt:709:/ iniobj");

/*iniobj dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE*/
/*_._VALDATA___V161*/ meltfptr[160] =
    (melt_ptr_t) & meltcdat->dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE.obj_hash = 595945230;
  meltcdat->dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_131__all_ipa_passes_start_del*/
 /*_._VALSTR___V162*/ meltfptr[161] =
    (melt_ptr_t) & meltcdat->dstr_131__all_ipa_passes_start_del;
  meltcdat->dstr_131__all_ipa_passes_start_del.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_131__all_ipa_passes_start_del.
				val, "all_ipa_passes_start_delayed_queue",
				sizeof (meltcdat->
					dstr_131__all_ipa_passes_start_del.
					val) - 1);
  meltcdat->dstr_131__all_ipa_passes_start_del.val[34] = (char) 0;
  meltcdat->dstr_131__all_ipa_passes_start_del.slen = 34;


/*inihook dhook__132__HOOK_ALL_IPA_PASSES_START */
  meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_ALL_IPA_PASSES_START data */
  meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START,
			  melthook_HOOK_ALL_IPA_PASSES_START);
  meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START.hookdata =
    /*_._VALDATA___V164*/ meltfptr[163];
  strncpy (meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START.hookname,
	   "HOOK_ALL_IPA_PASSES_START",
	   sizeof (meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START.hookname) -
	   1);
/*predefinedhook HOOK_ALL_IPA_PASSES_START for dhook__132__HOOK_ALL_IPA_PASSES_START*/
  if (!MELT_PREDEF (HOOK_ALL_IPA_PASSES_START))
    MELT_STORE_PREDEF (HOOK_ALL_IPA_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__132__HOOK_ALL_IPA_PASSES_START);

  /*_._VALHOOK___V163*/ meltfptr[162] =
  /*inihooklocvar HOOK_ALL_IPA_PASSES_START */
  (melt_ptr_t) & meltcdat->dhook__132__HOOK_ALL_IPA_PASSES_START;

  /*done inihook dhook__132__HOOK_ALL_IPA_PASSES_START */

  MELT_LOCATION ("warmelt-hooks.melt:723:/ iniobj");

/*iniobj dobj_133__*/
/*_._VALDATA___V164*/ meltfptr[163] = (melt_ptr_t) & meltcdat->dobj_133__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_133__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_133__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_133__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_133__.obj_hash = 471408132;
  meltcdat->dobj_133__.obj_len = 6;


/*inistring dstr_134__HOOK_ALL_IPA_PASSES_STAR*/
 /*_._VALSTR___V165*/ meltfptr[164] =
    (melt_ptr_t) & meltcdat->dstr_134__HOOK_ALL_IPA_PASSES_STAR;
  meltcdat->dstr_134__HOOK_ALL_IPA_PASSES_STAR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_134__HOOK_ALL_IPA_PASSES_STAR.
				val, "HOOK_ALL_IPA_PASSES_START",
				sizeof (meltcdat->
					dstr_134__HOOK_ALL_IPA_PASSES_STAR.
					val) - 1);
  meltcdat->dstr_134__HOOK_ALL_IPA_PASSES_STAR.val[25] = (char) 0;
  meltcdat->dstr_134__HOOK_ALL_IPA_PASSES_STAR.slen = 25;

  /*inimult dtup_135___HOOK_ALL_IPA_PASSES_START */
 /*_._VALTUP___V166*/ meltfptr[165] =
    (melt_ptr_t) & meltcdat->dtup_135___HOOK_ALL_IPA_PASSES_START;
  meltcdat->dtup_135___HOOK_ALL_IPA_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_135___HOOK_ALL_IPA_PASSES_START.nbval = 0;
  /*inimult dtup_136___HOOK_ALL_IPA_PASSES_START */
 /*_._VALTUP___V167*/ meltfptr[166] =
    (melt_ptr_t) & meltcdat->dtup_136___HOOK_ALL_IPA_PASSES_START;
  meltcdat->dtup_136___HOOK_ALL_IPA_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_136___HOOK_ALL_IPA_PASSES_START.nbval = 0;
  /*inirout drout_137__ENABLE_ALL_IPA_PASSES_START */
 /*_._VALROUT___V168*/ meltfptr[167] =
    (melt_ptr_t) & meltcdat->drout_137__ENABLE_ALL_IPA_PASSES_START;
  meltcdat->drout_137__ENABLE_ALL_IPA_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_137__ENABLE_ALL_IPA_PASSES_START.routdescr,
	   "ENABLE_ALL_IPA_PASSES_START @warmelt-hooks.melt:764",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_137__ENABLE_ALL_IPA_PASSES_START.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_137__ENABLE_ALL_IPA_PASSES_START,
			     meltrout_32_WARMELTmiHOOKS_ENABLE_ALL_IPA_PASSES_START);

  /*iniclos dclo_138__ENABLE_ALL_IPA_PASSES_START */
 /*_._VALCLO___V169*/ meltfptr[168] =
    (melt_ptr_t) & meltcdat->dclo_138__ENABLE_ALL_IPA_PASSES_START;
  meltcdat->dclo_138__ENABLE_ALL_IPA_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_138__ENABLE_ALL_IPA_PASSES_START.nbval = 0;

  /*inirout drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST */
 /*_._VALROUT___V170*/ meltfptr[169] =
    (melt_ptr_t) & meltcdat->drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST;
  meltcdat->drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST.routdescr,
	   "REGISTER_ALL_IPA_PASSES_START_FIRST @warmelt-hooks.melt:777",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST,
			     meltrout_33_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_START_FIRST);

  /*iniclos dclo_140__REGISTER_ALL_IPA_PASSES_START_FIRST */
 /*_._VALCLO___V171*/ meltfptr[170] =
    (melt_ptr_t) & meltcdat->dclo_140__REGISTER_ALL_IPA_PASSES_START_FIRST;
  meltcdat->dclo_140__REGISTER_ALL_IPA_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_140__REGISTER_ALL_IPA_PASSES_START_FIRST.nbval = 0;

  /*inirout drout_141__REGISTER_ALL_IPA_PASSES_START_LAST */
 /*_._VALROUT___V172*/ meltfptr[171] =
    (melt_ptr_t) & meltcdat->drout_141__REGISTER_ALL_IPA_PASSES_START_LAST;
  meltcdat->drout_141__REGISTER_ALL_IPA_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_141__REGISTER_ALL_IPA_PASSES_START_LAST.routdescr,
	   "REGISTER_ALL_IPA_PASSES_START_LAST @warmelt-hooks.melt:800",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_141__REGISTER_ALL_IPA_PASSES_START_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_141__REGISTER_ALL_IPA_PASSES_START_LAST,
			     meltrout_34_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_START_LAST);

  /*iniclos dclo_142__REGISTER_ALL_IPA_PASSES_START_LAST */
 /*_._VALCLO___V173*/ meltfptr[172] =
    (melt_ptr_t) & meltcdat->dclo_142__REGISTER_ALL_IPA_PASSES_START_LAST;
  meltcdat->dclo_142__REGISTER_ALL_IPA_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_142__REGISTER_ALL_IPA_PASSES_START_LAST.nbval = 0;


/*iniobj dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V174*/ meltfptr[173])
/*_._VALDATA___V174*/ meltfptr[173] =
      (melt_ptr_t) & meltcdat->dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE.obj_hash = 887070733;
  meltcdat->dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_144__ALL_IPA_PASSES_END_DELAY*/
 /*_._VALSTR___V175*/ meltfptr[174] =
    (melt_ptr_t) & meltcdat->dstr_144__ALL_IPA_PASSES_END_DELAY;
  meltcdat->dstr_144__ALL_IPA_PASSES_END_DELAY.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_144__ALL_IPA_PASSES_END_DELAY.
				val, "ALL_IPA_PASSES_END_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_144__ALL_IPA_PASSES_END_DELAY.
					val) - 1);
  meltcdat->dstr_144__ALL_IPA_PASSES_END_DELAY.val[32] = (char) 0;
  meltcdat->dstr_144__ALL_IPA_PASSES_END_DELAY.slen = 32;

  MELT_LOCATION ("warmelt-hooks.melt:840:/ iniobj");

/*iniobj dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE*/
/*_._VALDATA___V176*/ meltfptr[175] =
    (melt_ptr_t) & meltcdat->dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE.obj_hash = 961529999;
  meltcdat->dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_146__all_ipa_passes_end_delay*/
 /*_._VALSTR___V177*/ meltfptr[176] =
    (melt_ptr_t) & meltcdat->dstr_146__all_ipa_passes_end_delay;
  meltcdat->dstr_146__all_ipa_passes_end_delay.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_146__all_ipa_passes_end_delay.
				val, "all_ipa_passes_end_delayed_queue",
				sizeof (meltcdat->
					dstr_146__all_ipa_passes_end_delay.
					val) - 1);
  meltcdat->dstr_146__all_ipa_passes_end_delay.val[32] = (char) 0;
  meltcdat->dstr_146__all_ipa_passes_end_delay.slen = 32;


/*inihook dhook__147__HOOK_ALL_IPA_PASSES_END */
  meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_ALL_IPA_PASSES_END data */
  meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END,
			  melthook_HOOK_ALL_IPA_PASSES_END);
  meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END.hookdata =
    /*_._VALDATA___V179*/ meltfptr[178];
  strncpy (meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END.hookname,
	   "HOOK_ALL_IPA_PASSES_END",
	   sizeof (meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END.hookname) -
	   1);
/*predefinedhook HOOK_ALL_IPA_PASSES_END for dhook__147__HOOK_ALL_IPA_PASSES_END*/
  if (!MELT_PREDEF (HOOK_ALL_IPA_PASSES_END))
    MELT_STORE_PREDEF (HOOK_ALL_IPA_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__147__HOOK_ALL_IPA_PASSES_END);

  /*_._VALHOOK___V178*/ meltfptr[177] =
  /*inihooklocvar HOOK_ALL_IPA_PASSES_END */
  (melt_ptr_t) & meltcdat->dhook__147__HOOK_ALL_IPA_PASSES_END;

  /*done inihook dhook__147__HOOK_ALL_IPA_PASSES_END */

  MELT_LOCATION ("warmelt-hooks.melt:847:/ iniobj");

/*iniobj dobj_148__*/
/*_._VALDATA___V179*/ meltfptr[178] = (melt_ptr_t) & meltcdat->dobj_148__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_148__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_148__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_148__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_148__.obj_hash = 422938304;
  meltcdat->dobj_148__.obj_len = 6;


/*inistring dstr_149__HOOK_ALL_IPA_PASSES_END*/
 /*_._VALSTR___V180*/ meltfptr[179] =
    (melt_ptr_t) & meltcdat->dstr_149__HOOK_ALL_IPA_PASSES_END;
  meltcdat->dstr_149__HOOK_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_149__HOOK_ALL_IPA_PASSES_END.
				val, "HOOK_ALL_IPA_PASSES_END",
				sizeof (meltcdat->
					dstr_149__HOOK_ALL_IPA_PASSES_END.
					val) - 1);
  meltcdat->dstr_149__HOOK_ALL_IPA_PASSES_END.val[23] = (char) 0;
  meltcdat->dstr_149__HOOK_ALL_IPA_PASSES_END.slen = 23;

  /*inimult dtup_150___HOOK_ALL_IPA_PASSES_END */
 /*_._VALTUP___V181*/ meltfptr[180] =
    (melt_ptr_t) & meltcdat->dtup_150___HOOK_ALL_IPA_PASSES_END;
  meltcdat->dtup_150___HOOK_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_150___HOOK_ALL_IPA_PASSES_END.nbval = 0;
  /*inimult dtup_151___HOOK_ALL_IPA_PASSES_END */
 /*_._VALTUP___V182*/ meltfptr[181] =
    (melt_ptr_t) & meltcdat->dtup_151___HOOK_ALL_IPA_PASSES_END;
  meltcdat->dtup_151___HOOK_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_151___HOOK_ALL_IPA_PASSES_END.nbval = 0;
  /*inirout drout_152__ENABLE_ALL_IPA_PASSES_END */
 /*_._VALROUT___V183*/ meltfptr[182] =
    (melt_ptr_t) & meltcdat->drout_152__ENABLE_ALL_IPA_PASSES_END;
  meltcdat->drout_152__ENABLE_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_152__ENABLE_ALL_IPA_PASSES_END.routdescr,
	   "ENABLE_ALL_IPA_PASSES_END @warmelt-hooks.melt:887",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_152__ENABLE_ALL_IPA_PASSES_END.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_152__ENABLE_ALL_IPA_PASSES_END,
			     meltrout_36_WARMELTmiHOOKS_ENABLE_ALL_IPA_PASSES_END);

  /*iniclos dclo_153__ENABLE_ALL_IPA_PASSES_END */
 /*_._VALCLO___V184*/ meltfptr[183] =
    (melt_ptr_t) & meltcdat->dclo_153__ENABLE_ALL_IPA_PASSES_END;
  meltcdat->dclo_153__ENABLE_ALL_IPA_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_153__ENABLE_ALL_IPA_PASSES_END.nbval = 0;

  /*inirout drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST */
 /*_._VALROUT___V185*/ meltfptr[184] =
    (melt_ptr_t) & meltcdat->drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST;
  meltcdat->drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST.routdescr,
	   "REGISTER_ALL_IPA_PASSES_END_FIRST @warmelt-hooks.melt:900",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST,
			     meltrout_37_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_END_FIRST);

  /*iniclos dclo_155__REGISTER_ALL_IPA_PASSES_END_FIRST */
 /*_._VALCLO___V186*/ meltfptr[185] =
    (melt_ptr_t) & meltcdat->dclo_155__REGISTER_ALL_IPA_PASSES_END_FIRST;
  meltcdat->dclo_155__REGISTER_ALL_IPA_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_155__REGISTER_ALL_IPA_PASSES_END_FIRST.nbval = 0;

  /*inirout drout_156__REGISTER_ALL_IPA_PASSES_END_LAST */
 /*_._VALROUT___V187*/ meltfptr[186] =
    (melt_ptr_t) & meltcdat->drout_156__REGISTER_ALL_IPA_PASSES_END_LAST;
  meltcdat->drout_156__REGISTER_ALL_IPA_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_156__REGISTER_ALL_IPA_PASSES_END_LAST.routdescr,
	   "REGISTER_ALL_IPA_PASSES_END_LAST @warmelt-hooks.melt:923",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_156__REGISTER_ALL_IPA_PASSES_END_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_156__REGISTER_ALL_IPA_PASSES_END_LAST,
			     meltrout_38_WARMELTmiHOOKS_REGISTER_ALL_IPA_PASSES_END_LAST);

  /*iniclos dclo_157__REGISTER_ALL_IPA_PASSES_END_LAST */
 /*_._VALCLO___V188*/ meltfptr[187] =
    (melt_ptr_t) & meltcdat->dclo_157__REGISTER_ALL_IPA_PASSES_END_LAST;
  meltcdat->dclo_157__REGISTER_ALL_IPA_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_157__REGISTER_ALL_IPA_PASSES_END_LAST.nbval = 0;


/*iniobj dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V189*/ meltfptr[188])
/*_._VALDATA___V189*/ meltfptr[188] =
      (melt_ptr_t) & meltcdat->
      dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.obj_hash =
    893744541;
  meltcdat->dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_159__EARLY_GIMPLE_PASSES_STAR*/
 /*_._VALSTR___V190*/ meltfptr[189] =
    (melt_ptr_t) & meltcdat->dstr_159__EARLY_GIMPLE_PASSES_STAR;
  meltcdat->dstr_159__EARLY_GIMPLE_PASSES_STAR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_159__EARLY_GIMPLE_PASSES_STAR.
				val,
				"EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_159__EARLY_GIMPLE_PASSES_STAR.
					val) - 1);
  meltcdat->dstr_159__EARLY_GIMPLE_PASSES_STAR.val[39] = (char) 0;
  meltcdat->dstr_159__EARLY_GIMPLE_PASSES_STAR.slen = 39;

  MELT_LOCATION ("warmelt-hooks.melt:955:/ iniobj");

/*iniobj dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE*/
/*_._VALDATA___V191*/ meltfptr[190] =
    (melt_ptr_t) & meltcdat->
    dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.obj_hash =
    165710812;
  meltcdat->dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_161__early_gimple_passes_star*/
 /*_._VALSTR___V192*/ meltfptr[191] =
    (melt_ptr_t) & meltcdat->dstr_161__early_gimple_passes_star;
  meltcdat->dstr_161__early_gimple_passes_star.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_161__early_gimple_passes_star.
				val,
				"early_gimple_passes_start_delayed_queue",
				sizeof (meltcdat->
					dstr_161__early_gimple_passes_star.
					val) - 1);
  meltcdat->dstr_161__early_gimple_passes_star.val[39] = (char) 0;
  meltcdat->dstr_161__early_gimple_passes_star.slen = 39;


/*inihook dhook__162__HOOK_EARLY_GIMPLE_PASSES_START */
  meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_EARLY_GIMPLE_PASSES_START data */
  meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->
			  dhook__162__HOOK_EARLY_GIMPLE_PASSES_START,
			  melthook_HOOK_EARLY_GIMPLE_PASSES_START);
  meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START.hookdata =
    /*_._VALDATA___V194*/ meltfptr[193];
  strncpy (meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START.hookname,
	   "HOOK_EARLY_GIMPLE_PASSES_START",
	   sizeof (meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START.
		   hookname) - 1);
/*predefinedhook HOOK_EARLY_GIMPLE_PASSES_START for dhook__162__HOOK_EARLY_GIMPLE_PASSES_START*/
  if (!MELT_PREDEF (HOOK_EARLY_GIMPLE_PASSES_START))
    MELT_STORE_PREDEF (HOOK_EARLY_GIMPLE_PASSES_START,
		       (melt_ptr_t) & meltcdat->
		       dhook__162__HOOK_EARLY_GIMPLE_PASSES_START);

  /*_._VALHOOK___V193*/ meltfptr[192] =
  /*inihooklocvar HOOK_EARLY_GIMPLE_PASSES_START */
  (melt_ptr_t) & meltcdat->dhook__162__HOOK_EARLY_GIMPLE_PASSES_START;

  /*done inihook dhook__162__HOOK_EARLY_GIMPLE_PASSES_START */

  MELT_LOCATION ("warmelt-hooks.melt:969:/ iniobj");

/*iniobj dobj_163__*/
/*_._VALDATA___V194*/ meltfptr[193] = (melt_ptr_t) & meltcdat->dobj_163__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_163__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_163__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_163__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_163__.obj_hash = 976236416;
  meltcdat->dobj_163__.obj_len = 6;


/*inistring dstr_164__HOOK_EARLY_GIMPLE_PASSES*/
 /*_._VALSTR___V195*/ meltfptr[194] =
    (melt_ptr_t) & meltcdat->dstr_164__HOOK_EARLY_GIMPLE_PASSES;
  meltcdat->dstr_164__HOOK_EARLY_GIMPLE_PASSES.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_164__HOOK_EARLY_GIMPLE_PASSES.
				val, "HOOK_EARLY_GIMPLE_PASSES_START",
				sizeof (meltcdat->
					dstr_164__HOOK_EARLY_GIMPLE_PASSES.
					val) - 1);
  meltcdat->dstr_164__HOOK_EARLY_GIMPLE_PASSES.val[30] = (char) 0;
  meltcdat->dstr_164__HOOK_EARLY_GIMPLE_PASSES.slen = 30;

  /*inimult dtup_165___HOOK_EARLY_GIMPLE_PASSES_START */
 /*_._VALTUP___V196*/ meltfptr[195] =
    (melt_ptr_t) & meltcdat->dtup_165___HOOK_EARLY_GIMPLE_PASSES_START;
  meltcdat->dtup_165___HOOK_EARLY_GIMPLE_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_165___HOOK_EARLY_GIMPLE_PASSES_START.nbval = 0;
  /*inimult dtup_166___HOOK_EARLY_GIMPLE_PASSES_START */
 /*_._VALTUP___V197*/ meltfptr[196] =
    (melt_ptr_t) & meltcdat->dtup_166___HOOK_EARLY_GIMPLE_PASSES_START;
  meltcdat->dtup_166___HOOK_EARLY_GIMPLE_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_166___HOOK_EARLY_GIMPLE_PASSES_START.nbval = 0;
  /*inirout drout_167__ENABLE_EARLY_GIMPLE_PASSES_START */
 /*_._VALROUT___V198*/ meltfptr[197] =
    (melt_ptr_t) & meltcdat->drout_167__ENABLE_EARLY_GIMPLE_PASSES_START;
  meltcdat->drout_167__ENABLE_EARLY_GIMPLE_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_167__ENABLE_EARLY_GIMPLE_PASSES_START.routdescr,
	   "ENABLE_EARLY_GIMPLE_PASSES_START @warmelt-hooks.melt:1010",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_167__ENABLE_EARLY_GIMPLE_PASSES_START.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_167__ENABLE_EARLY_GIMPLE_PASSES_START,
			     meltrout_40_WARMELTmiHOOKS_ENABLE_EARLY_GIMPLE_PASSES_START);

  /*iniclos dclo_168__ENABLE_EARLY_GIMPLE_PASSES_START */
 /*_._VALCLO___V199*/ meltfptr[198] =
    (melt_ptr_t) & meltcdat->dclo_168__ENABLE_EARLY_GIMPLE_PASSES_START;
  meltcdat->dclo_168__ENABLE_EARLY_GIMPLE_PASSES_START.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_168__ENABLE_EARLY_GIMPLE_PASSES_START.nbval = 0;

  /*inirout drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */
 /*_._VALROUT___V200*/ meltfptr[199] =
    (melt_ptr_t) & meltcdat->
    drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
  meltcdat->drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.
	   routdescr,
	   "REGISTER_EARLY_GIMPLE_PASSES_START_FIRST @warmelt-hooks.melt:1023",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST,
			     meltrout_41_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_START_FIRST);

  /*iniclos dclo_170__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */
 /*_._VALCLO___V201*/ meltfptr[200] =
    (melt_ptr_t) & meltcdat->
    dclo_170__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
  meltcdat->dclo_170__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_170__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.nbval = 0;

  /*inirout drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST */
 /*_._VALROUT___V202*/ meltfptr[201] =
    (melt_ptr_t) & meltcdat->
    drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
  meltcdat->drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.
	   routdescr,
	   "REGISTER_EARLY_GIMPLE_PASSES_START_LAST @warmelt-hooks.melt:1046",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST,
			     meltrout_42_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_START_LAST);

  /*iniclos dclo_172__REGISTER_EARLY_GIMPLE_PASSES_START_LAST */
 /*_._VALCLO___V203*/ meltfptr[202] =
    (melt_ptr_t) & meltcdat->
    dclo_172__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
  meltcdat->dclo_172__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_172__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.nbval = 0;


/*iniobj dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V204*/ meltfptr[203])
/*_._VALDATA___V204*/ meltfptr[203] =
      (melt_ptr_t) & meltcdat->
      dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.obj_hash =
    232373921;
  meltcdat->dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_174__EARLY_GIMPLE_PASSES_END_*/
 /*_._VALSTR___V205*/ meltfptr[204] =
    (melt_ptr_t) & meltcdat->dstr_174__EARLY_GIMPLE_PASSES_END_;
  meltcdat->dstr_174__EARLY_GIMPLE_PASSES_END_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_174__EARLY_GIMPLE_PASSES_END_.
				val, "EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_174__EARLY_GIMPLE_PASSES_END_.
					val) - 1);
  meltcdat->dstr_174__EARLY_GIMPLE_PASSES_END_.val[37] = (char) 0;
  meltcdat->dstr_174__EARLY_GIMPLE_PASSES_END_.slen = 37;

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ iniobj");

/*iniobj dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE*/
/*_._VALDATA___V206*/ meltfptr[205] =
    (melt_ptr_t) & meltcdat->dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.obj_hash =
    960330263;
  meltcdat->dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_176__early_gimple_passes_end_*/
 /*_._VALSTR___V207*/ meltfptr[206] =
    (melt_ptr_t) & meltcdat->dstr_176__early_gimple_passes_end_;
  meltcdat->dstr_176__early_gimple_passes_end_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_176__early_gimple_passes_end_.
				val, "early_gimple_passes_end_delayed_queue",
				sizeof (meltcdat->
					dstr_176__early_gimple_passes_end_.
					val) - 1);
  meltcdat->dstr_176__early_gimple_passes_end_.val[37] = (char) 0;
  meltcdat->dstr_176__early_gimple_passes_end_.slen = 37;


/*inihook dhook__177__HOOK_EARLY_GIMPLE_PASSES_END */
  meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_EARLY_GIMPLE_PASSES_END data */
  meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END,
			  melthook_HOOK_EARLY_GIMPLE_PASSES_END);
  meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END.hookdata =
    /*_._VALDATA___V209*/ meltfptr[208];
  strncpy (meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END.hookname,
	   "HOOK_EARLY_GIMPLE_PASSES_END",
	   sizeof (meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END.
		   hookname) - 1);
/*predefinedhook HOOK_EARLY_GIMPLE_PASSES_END for dhook__177__HOOK_EARLY_GIMPLE_PASSES_END*/
  if (!MELT_PREDEF (HOOK_EARLY_GIMPLE_PASSES_END))
    MELT_STORE_PREDEF (HOOK_EARLY_GIMPLE_PASSES_END,
		       (melt_ptr_t) & meltcdat->
		       dhook__177__HOOK_EARLY_GIMPLE_PASSES_END);

  /*_._VALHOOK___V208*/ meltfptr[207] =
  /*inihooklocvar HOOK_EARLY_GIMPLE_PASSES_END */
  (melt_ptr_t) & meltcdat->dhook__177__HOOK_EARLY_GIMPLE_PASSES_END;

  /*done inihook dhook__177__HOOK_EARLY_GIMPLE_PASSES_END */

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ iniobj");

/*iniobj dobj_178__*/
/*_._VALDATA___V209*/ meltfptr[208] = (melt_ptr_t) & meltcdat->dobj_178__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_178__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_178__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_178__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_178__.obj_hash = 943272416;
  meltcdat->dobj_178__.obj_len = 6;


/*inistring dstr_179__HOOK_EARLY_GIMPLE_PASSES*/
 /*_._VALSTR___V210*/ meltfptr[209] =
    (melt_ptr_t) & meltcdat->dstr_179__HOOK_EARLY_GIMPLE_PASSES;
  meltcdat->dstr_179__HOOK_EARLY_GIMPLE_PASSES.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_179__HOOK_EARLY_GIMPLE_PASSES.
				val, "HOOK_EARLY_GIMPLE_PASSES_END",
				sizeof (meltcdat->
					dstr_179__HOOK_EARLY_GIMPLE_PASSES.
					val) - 1);
  meltcdat->dstr_179__HOOK_EARLY_GIMPLE_PASSES.val[28] = (char) 0;
  meltcdat->dstr_179__HOOK_EARLY_GIMPLE_PASSES.slen = 28;

  /*inimult dtup_180___HOOK_EARLY_GIMPLE_PASSES_END */
 /*_._VALTUP___V211*/ meltfptr[210] =
    (melt_ptr_t) & meltcdat->dtup_180___HOOK_EARLY_GIMPLE_PASSES_END;
  meltcdat->dtup_180___HOOK_EARLY_GIMPLE_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_180___HOOK_EARLY_GIMPLE_PASSES_END.nbval = 0;
  /*inimult dtup_181___HOOK_EARLY_GIMPLE_PASSES_END */
 /*_._VALTUP___V212*/ meltfptr[211] =
    (melt_ptr_t) & meltcdat->dtup_181___HOOK_EARLY_GIMPLE_PASSES_END;
  meltcdat->dtup_181___HOOK_EARLY_GIMPLE_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_181___HOOK_EARLY_GIMPLE_PASSES_END.nbval = 0;
  /*inirout drout_182__ENABLE_EARLY_GIMPLE_PASSES_END */
 /*_._VALROUT___V213*/ meltfptr[212] =
    (melt_ptr_t) & meltcdat->drout_182__ENABLE_EARLY_GIMPLE_PASSES_END;
  meltcdat->drout_182__ENABLE_EARLY_GIMPLE_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_182__ENABLE_EARLY_GIMPLE_PASSES_END.routdescr,
	   "ENABLE_EARLY_GIMPLE_PASSES_END @warmelt-hooks.melt:1133",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_182__ENABLE_EARLY_GIMPLE_PASSES_END.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_182__ENABLE_EARLY_GIMPLE_PASSES_END,
			     meltrout_44_WARMELTmiHOOKS_ENABLE_EARLY_GIMPLE_PASSES_END);

  /*iniclos dclo_183__ENABLE_EARLY_GIMPLE_PASSES_END */
 /*_._VALCLO___V214*/ meltfptr[213] =
    (melt_ptr_t) & meltcdat->dclo_183__ENABLE_EARLY_GIMPLE_PASSES_END;
  meltcdat->dclo_183__ENABLE_EARLY_GIMPLE_PASSES_END.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_183__ENABLE_EARLY_GIMPLE_PASSES_END.nbval = 0;

  /*inirout drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */
 /*_._VALROUT___V215*/ meltfptr[214] =
    (melt_ptr_t) & meltcdat->
    drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
  meltcdat->drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.
	   routdescr,
	   "REGISTER_EARLY_GIMPLE_PASSES_END_FIRST @warmelt-hooks.melt:1146",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST,
			     meltrout_45_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_END_FIRST);

  /*iniclos dclo_185__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */
 /*_._VALCLO___V216*/ meltfptr[215] =
    (melt_ptr_t) & meltcdat->dclo_185__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
  meltcdat->dclo_185__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_185__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.nbval = 0;

  /*inirout drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST */
 /*_._VALROUT___V217*/ meltfptr[216] =
    (melt_ptr_t) & meltcdat->drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
  meltcdat->drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.
	   routdescr,
	   "REGISTER_EARLY_GIMPLE_PASSES_END_LAST @warmelt-hooks.melt:1169",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST,
			     meltrout_46_WARMELTmiHOOKS_REGISTER_EARLY_GIMPLE_PASSES_END_LAST);

  /*iniclos dclo_187__REGISTER_EARLY_GIMPLE_PASSES_END_LAST */
 /*_._VALCLO___V218*/ meltfptr[217] =
    (melt_ptr_t) & meltcdat->dclo_187__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
  meltcdat->dclo_187__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_187__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.nbval = 0;


/*iniobj dsym_188__PREGENERICIZE_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V219*/ meltfptr[218])
/*_._VALDATA___V219*/ meltfptr[218] =
      (melt_ptr_t) & meltcdat->dsym_188__PREGENERICIZE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_188__PREGENERICIZE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_188__PREGENERICIZE_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_188__PREGENERICIZE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_188__PREGENERICIZE_DELAYED_QUEUE.obj_hash = 975490957;
  meltcdat->dsym_188__PREGENERICIZE_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_189__PREGENERICIZE_DELAYED_QU*/
 /*_._VALSTR___V220*/ meltfptr[219] =
    (melt_ptr_t) & meltcdat->dstr_189__PREGENERICIZE_DELAYED_QU;
  meltcdat->dstr_189__PREGENERICIZE_DELAYED_QU.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_189__PREGENERICIZE_DELAYED_QU.
				val, "PREGENERICIZE_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_189__PREGENERICIZE_DELAYED_QU.
					val) - 1);
  meltcdat->dstr_189__PREGENERICIZE_DELAYED_QU.val[27] = (char) 0;
  meltcdat->dstr_189__PREGENERICIZE_DELAYED_QU.slen = 27;

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ iniobj");

/*iniobj dobj_190__PREGENERICIZE_DELAYED_QUEUE*/
/*_._VALDATA___V221*/ meltfptr[220] =
    (melt_ptr_t) & meltcdat->dobj_190__PREGENERICIZE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_190__PREGENERICIZE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_190__PREGENERICIZE_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_190__PREGENERICIZE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_190__PREGENERICIZE_DELAYED_QUEUE.obj_hash = 831311114;
  meltcdat->dobj_190__PREGENERICIZE_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_191__pregenericize_delayed_qu*/
 /*_._VALSTR___V222*/ meltfptr[221] =
    (melt_ptr_t) & meltcdat->dstr_191__pregenericize_delayed_qu;
  meltcdat->dstr_191__pregenericize_delayed_qu.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_191__pregenericize_delayed_qu.
				val, "pregenericize_delayed_queue",
				sizeof (meltcdat->
					dstr_191__pregenericize_delayed_qu.
					val) - 1);
  meltcdat->dstr_191__pregenericize_delayed_qu.val[27] = (char) 0;
  meltcdat->dstr_191__pregenericize_delayed_qu.slen = 27;

  /*inirout drout_192__ENABLE_PRE_GENERICIZE */
 /*_._VALROUT___V223*/ meltfptr[222] =
    (melt_ptr_t) & meltcdat->drout_192__ENABLE_PRE_GENERICIZE;
  meltcdat->drout_192__ENABLE_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_192__ENABLE_PRE_GENERICIZE.routdescr,
	   "ENABLE_PRE_GENERICIZE @warmelt-hooks.melt:1229",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_192__ENABLE_PRE_GENERICIZE.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_192__ENABLE_PRE_GENERICIZE,
			     meltrout_47_WARMELTmiHOOKS_ENABLE_PRE_GENERICIZE);

  /*iniclos dclo_193__ENABLE_PRE_GENERICIZE */
 /*_._VALCLO___V224*/ meltfptr[223] =
    (melt_ptr_t) & meltcdat->dclo_193__ENABLE_PRE_GENERICIZE;
  meltcdat->dclo_193__ENABLE_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_193__ENABLE_PRE_GENERICIZE.nbval = 0;


/*inihook dhook__194__HOOK_PRE_GENERICIZE */
  meltcdat->dhook__194__HOOK_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_PRE_GENERICIZE data */
  meltcdat->dhook__194__HOOK_PRE_GENERICIZE.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__194__HOOK_PRE_GENERICIZE,
			  melthook_HOOK_PRE_GENERICIZE);
  meltcdat->dhook__194__HOOK_PRE_GENERICIZE.hookdata =
    /*_._VALDATA___V226*/ meltfptr[225];
  strncpy (meltcdat->dhook__194__HOOK_PRE_GENERICIZE.hookname,
	   "HOOK_PRE_GENERICIZE",
	   sizeof (meltcdat->dhook__194__HOOK_PRE_GENERICIZE.hookname) - 1);
/*predefinedhook HOOK_PRE_GENERICIZE for dhook__194__HOOK_PRE_GENERICIZE*/
  if (!MELT_PREDEF (HOOK_PRE_GENERICIZE))
    MELT_STORE_PREDEF (HOOK_PRE_GENERICIZE,
		       (melt_ptr_t) & meltcdat->
		       dhook__194__HOOK_PRE_GENERICIZE);

  /*_._VALHOOK___V225*/ meltfptr[224] =
  /*inihooklocvar HOOK_PRE_GENERICIZE */
  (melt_ptr_t) & meltcdat->dhook__194__HOOK_PRE_GENERICIZE;

  /*done inihook dhook__194__HOOK_PRE_GENERICIZE */

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ iniobj");

/*iniobj dobj_195__*/
/*_._VALDATA___V226*/ meltfptr[225] = (melt_ptr_t) & meltcdat->dobj_195__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_195__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_195__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_195__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_195__.obj_hash = 179387364;
  meltcdat->dobj_195__.obj_len = 6;


/*inistring dstr_196__HOOK_PRE_GENERICIZE*/
 /*_._VALSTR___V227*/ meltfptr[226] =
    (melt_ptr_t) & meltcdat->dstr_196__HOOK_PRE_GENERICIZE;
  meltcdat->dstr_196__HOOK_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_196__HOOK_PRE_GENERICIZE.val,
				"HOOK_PRE_GENERICIZE",
				sizeof (meltcdat->
					dstr_196__HOOK_PRE_GENERICIZE.val) -
				1);
  meltcdat->dstr_196__HOOK_PRE_GENERICIZE.val[19] = (char) 0;
  meltcdat->dstr_196__HOOK_PRE_GENERICIZE.slen = 19;


/*iniobj dsym_197__TFNDECL*/
  /*uniqueobj*/ if (! /*_._VALDATA___V229*/ meltfptr[228])
/*_._VALDATA___V229*/ meltfptr[228] =
      (melt_ptr_t) & meltcdat->dsym_197__TFNDECL;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_197__TFNDECL",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_197__TFNDECL",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_197__TFNDECL.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_197__TFNDECL.obj_hash = 4800269;
  meltcdat->dsym_197__TFNDECL.obj_len = 3;


/*inistring dstr_198__TFNDECL*/
 /*_._VALSTR___V230*/ meltfptr[229] =
    (melt_ptr_t) & meltcdat->dstr_198__TFNDECL;
  meltcdat->dstr_198__TFNDECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_198__TFNDECL.val, "TFNDECL",
				sizeof (meltcdat->dstr_198__TFNDECL.val) - 1);
  meltcdat->dstr_198__TFNDECL.val[7] = (char) 0;
  meltcdat->dstr_198__TFNDECL.slen = 7;

  /*^iniobj */

/*iniobj dobj_199*/
/*_._VALDATA___V228*/ meltfptr[227] = (melt_ptr_t) & meltcdat->dobj_199;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_199",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_199",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_199.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_199.obj_num = 0;
  meltcdat->dobj_199.obj_hash = 900691537;
  meltcdat->dobj_199.obj_len = 2;

  /*inimult dtup_200___HOOK_PRE_GENERICIZE */
 /*_._VALTUP___V231*/ meltfptr[230] =
    (melt_ptr_t) & meltcdat->dtup_200___HOOK_PRE_GENERICIZE;
  meltcdat->dtup_200___HOOK_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_200___HOOK_PRE_GENERICIZE.nbval = 1;
  /*inimult dtup_201___HOOK_PRE_GENERICIZE */
 /*_._VALTUP___V232*/ meltfptr[231] =
    (melt_ptr_t) & meltcdat->dtup_201___HOOK_PRE_GENERICIZE;
  meltcdat->dtup_201___HOOK_PRE_GENERICIZE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_201___HOOK_PRE_GENERICIZE.nbval = 0;
  /*inirout drout_202__REGISTER_PRE_GENERICIZE_FIRST */
 /*_._VALROUT___V233*/ meltfptr[232] =
    (melt_ptr_t) & meltcdat->drout_202__REGISTER_PRE_GENERICIZE_FIRST;
  meltcdat->drout_202__REGISTER_PRE_GENERICIZE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_202__REGISTER_PRE_GENERICIZE_FIRST.routdescr,
	   "REGISTER_PRE_GENERICIZE_FIRST @warmelt-hooks.melt:1274",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_202__REGISTER_PRE_GENERICIZE_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_202__REGISTER_PRE_GENERICIZE_FIRST,
			     meltrout_49_WARMELTmiHOOKS_REGISTER_PRE_GENERICIZE_FIRST);

  /*iniclos dclo_203__REGISTER_PRE_GENERICIZE_FIRST */
 /*_._VALCLO___V234*/ meltfptr[233] =
    (melt_ptr_t) & meltcdat->dclo_203__REGISTER_PRE_GENERICIZE_FIRST;
  meltcdat->dclo_203__REGISTER_PRE_GENERICIZE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_203__REGISTER_PRE_GENERICIZE_FIRST.nbval = 0;

  /*inirout drout_204__REGISTER_PRE_GENERICIZE_LAST */
 /*_._VALROUT___V235*/ meltfptr[234] =
    (melt_ptr_t) & meltcdat->drout_204__REGISTER_PRE_GENERICIZE_LAST;
  meltcdat->drout_204__REGISTER_PRE_GENERICIZE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_204__REGISTER_PRE_GENERICIZE_LAST.routdescr,
	   "REGISTER_PRE_GENERICIZE_LAST @warmelt-hooks.melt:1297",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_204__REGISTER_PRE_GENERICIZE_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_204__REGISTER_PRE_GENERICIZE_LAST,
			     meltrout_50_WARMELTmiHOOKS_REGISTER_PRE_GENERICIZE_LAST);

  /*iniclos dclo_205__REGISTER_PRE_GENERICIZE_LAST */
 /*_._VALCLO___V236*/ meltfptr[235] =
    (melt_ptr_t) & meltcdat->dclo_205__REGISTER_PRE_GENERICIZE_LAST;
  meltcdat->dclo_205__REGISTER_PRE_GENERICIZE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_205__REGISTER_PRE_GENERICIZE_LAST.nbval = 0;


/*iniobj dsym_206__FINISHTYPE_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V237*/ meltfptr[236])
/*_._VALDATA___V237*/ meltfptr[236] =
      (melt_ptr_t) & meltcdat->dsym_206__FINISHTYPE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_206__FINISHTYPE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_206__FINISHTYPE_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_206__FINISHTYPE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_206__FINISHTYPE_DELAYED_QUEUE.obj_hash = 436015866;
  meltcdat->dsym_206__FINISHTYPE_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_207__FINISHTYPE_DELAYED_QUEUE*/
 /*_._VALSTR___V238*/ meltfptr[237] =
    (melt_ptr_t) & meltcdat->dstr_207__FINISHTYPE_DELAYED_QUEUE;
  meltcdat->dstr_207__FINISHTYPE_DELAYED_QUEUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_207__FINISHTYPE_DELAYED_QUEUE.
				val, "FINISHTYPE_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_207__FINISHTYPE_DELAYED_QUEUE.
					val) - 1);
  meltcdat->dstr_207__FINISHTYPE_DELAYED_QUEUE.val[24] = (char) 0;
  meltcdat->dstr_207__FINISHTYPE_DELAYED_QUEUE.slen = 24;

  MELT_LOCATION ("warmelt-hooks.melt:1330:/ iniobj");

/*iniobj dobj_208__FINISHTYPE_DELAYED_QUEUE*/
/*_._VALDATA___V239*/ meltfptr[238] =
    (melt_ptr_t) & meltcdat->dobj_208__FINISHTYPE_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_208__FINISHTYPE_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_208__FINISHTYPE_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_208__FINISHTYPE_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_208__FINISHTYPE_DELAYED_QUEUE.obj_hash = 302794816;
  meltcdat->dobj_208__FINISHTYPE_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_209__finishtype_delayed_queue*/
 /*_._VALSTR___V240*/ meltfptr[239] =
    (melt_ptr_t) & meltcdat->dstr_209__finishtype_delayed_queue;
  meltcdat->dstr_209__finishtype_delayed_queue.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_209__finishtype_delayed_queue.
				val, "finishtype_delayed_queue",
				sizeof (meltcdat->
					dstr_209__finishtype_delayed_queue.
					val) - 1);
  meltcdat->dstr_209__finishtype_delayed_queue.val[24] = (char) 0;
  meltcdat->dstr_209__finishtype_delayed_queue.slen = 24;

  /*inirout drout_210__ENABLE_FINISH_TYPE */
 /*_._VALROUT___V241*/ meltfptr[240] =
    (melt_ptr_t) & meltcdat->drout_210__ENABLE_FINISH_TYPE;
  meltcdat->drout_210__ENABLE_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_210__ENABLE_FINISH_TYPE.routdescr,
	   "ENABLE_FINISH_TYPE @warmelt-hooks.melt:1360",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_210__ENABLE_FINISH_TYPE.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_210__ENABLE_FINISH_TYPE,
			     meltrout_51_WARMELTmiHOOKS_ENABLE_FINISH_TYPE);

  /*iniclos dclo_211__ENABLE_FINISH_TYPE */
 /*_._VALCLO___V242*/ meltfptr[241] =
    (melt_ptr_t) & meltcdat->dclo_211__ENABLE_FINISH_TYPE;
  meltcdat->dclo_211__ENABLE_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_211__ENABLE_FINISH_TYPE.nbval = 0;


/*inihook dhook__212__HOOK_FINISH_TYPE */
  meltcdat->dhook__212__HOOK_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_FINISH_TYPE data */
  meltcdat->dhook__212__HOOK_FINISH_TYPE.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__212__HOOK_FINISH_TYPE,
			  melthook_HOOK_FINISH_TYPE);
  meltcdat->dhook__212__HOOK_FINISH_TYPE.hookdata =
    /*_._VALDATA___V244*/ meltfptr[243];
  strncpy (meltcdat->dhook__212__HOOK_FINISH_TYPE.hookname,
	   "HOOK_FINISH_TYPE",
	   sizeof (meltcdat->dhook__212__HOOK_FINISH_TYPE.hookname) - 1);
/*predefinedhook HOOK_FINISH_TYPE for dhook__212__HOOK_FINISH_TYPE*/
  if (!MELT_PREDEF (HOOK_FINISH_TYPE))
    MELT_STORE_PREDEF (HOOK_FINISH_TYPE,
		       (melt_ptr_t) & meltcdat->dhook__212__HOOK_FINISH_TYPE);

  /*_._VALHOOK___V243*/ meltfptr[242] =
  /*inihooklocvar HOOK_FINISH_TYPE */
  (melt_ptr_t) & meltcdat->dhook__212__HOOK_FINISH_TYPE;

  /*done inihook dhook__212__HOOK_FINISH_TYPE */

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ iniobj");

/*iniobj dobj_213__*/
/*_._VALDATA___V244*/ meltfptr[243] = (melt_ptr_t) & meltcdat->dobj_213__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_213__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_213__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_213__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_213__.obj_hash = 801217540;
  meltcdat->dobj_213__.obj_len = 6;


/*inistring dstr_214__HOOK_FINISH_TYPE*/
 /*_._VALSTR___V245*/ meltfptr[244] =
    (melt_ptr_t) & meltcdat->dstr_214__HOOK_FINISH_TYPE;
  meltcdat->dstr_214__HOOK_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_214__HOOK_FINISH_TYPE.val,
				"HOOK_FINISH_TYPE",
				sizeof (meltcdat->dstr_214__HOOK_FINISH_TYPE.
					val) - 1);
  meltcdat->dstr_214__HOOK_FINISH_TYPE.val[16] = (char) 0;
  meltcdat->dstr_214__HOOK_FINISH_TYPE.slen = 16;

  /*^iniobj */

/*iniobj dobj_215*/
/*_._VALDATA___V246*/ meltfptr[245] = (melt_ptr_t) & meltcdat->dobj_215;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_215",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_215",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_215.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_215.obj_num = 0;
  meltcdat->dobj_215.obj_hash = 684336771;
  meltcdat->dobj_215.obj_len = 2;

  /*inimult dtup_216___HOOK_FINISH_TYPE */
 /*_._VALTUP___V247*/ meltfptr[246] =
    (melt_ptr_t) & meltcdat->dtup_216___HOOK_FINISH_TYPE;
  meltcdat->dtup_216___HOOK_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_216___HOOK_FINISH_TYPE.nbval = 1;
  /*inimult dtup_217___HOOK_FINISH_TYPE */
 /*_._VALTUP___V248*/ meltfptr[247] =
    (melt_ptr_t) & meltcdat->dtup_217___HOOK_FINISH_TYPE;
  meltcdat->dtup_217___HOOK_FINISH_TYPE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_217___HOOK_FINISH_TYPE.nbval = 0;
  /*inirout drout_218__REGISTER_FINISH_TYPE_FIRST */
 /*_._VALROUT___V249*/ meltfptr[248] =
    (melt_ptr_t) & meltcdat->drout_218__REGISTER_FINISH_TYPE_FIRST;
  meltcdat->drout_218__REGISTER_FINISH_TYPE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_218__REGISTER_FINISH_TYPE_FIRST.routdescr,
	   "REGISTER_FINISH_TYPE_FIRST @warmelt-hooks.melt:1403",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_218__REGISTER_FINISH_TYPE_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_218__REGISTER_FINISH_TYPE_FIRST,
			     meltrout_53_WARMELTmiHOOKS_REGISTER_FINISH_TYPE_FIRST);

  /*iniclos dclo_219__REGISTER_FINISH_TYPE_FIRST */
 /*_._VALCLO___V250*/ meltfptr[249] =
    (melt_ptr_t) & meltcdat->dclo_219__REGISTER_FINISH_TYPE_FIRST;
  meltcdat->dclo_219__REGISTER_FINISH_TYPE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_219__REGISTER_FINISH_TYPE_FIRST.nbval = 0;

  /*inirout drout_220__REGISTER_FINISH_TYPE_LAST */
 /*_._VALROUT___V251*/ meltfptr[250] =
    (melt_ptr_t) & meltcdat->drout_220__REGISTER_FINISH_TYPE_LAST;
  meltcdat->drout_220__REGISTER_FINISH_TYPE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_220__REGISTER_FINISH_TYPE_LAST.routdescr,
	   "REGISTER_FINISH_TYPE_LAST @warmelt-hooks.melt:1426",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_220__REGISTER_FINISH_TYPE_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_220__REGISTER_FINISH_TYPE_LAST,
			     meltrout_54_WARMELTmiHOOKS_REGISTER_FINISH_TYPE_LAST);

  /*iniclos dclo_221__REGISTER_FINISH_TYPE_LAST */
 /*_._VALCLO___V252*/ meltfptr[251] =
    (melt_ptr_t) & meltcdat->dclo_221__REGISTER_FINISH_TYPE_LAST;
  meltcdat->dclo_221__REGISTER_FINISH_TYPE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_221__REGISTER_FINISH_TYPE_LAST.nbval = 0;


/*iniobj dsym_222__ENDMELTPASS_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V253*/ meltfptr[252])
/*_._VALDATA___V253*/ meltfptr[252] =
      (melt_ptr_t) & meltcdat->dsym_222__ENDMELTPASS_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_222__ENDMELTPASS_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_222__ENDMELTPASS_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_222__ENDMELTPASS_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_222__ENDMELTPASS_DELAYED_QUEUE.obj_hash = 903971913;
  meltcdat->dsym_222__ENDMELTPASS_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_223__ENDMELTPASS_DELAYED_QUEU*/
 /*_._VALSTR___V254*/ meltfptr[253] =
    (melt_ptr_t) & meltcdat->dstr_223__ENDMELTPASS_DELAYED_QUEU;
  meltcdat->dstr_223__ENDMELTPASS_DELAYED_QUEU.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_223__ENDMELTPASS_DELAYED_QUEU.
				val, "ENDMELTPASS_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_223__ENDMELTPASS_DELAYED_QUEU.
					val) - 1);
  meltcdat->dstr_223__ENDMELTPASS_DELAYED_QUEU.val[25] = (char) 0;
  meltcdat->dstr_223__ENDMELTPASS_DELAYED_QUEU.slen = 25;

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ iniobj");

/*iniobj dobj_224__ENDMELTPASS_DELAYED_QUEUE*/
/*_._VALDATA___V255*/ meltfptr[254] =
    (melt_ptr_t) & meltcdat->dobj_224__ENDMELTPASS_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_224__ENDMELTPASS_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_224__ENDMELTPASS_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_224__ENDMELTPASS_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_224__ENDMELTPASS_DELAYED_QUEUE.obj_hash = 454957042;
  meltcdat->dobj_224__ENDMELTPASS_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_225__endmeltpass_delayed_queu*/
 /*_._VALSTR___V256*/ meltfptr[255] =
    (melt_ptr_t) & meltcdat->dstr_225__endmeltpass_delayed_queu;
  meltcdat->dstr_225__endmeltpass_delayed_queu.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_225__endmeltpass_delayed_queu.
				val, "endmeltpass_delayed_queue",
				sizeof (meltcdat->
					dstr_225__endmeltpass_delayed_queu.
					val) - 1);
  meltcdat->dstr_225__endmeltpass_delayed_queu.val[25] = (char) 0;
  meltcdat->dstr_225__endmeltpass_delayed_queu.slen = 25;

  /*inirout drout_226__RUN_ENDMELTPASS_FUNCTIONS */
 /*_._VALROUT___V257*/ meltfptr[256] =
    (melt_ptr_t) & meltcdat->drout_226__RUN_ENDMELTPASS_FUNCTIONS;
  meltcdat->drout_226__RUN_ENDMELTPASS_FUNCTIONS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_226__RUN_ENDMELTPASS_FUNCTIONS.routdescr,
	   "RUN_ENDMELTPASS_FUNCTIONS @warmelt-hooks.melt:1460",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_226__RUN_ENDMELTPASS_FUNCTIONS.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_226__RUN_ENDMELTPASS_FUNCTIONS,
			     meltrout_55_WARMELTmiHOOKS_RUN_ENDMELTPASS_FUNCTIONS);

  /*iniclos dclo_227__RUN_ENDMELTPASS_FUNCTIONS */
 /*_._VALCLO___V258*/ meltfptr[257] =
    (melt_ptr_t) & meltcdat->dclo_227__RUN_ENDMELTPASS_FUNCTIONS;
  meltcdat->dclo_227__RUN_ENDMELTPASS_FUNCTIONS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_227__RUN_ENDMELTPASS_FUNCTIONS.nbval = 0;


/*iniobj dsym_228__CLASS_CONTAINER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V259*/ meltfptr[258])
/*_._VALDATA___V259*/ meltfptr[258] =
      (melt_ptr_t) & meltcdat->dsym_228__CLASS_CONTAINER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_228__CLASS_CONTAINER",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_228__CLASS_CONTAINER",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_228__CLASS_CONTAINER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_228__CLASS_CONTAINER.obj_hash = 301899711;
  meltcdat->dsym_228__CLASS_CONTAINER.obj_len = 3;


/*inistring dstr_229__CLASS_CONTAINER*/
 /*_._VALSTR___V260*/ meltfptr[259] =
    (melt_ptr_t) & meltcdat->dstr_229__CLASS_CONTAINER;
  meltcdat->dstr_229__CLASS_CONTAINER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_229__CLASS_CONTAINER.val,
				"CLASS_CONTAINER",
				sizeof (meltcdat->dstr_229__CLASS_CONTAINER.
					val) - 1);
  meltcdat->dstr_229__CLASS_CONTAINER.val[15] = (char) 0;
  meltcdat->dstr_229__CLASS_CONTAINER.slen = 15;

  /*inirout drout_230__AT_END_OF_THIS_MELT_PASS_FIRST */
 /*_._VALROUT___V261*/ meltfptr[260] =
    (melt_ptr_t) & meltcdat->drout_230__AT_END_OF_THIS_MELT_PASS_FIRST;
  meltcdat->drout_230__AT_END_OF_THIS_MELT_PASS_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_230__AT_END_OF_THIS_MELT_PASS_FIRST.routdescr,
	   "AT_END_OF_THIS_MELT_PASS_FIRST @warmelt-hooks.melt:1490",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_230__AT_END_OF_THIS_MELT_PASS_FIRST.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_230__AT_END_OF_THIS_MELT_PASS_FIRST,
			     meltrout_56_WARMELTmiHOOKS_AT_END_OF_THIS_MELT_PASS_FIRST);

  /*iniclos dclo_231__AT_END_OF_THIS_MELT_PASS_FIRST */
 /*_._VALCLO___V262*/ meltfptr[261] =
    (melt_ptr_t) & meltcdat->dclo_231__AT_END_OF_THIS_MELT_PASS_FIRST;
  meltcdat->dclo_231__AT_END_OF_THIS_MELT_PASS_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_231__AT_END_OF_THIS_MELT_PASS_FIRST.nbval = 0;

  /*inirout drout_232__AT_END_OF_THIS_MELT_PASS_LAST */
 /*_._VALROUT___V263*/ meltfptr[262] =
    (melt_ptr_t) & meltcdat->drout_232__AT_END_OF_THIS_MELT_PASS_LAST;
  meltcdat->drout_232__AT_END_OF_THIS_MELT_PASS_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_232__AT_END_OF_THIS_MELT_PASS_LAST.routdescr,
	   "AT_END_OF_THIS_MELT_PASS_LAST @warmelt-hooks.melt:1501",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_232__AT_END_OF_THIS_MELT_PASS_LAST.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_232__AT_END_OF_THIS_MELT_PASS_LAST,
			     meltrout_57_WARMELTmiHOOKS_AT_END_OF_THIS_MELT_PASS_LAST);

  /*iniclos dclo_233__AT_END_OF_THIS_MELT_PASS_LAST */
 /*_._VALCLO___V264*/ meltfptr[263] =
    (melt_ptr_t) & meltcdat->dclo_233__AT_END_OF_THIS_MELT_PASS_LAST;
  meltcdat->dclo_233__AT_END_OF_THIS_MELT_PASS_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_233__AT_END_OF_THIS_MELT_PASS_LAST.nbval = 0;


/*iniobj dsym_234__FINISHDECL_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V265*/ meltfptr[264])
/*_._VALDATA___V265*/ meltfptr[264] =
      (melt_ptr_t) & meltcdat->dsym_234__FINISHDECL_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_234__FINISHDECL_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_234__FINISHDECL_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_234__FINISHDECL_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_234__FINISHDECL_DELAYED_QUEUE.obj_hash = 1035850925;
  meltcdat->dsym_234__FINISHDECL_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_235__FINISHDECL_DELAYED_QUEUE*/
 /*_._VALSTR___V266*/ meltfptr[265] =
    (melt_ptr_t) & meltcdat->dstr_235__FINISHDECL_DELAYED_QUEUE;
  meltcdat->dstr_235__FINISHDECL_DELAYED_QUEUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_235__FINISHDECL_DELAYED_QUEUE.
				val, "FINISHDECL_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_235__FINISHDECL_DELAYED_QUEUE.
					val) - 1);
  meltcdat->dstr_235__FINISHDECL_DELAYED_QUEUE.val[24] = (char) 0;
  meltcdat->dstr_235__FINISHDECL_DELAYED_QUEUE.slen = 24;

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ iniobj");

/*iniobj dobj_236__FINISHDECL_DELAYED_QUEUE*/
/*_._VALDATA___V267*/ meltfptr[266] =
    (melt_ptr_t) & meltcdat->dobj_236__FINISHDECL_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_236__FINISHDECL_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_236__FINISHDECL_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_236__FINISHDECL_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_236__FINISHDECL_DELAYED_QUEUE.obj_hash = 4502768;
  meltcdat->dobj_236__FINISHDECL_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_237__finishdecl_delayed_queue*/
 /*_._VALSTR___V268*/ meltfptr[267] =
    (melt_ptr_t) & meltcdat->dstr_237__finishdecl_delayed_queue;
  meltcdat->dstr_237__finishdecl_delayed_queue.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_237__finishdecl_delayed_queue.
				val, "finishdecl_delayed_queue",
				sizeof (meltcdat->
					dstr_237__finishdecl_delayed_queue.
					val) - 1);
  meltcdat->dstr_237__finishdecl_delayed_queue.val[24] = (char) 0;
  meltcdat->dstr_237__finishdecl_delayed_queue.slen = 24;

  /*inirout drout_238__ENABLE_FINISH_DECL */
 /*_._VALROUT___V269*/ meltfptr[268] =
    (melt_ptr_t) & meltcdat->drout_238__ENABLE_FINISH_DECL;
  meltcdat->drout_238__ENABLE_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_238__ENABLE_FINISH_DECL.routdescr,
	   "ENABLE_FINISH_DECL @warmelt-hooks.melt:1552",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_238__ENABLE_FINISH_DECL.nbval = 0;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_238__ENABLE_FINISH_DECL,
			     meltrout_58_WARMELTmiHOOKS_ENABLE_FINISH_DECL);

  /*iniclos dclo_239__ENABLE_FINISH_DECL */
 /*_._VALCLO___V270*/ meltfptr[269] =
    (melt_ptr_t) & meltcdat->dclo_239__ENABLE_FINISH_DECL;
  meltcdat->dclo_239__ENABLE_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_239__ENABLE_FINISH_DECL.nbval = 0;


/*inihook dhook__240__HOOK_FINISH_DECL */
  meltcdat->dhook__240__HOOK_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_FINISH_DECL data */
  meltcdat->dhook__240__HOOK_FINISH_DECL.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__240__HOOK_FINISH_DECL,
			  melthook_HOOK_FINISH_DECL);
  meltcdat->dhook__240__HOOK_FINISH_DECL.hookdata =
    /*_._VALDATA___V272*/ meltfptr[271];
  strncpy (meltcdat->dhook__240__HOOK_FINISH_DECL.hookname,
	   "HOOK_FINISH_DECL",
	   sizeof (meltcdat->dhook__240__HOOK_FINISH_DECL.hookname) - 1);
/*predefinedhook HOOK_FINISH_DECL for dhook__240__HOOK_FINISH_DECL*/
  if (!MELT_PREDEF (HOOK_FINISH_DECL))
    MELT_STORE_PREDEF (HOOK_FINISH_DECL,
		       (melt_ptr_t) & meltcdat->dhook__240__HOOK_FINISH_DECL);

  /*_._VALHOOK___V271*/ meltfptr[270] =
  /*inihooklocvar HOOK_FINISH_DECL */
  (melt_ptr_t) & meltcdat->dhook__240__HOOK_FINISH_DECL;

  /*done inihook dhook__240__HOOK_FINISH_DECL */

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ iniobj");

/*iniobj dobj_241__*/
/*_._VALDATA___V272*/ meltfptr[271] = (melt_ptr_t) & meltcdat->dobj_241__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_241__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_241__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_241__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_241__.obj_hash = 931656902;
  meltcdat->dobj_241__.obj_len = 6;


/*inistring dstr_242__HOOK_FINISH_DECL*/
 /*_._VALSTR___V273*/ meltfptr[272] =
    (melt_ptr_t) & meltcdat->dstr_242__HOOK_FINISH_DECL;
  meltcdat->dstr_242__HOOK_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_242__HOOK_FINISH_DECL.val,
				"HOOK_FINISH_DECL",
				sizeof (meltcdat->dstr_242__HOOK_FINISH_DECL.
					val) - 1);
  meltcdat->dstr_242__HOOK_FINISH_DECL.val[16] = (char) 0;
  meltcdat->dstr_242__HOOK_FINISH_DECL.slen = 16;

  /*^iniobj */

/*iniobj dobj_243*/
/*_._VALDATA___V274*/ meltfptr[273] = (melt_ptr_t) & meltcdat->dobj_243;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_243",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_243",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_243.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_243.obj_num = 0;
  meltcdat->dobj_243.obj_hash = 770968190;
  meltcdat->dobj_243.obj_len = 2;

  /*inimult dtup_244___HOOK_FINISH_DECL */
 /*_._VALTUP___V275*/ meltfptr[274] =
    (melt_ptr_t) & meltcdat->dtup_244___HOOK_FINISH_DECL;
  meltcdat->dtup_244___HOOK_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_244___HOOK_FINISH_DECL.nbval = 1;
  /*inimult dtup_245___HOOK_FINISH_DECL */
 /*_._VALTUP___V276*/ meltfptr[275] =
    (melt_ptr_t) & meltcdat->dtup_245___HOOK_FINISH_DECL;
  meltcdat->dtup_245___HOOK_FINISH_DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_245___HOOK_FINISH_DECL.nbval = 0;
  /*inirout drout_246__REGISTER_FINISH_DECL_FIRST */
 /*_._VALROUT___V277*/ meltfptr[276] =
    (melt_ptr_t) & meltcdat->drout_246__REGISTER_FINISH_DECL_FIRST;
  meltcdat->drout_246__REGISTER_FINISH_DECL_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_246__REGISTER_FINISH_DECL_FIRST.routdescr,
	   "REGISTER_FINISH_DECL_FIRST @warmelt-hooks.melt:1599",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_246__REGISTER_FINISH_DECL_FIRST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_246__REGISTER_FINISH_DECL_FIRST,
			     meltrout_60_WARMELTmiHOOKS_REGISTER_FINISH_DECL_FIRST);

  /*iniclos dclo_247__REGISTER_FINISH_DECL_FIRST */
 /*_._VALCLO___V278*/ meltfptr[277] =
    (melt_ptr_t) & meltcdat->dclo_247__REGISTER_FINISH_DECL_FIRST;
  meltcdat->dclo_247__REGISTER_FINISH_DECL_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_247__REGISTER_FINISH_DECL_FIRST.nbval = 0;

  /*inirout drout_248__REGISTER_FINISH_DECL_LAST */
 /*_._VALROUT___V279*/ meltfptr[278] =
    (melt_ptr_t) & meltcdat->drout_248__REGISTER_FINISH_DECL_LAST;
  meltcdat->drout_248__REGISTER_FINISH_DECL_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_248__REGISTER_FINISH_DECL_LAST.routdescr,
	   "REGISTER_FINISH_DECL_LAST @warmelt-hooks.melt:1622",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_248__REGISTER_FINISH_DECL_LAST.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_248__REGISTER_FINISH_DECL_LAST,
			     meltrout_61_WARMELTmiHOOKS_REGISTER_FINISH_DECL_LAST);

  /*iniclos dclo_249__REGISTER_FINISH_DECL_LAST */
 /*_._VALCLO___V280*/ meltfptr[279] =
    (melt_ptr_t) & meltcdat->dclo_249__REGISTER_FINISH_DECL_LAST;
  meltcdat->dclo_249__REGISTER_FINISH_DECL_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_249__REGISTER_FINISH_DECL_LAST.nbval = 0;


/*iniobj dsym_250__PASS_EXECUTION_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V281*/ meltfptr[280])
/*_._VALDATA___V281*/ meltfptr[280] =
      (melt_ptr_t) & meltcdat->dsym_250__PASS_EXECUTION_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_250__PASS_EXECUTION_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_250__PASS_EXECUTION_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_250__PASS_EXECUTION_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_250__PASS_EXECUTION_DELAYED_QUEUE.obj_hash = 721747703;
  meltcdat->dsym_250__PASS_EXECUTION_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_251__PASS_EXECUTION_DELAYED_Q*/
 /*_._VALSTR___V282*/ meltfptr[281] =
    (melt_ptr_t) & meltcdat->dstr_251__PASS_EXECUTION_DELAYED_Q;
  meltcdat->dstr_251__PASS_EXECUTION_DELAYED_Q.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_251__PASS_EXECUTION_DELAYED_Q.
				val, "PASS_EXECUTION_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_251__PASS_EXECUTION_DELAYED_Q.
					val) - 1);
  meltcdat->dstr_251__PASS_EXECUTION_DELAYED_Q.val[28] = (char) 0;
  meltcdat->dstr_251__PASS_EXECUTION_DELAYED_Q.slen = 28;

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ iniobj");

/*iniobj dobj_252__PASS_EXECUTION_DELAYED_QUEUE*/
/*_._VALDATA___V283*/ meltfptr[282] =
    (melt_ptr_t) & meltcdat->dobj_252__PASS_EXECUTION_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_252__PASS_EXECUTION_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_252__PASS_EXECUTION_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_252__PASS_EXECUTION_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_252__PASS_EXECUTION_DELAYED_QUEUE.obj_hash = 972141516;
  meltcdat->dobj_252__PASS_EXECUTION_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_253__pass_execution_delayed_q*/
 /*_._VALSTR___V284*/ meltfptr[283] =
    (melt_ptr_t) & meltcdat->dstr_253__pass_execution_delayed_q;
  meltcdat->dstr_253__pass_execution_delayed_q.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_253__pass_execution_delayed_q.
				val, "pass_execution_delayed_queue",
				sizeof (meltcdat->
					dstr_253__pass_execution_delayed_q.
					val) - 1);
  meltcdat->dstr_253__pass_execution_delayed_q.val[28] = (char) 0;
  meltcdat->dstr_253__pass_execution_delayed_q.slen = 28;


/*inihook dhook__254__HOOK_PASS_EXECUTION */
  meltcdat->dhook__254__HOOK_PASS_EXECUTION.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_PASS_EXECUTION data */
  meltcdat->dhook__254__HOOK_PASS_EXECUTION.nbval = 3;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__254__HOOK_PASS_EXECUTION,
			  melthook_HOOK_PASS_EXECUTION);
  meltcdat->dhook__254__HOOK_PASS_EXECUTION.hookdata =
    /*_._VALDATA___V286*/ meltfptr[285];
  strncpy (meltcdat->dhook__254__HOOK_PASS_EXECUTION.hookname,
	   "HOOK_PASS_EXECUTION",
	   sizeof (meltcdat->dhook__254__HOOK_PASS_EXECUTION.hookname) - 1);
/*predefinedhook HOOK_PASS_EXECUTION for dhook__254__HOOK_PASS_EXECUTION*/
  if (!MELT_PREDEF (HOOK_PASS_EXECUTION))
    MELT_STORE_PREDEF (HOOK_PASS_EXECUTION,
		       (melt_ptr_t) & meltcdat->
		       dhook__254__HOOK_PASS_EXECUTION);

  /*_._VALHOOK___V285*/ meltfptr[284] =
  /*inihooklocvar HOOK_PASS_EXECUTION */
  (melt_ptr_t) & meltcdat->dhook__254__HOOK_PASS_EXECUTION;

  /*done inihook dhook__254__HOOK_PASS_EXECUTION */

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ iniobj");

/*iniobj dobj_255__*/
/*_._VALDATA___V286*/ meltfptr[285] = (melt_ptr_t) & meltcdat->dobj_255__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_255__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_255__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_255__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_255__.obj_hash = 798968408;
  meltcdat->dobj_255__.obj_len = 6;


/*inistring dstr_256__HOOK_PASS_EXECUTION*/
 /*_._VALSTR___V287*/ meltfptr[286] =
    (melt_ptr_t) & meltcdat->dstr_256__HOOK_PASS_EXECUTION;
  meltcdat->dstr_256__HOOK_PASS_EXECUTION.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_256__HOOK_PASS_EXECUTION.val,
				"HOOK_PASS_EXECUTION",
				sizeof (meltcdat->
					dstr_256__HOOK_PASS_EXECUTION.val) -
				1);
  meltcdat->dstr_256__HOOK_PASS_EXECUTION.val[19] = (char) 0;
  meltcdat->dstr_256__HOOK_PASS_EXECUTION.slen = 19;


/*iniobj dsym_257__PASSNAME*/
  /*uniqueobj*/ if (! /*_._VALDATA___V289*/ meltfptr[288])
/*_._VALDATA___V289*/ meltfptr[288] =
      (melt_ptr_t) & meltcdat->dsym_257__PASSNAME;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_257__PASSNAME",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_257__PASSNAME",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_257__PASSNAME.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_257__PASSNAME.obj_hash = 475697004;
  meltcdat->dsym_257__PASSNAME.obj_len = 3;


/*inistring dstr_258__PASSNAME*/
 /*_._VALSTR___V290*/ meltfptr[289] =
    (melt_ptr_t) & meltcdat->dstr_258__PASSNAME;
  meltcdat->dstr_258__PASSNAME.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_258__PASSNAME.val, "PASSNAME",
				sizeof (meltcdat->dstr_258__PASSNAME.val) -
				1);
  meltcdat->dstr_258__PASSNAME.val[8] = (char) 0;
  meltcdat->dstr_258__PASSNAME.slen = 8;

  /*^iniobj */

/*iniobj dobj_259*/
/*_._VALDATA___V288*/ meltfptr[287] = (melt_ptr_t) & meltcdat->dobj_259;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_259",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_259",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_259.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_259.obj_num = 0;
  meltcdat->dobj_259.obj_hash = 755728094;
  meltcdat->dobj_259.obj_len = 2;


/*iniobj dsym_260__PASSNUM*/
  /*uniqueobj*/ if (! /*_._VALDATA___V292*/ meltfptr[291])
/*_._VALDATA___V292*/ meltfptr[291] =
      (melt_ptr_t) & meltcdat->dsym_260__PASSNUM;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_260__PASSNUM",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_260__PASSNUM",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_260__PASSNUM.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_260__PASSNUM.obj_hash = 228918362;
  meltcdat->dsym_260__PASSNUM.obj_len = 3;


/*inistring dstr_261__PASSNUM*/
 /*_._VALSTR___V293*/ meltfptr[292] =
    (melt_ptr_t) & meltcdat->dstr_261__PASSNUM;
  meltcdat->dstr_261__PASSNUM.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_261__PASSNUM.val, "PASSNUM",
				sizeof (meltcdat->dstr_261__PASSNUM.val) - 1);
  meltcdat->dstr_261__PASSNUM.val[7] = (char) 0;
  meltcdat->dstr_261__PASSNUM.slen = 7;

  /*^iniobj */

/*iniobj dobj_262*/
/*_._VALDATA___V291*/ meltfptr[290] = (melt_ptr_t) & meltcdat->dobj_262;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_262",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_262",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_262.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_262.obj_num = 1;
  meltcdat->dobj_262.obj_hash = 231525819;
  meltcdat->dobj_262.obj_len = 2;

  /*inimult dtup_263___HOOK_PASS_EXECUTION */
 /*_._VALTUP___V294*/ meltfptr[293] =
    (melt_ptr_t) & meltcdat->dtup_263___HOOK_PASS_EXECUTION;
  meltcdat->dtup_263___HOOK_PASS_EXECUTION.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_263___HOOK_PASS_EXECUTION.nbval = 2;
  /*inimult dtup_264___HOOK_PASS_EXECUTION */
 /*_._VALTUP___V295*/ meltfptr[294] =
    (melt_ptr_t) & meltcdat->dtup_264___HOOK_PASS_EXECUTION;
  meltcdat->dtup_264___HOOK_PASS_EXECUTION.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_264___HOOK_PASS_EXECUTION.nbval = 0;
  /*inirout drout_265__REGISTER_PASS_EXECUTION_FIRST */
 /*_._VALROUT___V296*/ meltfptr[295] =
    (melt_ptr_t) & meltcdat->drout_265__REGISTER_PASS_EXECUTION_FIRST;
  meltcdat->drout_265__REGISTER_PASS_EXECUTION_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_265__REGISTER_PASS_EXECUTION_FIRST.routdescr,
	   "REGISTER_PASS_EXECUTION_FIRST @warmelt-hooks.melt:1734",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_265__REGISTER_PASS_EXECUTION_FIRST.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_265__REGISTER_PASS_EXECUTION_FIRST,
			     meltrout_63_WARMELTmiHOOKS_REGISTER_PASS_EXECUTION_FIRST);

  /*iniclos dclo_266__REGISTER_PASS_EXECUTION_FIRST */
 /*_._VALCLO___V297*/ meltfptr[296] =
    (melt_ptr_t) & meltcdat->dclo_266__REGISTER_PASS_EXECUTION_FIRST;
  meltcdat->dclo_266__REGISTER_PASS_EXECUTION_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_266__REGISTER_PASS_EXECUTION_FIRST.nbval = 0;

  /*inirout drout_267__REGISTER_PASS_EXECUTION_LAST */
 /*_._VALROUT___V298*/ meltfptr[297] =
    (melt_ptr_t) & meltcdat->drout_267__REGISTER_PASS_EXECUTION_LAST;
  meltcdat->drout_267__REGISTER_PASS_EXECUTION_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_267__REGISTER_PASS_EXECUTION_LAST.routdescr,
	   "REGISTER_PASS_EXECUTION_LAST @warmelt-hooks.melt:1755",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_267__REGISTER_PASS_EXECUTION_LAST.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_267__REGISTER_PASS_EXECUTION_LAST,
			     meltrout_64_WARMELTmiHOOKS_REGISTER_PASS_EXECUTION_LAST);

  /*iniclos dclo_268__REGISTER_PASS_EXECUTION_LAST */
 /*_._VALCLO___V299*/ meltfptr[298] =
    (melt_ptr_t) & meltcdat->dclo_268__REGISTER_PASS_EXECUTION_LAST;
  meltcdat->dclo_268__REGISTER_PASS_EXECUTION_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_268__REGISTER_PASS_EXECUTION_LAST.nbval = 0;


/*inihook dhook__269__HOOK_GIMPLE_GATE */
  meltcdat->dhook__269__HOOK_GIMPLE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_GIMPLE_GATE data */
  meltcdat->dhook__269__HOOK_GIMPLE_GATE.nbval = 4;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__269__HOOK_GIMPLE_GATE,
			  melthook_HOOK_GIMPLE_GATE);
  meltcdat->dhook__269__HOOK_GIMPLE_GATE.hookdata =
    /*_._VALDATA___V301*/ meltfptr[300];
  strncpy (meltcdat->dhook__269__HOOK_GIMPLE_GATE.hookname,
	   "HOOK_GIMPLE_GATE",
	   sizeof (meltcdat->dhook__269__HOOK_GIMPLE_GATE.hookname) - 1);
/*predefinedhook HOOK_GIMPLE_GATE for dhook__269__HOOK_GIMPLE_GATE*/
  if (!MELT_PREDEF (HOOK_GIMPLE_GATE))
    MELT_STORE_PREDEF (HOOK_GIMPLE_GATE,
		       (melt_ptr_t) & meltcdat->dhook__269__HOOK_GIMPLE_GATE);

  /*_._VALHOOK___V300*/ meltfptr[299] =
  /*inihooklocvar HOOK_GIMPLE_GATE */
  (melt_ptr_t) & meltcdat->dhook__269__HOOK_GIMPLE_GATE;

  /*done inihook dhook__269__HOOK_GIMPLE_GATE */

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ iniobj");

/*iniobj dobj_270__*/
/*_._VALDATA___V301*/ meltfptr[300] = (melt_ptr_t) & meltcdat->dobj_270__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_270__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_270__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_270__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_270__.obj_hash = 145690056;
  meltcdat->dobj_270__.obj_len = 6;


/*inistring dstr_271__HOOK_GIMPLE_GATE*/
 /*_._VALSTR___V302*/ meltfptr[301] =
    (melt_ptr_t) & meltcdat->dstr_271__HOOK_GIMPLE_GATE;
  meltcdat->dstr_271__HOOK_GIMPLE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_271__HOOK_GIMPLE_GATE.val,
				"HOOK_GIMPLE_GATE",
				sizeof (meltcdat->dstr_271__HOOK_GIMPLE_GATE.
					val) - 1);
  meltcdat->dstr_271__HOOK_GIMPLE_GATE.val[16] = (char) 0;
  meltcdat->dstr_271__HOOK_GIMPLE_GATE.slen = 16;

  /*inimult dtup_272___HOOK_GIMPLE_GATE */
 /*_._VALTUP___V303*/ meltfptr[302] =
    (melt_ptr_t) & meltcdat->dtup_272___HOOK_GIMPLE_GATE;
  meltcdat->dtup_272___HOOK_GIMPLE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_272___HOOK_GIMPLE_GATE.nbval = 0;
  /*inimult dtup_273___HOOK_GIMPLE_GATE */
 /*_._VALTUP___V304*/ meltfptr[303] =
    (melt_ptr_t) & meltcdat->dtup_273___HOOK_GIMPLE_GATE;
  meltcdat->dtup_273___HOOK_GIMPLE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_273___HOOK_GIMPLE_GATE.nbval = 0;

/*iniobj dsym_274__INITIAL_SYSTEM_DATA*/
  /*uniqueobj*/ if (! /*_._VALDATA___V305*/ meltfptr[304])
/*_._VALDATA___V305*/ meltfptr[304] =
      (melt_ptr_t) & meltcdat->dsym_274__INITIAL_SYSTEM_DATA;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_274__INITIAL_SYSTEM_DATA",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_274__INITIAL_SYSTEM_DATA",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_274__INITIAL_SYSTEM_DATA.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_274__INITIAL_SYSTEM_DATA.obj_hash = 771349808;
  meltcdat->dsym_274__INITIAL_SYSTEM_DATA.obj_len = 3;


/*inistring dstr_275__INITIAL_SYSTEM_DATA*/
 /*_._VALSTR___V306*/ meltfptr[305] =
    (melt_ptr_t) & meltcdat->dstr_275__INITIAL_SYSTEM_DATA;
  meltcdat->dstr_275__INITIAL_SYSTEM_DATA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_275__INITIAL_SYSTEM_DATA.val,
				"INITIAL_SYSTEM_DATA",
				sizeof (meltcdat->
					dstr_275__INITIAL_SYSTEM_DATA.val) -
				1);
  meltcdat->dstr_275__INITIAL_SYSTEM_DATA.val[19] = (char) 0;
  meltcdat->dstr_275__INITIAL_SYSTEM_DATA.slen = 19;


/*iniobj dsym_276__CLASS_GCC_GIMPLE_PASS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V307*/ meltfptr[306])
/*_._VALDATA___V307*/ meltfptr[306] =
      (melt_ptr_t) & meltcdat->dsym_276__CLASS_GCC_GIMPLE_PASS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_276__CLASS_GCC_GIMPLE_PASS",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_276__CLASS_GCC_GIMPLE_PASS",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_276__CLASS_GCC_GIMPLE_PASS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_276__CLASS_GCC_GIMPLE_PASS.obj_hash = 216040702;
  meltcdat->dsym_276__CLASS_GCC_GIMPLE_PASS.obj_len = 3;


/*inistring dstr_277__CLASS_GCC_GIMPLE_PASS*/
 /*_._VALSTR___V308*/ meltfptr[307] =
    (melt_ptr_t) & meltcdat->dstr_277__CLASS_GCC_GIMPLE_PASS;
  meltcdat->dstr_277__CLASS_GCC_GIMPLE_PASS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_277__CLASS_GCC_GIMPLE_PASS.val,
				"CLASS_GCC_GIMPLE_PASS",
				sizeof (meltcdat->
					dstr_277__CLASS_GCC_GIMPLE_PASS.val) -
				1);
  meltcdat->dstr_277__CLASS_GCC_GIMPLE_PASS.val[21] = (char) 0;
  meltcdat->dstr_277__CLASS_GCC_GIMPLE_PASS.slen = 21;


/*iniobj dsym_278__CLASS_GCC_PASS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V309*/ meltfptr[308])
/*_._VALDATA___V309*/ meltfptr[308] =
      (melt_ptr_t) & meltcdat->dsym_278__CLASS_GCC_PASS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_278__CLASS_GCC_PASS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_278__CLASS_GCC_PASS",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_278__CLASS_GCC_PASS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_278__CLASS_GCC_PASS.obj_hash = 271520587;
  meltcdat->dsym_278__CLASS_GCC_PASS.obj_len = 3;


/*inistring dstr_279__CLASS_GCC_PASS*/
 /*_._VALSTR___V310*/ meltfptr[309] =
    (melt_ptr_t) & meltcdat->dstr_279__CLASS_GCC_PASS;
  meltcdat->dstr_279__CLASS_GCC_PASS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_279__CLASS_GCC_PASS.val,
				"CLASS_GCC_PASS",
				sizeof (meltcdat->dstr_279__CLASS_GCC_PASS.
					val) - 1);
  meltcdat->dstr_279__CLASS_GCC_PASS.val[14] = (char) 0;
  meltcdat->dstr_279__CLASS_GCC_PASS.slen = 14;


/*inihook dhook__280__HOOK_GIMPLE_EXECUTE */
  meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_GIMPLE_EXECUTE data */
  meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE,
			  melthook_HOOK_GIMPLE_EXECUTE);
  meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE.hookdata =
    /*_._VALDATA___V312*/ meltfptr[311];
  strncpy (meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE.hookname,
	   "HOOK_GIMPLE_EXECUTE",
	   sizeof (meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE.hookname) - 1);
/*predefinedhook HOOK_GIMPLE_EXECUTE for dhook__280__HOOK_GIMPLE_EXECUTE*/
  if (!MELT_PREDEF (HOOK_GIMPLE_EXECUTE))
    MELT_STORE_PREDEF (HOOK_GIMPLE_EXECUTE,
		       (melt_ptr_t) & meltcdat->
		       dhook__280__HOOK_GIMPLE_EXECUTE);

  /*_._VALHOOK___V311*/ meltfptr[310] =
  /*inihooklocvar HOOK_GIMPLE_EXECUTE */
  (melt_ptr_t) & meltcdat->dhook__280__HOOK_GIMPLE_EXECUTE;

  /*done inihook dhook__280__HOOK_GIMPLE_EXECUTE */

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ iniobj");

/*iniobj dobj_281__*/
/*_._VALDATA___V312*/ meltfptr[311] = (melt_ptr_t) & meltcdat->dobj_281__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_281__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_281__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_281__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_281__.obj_hash = 127250182;
  meltcdat->dobj_281__.obj_len = 6;


/*inistring dstr_282__HOOK_GIMPLE_EXECUTE*/
 /*_._VALSTR___V313*/ meltfptr[312] =
    (melt_ptr_t) & meltcdat->dstr_282__HOOK_GIMPLE_EXECUTE;
  meltcdat->dstr_282__HOOK_GIMPLE_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_282__HOOK_GIMPLE_EXECUTE.val,
				"HOOK_GIMPLE_EXECUTE",
				sizeof (meltcdat->
					dstr_282__HOOK_GIMPLE_EXECUTE.val) -
				1);
  meltcdat->dstr_282__HOOK_GIMPLE_EXECUTE.val[19] = (char) 0;
  meltcdat->dstr_282__HOOK_GIMPLE_EXECUTE.slen = 19;

  /*inimult dtup_283___HOOK_GIMPLE_EXECUTE */
 /*_._VALTUP___V314*/ meltfptr[313] =
    (melt_ptr_t) & meltcdat->dtup_283___HOOK_GIMPLE_EXECUTE;
  meltcdat->dtup_283___HOOK_GIMPLE_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_283___HOOK_GIMPLE_EXECUTE.nbval = 0;
  /*inimult dtup_284___HOOK_GIMPLE_EXECUTE */
 /*_._VALTUP___V315*/ meltfptr[314] =
    (melt_ptr_t) & meltcdat->dtup_284___HOOK_GIMPLE_EXECUTE;
  meltcdat->dtup_284___HOOK_GIMPLE_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_284___HOOK_GIMPLE_EXECUTE.nbval = 0;

/*iniobj dsym_285__CLASS_SYSTEM_DATA*/
  /*uniqueobj*/ if (! /*_._VALDATA___V316*/ meltfptr[315])
/*_._VALDATA___V316*/ meltfptr[315] =
      (melt_ptr_t) & meltcdat->dsym_285__CLASS_SYSTEM_DATA;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_285__CLASS_SYSTEM_DATA",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_285__CLASS_SYSTEM_DATA",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_285__CLASS_SYSTEM_DATA.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_285__CLASS_SYSTEM_DATA.obj_hash = 648451867;
  meltcdat->dsym_285__CLASS_SYSTEM_DATA.obj_len = 3;


/*inistring dstr_286__CLASS_SYSTEM_DATA*/
 /*_._VALSTR___V317*/ meltfptr[316] =
    (melt_ptr_t) & meltcdat->dstr_286__CLASS_SYSTEM_DATA;
  meltcdat->dstr_286__CLASS_SYSTEM_DATA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_286__CLASS_SYSTEM_DATA.val,
				"CLASS_SYSTEM_DATA",
				sizeof (meltcdat->dstr_286__CLASS_SYSTEM_DATA.
					val) - 1);
  meltcdat->dstr_286__CLASS_SYSTEM_DATA.val[17] = (char) 0;
  meltcdat->dstr_286__CLASS_SYSTEM_DATA.slen = 17;


/*inihook dhook__287__HOOK_RTL_GATE */
  meltcdat->dhook__287__HOOK_RTL_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_RTL_GATE data */
  meltcdat->dhook__287__HOOK_RTL_GATE.nbval = 5;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__287__HOOK_RTL_GATE,
			  melthook_HOOK_RTL_GATE);
  meltcdat->dhook__287__HOOK_RTL_GATE.hookdata =
    /*_._VALDATA___V319*/ meltfptr[318];
  strncpy (meltcdat->dhook__287__HOOK_RTL_GATE.hookname, "HOOK_RTL_GATE",
	   sizeof (meltcdat->dhook__287__HOOK_RTL_GATE.hookname) - 1);
/*predefinedhook HOOK_RTL_GATE for dhook__287__HOOK_RTL_GATE*/
  if (!MELT_PREDEF (HOOK_RTL_GATE))
    MELT_STORE_PREDEF (HOOK_RTL_GATE,
		       (melt_ptr_t) & meltcdat->dhook__287__HOOK_RTL_GATE);

  /*_._VALHOOK___V318*/ meltfptr[317] =
  /*inihooklocvar HOOK_RTL_GATE */
  (melt_ptr_t) & meltcdat->dhook__287__HOOK_RTL_GATE;

  /*done inihook dhook__287__HOOK_RTL_GATE */

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ iniobj");

/*iniobj dobj_288__*/
/*_._VALDATA___V319*/ meltfptr[318] = (melt_ptr_t) & meltcdat->dobj_288__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_288__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_288__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_288__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_288__.obj_hash = 514238341;
  meltcdat->dobj_288__.obj_len = 6;


/*inistring dstr_289__HOOK_RTL_GATE*/
 /*_._VALSTR___V320*/ meltfptr[319] =
    (melt_ptr_t) & meltcdat->dstr_289__HOOK_RTL_GATE;
  meltcdat->dstr_289__HOOK_RTL_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_289__HOOK_RTL_GATE.val,
				"HOOK_RTL_GATE",
				sizeof (meltcdat->dstr_289__HOOK_RTL_GATE.
					val) - 1);
  meltcdat->dstr_289__HOOK_RTL_GATE.val[13] = (char) 0;
  meltcdat->dstr_289__HOOK_RTL_GATE.slen = 13;

  /*inimult dtup_290___HOOK_RTL_GATE */
 /*_._VALTUP___V321*/ meltfptr[320] =
    (melt_ptr_t) & meltcdat->dtup_290___HOOK_RTL_GATE;
  meltcdat->dtup_290___HOOK_RTL_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_290___HOOK_RTL_GATE.nbval = 0;
  /*inimult dtup_291___HOOK_RTL_GATE */
 /*_._VALTUP___V322*/ meltfptr[321] =
    (melt_ptr_t) & meltcdat->dtup_291___HOOK_RTL_GATE;
  meltcdat->dtup_291___HOOK_RTL_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_291___HOOK_RTL_GATE.nbval = 0;

/*iniobj dsym_292__CLASS_GCC_RTL_PASS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V323*/ meltfptr[322])
/*_._VALDATA___V323*/ meltfptr[322] =
      (melt_ptr_t) & meltcdat->dsym_292__CLASS_GCC_RTL_PASS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_292__CLASS_GCC_RTL_PASS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_292__CLASS_GCC_RTL_PASS",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_292__CLASS_GCC_RTL_PASS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_292__CLASS_GCC_RTL_PASS.obj_hash = 997542884;
  meltcdat->dsym_292__CLASS_GCC_RTL_PASS.obj_len = 3;


/*inistring dstr_293__CLASS_GCC_RTL_PASS*/
 /*_._VALSTR___V324*/ meltfptr[323] =
    (melt_ptr_t) & meltcdat->dstr_293__CLASS_GCC_RTL_PASS;
  meltcdat->dstr_293__CLASS_GCC_RTL_PASS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_293__CLASS_GCC_RTL_PASS.val,
				"CLASS_GCC_RTL_PASS",
				sizeof (meltcdat->
					dstr_293__CLASS_GCC_RTL_PASS.val) -
				1);
  meltcdat->dstr_293__CLASS_GCC_RTL_PASS.val[18] = (char) 0;
  meltcdat->dstr_293__CLASS_GCC_RTL_PASS.slen = 18;


/*inihook dhook__294__HOOK_RTL_EXECUTE */
  meltcdat->dhook__294__HOOK_RTL_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_RTL_EXECUTE data */
  meltcdat->dhook__294__HOOK_RTL_EXECUTE.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__294__HOOK_RTL_EXECUTE,
			  melthook_HOOK_RTL_EXECUTE);
  meltcdat->dhook__294__HOOK_RTL_EXECUTE.hookdata =
    /*_._VALDATA___V326*/ meltfptr[325];
  strncpy (meltcdat->dhook__294__HOOK_RTL_EXECUTE.hookname,
	   "HOOK_RTL_EXECUTE",
	   sizeof (meltcdat->dhook__294__HOOK_RTL_EXECUTE.hookname) - 1);
/*predefinedhook HOOK_RTL_EXECUTE for dhook__294__HOOK_RTL_EXECUTE*/
  if (!MELT_PREDEF (HOOK_RTL_EXECUTE))
    MELT_STORE_PREDEF (HOOK_RTL_EXECUTE,
		       (melt_ptr_t) & meltcdat->dhook__294__HOOK_RTL_EXECUTE);

  /*_._VALHOOK___V325*/ meltfptr[324] =
  /*inihooklocvar HOOK_RTL_EXECUTE */
  (melt_ptr_t) & meltcdat->dhook__294__HOOK_RTL_EXECUTE;

  /*done inihook dhook__294__HOOK_RTL_EXECUTE */

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ iniobj");

/*iniobj dobj_295__*/
/*_._VALDATA___V326*/ meltfptr[325] = (melt_ptr_t) & meltcdat->dobj_295__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_295__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_295__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_295__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_295__.obj_hash = 737107861;
  meltcdat->dobj_295__.obj_len = 6;


/*inistring dstr_296__HOOK_RTL_EXECUTE*/
 /*_._VALSTR___V327*/ meltfptr[326] =
    (melt_ptr_t) & meltcdat->dstr_296__HOOK_RTL_EXECUTE;
  meltcdat->dstr_296__HOOK_RTL_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_296__HOOK_RTL_EXECUTE.val,
				"HOOK_RTL_EXECUTE",
				sizeof (meltcdat->dstr_296__HOOK_RTL_EXECUTE.
					val) - 1);
  meltcdat->dstr_296__HOOK_RTL_EXECUTE.val[16] = (char) 0;
  meltcdat->dstr_296__HOOK_RTL_EXECUTE.slen = 16;

  /*inimult dtup_297___HOOK_RTL_EXECUTE */
 /*_._VALTUP___V328*/ meltfptr[327] =
    (melt_ptr_t) & meltcdat->dtup_297___HOOK_RTL_EXECUTE;
  meltcdat->dtup_297___HOOK_RTL_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_297___HOOK_RTL_EXECUTE.nbval = 0;
  /*inimult dtup_298___HOOK_RTL_EXECUTE */
 /*_._VALTUP___V329*/ meltfptr[328] =
    (melt_ptr_t) & meltcdat->dtup_298___HOOK_RTL_EXECUTE;
  meltcdat->dtup_298___HOOK_RTL_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_298___HOOK_RTL_EXECUTE.nbval = 0;

/*inihook dhook__299__HOOK_SIMPLE_IPA_GATE */
  meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_SIMPLE_IPA_GATE data */
  meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE.nbval = 5;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE,
			  melthook_HOOK_SIMPLE_IPA_GATE);
  meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE.hookdata =
    /*_._VALDATA___V331*/ meltfptr[330];
  strncpy (meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE.hookname,
	   "HOOK_SIMPLE_IPA_GATE",
	   sizeof (meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE.hookname) - 1);
/*predefinedhook HOOK_SIMPLE_IPA_GATE for dhook__299__HOOK_SIMPLE_IPA_GATE*/
  if (!MELT_PREDEF (HOOK_SIMPLE_IPA_GATE))
    MELT_STORE_PREDEF (HOOK_SIMPLE_IPA_GATE,
		       (melt_ptr_t) & meltcdat->
		       dhook__299__HOOK_SIMPLE_IPA_GATE);

  /*_._VALHOOK___V330*/ meltfptr[329] =
  /*inihooklocvar HOOK_SIMPLE_IPA_GATE */
  (melt_ptr_t) & meltcdat->dhook__299__HOOK_SIMPLE_IPA_GATE;

  /*done inihook dhook__299__HOOK_SIMPLE_IPA_GATE */

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ iniobj");

/*iniobj dobj_300__*/
/*_._VALDATA___V331*/ meltfptr[330] = (melt_ptr_t) & meltcdat->dobj_300__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_300__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_300__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_300__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_300__.obj_hash = 704489631;
  meltcdat->dobj_300__.obj_len = 6;


/*inistring dstr_301__HOOK_SIMPLE_IPA_GATE*/
 /*_._VALSTR___V332*/ meltfptr[331] =
    (melt_ptr_t) & meltcdat->dstr_301__HOOK_SIMPLE_IPA_GATE;
  meltcdat->dstr_301__HOOK_SIMPLE_IPA_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_301__HOOK_SIMPLE_IPA_GATE.val,
				"HOOK_SIMPLE_IPA_GATE",
				sizeof (meltcdat->
					dstr_301__HOOK_SIMPLE_IPA_GATE.val) -
				1);
  meltcdat->dstr_301__HOOK_SIMPLE_IPA_GATE.val[20] = (char) 0;
  meltcdat->dstr_301__HOOK_SIMPLE_IPA_GATE.slen = 20;

  /*inimult dtup_302___HOOK_SIMPLE_IPA_GATE */
 /*_._VALTUP___V333*/ meltfptr[332] =
    (melt_ptr_t) & meltcdat->dtup_302___HOOK_SIMPLE_IPA_GATE;
  meltcdat->dtup_302___HOOK_SIMPLE_IPA_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_302___HOOK_SIMPLE_IPA_GATE.nbval = 0;
  /*inimult dtup_303___HOOK_SIMPLE_IPA_GATE */
 /*_._VALTUP___V334*/ meltfptr[333] =
    (melt_ptr_t) & meltcdat->dtup_303___HOOK_SIMPLE_IPA_GATE;
  meltcdat->dtup_303___HOOK_SIMPLE_IPA_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_303___HOOK_SIMPLE_IPA_GATE.nbval = 0;

/*iniobj dsym_304__CLASS_GCC_SIMPLE_IPA_PASS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V335*/ meltfptr[334])
/*_._VALDATA___V335*/ meltfptr[334] =
      (melt_ptr_t) & meltcdat->dsym_304__CLASS_GCC_SIMPLE_IPA_PASS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_304__CLASS_GCC_SIMPLE_IPA_PASS",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_304__CLASS_GCC_SIMPLE_IPA_PASS",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_304__CLASS_GCC_SIMPLE_IPA_PASS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_304__CLASS_GCC_SIMPLE_IPA_PASS.obj_hash = 827993790;
  meltcdat->dsym_304__CLASS_GCC_SIMPLE_IPA_PASS.obj_len = 3;


/*inistring dstr_305__CLASS_GCC_SIMPLE_IPA_PAS*/
 /*_._VALSTR___V336*/ meltfptr[335] =
    (melt_ptr_t) & meltcdat->dstr_305__CLASS_GCC_SIMPLE_IPA_PAS;
  meltcdat->dstr_305__CLASS_GCC_SIMPLE_IPA_PAS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_305__CLASS_GCC_SIMPLE_IPA_PAS.
				val, "CLASS_GCC_SIMPLE_IPA_PASS",
				sizeof (meltcdat->
					dstr_305__CLASS_GCC_SIMPLE_IPA_PAS.
					val) - 1);
  meltcdat->dstr_305__CLASS_GCC_SIMPLE_IPA_PAS.val[25] = (char) 0;
  meltcdat->dstr_305__CLASS_GCC_SIMPLE_IPA_PAS.slen = 25;


/*inihook dhook__306__HOOK_SIMPLE_IPA_EXECUTE */
  meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_SIMPLE_IPA_EXECUTE data */
  meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE,
			  melthook_HOOK_SIMPLE_IPA_EXECUTE);
  meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE.hookdata =
    /*_._VALDATA___V338*/ meltfptr[337];
  strncpy (meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE.hookname,
	   "HOOK_SIMPLE_IPA_EXECUTE",
	   sizeof (meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE.hookname) -
	   1);
/*predefinedhook HOOK_SIMPLE_IPA_EXECUTE for dhook__306__HOOK_SIMPLE_IPA_EXECUTE*/
  if (!MELT_PREDEF (HOOK_SIMPLE_IPA_EXECUTE))
    MELT_STORE_PREDEF (HOOK_SIMPLE_IPA_EXECUTE,
		       (melt_ptr_t) & meltcdat->
		       dhook__306__HOOK_SIMPLE_IPA_EXECUTE);

  /*_._VALHOOK___V337*/ meltfptr[336] =
  /*inihooklocvar HOOK_SIMPLE_IPA_EXECUTE */
  (melt_ptr_t) & meltcdat->dhook__306__HOOK_SIMPLE_IPA_EXECUTE;

  /*done inihook dhook__306__HOOK_SIMPLE_IPA_EXECUTE */

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ iniobj");

/*iniobj dobj_307__*/
/*_._VALDATA___V338*/ meltfptr[337] = (melt_ptr_t) & meltcdat->dobj_307__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_307__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_307__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_307__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_307__.obj_hash = 398187649;
  meltcdat->dobj_307__.obj_len = 6;


/*inistring dstr_308__HOOK_SIMPLE_IPA_EXECUTE*/
 /*_._VALSTR___V339*/ meltfptr[338] =
    (melt_ptr_t) & meltcdat->dstr_308__HOOK_SIMPLE_IPA_EXECUTE;
  meltcdat->dstr_308__HOOK_SIMPLE_IPA_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_308__HOOK_SIMPLE_IPA_EXECUTE.
				val, "HOOK_SIMPLE_IPA_EXECUTE",
				sizeof (meltcdat->
					dstr_308__HOOK_SIMPLE_IPA_EXECUTE.
					val) - 1);
  meltcdat->dstr_308__HOOK_SIMPLE_IPA_EXECUTE.val[23] = (char) 0;
  meltcdat->dstr_308__HOOK_SIMPLE_IPA_EXECUTE.slen = 23;

  /*inimult dtup_309___HOOK_SIMPLE_IPA_EXECUTE */
 /*_._VALTUP___V340*/ meltfptr[339] =
    (melt_ptr_t) & meltcdat->dtup_309___HOOK_SIMPLE_IPA_EXECUTE;
  meltcdat->dtup_309___HOOK_SIMPLE_IPA_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_309___HOOK_SIMPLE_IPA_EXECUTE.nbval = 0;
  /*inimult dtup_310___HOOK_SIMPLE_IPA_EXECUTE */
 /*_._VALTUP___V341*/ meltfptr[340] =
    (melt_ptr_t) & meltcdat->dtup_310___HOOK_SIMPLE_IPA_EXECUTE;
  meltcdat->dtup_310___HOOK_SIMPLE_IPA_EXECUTE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_310___HOOK_SIMPLE_IPA_EXECUTE.nbval = 0;

/*iniobj dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V342*/ meltfptr[341])
/*_._VALDATA___V342*/ meltfptr[341] =
      (melt_ptr_t) & meltcdat->dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE.obj_hash = 901100261;
  meltcdat->dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_312__ATTRIBUTE_DEFINER_DELAYE*/
 /*_._VALSTR___V343*/ meltfptr[342] =
    (melt_ptr_t) & meltcdat->dstr_312__ATTRIBUTE_DEFINER_DELAYE;
  meltcdat->dstr_312__ATTRIBUTE_DEFINER_DELAYE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_312__ATTRIBUTE_DEFINER_DELAYE.
				val, "ATTRIBUTE_DEFINER_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_312__ATTRIBUTE_DEFINER_DELAYE.
					val) - 1);
  meltcdat->dstr_312__ATTRIBUTE_DEFINER_DELAYE.val[31] = (char) 0;
  meltcdat->dstr_312__ATTRIBUTE_DEFINER_DELAYE.slen = 31;

  MELT_LOCATION ("warmelt-hooks.melt:2150:/ iniobj");

/*iniobj dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE*/
/*_._VALDATA___V344*/ meltfptr[343] =
    (melt_ptr_t) & meltcdat->dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE.obj_hash = 162482111;
  meltcdat->dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_314__attribute_definer_delaye*/
 /*_._VALSTR___V347*/ meltfptr[346] =
    (melt_ptr_t) & meltcdat->dstr_314__attribute_definer_delaye;
  meltcdat->dstr_314__attribute_definer_delaye.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_314__attribute_definer_delaye.
				val, "attribute_definer_delayed_queue",
				sizeof (meltcdat->
					dstr_314__attribute_definer_delaye.
					val) - 1);
  meltcdat->dstr_314__attribute_definer_delaye.val[31] = (char) 0;
  meltcdat->dstr_314__attribute_definer_delaye.slen = 31;


/*inihook dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER */
  meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_MELT_ATTRIBUTE_DEFINER data */
  meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER.nbval = 4;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER,
			  melthook_HOOK_MELT_ATTRIBUTE_DEFINER);
  meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER.hookdata =
    /*_._VALDATA___V349*/ meltfptr[348];
  strncpy (meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER.hookname,
	   "HOOK_MELT_ATTRIBUTE_DEFINER",
	   sizeof (meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER.
		   hookname) - 1);
/*predefinedhook HOOK_MELT_ATTRIBUTE_DEFINER for dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER*/
  if (!MELT_PREDEF (HOOK_MELT_ATTRIBUTE_DEFINER))
    MELT_STORE_PREDEF (HOOK_MELT_ATTRIBUTE_DEFINER,
		       (melt_ptr_t) & meltcdat->
		       dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER);

  /*_._VALHOOK___V348*/ meltfptr[347] =
  /*inihooklocvar HOOK_MELT_ATTRIBUTE_DEFINER */
  (melt_ptr_t) & meltcdat->dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER;

  /*done inihook dhook__315__HOOK_MELT_ATTRIBUTE_DEFINER */

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ iniobj");

/*iniobj dobj_316__*/
/*_._VALDATA___V349*/ meltfptr[348] = (melt_ptr_t) & meltcdat->dobj_316__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_316__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_316__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_316__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_316__.obj_hash = 376248368;
  meltcdat->dobj_316__.obj_len = 6;


/*inistring dstr_317__HOOK_MELT_ATTRIBUTE_DEFI*/
 /*_._VALSTR___V350*/ meltfptr[349] =
    (melt_ptr_t) & meltcdat->dstr_317__HOOK_MELT_ATTRIBUTE_DEFI;
  meltcdat->dstr_317__HOOK_MELT_ATTRIBUTE_DEFI.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_317__HOOK_MELT_ATTRIBUTE_DEFI.
				val, "HOOK_MELT_ATTRIBUTE_DEFINER",
				sizeof (meltcdat->
					dstr_317__HOOK_MELT_ATTRIBUTE_DEFI.
					val) - 1);
  meltcdat->dstr_317__HOOK_MELT_ATTRIBUTE_DEFI.val[27] = (char) 0;
  meltcdat->dstr_317__HOOK_MELT_ATTRIBUTE_DEFI.slen = 27;


/*iniobj dsym_318__DECL*/
  /*uniqueobj*/ if (! /*_._VALDATA___V352*/ meltfptr[351])
/*_._VALDATA___V352*/ meltfptr[351] =
      (melt_ptr_t) & meltcdat->dsym_318__DECL;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_318__DECL",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_318__DECL",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_318__DECL.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_318__DECL.obj_hash = 648196018;
  meltcdat->dsym_318__DECL.obj_len = 3;


/*inistring dstr_319__DECL*/
 /*_._VALSTR___V353*/ meltfptr[352] =
    (melt_ptr_t) & meltcdat->dstr_319__DECL;
  meltcdat->dstr_319__DECL.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_319__DECL.val, "DECL",
				sizeof (meltcdat->dstr_319__DECL.val) - 1);
  meltcdat->dstr_319__DECL.val[4] = (char) 0;
  meltcdat->dstr_319__DECL.slen = 4;

  /*^iniobj */

/*iniobj dobj_320*/
/*_._VALDATA___V351*/ meltfptr[350] = (melt_ptr_t) & meltcdat->dobj_320;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_320",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_320",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_320.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_320.obj_num = 0;
  meltcdat->dobj_320.obj_hash = 720651171;
  meltcdat->dobj_320.obj_len = 2;


/*iniobj dsym_321__NAME*/
  /*uniqueobj*/ if (! /*_._VALDATA___V355*/ meltfptr[354])
/*_._VALDATA___V355*/ meltfptr[354] =
      (melt_ptr_t) & meltcdat->dsym_321__NAME;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_321__NAME",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_321__NAME",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_321__NAME.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_321__NAME.obj_hash = 620199109;
  meltcdat->dsym_321__NAME.obj_len = 3;


/*inistring dstr_322__NAME*/
 /*_._VALSTR___V356*/ meltfptr[355] =
    (melt_ptr_t) & meltcdat->dstr_322__NAME;
  meltcdat->dstr_322__NAME.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_322__NAME.val, "NAME",
				sizeof (meltcdat->dstr_322__NAME.val) - 1);
  meltcdat->dstr_322__NAME.val[4] = (char) 0;
  meltcdat->dstr_322__NAME.slen = 4;

  /*^iniobj */

/*iniobj dobj_323*/
/*_._VALDATA___V354*/ meltfptr[353] = (melt_ptr_t) & meltcdat->dobj_323;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_323",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_323",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_323.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_323.obj_num = 1;
  meltcdat->dobj_323.obj_hash = 714863448;
  meltcdat->dobj_323.obj_len = 2;


/*iniobj dsym_324__ATTRSEQ*/
  /*uniqueobj*/ if (! /*_._VALDATA___V358*/ meltfptr[357])
/*_._VALDATA___V358*/ meltfptr[357] =
      (melt_ptr_t) & meltcdat->dsym_324__ATTRSEQ;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_324__ATTRSEQ",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_324__ATTRSEQ",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_324__ATTRSEQ.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_324__ATTRSEQ.obj_hash = 861431209;
  meltcdat->dsym_324__ATTRSEQ.obj_len = 3;


/*inistring dstr_325__ATTRSEQ*/
 /*_._VALSTR___V359*/ meltfptr[358] =
    (melt_ptr_t) & meltcdat->dstr_325__ATTRSEQ;
  meltcdat->dstr_325__ATTRSEQ.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_325__ATTRSEQ.val, "ATTRSEQ",
				sizeof (meltcdat->dstr_325__ATTRSEQ.val) - 1);
  meltcdat->dstr_325__ATTRSEQ.val[7] = (char) 0;
  meltcdat->dstr_325__ATTRSEQ.slen = 7;

  /*^iniobj */

/*iniobj dobj_326*/
/*_._VALDATA___V357*/ meltfptr[356] = (melt_ptr_t) & meltcdat->dobj_326;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_326",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_326",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_326.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_326.obj_num = 2;
  meltcdat->dobj_326.obj_hash = 679031654;
  meltcdat->dobj_326.obj_len = 2;


/*iniobj dsym_327__FILELOC*/
  /*uniqueobj*/ if (! /*_._VALDATA___V361*/ meltfptr[360])
/*_._VALDATA___V361*/ meltfptr[360] =
      (melt_ptr_t) & meltcdat->dsym_327__FILELOC;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_327__FILELOC",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_327__FILELOC",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_327__FILELOC.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_327__FILELOC.obj_hash = 359897882;
  meltcdat->dsym_327__FILELOC.obj_len = 3;


/*inistring dstr_328__FILELOC*/
 /*_._VALSTR___V362*/ meltfptr[361] =
    (melt_ptr_t) & meltcdat->dstr_328__FILELOC;
  meltcdat->dstr_328__FILELOC.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_328__FILELOC.val, "FILELOC",
				sizeof (meltcdat->dstr_328__FILELOC.val) - 1);
  meltcdat->dstr_328__FILELOC.val[7] = (char) 0;
  meltcdat->dstr_328__FILELOC.slen = 7;

  /*^iniobj */

/*iniobj dobj_329*/
/*_._VALDATA___V360*/ meltfptr[359] = (melt_ptr_t) & meltcdat->dobj_329;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_329",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_329",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_329.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_329.obj_num = 3;
  meltcdat->dobj_329.obj_hash = 651402622;
  meltcdat->dobj_329.obj_len = 2;

  /*^iniobj */

/*iniobj dobj_330*/
/*_._VALDATA___V363*/ meltfptr[362] = (melt_ptr_t) & meltcdat->dobj_330;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_330",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_330",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_330.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_330.obj_num = 4;
  meltcdat->dobj_330.obj_hash = 11252268;
  meltcdat->dobj_330.obj_len = 2;

  /*inimult dtup_331___HOOK_MELT_ATTRIBUTE_DEFINER */
 /*_._VALTUP___V364*/ meltfptr[363] =
    (melt_ptr_t) & meltcdat->dtup_331___HOOK_MELT_ATTRIBUTE_DEFINER;
  meltcdat->dtup_331___HOOK_MELT_ATTRIBUTE_DEFINER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_331___HOOK_MELT_ATTRIBUTE_DEFINER.nbval = 5;
  /*inimult dtup_332___HOOK_MELT_ATTRIBUTE_DEFINER */
 /*_._VALTUP___V365*/ meltfptr[364] =
    (melt_ptr_t) & meltcdat->dtup_332___HOOK_MELT_ATTRIBUTE_DEFINER;
  meltcdat->dtup_332___HOOK_MELT_ATTRIBUTE_DEFINER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_332___HOOK_MELT_ATTRIBUTE_DEFINER.nbval = 0;
  /*inirout drout_333__AT_MELT_ATTRIBUTE_FIRST */
 /*_._VALROUT___V366*/ meltfptr[365] =
    (melt_ptr_t) & meltcdat->drout_333__AT_MELT_ATTRIBUTE_FIRST;
  meltcdat->drout_333__AT_MELT_ATTRIBUTE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_333__AT_MELT_ATTRIBUTE_FIRST.routdescr,
	   "AT_MELT_ATTRIBUTE_FIRST @warmelt-hooks.melt:2187",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_333__AT_MELT_ATTRIBUTE_FIRST.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_333__AT_MELT_ATTRIBUTE_FIRST,
			     meltrout_72_WARMELTmiHOOKS_AT_MELT_ATTRIBUTE_FIRST);

  /*iniclos dclo_334__AT_MELT_ATTRIBUTE_FIRST */
 /*_._VALCLO___V367*/ meltfptr[366] =
    (melt_ptr_t) & meltcdat->dclo_334__AT_MELT_ATTRIBUTE_FIRST;
  meltcdat->dclo_334__AT_MELT_ATTRIBUTE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_334__AT_MELT_ATTRIBUTE_FIRST.nbval = 0;

  /*inirout drout_335__AT_MELT_ATTRIBUTE_LAST */
 /*_._VALROUT___V368*/ meltfptr[367] =
    (melt_ptr_t) & meltcdat->drout_335__AT_MELT_ATTRIBUTE_LAST;
  meltcdat->drout_335__AT_MELT_ATTRIBUTE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_335__AT_MELT_ATTRIBUTE_LAST.routdescr,
	   "AT_MELT_ATTRIBUTE_LAST @warmelt-hooks.melt:2196",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_335__AT_MELT_ATTRIBUTE_LAST.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_335__AT_MELT_ATTRIBUTE_LAST,
			     meltrout_73_WARMELTmiHOOKS_AT_MELT_ATTRIBUTE_LAST);

  /*iniclos dclo_336__AT_MELT_ATTRIBUTE_LAST */
 /*_._VALCLO___V369*/ meltfptr[368] =
    (melt_ptr_t) & meltcdat->dclo_336__AT_MELT_ATTRIBUTE_LAST;
  meltcdat->dclo_336__AT_MELT_ATTRIBUTE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_336__AT_MELT_ATTRIBUTE_LAST.nbval = 0;


/*iniobj dsym_337__FINAL_EXIT_DELAYED_QUEUE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V370*/ meltfptr[369])
/*_._VALDATA___V370*/ meltfptr[369] =
      (melt_ptr_t) & meltcdat->dsym_337__FINAL_EXIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_337__FINAL_EXIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_337__FINAL_EXIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_337__FINAL_EXIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_337__FINAL_EXIT_DELAYED_QUEUE.obj_hash = 827653382;
  meltcdat->dsym_337__FINAL_EXIT_DELAYED_QUEUE.obj_len = 3;


/*inistring dstr_338__FINAL_EXIT_DELAYED_QUEUE*/
 /*_._VALSTR___V371*/ meltfptr[370] =
    (melt_ptr_t) & meltcdat->dstr_338__FINAL_EXIT_DELAYED_QUEUE;
  meltcdat->dstr_338__FINAL_EXIT_DELAYED_QUEUE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_338__FINAL_EXIT_DELAYED_QUEUE.
				val, "FINAL_EXIT_DELAYED_QUEUE",
				sizeof (meltcdat->
					dstr_338__FINAL_EXIT_DELAYED_QUEUE.
					val) - 1);
  meltcdat->dstr_338__FINAL_EXIT_DELAYED_QUEUE.val[24] = (char) 0;
  meltcdat->dstr_338__FINAL_EXIT_DELAYED_QUEUE.slen = 24;

  MELT_LOCATION ("warmelt-hooks.melt:2208:/ iniobj");

/*iniobj dobj_339__FINAL_EXIT_DELAYED_QUEUE*/
/*_._VALDATA___V372*/ meltfptr[371] =
    (melt_ptr_t) & meltcdat->dobj_339__FINAL_EXIT_DELAYED_QUEUE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dobj_339__FINAL_EXIT_DELAYED_QUEUE",
       melt_magic_discr ((melt_ptr_t)
			 ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6])) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dobj_339__FINAL_EXIT_DELAYED_QUEUE",
       ((meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_339__FINAL_EXIT_DELAYED_QUEUE.meltobj_class =
    (meltobject_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);
  meltcdat->dobj_339__FINAL_EXIT_DELAYED_QUEUE.obj_hash = 40211092;
  meltcdat->dobj_339__FINAL_EXIT_DELAYED_QUEUE.obj_len = 5;


/*inistring dstr_340__final_exit_delayed_queue*/
 /*_._VALSTR___V375*/ meltfptr[374] =
    (melt_ptr_t) & meltcdat->dstr_340__final_exit_delayed_queue;
  meltcdat->dstr_340__final_exit_delayed_queue.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_340__final_exit_delayed_queue.
				val, "final_exit_delayed_queue",
				sizeof (meltcdat->
					dstr_340__final_exit_delayed_queue.
					val) - 1);
  meltcdat->dstr_340__final_exit_delayed_queue.val[24] = (char) 0;
  meltcdat->dstr_340__final_exit_delayed_queue.slen = 24;


/*inihook dhook__341__HOOK_EXIT_FINALIZER */
  meltcdat->dhook__341__HOOK_EXIT_FINALIZER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_EXIT_FINALIZER data */
  meltcdat->dhook__341__HOOK_EXIT_FINALIZER.nbval = 4;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__341__HOOK_EXIT_FINALIZER,
			  melthook_HOOK_EXIT_FINALIZER);
  meltcdat->dhook__341__HOOK_EXIT_FINALIZER.hookdata =
    /*_._VALDATA___V377*/ meltfptr[376];
  strncpy (meltcdat->dhook__341__HOOK_EXIT_FINALIZER.hookname,
	   "HOOK_EXIT_FINALIZER",
	   sizeof (meltcdat->dhook__341__HOOK_EXIT_FINALIZER.hookname) - 1);
/*predefinedhook HOOK_EXIT_FINALIZER for dhook__341__HOOK_EXIT_FINALIZER*/
  if (!MELT_PREDEF (HOOK_EXIT_FINALIZER))
    MELT_STORE_PREDEF (HOOK_EXIT_FINALIZER,
		       (melt_ptr_t) & meltcdat->
		       dhook__341__HOOK_EXIT_FINALIZER);

  /*_._VALHOOK___V376*/ meltfptr[375] =
  /*inihooklocvar HOOK_EXIT_FINALIZER */
  (melt_ptr_t) & meltcdat->dhook__341__HOOK_EXIT_FINALIZER;

  /*done inihook dhook__341__HOOK_EXIT_FINALIZER */

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ iniobj");

/*iniobj dobj_342__*/
/*_._VALDATA___V377*/ meltfptr[376] = (melt_ptr_t) & meltcdat->dobj_342__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_342__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_342__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_342__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_342__.obj_hash = 26023081;
  meltcdat->dobj_342__.obj_len = 6;


/*inistring dstr_343__HOOK_EXIT_FINALIZER*/
 /*_._VALSTR___V378*/ meltfptr[377] =
    (melt_ptr_t) & meltcdat->dstr_343__HOOK_EXIT_FINALIZER;
  meltcdat->dstr_343__HOOK_EXIT_FINALIZER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_343__HOOK_EXIT_FINALIZER.val,
				"HOOK_EXIT_FINALIZER",
				sizeof (meltcdat->
					dstr_343__HOOK_EXIT_FINALIZER.val) -
				1);
  meltcdat->dstr_343__HOOK_EXIT_FINALIZER.val[19] = (char) 0;
  meltcdat->dstr_343__HOOK_EXIT_FINALIZER.slen = 19;

  /*inimult dtup_344___HOOK_EXIT_FINALIZER */
 /*_._VALTUP___V379*/ meltfptr[378] =
    (melt_ptr_t) & meltcdat->dtup_344___HOOK_EXIT_FINALIZER;
  meltcdat->dtup_344___HOOK_EXIT_FINALIZER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_344___HOOK_EXIT_FINALIZER.nbval = 0;
  /*inimult dtup_345___HOOK_EXIT_FINALIZER */
 /*_._VALTUP___V380*/ meltfptr[379] =
    (melt_ptr_t) & meltcdat->dtup_345___HOOK_EXIT_FINALIZER;
  meltcdat->dtup_345___HOOK_EXIT_FINALIZER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_345___HOOK_EXIT_FINALIZER.nbval = 0;
  /*inirout drout_346__AT_EXIT_FIRST */
 /*_._VALROUT___V381*/ meltfptr[380] =
    (melt_ptr_t) & meltcdat->drout_346__AT_EXIT_FIRST;
  meltcdat->drout_346__AT_EXIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_346__AT_EXIT_FIRST.routdescr,
	   "AT_EXIT_FIRST @warmelt-hooks.melt:2241", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_346__AT_EXIT_FIRST.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_346__AT_EXIT_FIRST,
			     meltrout_75_WARMELTmiHOOKS_AT_EXIT_FIRST);

  /*iniclos dclo_347__AT_EXIT_FIRST */
 /*_._VALCLO___V382*/ meltfptr[381] =
    (melt_ptr_t) & meltcdat->dclo_347__AT_EXIT_FIRST;
  meltcdat->dclo_347__AT_EXIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_347__AT_EXIT_FIRST.nbval = 0;

  /*inirout drout_348__AT_EXIT_LAST */
 /*_._VALROUT___V383*/ meltfptr[382] =
    (melt_ptr_t) & meltcdat->drout_348__AT_EXIT_LAST;
  meltcdat->drout_348__AT_EXIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_348__AT_EXIT_LAST.routdescr,
	   "AT_EXIT_LAST @warmelt-hooks.melt:2249", MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_348__AT_EXIT_LAST.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_348__AT_EXIT_LAST,
			     meltrout_76_WARMELTmiHOOKS_AT_EXIT_LAST);

  /*iniclos dclo_349__AT_EXIT_LAST */
 /*_._VALCLO___V384*/ meltfptr[383] =
    (melt_ptr_t) & meltcdat->dclo_349__AT_EXIT_LAST;
  meltcdat->dclo_349__AT_EXIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_349__AT_EXIT_LAST.nbval = 0;


/*iniobj dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V385*/ meltfptr[384])
/*_._VALDATA___V385*/ meltfptr[384] =
      (melt_ptr_t) & meltcdat->dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST.obj_hash = 766467953;
  meltcdat->dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST.obj_len = 3;


/*inistring dstr_351__AT_END_OF_THIS_MELT_PASS*/
 /*_._VALSTR___V386*/ meltfptr[385] =
    (melt_ptr_t) & meltcdat->dstr_351__AT_END_OF_THIS_MELT_PASS;
  meltcdat->dstr_351__AT_END_OF_THIS_MELT_PASS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_351__AT_END_OF_THIS_MELT_PASS.
				val, "AT_END_OF_THIS_MELT_PASS_FIRST",
				sizeof (meltcdat->
					dstr_351__AT_END_OF_THIS_MELT_PASS.
					val) - 1);
  meltcdat->dstr_351__AT_END_OF_THIS_MELT_PASS.val[30] = (char) 0;
  meltcdat->dstr_351__AT_END_OF_THIS_MELT_PASS.slen = 30;


/*iniobj dsym_352__AT_END_OF_THIS_MELT_PASS_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V387*/ meltfptr[386])
/*_._VALDATA___V387*/ meltfptr[386] =
      (melt_ptr_t) & meltcdat->dsym_352__AT_END_OF_THIS_MELT_PASS_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_352__AT_END_OF_THIS_MELT_PASS_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_352__AT_END_OF_THIS_MELT_PASS_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_352__AT_END_OF_THIS_MELT_PASS_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_352__AT_END_OF_THIS_MELT_PASS_LAST.obj_hash = 320563716;
  meltcdat->dsym_352__AT_END_OF_THIS_MELT_PASS_LAST.obj_len = 3;


/*inistring dstr_353__AT_END_OF_THIS_MELT_PASS*/
 /*_._VALSTR___V388*/ meltfptr[387] =
    (melt_ptr_t) & meltcdat->dstr_353__AT_END_OF_THIS_MELT_PASS;
  meltcdat->dstr_353__AT_END_OF_THIS_MELT_PASS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_353__AT_END_OF_THIS_MELT_PASS.
				val, "AT_END_OF_THIS_MELT_PASS_LAST",
				sizeof (meltcdat->
					dstr_353__AT_END_OF_THIS_MELT_PASS.
					val) - 1);
  meltcdat->dstr_353__AT_END_OF_THIS_MELT_PASS.val[29] = (char) 0;
  meltcdat->dstr_353__AT_END_OF_THIS_MELT_PASS.slen = 29;


/*iniobj dsym_354__AT_EXIT_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V389*/ meltfptr[388])
/*_._VALDATA___V389*/ meltfptr[388] =
      (melt_ptr_t) & meltcdat->dsym_354__AT_EXIT_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_354__AT_EXIT_FIRST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_354__AT_EXIT_FIRST",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_354__AT_EXIT_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_354__AT_EXIT_FIRST.obj_hash = 778836748;
  meltcdat->dsym_354__AT_EXIT_FIRST.obj_len = 3;


/*inistring dstr_355__AT_EXIT_FIRST*/
 /*_._VALSTR___V390*/ meltfptr[389] =
    (melt_ptr_t) & meltcdat->dstr_355__AT_EXIT_FIRST;
  meltcdat->dstr_355__AT_EXIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_355__AT_EXIT_FIRST.val,
				"AT_EXIT_FIRST",
				sizeof (meltcdat->dstr_355__AT_EXIT_FIRST.
					val) - 1);
  meltcdat->dstr_355__AT_EXIT_FIRST.val[13] = (char) 0;
  meltcdat->dstr_355__AT_EXIT_FIRST.slen = 13;


/*iniobj dsym_356__AT_EXIT_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V391*/ meltfptr[390])
/*_._VALDATA___V391*/ meltfptr[390] =
      (melt_ptr_t) & meltcdat->dsym_356__AT_EXIT_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_356__AT_EXIT_LAST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_356__AT_EXIT_LAST",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_356__AT_EXIT_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_356__AT_EXIT_LAST.obj_hash = 554176281;
  meltcdat->dsym_356__AT_EXIT_LAST.obj_len = 3;


/*inistring dstr_357__AT_EXIT_LAST*/
 /*_._VALSTR___V392*/ meltfptr[391] =
    (melt_ptr_t) & meltcdat->dstr_357__AT_EXIT_LAST;
  meltcdat->dstr_357__AT_EXIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_357__AT_EXIT_LAST.val,
				"AT_EXIT_LAST",
				sizeof (meltcdat->dstr_357__AT_EXIT_LAST.
					val) - 1);
  meltcdat->dstr_357__AT_EXIT_LAST.val[12] = (char) 0;
  meltcdat->dstr_357__AT_EXIT_LAST.slen = 12;


/*iniobj dsym_358__AT_FINISH_UNIT_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V393*/ meltfptr[392])
/*_._VALDATA___V393*/ meltfptr[392] =
      (melt_ptr_t) & meltcdat->dsym_358__AT_FINISH_UNIT_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_358__AT_FINISH_UNIT_FIRST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_358__AT_FINISH_UNIT_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_358__AT_FINISH_UNIT_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_358__AT_FINISH_UNIT_FIRST.obj_hash = 390084996;
  meltcdat->dsym_358__AT_FINISH_UNIT_FIRST.obj_len = 3;


/*inistring dstr_359__AT_FINISH_UNIT_FIRST*/
 /*_._VALSTR___V394*/ meltfptr[393] =
    (melt_ptr_t) & meltcdat->dstr_359__AT_FINISH_UNIT_FIRST;
  meltcdat->dstr_359__AT_FINISH_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_359__AT_FINISH_UNIT_FIRST.val,
				"AT_FINISH_UNIT_FIRST",
				sizeof (meltcdat->
					dstr_359__AT_FINISH_UNIT_FIRST.val) -
				1);
  meltcdat->dstr_359__AT_FINISH_UNIT_FIRST.val[20] = (char) 0;
  meltcdat->dstr_359__AT_FINISH_UNIT_FIRST.slen = 20;


/*iniobj dsym_360__AT_FINISH_UNIT_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V395*/ meltfptr[394])
/*_._VALDATA___V395*/ meltfptr[394] =
      (melt_ptr_t) & meltcdat->dsym_360__AT_FINISH_UNIT_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_360__AT_FINISH_UNIT_LAST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_360__AT_FINISH_UNIT_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_360__AT_FINISH_UNIT_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_360__AT_FINISH_UNIT_LAST.obj_hash = 289829591;
  meltcdat->dsym_360__AT_FINISH_UNIT_LAST.obj_len = 3;


/*inistring dstr_361__AT_FINISH_UNIT_LAST*/
 /*_._VALSTR___V396*/ meltfptr[395] =
    (melt_ptr_t) & meltcdat->dstr_361__AT_FINISH_UNIT_LAST;
  meltcdat->dstr_361__AT_FINISH_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_361__AT_FINISH_UNIT_LAST.val,
				"AT_FINISH_UNIT_LAST",
				sizeof (meltcdat->
					dstr_361__AT_FINISH_UNIT_LAST.val) -
				1);
  meltcdat->dstr_361__AT_FINISH_UNIT_LAST.val[19] = (char) 0;
  meltcdat->dstr_361__AT_FINISH_UNIT_LAST.slen = 19;


/*iniobj dsym_362__AT_MELT_ATTRIBUTE_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V397*/ meltfptr[396])
/*_._VALDATA___V397*/ meltfptr[396] =
      (melt_ptr_t) & meltcdat->dsym_362__AT_MELT_ATTRIBUTE_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_362__AT_MELT_ATTRIBUTE_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_362__AT_MELT_ATTRIBUTE_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_362__AT_MELT_ATTRIBUTE_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_362__AT_MELT_ATTRIBUTE_FIRST.obj_hash = 946601022;
  meltcdat->dsym_362__AT_MELT_ATTRIBUTE_FIRST.obj_len = 3;


/*inistring dstr_363__AT_MELT_ATTRIBUTE_FIRST*/
 /*_._VALSTR___V398*/ meltfptr[397] =
    (melt_ptr_t) & meltcdat->dstr_363__AT_MELT_ATTRIBUTE_FIRST;
  meltcdat->dstr_363__AT_MELT_ATTRIBUTE_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_363__AT_MELT_ATTRIBUTE_FIRST.
				val, "AT_MELT_ATTRIBUTE_FIRST",
				sizeof (meltcdat->
					dstr_363__AT_MELT_ATTRIBUTE_FIRST.
					val) - 1);
  meltcdat->dstr_363__AT_MELT_ATTRIBUTE_FIRST.val[23] = (char) 0;
  meltcdat->dstr_363__AT_MELT_ATTRIBUTE_FIRST.slen = 23;


/*iniobj dsym_364__AT_MELT_ATTRIBUTE_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V399*/ meltfptr[398])
/*_._VALDATA___V399*/ meltfptr[398] =
      (melt_ptr_t) & meltcdat->dsym_364__AT_MELT_ATTRIBUTE_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_364__AT_MELT_ATTRIBUTE_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_364__AT_MELT_ATTRIBUTE_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_364__AT_MELT_ATTRIBUTE_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_364__AT_MELT_ATTRIBUTE_LAST.obj_hash = 673731166;
  meltcdat->dsym_364__AT_MELT_ATTRIBUTE_LAST.obj_len = 3;


/*inistring dstr_365__AT_MELT_ATTRIBUTE_LAST*/
 /*_._VALSTR___V400*/ meltfptr[399] =
    (melt_ptr_t) & meltcdat->dstr_365__AT_MELT_ATTRIBUTE_LAST;
  meltcdat->dstr_365__AT_MELT_ATTRIBUTE_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_365__AT_MELT_ATTRIBUTE_LAST.
				val, "AT_MELT_ATTRIBUTE_LAST",
				sizeof (meltcdat->
					dstr_365__AT_MELT_ATTRIBUTE_LAST.
					val) - 1);
  meltcdat->dstr_365__AT_MELT_ATTRIBUTE_LAST.val[22] = (char) 0;
  meltcdat->dstr_365__AT_MELT_ATTRIBUTE_LAST.slen = 22;


/*iniobj dsym_366__AT_START_UNIT_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V401*/ meltfptr[400])
/*_._VALDATA___V401*/ meltfptr[400] =
      (melt_ptr_t) & meltcdat->dsym_366__AT_START_UNIT_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_366__AT_START_UNIT_FIRST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_366__AT_START_UNIT_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_366__AT_START_UNIT_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_366__AT_START_UNIT_FIRST.obj_hash = 536593345;
  meltcdat->dsym_366__AT_START_UNIT_FIRST.obj_len = 3;


/*inistring dstr_367__AT_START_UNIT_FIRST*/
 /*_._VALSTR___V402*/ meltfptr[401] =
    (melt_ptr_t) & meltcdat->dstr_367__AT_START_UNIT_FIRST;
  meltcdat->dstr_367__AT_START_UNIT_FIRST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_367__AT_START_UNIT_FIRST.val,
				"AT_START_UNIT_FIRST",
				sizeof (meltcdat->
					dstr_367__AT_START_UNIT_FIRST.val) -
				1);
  meltcdat->dstr_367__AT_START_UNIT_FIRST.val[19] = (char) 0;
  meltcdat->dstr_367__AT_START_UNIT_FIRST.slen = 19;


/*iniobj dsym_368__AT_START_UNIT_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V403*/ meltfptr[402])
/*_._VALDATA___V403*/ meltfptr[402] =
      (melt_ptr_t) & meltcdat->dsym_368__AT_START_UNIT_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_368__AT_START_UNIT_LAST",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_368__AT_START_UNIT_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_368__AT_START_UNIT_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_368__AT_START_UNIT_LAST.obj_hash = 817460620;
  meltcdat->dsym_368__AT_START_UNIT_LAST.obj_len = 3;


/*inistring dstr_369__AT_START_UNIT_LAST*/
 /*_._VALSTR___V404*/ meltfptr[403] =
    (melt_ptr_t) & meltcdat->dstr_369__AT_START_UNIT_LAST;
  meltcdat->dstr_369__AT_START_UNIT_LAST.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_369__AT_START_UNIT_LAST.val,
				"AT_START_UNIT_LAST",
				sizeof (meltcdat->
					dstr_369__AT_START_UNIT_LAST.val) -
				1);
  meltcdat->dstr_369__AT_START_UNIT_LAST.val[18] = (char) 0;
  meltcdat->dstr_369__AT_START_UNIT_LAST.slen = 18;


/*iniobj dsym_370__HOOK_LOW_DEBUG_VALUE_AT*/
  /*uniqueobj*/ if (! /*_._VALDATA___V405*/ meltfptr[404])
/*_._VALDATA___V405*/ meltfptr[404] =
      (melt_ptr_t) & meltcdat->dsym_370__HOOK_LOW_DEBUG_VALUE_AT;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_370__HOOK_LOW_DEBUG_VALUE_AT",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_370__HOOK_LOW_DEBUG_VALUE_AT",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_370__HOOK_LOW_DEBUG_VALUE_AT.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_370__HOOK_LOW_DEBUG_VALUE_AT.obj_hash = 1048470198;
  meltcdat->dsym_370__HOOK_LOW_DEBUG_VALUE_AT.obj_len = 3;


/*inistring dstr_371__HOOK_LOW_DEBUG_VALUE_AT*/
 /*_._VALSTR___V406*/ meltfptr[405] =
    (melt_ptr_t) & meltcdat->dstr_371__HOOK_LOW_DEBUG_VALUE_AT;
  meltcdat->dstr_371__HOOK_LOW_DEBUG_VALUE_AT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_371__HOOK_LOW_DEBUG_VALUE_AT.
				val, "HOOK_LOW_DEBUG_VALUE_AT",
				sizeof (meltcdat->
					dstr_371__HOOK_LOW_DEBUG_VALUE_AT.
					val) - 1);
  meltcdat->dstr_371__HOOK_LOW_DEBUG_VALUE_AT.val[23] = (char) 0;
  meltcdat->dstr_371__HOOK_LOW_DEBUG_VALUE_AT.slen = 23;


/*iniobj dsym_372__HOOK_OVERRIDE_GATE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V407*/ meltfptr[406])
/*_._VALDATA___V407*/ meltfptr[406] =
      (melt_ptr_t) & meltcdat->dsym_372__HOOK_OVERRIDE_GATE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_372__HOOK_OVERRIDE_GATE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_372__HOOK_OVERRIDE_GATE",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_372__HOOK_OVERRIDE_GATE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_372__HOOK_OVERRIDE_GATE.obj_hash = 995989956;
  meltcdat->dsym_372__HOOK_OVERRIDE_GATE.obj_len = 3;


/*inistring dstr_373__HOOK_OVERRIDE_GATE*/
 /*_._VALSTR___V408*/ meltfptr[407] =
    (melt_ptr_t) & meltcdat->dstr_373__HOOK_OVERRIDE_GATE;
  meltcdat->dstr_373__HOOK_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_373__HOOK_OVERRIDE_GATE.val,
				"HOOK_OVERRIDE_GATE",
				sizeof (meltcdat->
					dstr_373__HOOK_OVERRIDE_GATE.val) -
				1);
  meltcdat->dstr_373__HOOK_OVERRIDE_GATE.val[18] = (char) 0;
  meltcdat->dstr_373__HOOK_OVERRIDE_GATE.slen = 18;


/*iniobj dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V409*/ meltfptr[408])
/*_._VALDATA___V409*/ meltfptr[408] =
      (melt_ptr_t) & meltcdat->dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST.obj_hash = 188504921;
  meltcdat->dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST.obj_len = 3;


/*inistring dstr_375__REGISTER_ALL_IPA_PASSES_*/
 /*_._VALSTR___V410*/ meltfptr[409] =
    (melt_ptr_t) & meltcdat->dstr_375__REGISTER_ALL_IPA_PASSES_;
  meltcdat->dstr_375__REGISTER_ALL_IPA_PASSES_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_375__REGISTER_ALL_IPA_PASSES_.
				val, "REGISTER_ALL_IPA_PASSES_END_FIRST",
				sizeof (meltcdat->
					dstr_375__REGISTER_ALL_IPA_PASSES_.
					val) - 1);
  meltcdat->dstr_375__REGISTER_ALL_IPA_PASSES_.val[33] = (char) 0;
  meltcdat->dstr_375__REGISTER_ALL_IPA_PASSES_.slen = 33;


/*iniobj dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V411*/ meltfptr[410])
/*_._VALDATA___V411*/ meltfptr[410] =
      (melt_ptr_t) & meltcdat->dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST.obj_hash = 822070917;
  meltcdat->dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST.obj_len = 3;


/*inistring dstr_377__REGISTER_ALL_IPA_PASSES_*/
 /*_._VALSTR___V412*/ meltfptr[411] =
    (melt_ptr_t) & meltcdat->dstr_377__REGISTER_ALL_IPA_PASSES_;
  meltcdat->dstr_377__REGISTER_ALL_IPA_PASSES_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_377__REGISTER_ALL_IPA_PASSES_.
				val, "REGISTER_ALL_IPA_PASSES_END_LAST",
				sizeof (meltcdat->
					dstr_377__REGISTER_ALL_IPA_PASSES_.
					val) - 1);
  meltcdat->dstr_377__REGISTER_ALL_IPA_PASSES_.val[32] = (char) 0;
  meltcdat->dstr_377__REGISTER_ALL_IPA_PASSES_.slen = 32;


/*iniobj dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V413*/ meltfptr[412])
/*_._VALDATA___V413*/ meltfptr[412] =
      (melt_ptr_t) & meltcdat->dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST.obj_hash = 87049035;
  meltcdat->dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST.obj_len = 3;


/*inistring dstr_379__REGISTER_ALL_IPA_PASSES_*/
 /*_._VALSTR___V414*/ meltfptr[413] =
    (melt_ptr_t) & meltcdat->dstr_379__REGISTER_ALL_IPA_PASSES_;
  meltcdat->dstr_379__REGISTER_ALL_IPA_PASSES_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_379__REGISTER_ALL_IPA_PASSES_.
				val, "REGISTER_ALL_IPA_PASSES_START_FIRST",
				sizeof (meltcdat->
					dstr_379__REGISTER_ALL_IPA_PASSES_.
					val) - 1);
  meltcdat->dstr_379__REGISTER_ALL_IPA_PASSES_.val[35] = (char) 0;
  meltcdat->dstr_379__REGISTER_ALL_IPA_PASSES_.slen = 35;


/*iniobj dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V415*/ meltfptr[414])
/*_._VALDATA___V415*/ meltfptr[414] =
      (melt_ptr_t) & meltcdat->dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST.obj_hash = 169109429;
  meltcdat->dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST.obj_len = 3;


/*inistring dstr_381__REGISTER_ALL_IPA_PASSES_*/
 /*_._VALSTR___V416*/ meltfptr[415] =
    (melt_ptr_t) & meltcdat->dstr_381__REGISTER_ALL_IPA_PASSES_;
  meltcdat->dstr_381__REGISTER_ALL_IPA_PASSES_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_381__REGISTER_ALL_IPA_PASSES_.
				val, "REGISTER_ALL_IPA_PASSES_START_LAST",
				sizeof (meltcdat->
					dstr_381__REGISTER_ALL_IPA_PASSES_.
					val) - 1);
  meltcdat->dstr_381__REGISTER_ALL_IPA_PASSES_.val[34] = (char) 0;
  meltcdat->dstr_381__REGISTER_ALL_IPA_PASSES_.slen = 34;


/*iniobj dsym_382__REGISTER_ALL_PASSES_END_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V417*/ meltfptr[416])
/*_._VALDATA___V417*/ meltfptr[416] =
      (melt_ptr_t) & meltcdat->dsym_382__REGISTER_ALL_PASSES_END_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_382__REGISTER_ALL_PASSES_END_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_382__REGISTER_ALL_PASSES_END_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_382__REGISTER_ALL_PASSES_END_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_382__REGISTER_ALL_PASSES_END_FIRST.obj_hash = 377865029;
  meltcdat->dsym_382__REGISTER_ALL_PASSES_END_FIRST.obj_len = 3;


/*inistring dstr_383__REGISTER_ALL_PASSES_END_*/
 /*_._VALSTR___V418*/ meltfptr[417] =
    (melt_ptr_t) & meltcdat->dstr_383__REGISTER_ALL_PASSES_END_;
  meltcdat->dstr_383__REGISTER_ALL_PASSES_END_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_383__REGISTER_ALL_PASSES_END_.
				val, "REGISTER_ALL_PASSES_END_FIRST",
				sizeof (meltcdat->
					dstr_383__REGISTER_ALL_PASSES_END_.
					val) - 1);
  meltcdat->dstr_383__REGISTER_ALL_PASSES_END_.val[29] = (char) 0;
  meltcdat->dstr_383__REGISTER_ALL_PASSES_END_.slen = 29;


/*iniobj dsym_384__REGISTER_ALL_PASSES_END_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V419*/ meltfptr[418])
/*_._VALDATA___V419*/ meltfptr[418] =
      (melt_ptr_t) & meltcdat->dsym_384__REGISTER_ALL_PASSES_END_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_384__REGISTER_ALL_PASSES_END_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_384__REGISTER_ALL_PASSES_END_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_384__REGISTER_ALL_PASSES_END_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_384__REGISTER_ALL_PASSES_END_LAST.obj_hash = 469287204;
  meltcdat->dsym_384__REGISTER_ALL_PASSES_END_LAST.obj_len = 3;


/*inistring dstr_385__REGISTER_ALL_PASSES_END_*/
 /*_._VALSTR___V420*/ meltfptr[419] =
    (melt_ptr_t) & meltcdat->dstr_385__REGISTER_ALL_PASSES_END_;
  meltcdat->dstr_385__REGISTER_ALL_PASSES_END_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_385__REGISTER_ALL_PASSES_END_.
				val, "REGISTER_ALL_PASSES_END_LAST",
				sizeof (meltcdat->
					dstr_385__REGISTER_ALL_PASSES_END_.
					val) - 1);
  meltcdat->dstr_385__REGISTER_ALL_PASSES_END_.val[28] = (char) 0;
  meltcdat->dstr_385__REGISTER_ALL_PASSES_END_.slen = 28;


/*iniobj dsym_386__REGISTER_ALL_PASSES_START_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V421*/ meltfptr[420])
/*_._VALDATA___V421*/ meltfptr[420] =
      (melt_ptr_t) & meltcdat->dsym_386__REGISTER_ALL_PASSES_START_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_386__REGISTER_ALL_PASSES_START_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_386__REGISTER_ALL_PASSES_START_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_386__REGISTER_ALL_PASSES_START_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_386__REGISTER_ALL_PASSES_START_FIRST.obj_hash = 861337342;
  meltcdat->dsym_386__REGISTER_ALL_PASSES_START_FIRST.obj_len = 3;


/*inistring dstr_387__REGISTER_ALL_PASSES_STAR*/
 /*_._VALSTR___V422*/ meltfptr[421] =
    (melt_ptr_t) & meltcdat->dstr_387__REGISTER_ALL_PASSES_STAR;
  meltcdat->dstr_387__REGISTER_ALL_PASSES_STAR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_387__REGISTER_ALL_PASSES_STAR.
				val, "REGISTER_ALL_PASSES_START_FIRST",
				sizeof (meltcdat->
					dstr_387__REGISTER_ALL_PASSES_STAR.
					val) - 1);
  meltcdat->dstr_387__REGISTER_ALL_PASSES_STAR.val[31] = (char) 0;
  meltcdat->dstr_387__REGISTER_ALL_PASSES_STAR.slen = 31;


/*iniobj dsym_388__REGISTER_ALL_PASSES_START_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V423*/ meltfptr[422])
/*_._VALDATA___V423*/ meltfptr[422] =
      (melt_ptr_t) & meltcdat->dsym_388__REGISTER_ALL_PASSES_START_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_388__REGISTER_ALL_PASSES_START_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_388__REGISTER_ALL_PASSES_START_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_388__REGISTER_ALL_PASSES_START_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_388__REGISTER_ALL_PASSES_START_LAST.obj_hash = 428184515;
  meltcdat->dsym_388__REGISTER_ALL_PASSES_START_LAST.obj_len = 3;


/*inistring dstr_389__REGISTER_ALL_PASSES_STAR*/
 /*_._VALSTR___V424*/ meltfptr[423] =
    (melt_ptr_t) & meltcdat->dstr_389__REGISTER_ALL_PASSES_STAR;
  meltcdat->dstr_389__REGISTER_ALL_PASSES_STAR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_389__REGISTER_ALL_PASSES_STAR.
				val, "REGISTER_ALL_PASSES_START_LAST",
				sizeof (meltcdat->
					dstr_389__REGISTER_ALL_PASSES_STAR.
					val) - 1);
  meltcdat->dstr_389__REGISTER_ALL_PASSES_STAR.val[30] = (char) 0;
  meltcdat->dstr_389__REGISTER_ALL_PASSES_STAR.slen = 30;


/*iniobj dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V425*/ meltfptr[424])
/*_._VALDATA___V425*/ meltfptr[424] =
      (melt_ptr_t) & meltcdat->
      dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.obj_hash =
    155694900;
  meltcdat->dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST.obj_len = 3;


/*inistring dstr_391__REGISTER_EARLY_GIMPLE_PA*/
 /*_._VALSTR___V426*/ meltfptr[425] =
    (melt_ptr_t) & meltcdat->dstr_391__REGISTER_EARLY_GIMPLE_PA;
  meltcdat->dstr_391__REGISTER_EARLY_GIMPLE_PA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_391__REGISTER_EARLY_GIMPLE_PA.
				val, "REGISTER_EARLY_GIMPLE_PASSES_END_FIRST",
				sizeof (meltcdat->
					dstr_391__REGISTER_EARLY_GIMPLE_PA.
					val) - 1);
  meltcdat->dstr_391__REGISTER_EARLY_GIMPLE_PA.val[38] = (char) 0;
  meltcdat->dstr_391__REGISTER_EARLY_GIMPLE_PA.slen = 38;


/*iniobj dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V427*/ meltfptr[426])
/*_._VALDATA___V427*/ meltfptr[426] =
      (melt_ptr_t) & meltcdat->
      dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.obj_hash =
    523935070;
  meltcdat->dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST.obj_len = 3;


/*inistring dstr_393__REGISTER_EARLY_GIMPLE_PA*/
 /*_._VALSTR___V428*/ meltfptr[427] =
    (melt_ptr_t) & meltcdat->dstr_393__REGISTER_EARLY_GIMPLE_PA;
  meltcdat->dstr_393__REGISTER_EARLY_GIMPLE_PA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_393__REGISTER_EARLY_GIMPLE_PA.
				val, "REGISTER_EARLY_GIMPLE_PASSES_END_LAST",
				sizeof (meltcdat->
					dstr_393__REGISTER_EARLY_GIMPLE_PA.
					val) - 1);
  meltcdat->dstr_393__REGISTER_EARLY_GIMPLE_PA.val[37] = (char) 0;
  meltcdat->dstr_393__REGISTER_EARLY_GIMPLE_PA.slen = 37;


/*iniobj dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V429*/ meltfptr[428])
/*_._VALDATA___V429*/ meltfptr[428] =
      (melt_ptr_t) & meltcdat->
      dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.obj_hash =
    62165641;
  meltcdat->dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST.obj_len = 3;


/*inistring dstr_395__REGISTER_EARLY_GIMPLE_PA*/
 /*_._VALSTR___V430*/ meltfptr[429] =
    (melt_ptr_t) & meltcdat->dstr_395__REGISTER_EARLY_GIMPLE_PA;
  meltcdat->dstr_395__REGISTER_EARLY_GIMPLE_PA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_395__REGISTER_EARLY_GIMPLE_PA.
				val,
				"REGISTER_EARLY_GIMPLE_PASSES_START_FIRST",
				sizeof (meltcdat->
					dstr_395__REGISTER_EARLY_GIMPLE_PA.
					val) - 1);
  meltcdat->dstr_395__REGISTER_EARLY_GIMPLE_PA.val[40] = (char) 0;
  meltcdat->dstr_395__REGISTER_EARLY_GIMPLE_PA.slen = 40;


/*iniobj dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V431*/ meltfptr[430])
/*_._VALDATA___V431*/ meltfptr[430] =
      (melt_ptr_t) & meltcdat->
      dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.obj_hash =
    1045063155;
  meltcdat->dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST.obj_len = 3;


/*inistring dstr_397__REGISTER_EARLY_GIMPLE_PA*/
 /*_._VALSTR___V432*/ meltfptr[431] =
    (melt_ptr_t) & meltcdat->dstr_397__REGISTER_EARLY_GIMPLE_PA;
  meltcdat->dstr_397__REGISTER_EARLY_GIMPLE_PA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_397__REGISTER_EARLY_GIMPLE_PA.
				val,
				"REGISTER_EARLY_GIMPLE_PASSES_START_LAST",
				sizeof (meltcdat->
					dstr_397__REGISTER_EARLY_GIMPLE_PA.
					val) - 1);
  meltcdat->dstr_397__REGISTER_EARLY_GIMPLE_PA.val[39] = (char) 0;
  meltcdat->dstr_397__REGISTER_EARLY_GIMPLE_PA.slen = 39;


/*iniobj dsym_398__REGISTER_FINISH_DECL_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V433*/ meltfptr[432])
/*_._VALDATA___V433*/ meltfptr[432] =
      (melt_ptr_t) & meltcdat->dsym_398__REGISTER_FINISH_DECL_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_398__REGISTER_FINISH_DECL_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_398__REGISTER_FINISH_DECL_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_398__REGISTER_FINISH_DECL_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_398__REGISTER_FINISH_DECL_FIRST.obj_hash = 1056922419;
  meltcdat->dsym_398__REGISTER_FINISH_DECL_FIRST.obj_len = 3;


/*inistring dstr_399__REGISTER_FINISH_DECL_FIR*/
 /*_._VALSTR___V434*/ meltfptr[433] =
    (melt_ptr_t) & meltcdat->dstr_399__REGISTER_FINISH_DECL_FIR;
  meltcdat->dstr_399__REGISTER_FINISH_DECL_FIR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_399__REGISTER_FINISH_DECL_FIR.
				val, "REGISTER_FINISH_DECL_FIRST",
				sizeof (meltcdat->
					dstr_399__REGISTER_FINISH_DECL_FIR.
					val) - 1);
  meltcdat->dstr_399__REGISTER_FINISH_DECL_FIR.val[26] = (char) 0;
  meltcdat->dstr_399__REGISTER_FINISH_DECL_FIR.slen = 26;


/*iniobj dsym_400__REGISTER_FINISH_DECL_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V435*/ meltfptr[434])
/*_._VALDATA___V435*/ meltfptr[434] =
      (melt_ptr_t) & meltcdat->dsym_400__REGISTER_FINISH_DECL_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_400__REGISTER_FINISH_DECL_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_400__REGISTER_FINISH_DECL_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_400__REGISTER_FINISH_DECL_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_400__REGISTER_FINISH_DECL_LAST.obj_hash = 697262790;
  meltcdat->dsym_400__REGISTER_FINISH_DECL_LAST.obj_len = 3;


/*inistring dstr_401__REGISTER_FINISH_DECL_LAS*/
 /*_._VALSTR___V436*/ meltfptr[435] =
    (melt_ptr_t) & meltcdat->dstr_401__REGISTER_FINISH_DECL_LAS;
  meltcdat->dstr_401__REGISTER_FINISH_DECL_LAS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_401__REGISTER_FINISH_DECL_LAS.
				val, "REGISTER_FINISH_DECL_LAST",
				sizeof (meltcdat->
					dstr_401__REGISTER_FINISH_DECL_LAS.
					val) - 1);
  meltcdat->dstr_401__REGISTER_FINISH_DECL_LAS.val[25] = (char) 0;
  meltcdat->dstr_401__REGISTER_FINISH_DECL_LAS.slen = 25;


/*iniobj dsym_402__REGISTER_FINISH_TYPE_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V437*/ meltfptr[436])
/*_._VALDATA___V437*/ meltfptr[436] =
      (melt_ptr_t) & meltcdat->dsym_402__REGISTER_FINISH_TYPE_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_402__REGISTER_FINISH_TYPE_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_402__REGISTER_FINISH_TYPE_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_402__REGISTER_FINISH_TYPE_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_402__REGISTER_FINISH_TYPE_FIRST.obj_hash = 801786105;
  meltcdat->dsym_402__REGISTER_FINISH_TYPE_FIRST.obj_len = 3;


/*inistring dstr_403__REGISTER_FINISH_TYPE_FIR*/
 /*_._VALSTR___V438*/ meltfptr[437] =
    (melt_ptr_t) & meltcdat->dstr_403__REGISTER_FINISH_TYPE_FIR;
  meltcdat->dstr_403__REGISTER_FINISH_TYPE_FIR.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_403__REGISTER_FINISH_TYPE_FIR.
				val, "REGISTER_FINISH_TYPE_FIRST",
				sizeof (meltcdat->
					dstr_403__REGISTER_FINISH_TYPE_FIR.
					val) - 1);
  meltcdat->dstr_403__REGISTER_FINISH_TYPE_FIR.val[26] = (char) 0;
  meltcdat->dstr_403__REGISTER_FINISH_TYPE_FIR.slen = 26;


/*iniobj dsym_404__REGISTER_FINISH_TYPE_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V439*/ meltfptr[438])
/*_._VALDATA___V439*/ meltfptr[438] =
      (melt_ptr_t) & meltcdat->dsym_404__REGISTER_FINISH_TYPE_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_404__REGISTER_FINISH_TYPE_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_404__REGISTER_FINISH_TYPE_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_404__REGISTER_FINISH_TYPE_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_404__REGISTER_FINISH_TYPE_LAST.obj_hash = 1006242336;
  meltcdat->dsym_404__REGISTER_FINISH_TYPE_LAST.obj_len = 3;


/*inistring dstr_405__REGISTER_FINISH_TYPE_LAS*/
 /*_._VALSTR___V440*/ meltfptr[439] =
    (melt_ptr_t) & meltcdat->dstr_405__REGISTER_FINISH_TYPE_LAS;
  meltcdat->dstr_405__REGISTER_FINISH_TYPE_LAS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_405__REGISTER_FINISH_TYPE_LAS.
				val, "REGISTER_FINISH_TYPE_LAST",
				sizeof (meltcdat->
					dstr_405__REGISTER_FINISH_TYPE_LAS.
					val) - 1);
  meltcdat->dstr_405__REGISTER_FINISH_TYPE_LAS.val[25] = (char) 0;
  meltcdat->dstr_405__REGISTER_FINISH_TYPE_LAS.slen = 25;


/*iniobj dsym_406__REGISTER_OVERRIDE_GATE_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V441*/ meltfptr[440])
/*_._VALDATA___V441*/ meltfptr[440] =
      (melt_ptr_t) & meltcdat->dsym_406__REGISTER_OVERRIDE_GATE_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_406__REGISTER_OVERRIDE_GATE_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_406__REGISTER_OVERRIDE_GATE_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_406__REGISTER_OVERRIDE_GATE_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_406__REGISTER_OVERRIDE_GATE_FIRST.obj_hash = 929826072;
  meltcdat->dsym_406__REGISTER_OVERRIDE_GATE_FIRST.obj_len = 3;


/*inistring dstr_407__REGISTER_OVERRIDE_GATE_F*/
 /*_._VALSTR___V442*/ meltfptr[441] =
    (melt_ptr_t) & meltcdat->dstr_407__REGISTER_OVERRIDE_GATE_F;
  meltcdat->dstr_407__REGISTER_OVERRIDE_GATE_F.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_407__REGISTER_OVERRIDE_GATE_F.
				val, "REGISTER_OVERRIDE_GATE_FIRST",
				sizeof (meltcdat->
					dstr_407__REGISTER_OVERRIDE_GATE_F.
					val) - 1);
  meltcdat->dstr_407__REGISTER_OVERRIDE_GATE_F.val[28] = (char) 0;
  meltcdat->dstr_407__REGISTER_OVERRIDE_GATE_F.slen = 28;


/*iniobj dsym_408__REGISTER_OVERRIDE_GATE_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V443*/ meltfptr[442])
/*_._VALDATA___V443*/ meltfptr[442] =
      (melt_ptr_t) & meltcdat->dsym_408__REGISTER_OVERRIDE_GATE_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_408__REGISTER_OVERRIDE_GATE_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_408__REGISTER_OVERRIDE_GATE_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_408__REGISTER_OVERRIDE_GATE_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_408__REGISTER_OVERRIDE_GATE_LAST.obj_hash = 387249375;
  meltcdat->dsym_408__REGISTER_OVERRIDE_GATE_LAST.obj_len = 3;


/*inistring dstr_409__REGISTER_OVERRIDE_GATE_L*/
 /*_._VALSTR___V444*/ meltfptr[443] =
    (melt_ptr_t) & meltcdat->dstr_409__REGISTER_OVERRIDE_GATE_L;
  meltcdat->dstr_409__REGISTER_OVERRIDE_GATE_L.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_409__REGISTER_OVERRIDE_GATE_L.
				val, "REGISTER_OVERRIDE_GATE_LAST",
				sizeof (meltcdat->
					dstr_409__REGISTER_OVERRIDE_GATE_L.
					val) - 1);
  meltcdat->dstr_409__REGISTER_OVERRIDE_GATE_L.val[27] = (char) 0;
  meltcdat->dstr_409__REGISTER_OVERRIDE_GATE_L.slen = 27;


/*iniobj dsym_410__REGISTER_PASS_EXECUTION_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V445*/ meltfptr[444])
/*_._VALDATA___V445*/ meltfptr[444] =
      (melt_ptr_t) & meltcdat->dsym_410__REGISTER_PASS_EXECUTION_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_410__REGISTER_PASS_EXECUTION_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_410__REGISTER_PASS_EXECUTION_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_410__REGISTER_PASS_EXECUTION_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_410__REGISTER_PASS_EXECUTION_FIRST.obj_hash = 401907923;
  meltcdat->dsym_410__REGISTER_PASS_EXECUTION_FIRST.obj_len = 3;


/*inistring dstr_411__REGISTER_PASS_EXECUTION_*/
 /*_._VALSTR___V446*/ meltfptr[445] =
    (melt_ptr_t) & meltcdat->dstr_411__REGISTER_PASS_EXECUTION_;
  meltcdat->dstr_411__REGISTER_PASS_EXECUTION_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_411__REGISTER_PASS_EXECUTION_.
				val, "REGISTER_PASS_EXECUTION_FIRST",
				sizeof (meltcdat->
					dstr_411__REGISTER_PASS_EXECUTION_.
					val) - 1);
  meltcdat->dstr_411__REGISTER_PASS_EXECUTION_.val[29] = (char) 0;
  meltcdat->dstr_411__REGISTER_PASS_EXECUTION_.slen = 29;


/*iniobj dsym_412__REGISTER_PASS_EXECUTION_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V447*/ meltfptr[446])
/*_._VALDATA___V447*/ meltfptr[446] =
      (melt_ptr_t) & meltcdat->dsym_412__REGISTER_PASS_EXECUTION_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_412__REGISTER_PASS_EXECUTION_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_412__REGISTER_PASS_EXECUTION_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_412__REGISTER_PASS_EXECUTION_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_412__REGISTER_PASS_EXECUTION_LAST.obj_hash = 1006242336;
  meltcdat->dsym_412__REGISTER_PASS_EXECUTION_LAST.obj_len = 3;


/*inistring dstr_413__REGISTER_PASS_EXECUTION_*/
 /*_._VALSTR___V448*/ meltfptr[447] =
    (melt_ptr_t) & meltcdat->dstr_413__REGISTER_PASS_EXECUTION_;
  meltcdat->dstr_413__REGISTER_PASS_EXECUTION_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_413__REGISTER_PASS_EXECUTION_.
				val, "REGISTER_PASS_EXECUTION_LAST",
				sizeof (meltcdat->
					dstr_413__REGISTER_PASS_EXECUTION_.
					val) - 1);
  meltcdat->dstr_413__REGISTER_PASS_EXECUTION_.val[28] = (char) 0;
  meltcdat->dstr_413__REGISTER_PASS_EXECUTION_.slen = 28;


/*iniobj dsym_414__REGISTER_PRE_GENERICIZE_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V449*/ meltfptr[448])
/*_._VALDATA___V449*/ meltfptr[448] =
      (melt_ptr_t) & meltcdat->dsym_414__REGISTER_PRE_GENERICIZE_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_414__REGISTER_PRE_GENERICIZE_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_414__REGISTER_PRE_GENERICIZE_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_414__REGISTER_PRE_GENERICIZE_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_414__REGISTER_PRE_GENERICIZE_FIRST.obj_hash = 551171250;
  meltcdat->dsym_414__REGISTER_PRE_GENERICIZE_FIRST.obj_len = 3;


/*inistring dstr_415__REGISTER_PRE_GENERICIZE_*/
 /*_._VALSTR___V450*/ meltfptr[449] =
    (melt_ptr_t) & meltcdat->dstr_415__REGISTER_PRE_GENERICIZE_;
  meltcdat->dstr_415__REGISTER_PRE_GENERICIZE_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_415__REGISTER_PRE_GENERICIZE_.
				val, "REGISTER_PRE_GENERICIZE_FIRST",
				sizeof (meltcdat->
					dstr_415__REGISTER_PRE_GENERICIZE_.
					val) - 1);
  meltcdat->dstr_415__REGISTER_PRE_GENERICIZE_.val[29] = (char) 0;
  meltcdat->dstr_415__REGISTER_PRE_GENERICIZE_.slen = 29;


/*iniobj dsym_416__REGISTER_PRE_GENERICIZE_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V451*/ meltfptr[450])
/*_._VALDATA___V451*/ meltfptr[450] =
      (melt_ptr_t) & meltcdat->dsym_416__REGISTER_PRE_GENERICIZE_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_416__REGISTER_PRE_GENERICIZE_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_416__REGISTER_PRE_GENERICIZE_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_416__REGISTER_PRE_GENERICIZE_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_416__REGISTER_PRE_GENERICIZE_LAST.obj_hash = 943052200;
  meltcdat->dsym_416__REGISTER_PRE_GENERICIZE_LAST.obj_len = 3;


/*inistring dstr_417__REGISTER_PRE_GENERICIZE_*/
 /*_._VALSTR___V452*/ meltfptr[451] =
    (melt_ptr_t) & meltcdat->dstr_417__REGISTER_PRE_GENERICIZE_;
  meltcdat->dstr_417__REGISTER_PRE_GENERICIZE_.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_417__REGISTER_PRE_GENERICIZE_.
				val, "REGISTER_PRE_GENERICIZE_LAST",
				sizeof (meltcdat->
					dstr_417__REGISTER_PRE_GENERICIZE_.
					val) - 1);
  meltcdat->dstr_417__REGISTER_PRE_GENERICIZE_.val[28] = (char) 0;
  meltcdat->dstr_417__REGISTER_PRE_GENERICIZE_.slen = 28;


/*iniobj dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V453*/ meltfptr[452])
/*_._VALDATA___V453*/ meltfptr[452] =
      (melt_ptr_t) & meltcdat->dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST.obj_hash = 604111710;
  meltcdat->dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST.obj_len = 3;


/*inistring dstr_419__UNREGISTER_OVERRIDE_GATE*/
 /*_._VALSTR___V454*/ meltfptr[453] =
    (melt_ptr_t) & meltcdat->dstr_419__UNREGISTER_OVERRIDE_GATE;
  meltcdat->dstr_419__UNREGISTER_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_419__UNREGISTER_OVERRIDE_GATE.
				val, "UNREGISTER_OVERRIDE_GATE_FIRST",
				sizeof (meltcdat->
					dstr_419__UNREGISTER_OVERRIDE_GATE.
					val) - 1);
  meltcdat->dstr_419__UNREGISTER_OVERRIDE_GATE.val[30] = (char) 0;
  meltcdat->dstr_419__UNREGISTER_OVERRIDE_GATE.slen = 30;


/*iniobj dsym_420__UNREGISTER_OVERRIDE_GATE_LAST*/
  /*uniqueobj*/ if (! /*_._VALDATA___V455*/ meltfptr[454])
/*_._VALDATA___V455*/ meltfptr[454] =
      (melt_ptr_t) & meltcdat->dsym_420__UNREGISTER_OVERRIDE_GATE_LAST;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_420__UNREGISTER_OVERRIDE_GATE_LAST",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_420__UNREGISTER_OVERRIDE_GATE_LAST",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_420__UNREGISTER_OVERRIDE_GATE_LAST.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_420__UNREGISTER_OVERRIDE_GATE_LAST.obj_hash = 458707543;
  meltcdat->dsym_420__UNREGISTER_OVERRIDE_GATE_LAST.obj_len = 3;


/*inistring dstr_421__UNREGISTER_OVERRIDE_GATE*/
 /*_._VALSTR___V456*/ meltfptr[455] =
    (melt_ptr_t) & meltcdat->dstr_421__UNREGISTER_OVERRIDE_GATE;
  meltcdat->dstr_421__UNREGISTER_OVERRIDE_GATE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_421__UNREGISTER_OVERRIDE_GATE.
				val, "UNREGISTER_OVERRIDE_GATE_LAST",
				sizeof (meltcdat->
					dstr_421__UNREGISTER_OVERRIDE_GATE.
					val) - 1);
  meltcdat->dstr_421__UNREGISTER_OVERRIDE_GATE.val[29] = (char) 0;
  meltcdat->dstr_421__UNREGISTER_OVERRIDE_GATE.slen = 29;

  /*inirout drout_422__MELT_INVOKE_INPUT_CALLBACKS */
 /*_._VALROUT___V457*/ meltfptr[456] =
    (melt_ptr_t) & meltcdat->drout_422__MELT_INVOKE_INPUT_CALLBACKS;
  meltcdat->drout_422__MELT_INVOKE_INPUT_CALLBACKS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_422__MELT_INVOKE_INPUT_CALLBACKS.routdescr,
	   "MELT_INVOKE_INPUT_CALLBACKS @warmelt-hooks.melt:2323",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_422__MELT_INVOKE_INPUT_CALLBACKS.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_422__MELT_INVOKE_INPUT_CALLBACKS,
			     meltrout_77_WARMELTmiHOOKS_MELT_INVOKE_INPUT_CALLBACKS);

  /*iniclos dclo_423__MELT_INVOKE_INPUT_CALLBACKS */
 /*_._VALCLO___V458*/ meltfptr[457] =
    (melt_ptr_t) & meltcdat->dclo_423__MELT_INVOKE_INPUT_CALLBACKS;
  meltcdat->dclo_423__MELT_INVOKE_INPUT_CALLBACKS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_423__MELT_INVOKE_INPUT_CALLBACKS.nbval = 0;


/*iniobj dsym_424__CLASS_INPUT_CHANNEL_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V459*/ meltfptr[458])
/*_._VALDATA___V459*/ meltfptr[458] =
      (melt_ptr_t) & meltcdat->dsym_424__CLASS_INPUT_CHANNEL_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_424__CLASS_INPUT_CHANNEL_HANDLER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_424__CLASS_INPUT_CHANNEL_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_424__CLASS_INPUT_CHANNEL_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_424__CLASS_INPUT_CHANNEL_HANDLER.obj_hash = 94880076;
  meltcdat->dsym_424__CLASS_INPUT_CHANNEL_HANDLER.obj_len = 3;


/*inistring dstr_425__CLASS_INPUT_CHANNEL_HAND*/
 /*_._VALSTR___V460*/ meltfptr[459] =
    (melt_ptr_t) & meltcdat->dstr_425__CLASS_INPUT_CHANNEL_HAND;
  meltcdat->dstr_425__CLASS_INPUT_CHANNEL_HAND.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_425__CLASS_INPUT_CHANNEL_HAND.
				val, "CLASS_INPUT_CHANNEL_HANDLER",
				sizeof (meltcdat->
					dstr_425__CLASS_INPUT_CHANNEL_HAND.
					val) - 1);
  meltcdat->dstr_425__CLASS_INPUT_CHANNEL_HAND.val[27] = (char) 0;
  meltcdat->dstr_425__CLASS_INPUT_CHANNEL_HAND.slen = 27;


/*inihook dhook__426__HOOK_POLL_INPUTS */
  meltcdat->dhook__426__HOOK_POLL_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_POLL_INPUTS data */
  meltcdat->dhook__426__HOOK_POLL_INPUTS.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__426__HOOK_POLL_INPUTS,
			  melthook_HOOK_POLL_INPUTS);
  meltcdat->dhook__426__HOOK_POLL_INPUTS.hookdata =
    /*_._VALDATA___V462*/ meltfptr[461];
  strncpy (meltcdat->dhook__426__HOOK_POLL_INPUTS.hookname,
	   "HOOK_POLL_INPUTS",
	   sizeof (meltcdat->dhook__426__HOOK_POLL_INPUTS.hookname) - 1);
/*predefinedhook HOOK_POLL_INPUTS for dhook__426__HOOK_POLL_INPUTS*/
  if (!MELT_PREDEF (HOOK_POLL_INPUTS))
    MELT_STORE_PREDEF (HOOK_POLL_INPUTS,
		       (melt_ptr_t) & meltcdat->dhook__426__HOOK_POLL_INPUTS);

  /*_._VALHOOK___V461*/ meltfptr[460] =
  /*inihooklocvar HOOK_POLL_INPUTS */
  (melt_ptr_t) & meltcdat->dhook__426__HOOK_POLL_INPUTS;

  /*done inihook dhook__426__HOOK_POLL_INPUTS */

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ iniobj");

/*iniobj dobj_427__*/
/*_._VALDATA___V462*/ meltfptr[461] = (melt_ptr_t) & meltcdat->dobj_427__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_427__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_427__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_427__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_427__.obj_hash = 831009526;
  meltcdat->dobj_427__.obj_len = 6;


/*inistring dstr_428__HOOK_POLL_INPUTS*/
 /*_._VALSTR___V463*/ meltfptr[462] =
    (melt_ptr_t) & meltcdat->dstr_428__HOOK_POLL_INPUTS;
  meltcdat->dstr_428__HOOK_POLL_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_428__HOOK_POLL_INPUTS.val,
				"HOOK_POLL_INPUTS",
				sizeof (meltcdat->dstr_428__HOOK_POLL_INPUTS.
					val) - 1);
  meltcdat->dstr_428__HOOK_POLL_INPUTS.val[16] = (char) 0;
  meltcdat->dstr_428__HOOK_POLL_INPUTS.slen = 16;


/*iniobj dsym_429__DELAYMS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V465*/ meltfptr[464])
/*_._VALDATA___V465*/ meltfptr[464] =
      (melt_ptr_t) & meltcdat->dsym_429__DELAYMS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_429__DELAYMS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_429__DELAYMS",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_429__DELAYMS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_429__DELAYMS.obj_hash = 308615497;
  meltcdat->dsym_429__DELAYMS.obj_len = 3;


/*inistring dstr_430__DELAYMS*/
 /*_._VALSTR___V466*/ meltfptr[465] =
    (melt_ptr_t) & meltcdat->dstr_430__DELAYMS;
  meltcdat->dstr_430__DELAYMS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_430__DELAYMS.val, "DELAYMS",
				sizeof (meltcdat->dstr_430__DELAYMS.val) - 1);
  meltcdat->dstr_430__DELAYMS.val[7] = (char) 0;
  meltcdat->dstr_430__DELAYMS.slen = 7;

  /*^iniobj */

/*iniobj dobj_431*/
/*_._VALDATA___V464*/ meltfptr[463] = (melt_ptr_t) & meltcdat->dobj_431;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_431",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_FORMAL_BINDING))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_431",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_431.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_FORMAL_BINDING))));
  meltcdat->dobj_431.obj_num = 0;
  meltcdat->dobj_431.obj_hash = 334079088;
  meltcdat->dobj_431.obj_len = 2;

  /*inimult dtup_432___HOOK_POLL_INPUTS */
 /*_._VALTUP___V467*/ meltfptr[466] =
    (melt_ptr_t) & meltcdat->dtup_432___HOOK_POLL_INPUTS;
  meltcdat->dtup_432___HOOK_POLL_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_432___HOOK_POLL_INPUTS.nbval = 1;
  /*inimult dtup_433___HOOK_POLL_INPUTS */
 /*_._VALTUP___V468*/ meltfptr[467] =
    (melt_ptr_t) & meltcdat->dtup_433___HOOK_POLL_INPUTS;
  meltcdat->dtup_433___HOOK_POLL_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_433___HOOK_POLL_INPUTS.nbval = 0;

/*iniobj dsym_434__DISCR_MULTIPLE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V469*/ meltfptr[468])
/*_._VALDATA___V469*/ meltfptr[468] =
      (melt_ptr_t) & meltcdat->dsym_434__DISCR_MULTIPLE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_434__DISCR_MULTIPLE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_434__DISCR_MULTIPLE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_434__DISCR_MULTIPLE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_434__DISCR_MULTIPLE.obj_hash = 91864583;
  meltcdat->dsym_434__DISCR_MULTIPLE.obj_len = 3;


/*inistring dstr_435__DISCR_MULTIPLE*/
 /*_._VALSTR___V470*/ meltfptr[469] =
    (melt_ptr_t) & meltcdat->dstr_435__DISCR_MULTIPLE;
  meltcdat->dstr_435__DISCR_MULTIPLE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_435__DISCR_MULTIPLE.val,
				"DISCR_MULTIPLE",
				sizeof (meltcdat->dstr_435__DISCR_MULTIPLE.
					val) - 1);
  meltcdat->dstr_435__DISCR_MULTIPLE.val[14] = (char) 0;
  meltcdat->dstr_435__DISCR_MULTIPLE.slen = 14;

  /*inirout drout_436__IS_POLLING_INPUTS */
 /*_._VALROUT___V471*/ meltfptr[470] =
    (melt_ptr_t) & meltcdat->drout_436__IS_POLLING_INPUTS;
  meltcdat->drout_436__IS_POLLING_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_436__IS_POLLING_INPUTS.routdescr,
	   "IS_POLLING_INPUTS @warmelt-hooks.melt:2528",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_436__IS_POLLING_INPUTS.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_436__IS_POLLING_INPUTS,
			     meltrout_79_WARMELTmiHOOKS_IS_POLLING_INPUTS);

  /*iniclos dclo_437__IS_POLLING_INPUTS */
 /*_._VALCLO___V472*/ meltfptr[471] =
    (melt_ptr_t) & meltcdat->dclo_437__IS_POLLING_INPUTS;
  meltcdat->dclo_437__IS_POLLING_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_437__IS_POLLING_INPUTS.nbval = 0;

  /*inirout drout_438__EVERY_POLLING_INPUT */
 /*_._VALROUT___V473*/ meltfptr[472] =
    (melt_ptr_t) & meltcdat->drout_438__EVERY_POLLING_INPUT;
  meltcdat->drout_438__EVERY_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_438__EVERY_POLLING_INPUT.routdescr,
	   "EVERY_POLLING_INPUT @warmelt-hooks.melt:2538",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_438__EVERY_POLLING_INPUT.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_438__EVERY_POLLING_INPUT,
			     meltrout_80_WARMELTmiHOOKS_EVERY_POLLING_INPUT);

  /*iniclos dclo_439__EVERY_POLLING_INPUT */
 /*_._VALCLO___V474*/ meltfptr[473] =
    (melt_ptr_t) & meltcdat->dclo_439__EVERY_POLLING_INPUT;
  meltcdat->dclo_439__EVERY_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_439__EVERY_POLLING_INPUT.nbval = 0;

  /*inirout drout_440__GET_POLLING_INPUT */
 /*_._VALROUT___V475*/ meltfptr[474] =
    (melt_ptr_t) & meltcdat->drout_440__GET_POLLING_INPUT;
  meltcdat->drout_440__GET_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_440__GET_POLLING_INPUT.routdescr,
	   "GET_POLLING_INPUT @warmelt-hooks.melt:2562",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_440__GET_POLLING_INPUT.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_440__GET_POLLING_INPUT,
			     meltrout_81_WARMELTmiHOOKS_GET_POLLING_INPUT);

  /*iniclos dclo_441__GET_POLLING_INPUT */
 /*_._VALCLO___V476*/ meltfptr[475] =
    (melt_ptr_t) & meltcdat->dclo_441__GET_POLLING_INPUT;
  meltcdat->dclo_441__GET_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_441__GET_POLLING_INPUT.nbval = 0;

  /*inirout drout_442__REGISTER_INPUT_CHANNEL_HANDLER */
 /*_._VALROUT___V477*/ meltfptr[476] =
    (melt_ptr_t) & meltcdat->drout_442__REGISTER_INPUT_CHANNEL_HANDLER;
  meltcdat->drout_442__REGISTER_INPUT_CHANNEL_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_442__REGISTER_INPUT_CHANNEL_HANDLER.routdescr,
	   "REGISTER_INPUT_CHANNEL_HANDLER @warmelt-hooks.melt:2579",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_442__REGISTER_INPUT_CHANNEL_HANDLER.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_442__REGISTER_INPUT_CHANNEL_HANDLER,
			     meltrout_82_WARMELTmiHOOKS_REGISTER_INPUT_CHANNEL_HANDLER);

  /*iniclos dclo_443__REGISTER_INPUT_CHANNEL_HANDLER */
 /*_._VALCLO___V478*/ meltfptr[477] =
    (melt_ptr_t) & meltcdat->dclo_443__REGISTER_INPUT_CHANNEL_HANDLER;
  meltcdat->dclo_443__REGISTER_INPUT_CHANNEL_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_443__REGISTER_INPUT_CHANNEL_HANDLER.nbval = 0;


/*iniobj dsym_444__DISCR_STRBUF*/
  /*uniqueobj*/ if (! /*_._VALDATA___V479*/ meltfptr[478])
/*_._VALDATA___V479*/ meltfptr[478] =
      (melt_ptr_t) & meltcdat->dsym_444__DISCR_STRBUF;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_444__DISCR_STRBUF",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_444__DISCR_STRBUF",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_444__DISCR_STRBUF.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_444__DISCR_STRBUF.obj_hash = 492035674;
  meltcdat->dsym_444__DISCR_STRBUF.obj_len = 3;


/*inistring dstr_445__DISCR_STRBUF*/
 /*_._VALSTR___V480*/ meltfptr[479] =
    (melt_ptr_t) & meltcdat->dstr_445__DISCR_STRBUF;
  meltcdat->dstr_445__DISCR_STRBUF.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_445__DISCR_STRBUF.val,
				"DISCR_STRBUF",
				sizeof (meltcdat->dstr_445__DISCR_STRBUF.
					val) - 1);
  meltcdat->dstr_445__DISCR_STRBUF.val[12] = (char) 0;
  meltcdat->dstr_445__DISCR_STRBUF.slen = 12;


/*iniobj dsym_446__DISCR_BUCKET_LONGS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V481*/ meltfptr[480])
/*_._VALDATA___V481*/ meltfptr[480] =
      (melt_ptr_t) & meltcdat->dsym_446__DISCR_BUCKET_LONGS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_446__DISCR_BUCKET_LONGS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_446__DISCR_BUCKET_LONGS",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_446__DISCR_BUCKET_LONGS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_446__DISCR_BUCKET_LONGS.obj_hash = 603682282;
  meltcdat->dsym_446__DISCR_BUCKET_LONGS.obj_len = 3;


/*inistring dstr_447__DISCR_BUCKET_LONGS*/
 /*_._VALSTR___V482*/ meltfptr[481] =
    (melt_ptr_t) & meltcdat->dstr_447__DISCR_BUCKET_LONGS;
  meltcdat->dstr_447__DISCR_BUCKET_LONGS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_447__DISCR_BUCKET_LONGS.val,
				"DISCR_BUCKET_LONGS",
				sizeof (meltcdat->
					dstr_447__DISCR_BUCKET_LONGS.val) -
				1);
  meltcdat->dstr_447__DISCR_BUCKET_LONGS.val[18] = (char) 0;
  meltcdat->dstr_447__DISCR_BUCKET_LONGS.slen = 18;


/*inihook dhook__448__HOOK_HANDLE_SIGIO */
  meltcdat->dhook__448__HOOK_HANDLE_SIGIO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_HANDLE_SIGIO data */
  meltcdat->dhook__448__HOOK_HANDLE_SIGIO.nbval = 1;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__448__HOOK_HANDLE_SIGIO,
			  melthook_HOOK_HANDLE_SIGIO);
  meltcdat->dhook__448__HOOK_HANDLE_SIGIO.hookdata =
    /*_._VALDATA___V484*/ meltfptr[483];
  strncpy (meltcdat->dhook__448__HOOK_HANDLE_SIGIO.hookname,
	   "HOOK_HANDLE_SIGIO",
	   sizeof (meltcdat->dhook__448__HOOK_HANDLE_SIGIO.hookname) - 1);
/*predefinedhook HOOK_HANDLE_SIGIO for dhook__448__HOOK_HANDLE_SIGIO*/
  if (!MELT_PREDEF (HOOK_HANDLE_SIGIO))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGIO,
		       (melt_ptr_t) & meltcdat->
		       dhook__448__HOOK_HANDLE_SIGIO);

  /*_._VALHOOK___V483*/ meltfptr[482] =
  /*inihooklocvar HOOK_HANDLE_SIGIO */
  (melt_ptr_t) & meltcdat->dhook__448__HOOK_HANDLE_SIGIO;

  /*done inihook dhook__448__HOOK_HANDLE_SIGIO */

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ iniobj");

/*iniobj dobj_449__*/
/*_._VALDATA___V484*/ meltfptr[483] = (melt_ptr_t) & meltcdat->dobj_449__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_449__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_449__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_449__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_449__.obj_hash = 355487859;
  meltcdat->dobj_449__.obj_len = 6;


/*inistring dstr_450__HOOK_HANDLE_SIGIO*/
 /*_._VALSTR___V485*/ meltfptr[484] =
    (melt_ptr_t) & meltcdat->dstr_450__HOOK_HANDLE_SIGIO;
  meltcdat->dstr_450__HOOK_HANDLE_SIGIO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_450__HOOK_HANDLE_SIGIO.val,
				"HOOK_HANDLE_SIGIO",
				sizeof (meltcdat->dstr_450__HOOK_HANDLE_SIGIO.
					val) - 1);
  meltcdat->dstr_450__HOOK_HANDLE_SIGIO.val[17] = (char) 0;
  meltcdat->dstr_450__HOOK_HANDLE_SIGIO.slen = 17;

  /*inimult dtup_451___HOOK_HANDLE_SIGIO */
 /*_._VALTUP___V486*/ meltfptr[485] =
    (melt_ptr_t) & meltcdat->dtup_451___HOOK_HANDLE_SIGIO;
  meltcdat->dtup_451___HOOK_HANDLE_SIGIO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_451___HOOK_HANDLE_SIGIO.nbval = 0;
  /*inimult dtup_452___HOOK_HANDLE_SIGIO */
 /*_._VALTUP___V487*/ meltfptr[486] =
    (melt_ptr_t) & meltcdat->dtup_452___HOOK_HANDLE_SIGIO;
  meltcdat->dtup_452___HOOK_HANDLE_SIGIO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_452___HOOK_HANDLE_SIGIO.nbval = 0;

/*iniobj dsym_453__EVERY_POLLING_INPUT*/
  /*uniqueobj*/ if (! /*_._VALDATA___V488*/ meltfptr[487])
/*_._VALDATA___V488*/ meltfptr[487] =
      (melt_ptr_t) & meltcdat->dsym_453__EVERY_POLLING_INPUT;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_453__EVERY_POLLING_INPUT",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_453__EVERY_POLLING_INPUT",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_453__EVERY_POLLING_INPUT.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_453__EVERY_POLLING_INPUT.obj_hash = 131951659;
  meltcdat->dsym_453__EVERY_POLLING_INPUT.obj_len = 3;


/*inistring dstr_454__EVERY_POLLING_INPUT*/
 /*_._VALSTR___V489*/ meltfptr[488] =
    (melt_ptr_t) & meltcdat->dstr_454__EVERY_POLLING_INPUT;
  meltcdat->dstr_454__EVERY_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_454__EVERY_POLLING_INPUT.val,
				"EVERY_POLLING_INPUT",
				sizeof (meltcdat->
					dstr_454__EVERY_POLLING_INPUT.val) -
				1);
  meltcdat->dstr_454__EVERY_POLLING_INPUT.val[19] = (char) 0;
  meltcdat->dstr_454__EVERY_POLLING_INPUT.slen = 19;


/*iniobj dsym_455__GET_POLLING_INPUT*/
  /*uniqueobj*/ if (! /*_._VALDATA___V490*/ meltfptr[489])
/*_._VALDATA___V490*/ meltfptr[489] =
      (melt_ptr_t) & meltcdat->dsym_455__GET_POLLING_INPUT;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_455__GET_POLLING_INPUT",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_455__GET_POLLING_INPUT",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_455__GET_POLLING_INPUT.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_455__GET_POLLING_INPUT.obj_hash = 55197355;
  meltcdat->dsym_455__GET_POLLING_INPUT.obj_len = 3;


/*inistring dstr_456__GET_POLLING_INPUT*/
 /*_._VALSTR___V491*/ meltfptr[490] =
    (melt_ptr_t) & meltcdat->dstr_456__GET_POLLING_INPUT;
  meltcdat->dstr_456__GET_POLLING_INPUT.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_456__GET_POLLING_INPUT.val,
				"GET_POLLING_INPUT",
				sizeof (meltcdat->dstr_456__GET_POLLING_INPUT.
					val) - 1);
  meltcdat->dstr_456__GET_POLLING_INPUT.val[17] = (char) 0;
  meltcdat->dstr_456__GET_POLLING_INPUT.slen = 17;


/*iniobj dsym_457__HOOK_HANDLE_SIGIO*/
  /*uniqueobj*/ if (! /*_._VALDATA___V492*/ meltfptr[491])
/*_._VALDATA___V492*/ meltfptr[491] =
      (melt_ptr_t) & meltcdat->dsym_457__HOOK_HANDLE_SIGIO;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_457__HOOK_HANDLE_SIGIO",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_457__HOOK_HANDLE_SIGIO",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_457__HOOK_HANDLE_SIGIO.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_457__HOOK_HANDLE_SIGIO.obj_hash = 888422390;
  meltcdat->dsym_457__HOOK_HANDLE_SIGIO.obj_len = 3;


/*inistring dstr_458__HOOK_HANDLE_SIGIO*/
 /*_._VALSTR___V493*/ meltfptr[492] =
    (melt_ptr_t) & meltcdat->dstr_458__HOOK_HANDLE_SIGIO;
  meltcdat->dstr_458__HOOK_HANDLE_SIGIO.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_458__HOOK_HANDLE_SIGIO.val,
				"HOOK_HANDLE_SIGIO",
				sizeof (meltcdat->dstr_458__HOOK_HANDLE_SIGIO.
					val) - 1);
  meltcdat->dstr_458__HOOK_HANDLE_SIGIO.val[17] = (char) 0;
  meltcdat->dstr_458__HOOK_HANDLE_SIGIO.slen = 17;


/*iniobj dsym_459__HOOK_POLL_INPUTS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V494*/ meltfptr[493])
/*_._VALDATA___V494*/ meltfptr[493] =
      (melt_ptr_t) & meltcdat->dsym_459__HOOK_POLL_INPUTS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_459__HOOK_POLL_INPUTS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_459__HOOK_POLL_INPUTS",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_459__HOOK_POLL_INPUTS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_459__HOOK_POLL_INPUTS.obj_hash = 303669745;
  meltcdat->dsym_459__HOOK_POLL_INPUTS.obj_len = 3;


/*inistring dstr_460__HOOK_POLL_INPUTS*/
 /*_._VALSTR___V495*/ meltfptr[494] =
    (melt_ptr_t) & meltcdat->dstr_460__HOOK_POLL_INPUTS;
  meltcdat->dstr_460__HOOK_POLL_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_460__HOOK_POLL_INPUTS.val,
				"HOOK_POLL_INPUTS",
				sizeof (meltcdat->dstr_460__HOOK_POLL_INPUTS.
					val) - 1);
  meltcdat->dstr_460__HOOK_POLL_INPUTS.val[16] = (char) 0;
  meltcdat->dstr_460__HOOK_POLL_INPUTS.slen = 16;


/*iniobj dsym_461__IS_POLLING_INPUTS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V496*/ meltfptr[495])
/*_._VALDATA___V496*/ meltfptr[495] =
      (melt_ptr_t) & meltcdat->dsym_461__IS_POLLING_INPUTS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_461__IS_POLLING_INPUTS",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_461__IS_POLLING_INPUTS",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_461__IS_POLLING_INPUTS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_461__IS_POLLING_INPUTS.obj_hash = 820767550;
  meltcdat->dsym_461__IS_POLLING_INPUTS.obj_len = 3;


/*inistring dstr_462__IS_POLLING_INPUTS*/
 /*_._VALSTR___V497*/ meltfptr[496] =
    (melt_ptr_t) & meltcdat->dstr_462__IS_POLLING_INPUTS;
  meltcdat->dstr_462__IS_POLLING_INPUTS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_462__IS_POLLING_INPUTS.val,
				"IS_POLLING_INPUTS",
				sizeof (meltcdat->dstr_462__IS_POLLING_INPUTS.
					val) - 1);
  meltcdat->dstr_462__IS_POLLING_INPUTS.val[17] = (char) 0;
  meltcdat->dstr_462__IS_POLLING_INPUTS.slen = 17;


/*iniobj dsym_463__MELT_INVOKE_INPUT_CALLBACKS*/
  /*uniqueobj*/ if (! /*_._VALDATA___V498*/ meltfptr[497])
/*_._VALDATA___V498*/ meltfptr[497] =
      (melt_ptr_t) & meltcdat->dsym_463__MELT_INVOKE_INPUT_CALLBACKS;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_463__MELT_INVOKE_INPUT_CALLBACKS",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_463__MELT_INVOKE_INPUT_CALLBACKS",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_463__MELT_INVOKE_INPUT_CALLBACKS.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_463__MELT_INVOKE_INPUT_CALLBACKS.obj_hash = 266429969;
  meltcdat->dsym_463__MELT_INVOKE_INPUT_CALLBACKS.obj_len = 3;


/*inistring dstr_464__MELT_INVOKE_INPUT_CALLBA*/
 /*_._VALSTR___V499*/ meltfptr[498] =
    (melt_ptr_t) & meltcdat->dstr_464__MELT_INVOKE_INPUT_CALLBA;
  meltcdat->dstr_464__MELT_INVOKE_INPUT_CALLBA.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_464__MELT_INVOKE_INPUT_CALLBA.
				val, "MELT_INVOKE_INPUT_CALLBACKS",
				sizeof (meltcdat->
					dstr_464__MELT_INVOKE_INPUT_CALLBA.
					val) - 1);
  meltcdat->dstr_464__MELT_INVOKE_INPUT_CALLBA.val[27] = (char) 0;
  meltcdat->dstr_464__MELT_INVOKE_INPUT_CALLBA.slen = 27;


/*inihook dhook__465__HOOK_HANDLE_SIGALRM */
  meltcdat->dhook__465__HOOK_HANDLE_SIGALRM.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_HANDLE_SIGALRM data */
  meltcdat->dhook__465__HOOK_HANDLE_SIGALRM.nbval = 2;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__465__HOOK_HANDLE_SIGALRM,
			  melthook_HOOK_HANDLE_SIGALRM);
  meltcdat->dhook__465__HOOK_HANDLE_SIGALRM.hookdata =
    /*_._VALDATA___V501*/ meltfptr[500];
  strncpy (meltcdat->dhook__465__HOOK_HANDLE_SIGALRM.hookname,
	   "HOOK_HANDLE_SIGALRM",
	   sizeof (meltcdat->dhook__465__HOOK_HANDLE_SIGALRM.hookname) - 1);
/*predefinedhook HOOK_HANDLE_SIGALRM for dhook__465__HOOK_HANDLE_SIGALRM*/
  if (!MELT_PREDEF (HOOK_HANDLE_SIGALRM))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGALRM,
		       (melt_ptr_t) & meltcdat->
		       dhook__465__HOOK_HANDLE_SIGALRM);

  /*_._VALHOOK___V500*/ meltfptr[499] =
  /*inihooklocvar HOOK_HANDLE_SIGALRM */
  (melt_ptr_t) & meltcdat->dhook__465__HOOK_HANDLE_SIGALRM;

  /*done inihook dhook__465__HOOK_HANDLE_SIGALRM */

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ iniobj");

/*iniobj dobj_466__*/
/*_._VALDATA___V501*/ meltfptr[500] = (melt_ptr_t) & meltcdat->dobj_466__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_466__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_466__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_466__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_466__.obj_hash = 554011586;
  meltcdat->dobj_466__.obj_len = 6;


/*inistring dstr_467__HOOK_HANDLE_SIGALRM*/
 /*_._VALSTR___V502*/ meltfptr[501] =
    (melt_ptr_t) & meltcdat->dstr_467__HOOK_HANDLE_SIGALRM;
  meltcdat->dstr_467__HOOK_HANDLE_SIGALRM.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_467__HOOK_HANDLE_SIGALRM.val,
				"HOOK_HANDLE_SIGALRM",
				sizeof (meltcdat->
					dstr_467__HOOK_HANDLE_SIGALRM.val) -
				1);
  meltcdat->dstr_467__HOOK_HANDLE_SIGALRM.val[19] = (char) 0;
  meltcdat->dstr_467__HOOK_HANDLE_SIGALRM.slen = 19;

  /*inimult dtup_468___HOOK_HANDLE_SIGALRM */
 /*_._VALTUP___V503*/ meltfptr[502] =
    (melt_ptr_t) & meltcdat->dtup_468___HOOK_HANDLE_SIGALRM;
  meltcdat->dtup_468___HOOK_HANDLE_SIGALRM.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_468___HOOK_HANDLE_SIGALRM.nbval = 0;
  /*inimult dtup_469___HOOK_HANDLE_SIGALRM */
 /*_._VALTUP___V504*/ meltfptr[503] =
    (melt_ptr_t) & meltcdat->dtup_469___HOOK_HANDLE_SIGALRM;
  meltcdat->dtup_469___HOOK_HANDLE_SIGALRM.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_469___HOOK_HANDLE_SIGALRM.nbval = 0;

/*iniobj dsym_470__CLASS_ALARM_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V505*/ meltfptr[504])
/*_._VALDATA___V505*/ meltfptr[504] =
      (melt_ptr_t) & meltcdat->dsym_470__CLASS_ALARM_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_470__CLASS_ALARM_HANDLER",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_470__CLASS_ALARM_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_470__CLASS_ALARM_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_470__CLASS_ALARM_HANDLER.obj_hash = 841081062;
  meltcdat->dsym_470__CLASS_ALARM_HANDLER.obj_len = 3;


/*inistring dstr_471__CLASS_ALARM_HANDLER*/
 /*_._VALSTR___V506*/ meltfptr[505] =
    (melt_ptr_t) & meltcdat->dstr_471__CLASS_ALARM_HANDLER;
  meltcdat->dstr_471__CLASS_ALARM_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_471__CLASS_ALARM_HANDLER.val,
				"CLASS_ALARM_HANDLER",
				sizeof (meltcdat->
					dstr_471__CLASS_ALARM_HANDLER.val) -
				1);
  meltcdat->dstr_471__CLASS_ALARM_HANDLER.val[19] = (char) 0;
  meltcdat->dstr_471__CLASS_ALARM_HANDLER.slen = 19;

  /*inirout drout_472__REGISTER_ALARM_TIMER */
 /*_._VALROUT___V507*/ meltfptr[506] =
    (melt_ptr_t) & meltcdat->drout_472__REGISTER_ALARM_TIMER;
  meltcdat->drout_472__REGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_472__REGISTER_ALARM_TIMER.routdescr,
	   "REGISTER_ALARM_TIMER @warmelt-hooks.melt:2719",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_472__REGISTER_ALARM_TIMER.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_472__REGISTER_ALARM_TIMER,
			     meltrout_85_WARMELTmiHOOKS_REGISTER_ALARM_TIMER);

  /*iniclos dclo_473__REGISTER_ALARM_TIMER */
 /*_._VALCLO___V508*/ meltfptr[507] =
    (melt_ptr_t) & meltcdat->dclo_473__REGISTER_ALARM_TIMER;
  meltcdat->dclo_473__REGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_473__REGISTER_ALARM_TIMER.nbval = 0;


/*iniobj dsym_474__DISCR_CONSTANT_INTEGER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V509*/ meltfptr[508])
/*_._VALDATA___V509*/ meltfptr[508] =
      (melt_ptr_t) & meltcdat->dsym_474__DISCR_CONSTANT_INTEGER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_474__DISCR_CONSTANT_INTEGER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_474__DISCR_CONSTANT_INTEGER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_474__DISCR_CONSTANT_INTEGER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_474__DISCR_CONSTANT_INTEGER.obj_hash = 1007078494;
  meltcdat->dsym_474__DISCR_CONSTANT_INTEGER.obj_len = 3;


/*inistring dstr_475__DISCR_CONSTANT_INTEGER*/
 /*_._VALSTR___V510*/ meltfptr[509] =
    (melt_ptr_t) & meltcdat->dstr_475__DISCR_CONSTANT_INTEGER;
  meltcdat->dstr_475__DISCR_CONSTANT_INTEGER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_475__DISCR_CONSTANT_INTEGER.
				val, "DISCR_CONSTANT_INTEGER",
				sizeof (meltcdat->
					dstr_475__DISCR_CONSTANT_INTEGER.
					val) - 1);
  meltcdat->dstr_475__DISCR_CONSTANT_INTEGER.val[22] = (char) 0;
  meltcdat->dstr_475__DISCR_CONSTANT_INTEGER.slen = 22;

  /*inirout drout_476__UNREGISTER_ALARM_TIMER */
 /*_._VALROUT___V511*/ meltfptr[510] =
    (melt_ptr_t) & meltcdat->drout_476__UNREGISTER_ALARM_TIMER;
  meltcdat->drout_476__UNREGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_476__UNREGISTER_ALARM_TIMER.routdescr,
	   "UNREGISTER_ALARM_TIMER @warmelt-hooks.melt:2751",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_476__UNREGISTER_ALARM_TIMER.nbval = 3;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->drout_476__UNREGISTER_ALARM_TIMER,
			     meltrout_86_WARMELTmiHOOKS_UNREGISTER_ALARM_TIMER);

  /*iniclos dclo_477__UNREGISTER_ALARM_TIMER */
 /*_._VALCLO___V512*/ meltfptr[511] =
    (melt_ptr_t) & meltcdat->dclo_477__UNREGISTER_ALARM_TIMER;
  meltcdat->dclo_477__UNREGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_477__UNREGISTER_ALARM_TIMER.nbval = 0;


/*inihook dhook__478__HOOK_HANDLE_SIGCHLD */
  meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_HOOK))));
  /*inihook HOOK_HANDLE_SIGCHLD data */
  meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD.nbval = 6;
  MELT_HOOK_SET_ROUTCODE (&meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD,
			  melthook_HOOK_HANDLE_SIGCHLD);
  meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD.hookdata =
    /*_._VALDATA___V514*/ meltfptr[513];
  strncpy (meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD.hookname,
	   "HOOK_HANDLE_SIGCHLD",
	   sizeof (meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD.hookname) - 1);
/*predefinedhook HOOK_HANDLE_SIGCHLD for dhook__478__HOOK_HANDLE_SIGCHLD*/
  if (!MELT_PREDEF (HOOK_HANDLE_SIGCHLD))
    MELT_STORE_PREDEF (HOOK_HANDLE_SIGCHLD,
		       (melt_ptr_t) & meltcdat->
		       dhook__478__HOOK_HANDLE_SIGCHLD);

  /*_._VALHOOK___V513*/ meltfptr[512] =
  /*inihooklocvar HOOK_HANDLE_SIGCHLD */
  (melt_ptr_t) & meltcdat->dhook__478__HOOK_HANDLE_SIGCHLD;

  /*done inihook dhook__478__HOOK_HANDLE_SIGCHLD */

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ iniobj");

/*iniobj dobj_479__*/
/*_._VALDATA___V514*/ meltfptr[513] = (melt_ptr_t) & meltcdat->dobj_479__;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dobj_479__",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF
					 (CLASS_HOOK_DESCRIPTOR))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dobj_479__",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dobj_479__.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_HOOK_DESCRIPTOR))));
  meltcdat->dobj_479__.obj_hash = 246347327;
  meltcdat->dobj_479__.obj_len = 6;


/*inistring dstr_480__HOOK_HANDLE_SIGCHLD*/
 /*_._VALSTR___V515*/ meltfptr[514] =
    (melt_ptr_t) & meltcdat->dstr_480__HOOK_HANDLE_SIGCHLD;
  meltcdat->dstr_480__HOOK_HANDLE_SIGCHLD.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_480__HOOK_HANDLE_SIGCHLD.val,
				"HOOK_HANDLE_SIGCHLD",
				sizeof (meltcdat->
					dstr_480__HOOK_HANDLE_SIGCHLD.val) -
				1);
  meltcdat->dstr_480__HOOK_HANDLE_SIGCHLD.val[19] = (char) 0;
  meltcdat->dstr_480__HOOK_HANDLE_SIGCHLD.slen = 19;

  /*inimult dtup_481___HOOK_HANDLE_SIGCHLD */
 /*_._VALTUP___V516*/ meltfptr[515] =
    (melt_ptr_t) & meltcdat->dtup_481___HOOK_HANDLE_SIGCHLD;
  meltcdat->dtup_481___HOOK_HANDLE_SIGCHLD.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_481___HOOK_HANDLE_SIGCHLD.nbval = 0;
  /*inimult dtup_482___HOOK_HANDLE_SIGCHLD */
 /*_._VALTUP___V517*/ meltfptr[516] =
    (melt_ptr_t) & meltcdat->dtup_482___HOOK_HANDLE_SIGCHLD;
  meltcdat->dtup_482___HOOK_HANDLE_SIGCHLD.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_MULTIPLE))));
  meltcdat->dtup_482___HOOK_HANDLE_SIGCHLD.nbval = 0;

/*iniobj dsym_483__CLASS_CHILD_PROCESS_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V518*/ meltfptr[517])
/*_._VALDATA___V518*/ meltfptr[517] =
      (melt_ptr_t) & meltcdat->dsym_483__CLASS_CHILD_PROCESS_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_483__CLASS_CHILD_PROCESS_HANDLER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_483__CLASS_CHILD_PROCESS_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_483__CLASS_CHILD_PROCESS_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_483__CLASS_CHILD_PROCESS_HANDLER.obj_hash = 438603295;
  meltcdat->dsym_483__CLASS_CHILD_PROCESS_HANDLER.obj_len = 3;


/*inistring dstr_484__CLASS_CHILD_PROCESS_HAND*/
 /*_._VALSTR___V519*/ meltfptr[518] =
    (melt_ptr_t) & meltcdat->dstr_484__CLASS_CHILD_PROCESS_HAND;
  meltcdat->dstr_484__CLASS_CHILD_PROCESS_HAND.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_484__CLASS_CHILD_PROCESS_HAND.
				val, "CLASS_CHILD_PROCESS_HANDLER",
				sizeof (meltcdat->
					dstr_484__CLASS_CHILD_PROCESS_HAND.
					val) - 1);
  meltcdat->dstr_484__CLASS_CHILD_PROCESS_HAND.val[27] = (char) 0;
  meltcdat->dstr_484__CLASS_CHILD_PROCESS_HAND.slen = 27;


/*iniobj dsym_485__LIST_TO_MULTIPLE*/
  /*uniqueobj*/ if (! /*_._VALDATA___V520*/ meltfptr[519])
/*_._VALDATA___V520*/ meltfptr[519] =
      (melt_ptr_t) & meltcdat->dsym_485__LIST_TO_MULTIPLE;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_485__LIST_TO_MULTIPLE",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr objmagic dsym_485__LIST_TO_MULTIPLE",
		    ((meltobject_ptr_t)
		     (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
		    meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_485__LIST_TO_MULTIPLE.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_485__LIST_TO_MULTIPLE.obj_hash = 987171205;
  meltcdat->dsym_485__LIST_TO_MULTIPLE.obj_len = 3;


/*inistring dstr_486__LIST_TO_MULTIPLE*/
 /*_._VALSTR___V521*/ meltfptr[520] =
    (melt_ptr_t) & meltcdat->dstr_486__LIST_TO_MULTIPLE;
  meltcdat->dstr_486__LIST_TO_MULTIPLE.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_486__LIST_TO_MULTIPLE.val,
				"LIST_TO_MULTIPLE",
				sizeof (meltcdat->dstr_486__LIST_TO_MULTIPLE.
					val) - 1);
  meltcdat->dstr_486__LIST_TO_MULTIPLE.val[16] = (char) 0;
  meltcdat->dstr_486__LIST_TO_MULTIPLE.slen = 16;

  /*inirout drout_487__REGISTER_CHILD_PROCESS_HANDLER */
 /*_._VALROUT___V522*/ meltfptr[521] =
    (melt_ptr_t) & meltcdat->drout_487__REGISTER_CHILD_PROCESS_HANDLER;
  meltcdat->drout_487__REGISTER_CHILD_PROCESS_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_487__REGISTER_CHILD_PROCESS_HANDLER.routdescr,
	   "REGISTER_CHILD_PROCESS_HANDLER @warmelt-hooks.melt:2899",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_487__REGISTER_CHILD_PROCESS_HANDLER.nbval = 4;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_487__REGISTER_CHILD_PROCESS_HANDLER,
			     meltrout_88_WARMELTmiHOOKS_REGISTER_CHILD_PROCESS_HANDLER);

  /*iniclos dclo_488__REGISTER_CHILD_PROCESS_HANDLER */
 /*_._VALCLO___V523*/ meltfptr[522] =
    (melt_ptr_t) & meltcdat->dclo_488__REGISTER_CHILD_PROCESS_HANDLER;
  meltcdat->dclo_488__REGISTER_CHILD_PROCESS_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_488__REGISTER_CHILD_PROCESS_HANDLER.nbval = 0;

  /*inirout drout_489__UNREGISTER_CHILD_PROCESS_HANDLER */
 /*_._VALROUT___V524*/ meltfptr[523] =
    (melt_ptr_t) & meltcdat->drout_489__UNREGISTER_CHILD_PROCESS_HANDLER;
  meltcdat->drout_489__UNREGISTER_CHILD_PROCESS_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_ROUTINE))));
  strncpy (meltcdat->drout_489__UNREGISTER_CHILD_PROCESS_HANDLER.routdescr,
	   "UNREGISTER_CHILD_PROCESS_HANDLER @warmelt-hooks.melt:2938",
	   MELT_ROUTDESCR_LEN - 1);
  meltcdat->drout_489__UNREGISTER_CHILD_PROCESS_HANDLER.nbval = 1;
  MELT_ROUTINE_SET_ROUTCODE (&meltcdat->
			     drout_489__UNREGISTER_CHILD_PROCESS_HANDLER,
			     meltrout_89_WARMELTmiHOOKS_UNREGISTER_CHILD_PROCESS_HANDLER);

  /*iniclos dclo_490__UNREGISTER_CHILD_PROCESS_HANDLER */
 /*_._VALCLO___V525*/ meltfptr[524] =
    (melt_ptr_t) & meltcdat->dclo_490__UNREGISTER_CHILD_PROCESS_HANDLER;
  meltcdat->dclo_490__UNREGISTER_CHILD_PROCESS_HANDLER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_CLOSURE))));
  meltcdat->dclo_490__UNREGISTER_CHILD_PROCESS_HANDLER.nbval = 0;


/*iniobj dsym_491__REGISTER_ALARM_TIMER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V526*/ meltfptr[525])
/*_._VALDATA___V526*/ meltfptr[525] =
      (melt_ptr_t) & meltcdat->dsym_491__REGISTER_ALARM_TIMER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg ("iniobj check.discr isobj dsym_491__REGISTER_ALARM_TIMER",
		    melt_magic_discr ((melt_ptr_t)
				      (((melt_ptr_t)
					(MELT_PREDEF (CLASS_SYMBOL))))) ==
		    MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_491__REGISTER_ALARM_TIMER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_491__REGISTER_ALARM_TIMER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_491__REGISTER_ALARM_TIMER.obj_hash = 507442246;
  meltcdat->dsym_491__REGISTER_ALARM_TIMER.obj_len = 3;


/*inistring dstr_492__REGISTER_ALARM_TIMER*/
 /*_._VALSTR___V527*/ meltfptr[526] =
    (melt_ptr_t) & meltcdat->dstr_492__REGISTER_ALARM_TIMER;
  meltcdat->dstr_492__REGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_492__REGISTER_ALARM_TIMER.val,
				"REGISTER_ALARM_TIMER",
				sizeof (meltcdat->
					dstr_492__REGISTER_ALARM_TIMER.val) -
				1);
  meltcdat->dstr_492__REGISTER_ALARM_TIMER.val[20] = (char) 0;
  meltcdat->dstr_492__REGISTER_ALARM_TIMER.slen = 20;


/*iniobj dsym_493__REGISTER_CHILD_PROCESS_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V528*/ meltfptr[527])
/*_._VALDATA___V528*/ meltfptr[527] =
      (melt_ptr_t) & meltcdat->dsym_493__REGISTER_CHILD_PROCESS_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_493__REGISTER_CHILD_PROCESS_HANDLER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_493__REGISTER_CHILD_PROCESS_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_493__REGISTER_CHILD_PROCESS_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_493__REGISTER_CHILD_PROCESS_HANDLER.obj_hash = 303087376;
  meltcdat->dsym_493__REGISTER_CHILD_PROCESS_HANDLER.obj_len = 3;


/*inistring dstr_494__REGISTER_CHILD_PROCESS_H*/
 /*_._VALSTR___V529*/ meltfptr[528] =
    (melt_ptr_t) & meltcdat->dstr_494__REGISTER_CHILD_PROCESS_H;
  meltcdat->dstr_494__REGISTER_CHILD_PROCESS_H.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_494__REGISTER_CHILD_PROCESS_H.
				val, "REGISTER_CHILD_PROCESS_HANDLER",
				sizeof (meltcdat->
					dstr_494__REGISTER_CHILD_PROCESS_H.
					val) - 1);
  meltcdat->dstr_494__REGISTER_CHILD_PROCESS_H.val[30] = (char) 0;
  meltcdat->dstr_494__REGISTER_CHILD_PROCESS_H.slen = 30;


/*iniobj dsym_495__REGISTER_INPUT_CHANNEL_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V530*/ meltfptr[529])
/*_._VALDATA___V530*/ meltfptr[529] =
      (melt_ptr_t) & meltcdat->dsym_495__REGISTER_INPUT_CHANNEL_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_495__REGISTER_INPUT_CHANNEL_HANDLER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_495__REGISTER_INPUT_CHANNEL_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_495__REGISTER_INPUT_CHANNEL_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_495__REGISTER_INPUT_CHANNEL_HANDLER.obj_hash = 237908126;
  meltcdat->dsym_495__REGISTER_INPUT_CHANNEL_HANDLER.obj_len = 3;


/*inistring dstr_496__REGISTER_INPUT_CHANNEL_H*/
 /*_._VALSTR___V531*/ meltfptr[530] =
    (melt_ptr_t) & meltcdat->dstr_496__REGISTER_INPUT_CHANNEL_H;
  meltcdat->dstr_496__REGISTER_INPUT_CHANNEL_H.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_496__REGISTER_INPUT_CHANNEL_H.
				val, "REGISTER_INPUT_CHANNEL_HANDLER",
				sizeof (meltcdat->
					dstr_496__REGISTER_INPUT_CHANNEL_H.
					val) - 1);
  meltcdat->dstr_496__REGISTER_INPUT_CHANNEL_H.val[30] = (char) 0;
  meltcdat->dstr_496__REGISTER_INPUT_CHANNEL_H.slen = 30;


/*iniobj dsym_497__UNREGISTER_ALARM_TIMER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V532*/ meltfptr[531])
/*_._VALDATA___V532*/ meltfptr[531] =
      (melt_ptr_t) & meltcdat->dsym_497__UNREGISTER_ALARM_TIMER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_497__UNREGISTER_ALARM_TIMER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_497__UNREGISTER_ALARM_TIMER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_497__UNREGISTER_ALARM_TIMER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_497__UNREGISTER_ALARM_TIMER.obj_hash = 943290870;
  meltcdat->dsym_497__UNREGISTER_ALARM_TIMER.obj_len = 3;


/*inistring dstr_498__UNREGISTER_ALARM_TIMER*/
 /*_._VALSTR___V533*/ meltfptr[532] =
    (melt_ptr_t) & meltcdat->dstr_498__UNREGISTER_ALARM_TIMER;
  meltcdat->dstr_498__UNREGISTER_ALARM_TIMER.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_498__UNREGISTER_ALARM_TIMER.
				val, "UNREGISTER_ALARM_TIMER",
				sizeof (meltcdat->
					dstr_498__UNREGISTER_ALARM_TIMER.
					val) - 1);
  meltcdat->dstr_498__UNREGISTER_ALARM_TIMER.val[22] = (char) 0;
  meltcdat->dstr_498__UNREGISTER_ALARM_TIMER.slen = 22;


/*iniobj dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER*/
  /*uniqueobj*/ if (! /*_._VALDATA___V534*/ meltfptr[533])
/*_._VALDATA___V534*/ meltfptr[533] =
      (melt_ptr_t) & meltcdat->dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER;
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr isobj dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER",
       melt_magic_discr ((melt_ptr_t)
			 (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))))) ==
       MELTOBMAG_OBJECT);
  if (MELT_LIKELY (!melt_prohibit_garbcoll))
    melt_assertmsg
      ("iniobj check.discr objmagic dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER",
       ((meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL)))))->
       meltobj_magic == MELTOBMAG_OBJECT);
  meltcdat->dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER.meltobj_class =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (CLASS_SYMBOL))));
  meltcdat->dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER.obj_hash = 167696883;
  meltcdat->dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER.obj_len = 3;


/*inistring dstr_500__UNREGISTER_CHILD_PROCESS*/
 /*_._VALSTR___V535*/ meltfptr[534] =
    (melt_ptr_t) & meltcdat->dstr_500__UNREGISTER_CHILD_PROCESS;
  meltcdat->dstr_500__UNREGISTER_CHILD_PROCESS.discr =
    (meltobject_ptr_t) (((melt_ptr_t) (MELT_PREDEF (DISCR_STRING))));
  /*small inistring */ strncpy (meltcdat->dstr_500__UNREGISTER_CHILD_PROCESS.
				val, "UNREGISTER_CHILD_PROCESS_HANDLER",
				sizeof (meltcdat->
					dstr_500__UNREGISTER_CHILD_PROCESS.
					val) - 1);
  meltcdat->dstr_500__UNREGISTER_CHILD_PROCESS.val[32] = (char) 0;
  meltcdat->dstr_500__UNREGISTER_CHILD_PROCESS.slen = 32;
  meltcdat = NULL;
  melt_prohibit_garbcoll = FALSE;

#undef meltfram__
}				/*end initialize_module_meltdata_WARMELTmiHOOKS */


#if MELT_HAVE_DEBUG
const char meltmodule_WARMELTmiHOOKS__melt_have_debug_enabled[] =
  "MELT module warmelt-hooks have debug enabled";
#else /*!MELT_HAVE_DEBUG */
const char meltmodule_WARMELTmiHOOKS__melt_have_debug_disabled[] =
  "MELT module warmelt-hooks have debug disabled";
#endif /*MELT_HAVE_DEBUG */


void *
melt_start_this_module (void *modargp_)
{

  char meltpredefinited[MELTGLOB__LASTGLOB + 8];

#if MELT_HAVE_DEBUG
  static long melt_call_counter__;
  long melt_thiscallcounter__ ATTRIBUTE_UNUSED = ++melt_call_counter__;
#undef meltcallcount
#define meltcallcount melt_thiscallcounter__
#else
#undef meltcallcount
#define meltcallcount 0L
#endif

  struct /*startiniframdecl */ melt_initial_frame_st meltfram__;	/*declfrastruct */
#define meltframe meltfram__

  /*melt_start_this_module is initial declstructinit */
  memset (&meltfram__, 0, sizeof (meltfram__));
/* declstructinit initial routine melt_start_this_module minihash 3283*/

  meltfram__.mcfr_prev = (struct melt_callframe_st *) melt_topframe;
  melt_topframe = (struct melt_callframe_st *) &meltfram__;
/**initial routine prologue**/
  /* set initial frame marking */
  ((struct melt_callframe_st *) &meltfram__)->mcfr_nbvar =
    /*minihash */ -3283;
  ((struct melt_callframe_st *) &meltfram__)->mcfr_forwmarkrout =
    meltmod__WARMELTmiHOOKS__forward_or_mark_module_start_frame;
 /**COMMENT: get previous environment **/ ;

  /*^compute */
  /*_._PREVENV___V4*/ meltfptr[3] = /*getprevenv */ (melt_ptr_t) modargp_;
  /*^comment */
 /**COMMENT: compute boxloc **/ ;

  /*^cond */
  /*cond */ if ( /*_._CONTENV___V2*/ meltfptr[1])	/*then */
    {
    }
  else
    {				/*^cond.else */

      /*^compute */

      /* compile2obj_initproc emitted initialization of environment reference for warmelt-hooks */
      if ( /*_._PREVENV___V4*/ meltfptr[3])
	{
		  /*_._CONTENV___V2*/ meltfptr[1] = melthookproc_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER
	    ((melt_ptr_t) /*_._PREVENV___V4*/ meltfptr[3], "warmelt-hooks");
	}
      else			/* no prevenv */
	{
#if MELT_HAS_INITIAL_ENVIRONMENT>0
	  if (!melt_flag_bootstrapping)
	    warning (0,
		     "MELT is not creating a fresh environment reference for warmelt-hooks without parent env.");
#endif /* MELT_HAS_INITIAL_ENVIRONMENT>0 */
	}
      ;;
    }

  /*^comment */
 /**COMMENT: get symbols & keywords for initial procedure **/ ;

  /*^getnamedsymbol */
  /*getnamedsym:HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER */

  if (NULL == /*_._VALDATA___V26*/ meltfptr[25])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER =
	melthookproc_HOOK_NAMED_SYMBOL
	("HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER", (long) MELT_GET);
   /*_._VALDATA___V26*/ meltfptr[25] =
	(melt_ptr_t) meltsy_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER;
    }				/*endgetnamedsym HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER */


  /*^getnamedsymbol */
  /*getnamedsym:VAL */

  if (NULL == /*_._VALDATA___V32*/ meltfptr[31])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol VAL without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_VAL =
	melthookproc_HOOK_NAMED_SYMBOL ("VAL", (long) MELT_GET);
   /*_._VALDATA___V32*/ meltfptr[31] = (melt_ptr_t) meltsy_VAL;
    }				/*endgetnamedsym VAL */


  /*^getnamedsymbol */
  /*getnamedsym:FILENAME */

  if (NULL == /*_._VALDATA___V35*/ meltfptr[34])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FILENAME without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FILENAME =
	melthookproc_HOOK_NAMED_SYMBOL ("FILENAME", (long) MELT_GET);
   /*_._VALDATA___V35*/ meltfptr[34] = (melt_ptr_t) meltsy_FILENAME;
    }				/*endgetnamedsym FILENAME */


  /*^getnamedsymbol */
  /*getnamedsym:LINENO */

  if (NULL == /*_._VALDATA___V38*/ meltfptr[37])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol LINENO without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_LINENO =
	melthookproc_HOOK_NAMED_SYMBOL ("LINENO", (long) MELT_GET);
   /*_._VALDATA___V38*/ meltfptr[37] = (melt_ptr_t) meltsy_LINENO;
    }				/*endgetnamedsym LINENO */


  /*^getnamedsymbol */
  /*getnamedsym:MSG */

  if (NULL == /*_._VALDATA___V41*/ meltfptr[40])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MSG without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_MSG =
	melthookproc_HOOK_NAMED_SYMBOL ("MSG", (long) MELT_GET);
   /*_._VALDATA___V41*/ meltfptr[40] = (melt_ptr_t) meltsy_MSG;
    }				/*endgetnamedsym MSG */


  /*^getnamedsymbol */
  /*getnamedsym:COUNT */

  if (NULL == /*_._VALDATA___V44*/ meltfptr[43])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol COUNT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_COUNT =
	melthookproc_HOOK_NAMED_SYMBOL ("COUNT", (long) MELT_GET);
   /*_._VALDATA___V44*/ meltfptr[43] = (melt_ptr_t) meltsy_COUNT;
    }				/*endgetnamedsym COUNT */


  /*^getnamedsymbol */
  /*getnamedsym:MELT_DEBUG_FUN */

  if (NULL == /*_._VALDATA___V48*/ meltfptr[47])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_DEBUG_FUN without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_MELT_DEBUG_FUN =
	melthookproc_HOOK_NAMED_SYMBOL ("MELT_DEBUG_FUN", (long) MELT_GET);
   /*_._VALDATA___V48*/ meltfptr[47] = (melt_ptr_t) meltsy_MELT_DEBUG_FUN;
    }				/*endgetnamedsym MELT_DEBUG_FUN */


  /*^getnamedsymbol */
  /*getnamedsym:OVERRIDE_GATE_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V50*/ meltfptr[49])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol OVERRIDE_GATE_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_OVERRIDE_GATE_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("OVERRIDE_GATE_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V50*/ meltfptr[49] =
	(melt_ptr_t) meltsy_OVERRIDE_GATE_DELAYED_QUEUE;
    }				/*endgetnamedsym OVERRIDE_GATE_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V52*/ meltfptr[51])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V52*/ meltfptr[51] =
	(melt_ptr_t) meltsy_CLASS_DELAYED_QUEUE;
    }				/*endgetnamedsym CLASS_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:DISCR_LIST */

  if (NULL == /*_._VALDATA___V58*/ meltfptr[57])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_LIST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DISCR_LIST =
	melthookproc_HOOK_NAMED_SYMBOL ("DISCR_LIST", (long) MELT_GET);
   /*_._VALDATA___V58*/ meltfptr[57] = (melt_ptr_t) meltsy_DISCR_LIST;
    }				/*endgetnamedsym DISCR_LIST */


  /*^getnamedsymbol */
  /*getnamedsym:BEFOREGATE */

  if (NULL == /*_._VALDATA___V64*/ meltfptr[63])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol BEFOREGATE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_BEFOREGATE =
	melthookproc_HOOK_NAMED_SYMBOL ("BEFOREGATE", (long) MELT_GET);
   /*_._VALDATA___V64*/ meltfptr[63] = (melt_ptr_t) meltsy_BEFOREGATE;
    }				/*endgetnamedsym BEFOREGATE */


  /*^getnamedsymbol */
  /*getnamedsym:AFTERGATE */

  if (NULL == /*_._VALDATA___V68*/ meltfptr[67])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AFTERGATE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AFTERGATE =
	melthookproc_HOOK_NAMED_SYMBOL ("AFTERGATE", (long) MELT_GET);
   /*_._VALDATA___V68*/ meltfptr[67] = (melt_ptr_t) meltsy_AFTERGATE;
    }				/*endgetnamedsym AFTERGATE */


  /*^getnamedkeyword */
  /*getnamedkeyw:TRUE */
  {
    melt_ptr_t kw_TRUE =
      melthookproc_HOOK_NAMED_KEYWORD ("TRUE", (long) MELT_GET);
    if (kw_TRUE)
	       /*_._VALDATA___V71*/
      meltfptr[70] = (melt_ptr_t) kw_TRUE;
  }

  /*^getnamedsymbol */
  /*getnamedsym:CLASS_REFERENCE */

  if (NULL == /*_._VALDATA___V73*/ meltfptr[72])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_REFERENCE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_REFERENCE =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_REFERENCE", (long) MELT_GET);
   /*_._VALDATA___V73*/ meltfptr[72] = (melt_ptr_t) meltsy_CLASS_REFERENCE;
    }				/*endgetnamedsym CLASS_REFERENCE */


  /*^getnamedsymbol */
  /*getnamedsym:START_UNIT_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V87*/ meltfptr[86])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol START_UNIT_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_START_UNIT_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("START_UNIT_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V87*/ meltfptr[86] =
	(melt_ptr_t) meltsy_START_UNIT_DELAYED_QUEUE;
    }				/*endgetnamedsym START_UNIT_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:LIST_EVERY */

  if (NULL == /*_._VALDATA___V101*/ meltfptr[100])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol LIST_EVERY without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_LIST_EVERY =
	melthookproc_HOOK_NAMED_SYMBOL ("LIST_EVERY", (long) MELT_GET);
   /*_._VALDATA___V101*/ meltfptr[100] = (melt_ptr_t) meltsy_LIST_EVERY;
    }				/*endgetnamedsym LIST_EVERY */


  /*^getnamedsymbol */
  /*getnamedsym:FINISH_UNIT_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V109*/ meltfptr[108])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FINISH_UNIT_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FINISH_UNIT_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("FINISH_UNIT_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V109*/ meltfptr[108] =
	(melt_ptr_t) meltsy_FINISH_UNIT_DELAYED_QUEUE;
    }				/*endgetnamedsym FINISH_UNIT_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:ALL_PASSES_START_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V129*/ meltfptr[128])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ALL_PASSES_START_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ALL_PASSES_START_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ALL_PASSES_START_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V129*/ meltfptr[128] =
	(melt_ptr_t) meltsy_ALL_PASSES_START_DELAYED_QUEUE;
    }				/*endgetnamedsym ALL_PASSES_START_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:ALL_PASSES_END_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V144*/ meltfptr[143])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ALL_PASSES_END_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ALL_PASSES_END_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ALL_PASSES_END_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V144*/ meltfptr[143] =
	(melt_ptr_t) meltsy_ALL_PASSES_END_DELAYED_QUEUE;
    }				/*endgetnamedsym ALL_PASSES_END_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:ALL_IPA_PASSES_START_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V159*/ meltfptr[158])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ALL_IPA_PASSES_START_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ALL_IPA_PASSES_START_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ALL_IPA_PASSES_START_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V159*/ meltfptr[158] =
	(melt_ptr_t) meltsy_ALL_IPA_PASSES_START_DELAYED_QUEUE;
    }				/*endgetnamedsym ALL_IPA_PASSES_START_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:ALL_IPA_PASSES_END_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V174*/ meltfptr[173])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ALL_IPA_PASSES_END_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ALL_IPA_PASSES_END_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ALL_IPA_PASSES_END_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V174*/ meltfptr[173] =
	(melt_ptr_t) meltsy_ALL_IPA_PASSES_END_DELAYED_QUEUE;
    }				/*endgetnamedsym ALL_IPA_PASSES_END_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V189*/ meltfptr[188])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL
	("EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE", (long) MELT_GET);
   /*_._VALDATA___V189*/ meltfptr[188] =
	(melt_ptr_t) meltsy_EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE;
    }				/*endgetnamedsym EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V204*/ meltfptr[203])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL
	("EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE", (long) MELT_GET);
   /*_._VALDATA___V204*/ meltfptr[203] =
	(melt_ptr_t) meltsy_EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE;
    }				/*endgetnamedsym EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:PREGENERICIZE_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V219*/ meltfptr[218])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol PREGENERICIZE_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_PREGENERICIZE_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("PREGENERICIZE_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V219*/ meltfptr[218] =
	(melt_ptr_t) meltsy_PREGENERICIZE_DELAYED_QUEUE;
    }				/*endgetnamedsym PREGENERICIZE_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:TFNDECL */

  if (NULL == /*_._VALDATA___V229*/ meltfptr[228])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol TFNDECL without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_TFNDECL =
	melthookproc_HOOK_NAMED_SYMBOL ("TFNDECL", (long) MELT_GET);
   /*_._VALDATA___V229*/ meltfptr[228] = (melt_ptr_t) meltsy_TFNDECL;
    }				/*endgetnamedsym TFNDECL */


  /*^getnamedsymbol */
  /*getnamedsym:FINISHTYPE_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V237*/ meltfptr[236])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FINISHTYPE_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FINISHTYPE_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("FINISHTYPE_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V237*/ meltfptr[236] =
	(melt_ptr_t) meltsy_FINISHTYPE_DELAYED_QUEUE;
    }				/*endgetnamedsym FINISHTYPE_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:ENDMELTPASS_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V253*/ meltfptr[252])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ENDMELTPASS_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ENDMELTPASS_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ENDMELTPASS_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V253*/ meltfptr[252] =
	(melt_ptr_t) meltsy_ENDMELTPASS_DELAYED_QUEUE;
    }				/*endgetnamedsym ENDMELTPASS_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_CONTAINER */

  if (NULL == /*_._VALDATA___V259*/ meltfptr[258])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_CONTAINER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_CONTAINER =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_CONTAINER", (long) MELT_GET);
   /*_._VALDATA___V259*/ meltfptr[258] =
	(melt_ptr_t) meltsy_CLASS_CONTAINER;
    }				/*endgetnamedsym CLASS_CONTAINER */


  /*^getnamedsymbol */
  /*getnamedsym:FINISHDECL_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V265*/ meltfptr[264])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FINISHDECL_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FINISHDECL_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("FINISHDECL_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V265*/ meltfptr[264] =
	(melt_ptr_t) meltsy_FINISHDECL_DELAYED_QUEUE;
    }				/*endgetnamedsym FINISHDECL_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:PASS_EXECUTION_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V281*/ meltfptr[280])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol PASS_EXECUTION_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_PASS_EXECUTION_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("PASS_EXECUTION_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V281*/ meltfptr[280] =
	(melt_ptr_t) meltsy_PASS_EXECUTION_DELAYED_QUEUE;
    }				/*endgetnamedsym PASS_EXECUTION_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:PASSNAME */

  if (NULL == /*_._VALDATA___V289*/ meltfptr[288])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol PASSNAME without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_PASSNAME =
	melthookproc_HOOK_NAMED_SYMBOL ("PASSNAME", (long) MELT_GET);
   /*_._VALDATA___V289*/ meltfptr[288] = (melt_ptr_t) meltsy_PASSNAME;
    }				/*endgetnamedsym PASSNAME */


  /*^getnamedsymbol */
  /*getnamedsym:PASSNUM */

  if (NULL == /*_._VALDATA___V292*/ meltfptr[291])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol PASSNUM without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_PASSNUM =
	melthookproc_HOOK_NAMED_SYMBOL ("PASSNUM", (long) MELT_GET);
   /*_._VALDATA___V292*/ meltfptr[291] = (melt_ptr_t) meltsy_PASSNUM;
    }				/*endgetnamedsym PASSNUM */


  /*^getnamedsymbol */
  /*getnamedsym:INITIAL_SYSTEM_DATA */

  if (NULL == /*_._VALDATA___V305*/ meltfptr[304])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol INITIAL_SYSTEM_DATA without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_INITIAL_SYSTEM_DATA =
	melthookproc_HOOK_NAMED_SYMBOL ("INITIAL_SYSTEM_DATA",
					(long) MELT_GET);
   /*_._VALDATA___V305*/ meltfptr[304] =
	(melt_ptr_t) meltsy_INITIAL_SYSTEM_DATA;
    }				/*endgetnamedsym INITIAL_SYSTEM_DATA */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_GCC_GIMPLE_PASS */

  if (NULL == /*_._VALDATA___V307*/ meltfptr[306])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_GCC_GIMPLE_PASS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_GCC_GIMPLE_PASS =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_GCC_GIMPLE_PASS",
					(long) MELT_GET);
   /*_._VALDATA___V307*/ meltfptr[306] =
	(melt_ptr_t) meltsy_CLASS_GCC_GIMPLE_PASS;
    }				/*endgetnamedsym CLASS_GCC_GIMPLE_PASS */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_GCC_PASS */

  if (NULL == /*_._VALDATA___V309*/ meltfptr[308])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_GCC_PASS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_GCC_PASS =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_GCC_PASS", (long) MELT_GET);
   /*_._VALDATA___V309*/ meltfptr[308] =
	(melt_ptr_t) meltsy_CLASS_GCC_PASS;
    }				/*endgetnamedsym CLASS_GCC_PASS */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_SYSTEM_DATA */

  if (NULL == /*_._VALDATA___V316*/ meltfptr[315])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_SYSTEM_DATA without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_SYSTEM_DATA =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_SYSTEM_DATA", (long) MELT_GET);
   /*_._VALDATA___V316*/ meltfptr[315] =
	(melt_ptr_t) meltsy_CLASS_SYSTEM_DATA;
    }				/*endgetnamedsym CLASS_SYSTEM_DATA */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_GCC_RTL_PASS */

  if (NULL == /*_._VALDATA___V323*/ meltfptr[322])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_GCC_RTL_PASS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_GCC_RTL_PASS =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_GCC_RTL_PASS",
					(long) MELT_GET);
   /*_._VALDATA___V323*/ meltfptr[322] =
	(melt_ptr_t) meltsy_CLASS_GCC_RTL_PASS;
    }				/*endgetnamedsym CLASS_GCC_RTL_PASS */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_GCC_SIMPLE_IPA_PASS */

  if (NULL == /*_._VALDATA___V335*/ meltfptr[334])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_GCC_SIMPLE_IPA_PASS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_GCC_SIMPLE_IPA_PASS =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_GCC_SIMPLE_IPA_PASS",
					(long) MELT_GET);
   /*_._VALDATA___V335*/ meltfptr[334] =
	(melt_ptr_t) meltsy_CLASS_GCC_SIMPLE_IPA_PASS;
    }				/*endgetnamedsym CLASS_GCC_SIMPLE_IPA_PASS */


  /*^getnamedsymbol */
  /*getnamedsym:ATTRIBUTE_DEFINER_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V342*/ meltfptr[341])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ATTRIBUTE_DEFINER_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ATTRIBUTE_DEFINER_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("ATTRIBUTE_DEFINER_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V342*/ meltfptr[341] =
	(melt_ptr_t) meltsy_ATTRIBUTE_DEFINER_DELAYED_QUEUE;
    }				/*endgetnamedsym ATTRIBUTE_DEFINER_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:DECL */

  if (NULL == /*_._VALDATA___V352*/ meltfptr[351])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DECL without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DECL =
	melthookproc_HOOK_NAMED_SYMBOL ("DECL", (long) MELT_GET);
   /*_._VALDATA___V352*/ meltfptr[351] = (melt_ptr_t) meltsy_DECL;
    }				/*endgetnamedsym DECL */


  /*^getnamedsymbol */
  /*getnamedsym:NAME */

  if (NULL == /*_._VALDATA___V355*/ meltfptr[354])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol NAME without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_NAME =
	melthookproc_HOOK_NAMED_SYMBOL ("NAME", (long) MELT_GET);
   /*_._VALDATA___V355*/ meltfptr[354] = (melt_ptr_t) meltsy_NAME;
    }				/*endgetnamedsym NAME */


  /*^getnamedsymbol */
  /*getnamedsym:ATTRSEQ */

  if (NULL == /*_._VALDATA___V358*/ meltfptr[357])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol ATTRSEQ without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_ATTRSEQ =
	melthookproc_HOOK_NAMED_SYMBOL ("ATTRSEQ", (long) MELT_GET);
   /*_._VALDATA___V358*/ meltfptr[357] = (melt_ptr_t) meltsy_ATTRSEQ;
    }				/*endgetnamedsym ATTRSEQ */


  /*^getnamedsymbol */
  /*getnamedsym:FILELOC */

  if (NULL == /*_._VALDATA___V361*/ meltfptr[360])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FILELOC without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FILELOC =
	melthookproc_HOOK_NAMED_SYMBOL ("FILELOC", (long) MELT_GET);
   /*_._VALDATA___V361*/ meltfptr[360] = (melt_ptr_t) meltsy_FILELOC;
    }				/*endgetnamedsym FILELOC */


  /*^getnamedsymbol */
  /*getnamedsym:FINAL_EXIT_DELAYED_QUEUE */

  if (NULL == /*_._VALDATA___V370*/ meltfptr[369])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol FINAL_EXIT_DELAYED_QUEUE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_FINAL_EXIT_DELAYED_QUEUE =
	melthookproc_HOOK_NAMED_SYMBOL ("FINAL_EXIT_DELAYED_QUEUE",
					(long) MELT_GET);
   /*_._VALDATA___V370*/ meltfptr[369] =
	(melt_ptr_t) meltsy_FINAL_EXIT_DELAYED_QUEUE;
    }				/*endgetnamedsym FINAL_EXIT_DELAYED_QUEUE */


  /*^getnamedsymbol */
  /*getnamedsym:AT_END_OF_THIS_MELT_PASS_FIRST */

  if (NULL == /*_._VALDATA___V385*/ meltfptr[384])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_END_OF_THIS_MELT_PASS_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_END_OF_THIS_MELT_PASS_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_END_OF_THIS_MELT_PASS_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V385*/ meltfptr[384] =
	(melt_ptr_t) meltsy_AT_END_OF_THIS_MELT_PASS_FIRST;
    }				/*endgetnamedsym AT_END_OF_THIS_MELT_PASS_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_END_OF_THIS_MELT_PASS_LAST */

  if (NULL == /*_._VALDATA___V387*/ meltfptr[386])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_END_OF_THIS_MELT_PASS_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_END_OF_THIS_MELT_PASS_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_END_OF_THIS_MELT_PASS_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V387*/ meltfptr[386] =
	(melt_ptr_t) meltsy_AT_END_OF_THIS_MELT_PASS_LAST;
    }				/*endgetnamedsym AT_END_OF_THIS_MELT_PASS_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_EXIT_FIRST */

  if (NULL == /*_._VALDATA___V389*/ meltfptr[388])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_EXIT_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_EXIT_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_EXIT_FIRST", (long) MELT_GET);
   /*_._VALDATA___V389*/ meltfptr[388] = (melt_ptr_t) meltsy_AT_EXIT_FIRST;
    }				/*endgetnamedsym AT_EXIT_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_EXIT_LAST */

  if (NULL == /*_._VALDATA___V391*/ meltfptr[390])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_EXIT_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_EXIT_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_EXIT_LAST", (long) MELT_GET);
   /*_._VALDATA___V391*/ meltfptr[390] = (melt_ptr_t) meltsy_AT_EXIT_LAST;
    }				/*endgetnamedsym AT_EXIT_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_FINISH_UNIT_FIRST */

  if (NULL == /*_._VALDATA___V393*/ meltfptr[392])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_FINISH_UNIT_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_FINISH_UNIT_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_FINISH_UNIT_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V393*/ meltfptr[392] =
	(melt_ptr_t) meltsy_AT_FINISH_UNIT_FIRST;
    }				/*endgetnamedsym AT_FINISH_UNIT_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_FINISH_UNIT_LAST */

  if (NULL == /*_._VALDATA___V395*/ meltfptr[394])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_FINISH_UNIT_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_FINISH_UNIT_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_FINISH_UNIT_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V395*/ meltfptr[394] =
	(melt_ptr_t) meltsy_AT_FINISH_UNIT_LAST;
    }				/*endgetnamedsym AT_FINISH_UNIT_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_MELT_ATTRIBUTE_FIRST */

  if (NULL == /*_._VALDATA___V397*/ meltfptr[396])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_MELT_ATTRIBUTE_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_MELT_ATTRIBUTE_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_MELT_ATTRIBUTE_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V397*/ meltfptr[396] =
	(melt_ptr_t) meltsy_AT_MELT_ATTRIBUTE_FIRST;
    }				/*endgetnamedsym AT_MELT_ATTRIBUTE_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_MELT_ATTRIBUTE_LAST */

  if (NULL == /*_._VALDATA___V399*/ meltfptr[398])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_MELT_ATTRIBUTE_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_MELT_ATTRIBUTE_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_MELT_ATTRIBUTE_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V399*/ meltfptr[398] =
	(melt_ptr_t) meltsy_AT_MELT_ATTRIBUTE_LAST;
    }				/*endgetnamedsym AT_MELT_ATTRIBUTE_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_START_UNIT_FIRST */

  if (NULL == /*_._VALDATA___V401*/ meltfptr[400])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_START_UNIT_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_START_UNIT_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_START_UNIT_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V401*/ meltfptr[400] =
	(melt_ptr_t) meltsy_AT_START_UNIT_FIRST;
    }				/*endgetnamedsym AT_START_UNIT_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:AT_START_UNIT_LAST */

  if (NULL == /*_._VALDATA___V403*/ meltfptr[402])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol AT_START_UNIT_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_AT_START_UNIT_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("AT_START_UNIT_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V403*/ meltfptr[402] =
	(melt_ptr_t) meltsy_AT_START_UNIT_LAST;
    }				/*endgetnamedsym AT_START_UNIT_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:HOOK_LOW_DEBUG_VALUE_AT */

  if (NULL == /*_._VALDATA___V405*/ meltfptr[404])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_LOW_DEBUG_VALUE_AT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_HOOK_LOW_DEBUG_VALUE_AT =
	melthookproc_HOOK_NAMED_SYMBOL ("HOOK_LOW_DEBUG_VALUE_AT",
					(long) MELT_GET);
   /*_._VALDATA___V405*/ meltfptr[404] =
	(melt_ptr_t) meltsy_HOOK_LOW_DEBUG_VALUE_AT;
    }				/*endgetnamedsym HOOK_LOW_DEBUG_VALUE_AT */


  /*^getnamedsymbol */
  /*getnamedsym:HOOK_OVERRIDE_GATE */

  if (NULL == /*_._VALDATA___V407*/ meltfptr[406])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_OVERRIDE_GATE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_HOOK_OVERRIDE_GATE =
	melthookproc_HOOK_NAMED_SYMBOL ("HOOK_OVERRIDE_GATE",
					(long) MELT_GET);
   /*_._VALDATA___V407*/ meltfptr[406] =
	(melt_ptr_t) meltsy_HOOK_OVERRIDE_GATE;
    }				/*endgetnamedsym HOOK_OVERRIDE_GATE */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_IPA_PASSES_END_FIRST */

  if (NULL == /*_._VALDATA___V409*/ meltfptr[408])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_IPA_PASSES_END_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_IPA_PASSES_END_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_IPA_PASSES_END_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V409*/ meltfptr[408] =
	(melt_ptr_t) meltsy_REGISTER_ALL_IPA_PASSES_END_FIRST;
    }				/*endgetnamedsym REGISTER_ALL_IPA_PASSES_END_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_IPA_PASSES_END_LAST */

  if (NULL == /*_._VALDATA___V411*/ meltfptr[410])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_IPA_PASSES_END_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_IPA_PASSES_END_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_IPA_PASSES_END_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V411*/ meltfptr[410] =
	(melt_ptr_t) meltsy_REGISTER_ALL_IPA_PASSES_END_LAST;
    }				/*endgetnamedsym REGISTER_ALL_IPA_PASSES_END_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_IPA_PASSES_START_FIRST */

  if (NULL == /*_._VALDATA___V413*/ meltfptr[412])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_IPA_PASSES_START_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_IPA_PASSES_START_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_IPA_PASSES_START_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V413*/ meltfptr[412] =
	(melt_ptr_t) meltsy_REGISTER_ALL_IPA_PASSES_START_FIRST;
    }				/*endgetnamedsym REGISTER_ALL_IPA_PASSES_START_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_IPA_PASSES_START_LAST */

  if (NULL == /*_._VALDATA___V415*/ meltfptr[414])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_IPA_PASSES_START_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_IPA_PASSES_START_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_IPA_PASSES_START_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V415*/ meltfptr[414] =
	(melt_ptr_t) meltsy_REGISTER_ALL_IPA_PASSES_START_LAST;
    }				/*endgetnamedsym REGISTER_ALL_IPA_PASSES_START_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_PASSES_END_FIRST */

  if (NULL == /*_._VALDATA___V417*/ meltfptr[416])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_PASSES_END_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_PASSES_END_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_PASSES_END_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V417*/ meltfptr[416] =
	(melt_ptr_t) meltsy_REGISTER_ALL_PASSES_END_FIRST;
    }				/*endgetnamedsym REGISTER_ALL_PASSES_END_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_PASSES_END_LAST */

  if (NULL == /*_._VALDATA___V419*/ meltfptr[418])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_PASSES_END_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_PASSES_END_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_PASSES_END_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V419*/ meltfptr[418] =
	(melt_ptr_t) meltsy_REGISTER_ALL_PASSES_END_LAST;
    }				/*endgetnamedsym REGISTER_ALL_PASSES_END_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_PASSES_START_FIRST */

  if (NULL == /*_._VALDATA___V421*/ meltfptr[420])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_PASSES_START_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_PASSES_START_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_PASSES_START_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V421*/ meltfptr[420] =
	(melt_ptr_t) meltsy_REGISTER_ALL_PASSES_START_FIRST;
    }				/*endgetnamedsym REGISTER_ALL_PASSES_START_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALL_PASSES_START_LAST */

  if (NULL == /*_._VALDATA___V423*/ meltfptr[422])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALL_PASSES_START_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALL_PASSES_START_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALL_PASSES_START_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V423*/ meltfptr[422] =
	(melt_ptr_t) meltsy_REGISTER_ALL_PASSES_START_LAST;
    }				/*endgetnamedsym REGISTER_ALL_PASSES_START_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */

  if (NULL == /*_._VALDATA___V425*/ meltfptr[424])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_EARLY_GIMPLE_PASSES_END_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_EARLY_GIMPLE_PASSES_END_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL
	("REGISTER_EARLY_GIMPLE_PASSES_END_FIRST", (long) MELT_GET);
   /*_._VALDATA___V425*/ meltfptr[424] =
	(melt_ptr_t) meltsy_REGISTER_EARLY_GIMPLE_PASSES_END_FIRST;
    }				/*endgetnamedsym REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_EARLY_GIMPLE_PASSES_END_LAST */

  if (NULL == /*_._VALDATA___V427*/ meltfptr[426])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_EARLY_GIMPLE_PASSES_END_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_EARLY_GIMPLE_PASSES_END_LAST =
	melthookproc_HOOK_NAMED_SYMBOL
	("REGISTER_EARLY_GIMPLE_PASSES_END_LAST", (long) MELT_GET);
   /*_._VALDATA___V427*/ meltfptr[426] =
	(melt_ptr_t) meltsy_REGISTER_EARLY_GIMPLE_PASSES_END_LAST;
    }				/*endgetnamedsym REGISTER_EARLY_GIMPLE_PASSES_END_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */

  if (NULL == /*_._VALDATA___V429*/ meltfptr[428])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_EARLY_GIMPLE_PASSES_START_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_EARLY_GIMPLE_PASSES_START_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL
	("REGISTER_EARLY_GIMPLE_PASSES_START_FIRST", (long) MELT_GET);
   /*_._VALDATA___V429*/ meltfptr[428] =
	(melt_ptr_t) meltsy_REGISTER_EARLY_GIMPLE_PASSES_START_FIRST;
    }				/*endgetnamedsym REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_EARLY_GIMPLE_PASSES_START_LAST */

  if (NULL == /*_._VALDATA___V431*/ meltfptr[430])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_EARLY_GIMPLE_PASSES_START_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_EARLY_GIMPLE_PASSES_START_LAST =
	melthookproc_HOOK_NAMED_SYMBOL
	("REGISTER_EARLY_GIMPLE_PASSES_START_LAST", (long) MELT_GET);
   /*_._VALDATA___V431*/ meltfptr[430] =
	(melt_ptr_t) meltsy_REGISTER_EARLY_GIMPLE_PASSES_START_LAST;
    }				/*endgetnamedsym REGISTER_EARLY_GIMPLE_PASSES_START_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_FINISH_DECL_FIRST */

  if (NULL == /*_._VALDATA___V433*/ meltfptr[432])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_FINISH_DECL_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_FINISH_DECL_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_FINISH_DECL_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V433*/ meltfptr[432] =
	(melt_ptr_t) meltsy_REGISTER_FINISH_DECL_FIRST;
    }				/*endgetnamedsym REGISTER_FINISH_DECL_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_FINISH_DECL_LAST */

  if (NULL == /*_._VALDATA___V435*/ meltfptr[434])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_FINISH_DECL_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_FINISH_DECL_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_FINISH_DECL_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V435*/ meltfptr[434] =
	(melt_ptr_t) meltsy_REGISTER_FINISH_DECL_LAST;
    }				/*endgetnamedsym REGISTER_FINISH_DECL_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_FINISH_TYPE_FIRST */

  if (NULL == /*_._VALDATA___V437*/ meltfptr[436])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_FINISH_TYPE_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_FINISH_TYPE_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_FINISH_TYPE_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V437*/ meltfptr[436] =
	(melt_ptr_t) meltsy_REGISTER_FINISH_TYPE_FIRST;
    }				/*endgetnamedsym REGISTER_FINISH_TYPE_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_FINISH_TYPE_LAST */

  if (NULL == /*_._VALDATA___V439*/ meltfptr[438])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_FINISH_TYPE_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_FINISH_TYPE_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_FINISH_TYPE_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V439*/ meltfptr[438] =
	(melt_ptr_t) meltsy_REGISTER_FINISH_TYPE_LAST;
    }				/*endgetnamedsym REGISTER_FINISH_TYPE_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_OVERRIDE_GATE_FIRST */

  if (NULL == /*_._VALDATA___V441*/ meltfptr[440])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_OVERRIDE_GATE_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_OVERRIDE_GATE_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_OVERRIDE_GATE_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V441*/ meltfptr[440] =
	(melt_ptr_t) meltsy_REGISTER_OVERRIDE_GATE_FIRST;
    }				/*endgetnamedsym REGISTER_OVERRIDE_GATE_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_OVERRIDE_GATE_LAST */

  if (NULL == /*_._VALDATA___V443*/ meltfptr[442])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_OVERRIDE_GATE_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_OVERRIDE_GATE_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_OVERRIDE_GATE_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V443*/ meltfptr[442] =
	(melt_ptr_t) meltsy_REGISTER_OVERRIDE_GATE_LAST;
    }				/*endgetnamedsym REGISTER_OVERRIDE_GATE_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_PASS_EXECUTION_FIRST */

  if (NULL == /*_._VALDATA___V445*/ meltfptr[444])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_PASS_EXECUTION_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_PASS_EXECUTION_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_PASS_EXECUTION_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V445*/ meltfptr[444] =
	(melt_ptr_t) meltsy_REGISTER_PASS_EXECUTION_FIRST;
    }				/*endgetnamedsym REGISTER_PASS_EXECUTION_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_PASS_EXECUTION_LAST */

  if (NULL == /*_._VALDATA___V447*/ meltfptr[446])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_PASS_EXECUTION_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_PASS_EXECUTION_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_PASS_EXECUTION_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V447*/ meltfptr[446] =
	(melt_ptr_t) meltsy_REGISTER_PASS_EXECUTION_LAST;
    }				/*endgetnamedsym REGISTER_PASS_EXECUTION_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_PRE_GENERICIZE_FIRST */

  if (NULL == /*_._VALDATA___V449*/ meltfptr[448])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_PRE_GENERICIZE_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_PRE_GENERICIZE_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_PRE_GENERICIZE_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V449*/ meltfptr[448] =
	(melt_ptr_t) meltsy_REGISTER_PRE_GENERICIZE_FIRST;
    }				/*endgetnamedsym REGISTER_PRE_GENERICIZE_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_PRE_GENERICIZE_LAST */

  if (NULL == /*_._VALDATA___V451*/ meltfptr[450])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_PRE_GENERICIZE_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_PRE_GENERICIZE_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_PRE_GENERICIZE_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V451*/ meltfptr[450] =
	(melt_ptr_t) meltsy_REGISTER_PRE_GENERICIZE_LAST;
    }				/*endgetnamedsym REGISTER_PRE_GENERICIZE_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:UNREGISTER_OVERRIDE_GATE_FIRST */

  if (NULL == /*_._VALDATA___V453*/ meltfptr[452])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol UNREGISTER_OVERRIDE_GATE_FIRST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_UNREGISTER_OVERRIDE_GATE_FIRST =
	melthookproc_HOOK_NAMED_SYMBOL ("UNREGISTER_OVERRIDE_GATE_FIRST",
					(long) MELT_GET);
   /*_._VALDATA___V453*/ meltfptr[452] =
	(melt_ptr_t) meltsy_UNREGISTER_OVERRIDE_GATE_FIRST;
    }				/*endgetnamedsym UNREGISTER_OVERRIDE_GATE_FIRST */


  /*^getnamedsymbol */
  /*getnamedsym:UNREGISTER_OVERRIDE_GATE_LAST */

  if (NULL == /*_._VALDATA___V455*/ meltfptr[454])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol UNREGISTER_OVERRIDE_GATE_LAST without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_UNREGISTER_OVERRIDE_GATE_LAST =
	melthookproc_HOOK_NAMED_SYMBOL ("UNREGISTER_OVERRIDE_GATE_LAST",
					(long) MELT_GET);
   /*_._VALDATA___V455*/ meltfptr[454] =
	(melt_ptr_t) meltsy_UNREGISTER_OVERRIDE_GATE_LAST;
    }				/*endgetnamedsym UNREGISTER_OVERRIDE_GATE_LAST */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_INPUT_CHANNEL_HANDLER */

  if (NULL == /*_._VALDATA___V459*/ meltfptr[458])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_INPUT_CHANNEL_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_INPUT_CHANNEL_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_INPUT_CHANNEL_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V459*/ meltfptr[458] =
	(melt_ptr_t) meltsy_CLASS_INPUT_CHANNEL_HANDLER;
    }				/*endgetnamedsym CLASS_INPUT_CHANNEL_HANDLER */


  /*^getnamedsymbol */
  /*getnamedsym:DELAYMS */

  if (NULL == /*_._VALDATA___V465*/ meltfptr[464])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DELAYMS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DELAYMS =
	melthookproc_HOOK_NAMED_SYMBOL ("DELAYMS", (long) MELT_GET);
   /*_._VALDATA___V465*/ meltfptr[464] = (melt_ptr_t) meltsy_DELAYMS;
    }				/*endgetnamedsym DELAYMS */


  /*^getnamedsymbol */
  /*getnamedsym:DISCR_MULTIPLE */

  if (NULL == /*_._VALDATA___V469*/ meltfptr[468])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_MULTIPLE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DISCR_MULTIPLE =
	melthookproc_HOOK_NAMED_SYMBOL ("DISCR_MULTIPLE", (long) MELT_GET);
   /*_._VALDATA___V469*/ meltfptr[468] =
	(melt_ptr_t) meltsy_DISCR_MULTIPLE;
    }				/*endgetnamedsym DISCR_MULTIPLE */


  /*^getnamedsymbol */
  /*getnamedsym:DISCR_STRBUF */

  if (NULL == /*_._VALDATA___V479*/ meltfptr[478])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_STRBUF without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DISCR_STRBUF =
	melthookproc_HOOK_NAMED_SYMBOL ("DISCR_STRBUF", (long) MELT_GET);
   /*_._VALDATA___V479*/ meltfptr[478] = (melt_ptr_t) meltsy_DISCR_STRBUF;
    }				/*endgetnamedsym DISCR_STRBUF */


  /*^getnamedsymbol */
  /*getnamedsym:DISCR_BUCKET_LONGS */

  if (NULL == /*_._VALDATA___V481*/ meltfptr[480])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_BUCKET_LONGS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DISCR_BUCKET_LONGS =
	melthookproc_HOOK_NAMED_SYMBOL ("DISCR_BUCKET_LONGS",
					(long) MELT_GET);
   /*_._VALDATA___V481*/ meltfptr[480] =
	(melt_ptr_t) meltsy_DISCR_BUCKET_LONGS;
    }				/*endgetnamedsym DISCR_BUCKET_LONGS */


  /*^getnamedsymbol */
  /*getnamedsym:EVERY_POLLING_INPUT */

  if (NULL == /*_._VALDATA___V488*/ meltfptr[487])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol EVERY_POLLING_INPUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_EVERY_POLLING_INPUT =
	melthookproc_HOOK_NAMED_SYMBOL ("EVERY_POLLING_INPUT",
					(long) MELT_GET);
   /*_._VALDATA___V488*/ meltfptr[487] =
	(melt_ptr_t) meltsy_EVERY_POLLING_INPUT;
    }				/*endgetnamedsym EVERY_POLLING_INPUT */


  /*^getnamedsymbol */
  /*getnamedsym:GET_POLLING_INPUT */

  if (NULL == /*_._VALDATA___V490*/ meltfptr[489])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol GET_POLLING_INPUT without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_GET_POLLING_INPUT =
	melthookproc_HOOK_NAMED_SYMBOL ("GET_POLLING_INPUT", (long) MELT_GET);
   /*_._VALDATA___V490*/ meltfptr[489] =
	(melt_ptr_t) meltsy_GET_POLLING_INPUT;
    }				/*endgetnamedsym GET_POLLING_INPUT */


  /*^getnamedsymbol */
  /*getnamedsym:HOOK_HANDLE_SIGIO */

  if (NULL == /*_._VALDATA___V492*/ meltfptr[491])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_HANDLE_SIGIO without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_HOOK_HANDLE_SIGIO =
	melthookproc_HOOK_NAMED_SYMBOL ("HOOK_HANDLE_SIGIO", (long) MELT_GET);
   /*_._VALDATA___V492*/ meltfptr[491] =
	(melt_ptr_t) meltsy_HOOK_HANDLE_SIGIO;
    }				/*endgetnamedsym HOOK_HANDLE_SIGIO */


  /*^getnamedsymbol */
  /*getnamedsym:HOOK_POLL_INPUTS */

  if (NULL == /*_._VALDATA___V494*/ meltfptr[493])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol HOOK_POLL_INPUTS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_HOOK_POLL_INPUTS =
	melthookproc_HOOK_NAMED_SYMBOL ("HOOK_POLL_INPUTS", (long) MELT_GET);
   /*_._VALDATA___V494*/ meltfptr[493] =
	(melt_ptr_t) meltsy_HOOK_POLL_INPUTS;
    }				/*endgetnamedsym HOOK_POLL_INPUTS */


  /*^getnamedsymbol */
  /*getnamedsym:IS_POLLING_INPUTS */

  if (NULL == /*_._VALDATA___V496*/ meltfptr[495])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol IS_POLLING_INPUTS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_IS_POLLING_INPUTS =
	melthookproc_HOOK_NAMED_SYMBOL ("IS_POLLING_INPUTS", (long) MELT_GET);
   /*_._VALDATA___V496*/ meltfptr[495] =
	(melt_ptr_t) meltsy_IS_POLLING_INPUTS;
    }				/*endgetnamedsym IS_POLLING_INPUTS */


  /*^getnamedsymbol */
  /*getnamedsym:MELT_INVOKE_INPUT_CALLBACKS */

  if (NULL == /*_._VALDATA___V498*/ meltfptr[497])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol MELT_INVOKE_INPUT_CALLBACKS without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_MELT_INVOKE_INPUT_CALLBACKS =
	melthookproc_HOOK_NAMED_SYMBOL ("MELT_INVOKE_INPUT_CALLBACKS",
					(long) MELT_GET);
   /*_._VALDATA___V498*/ meltfptr[497] =
	(melt_ptr_t) meltsy_MELT_INVOKE_INPUT_CALLBACKS;
    }				/*endgetnamedsym MELT_INVOKE_INPUT_CALLBACKS */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_ALARM_HANDLER */

  if (NULL == /*_._VALDATA___V505*/ meltfptr[504])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_ALARM_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_ALARM_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_ALARM_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V505*/ meltfptr[504] =
	(melt_ptr_t) meltsy_CLASS_ALARM_HANDLER;
    }				/*endgetnamedsym CLASS_ALARM_HANDLER */


  /*^getnamedsymbol */
  /*getnamedsym:DISCR_CONSTANT_INTEGER */

  if (NULL == /*_._VALDATA___V509*/ meltfptr[508])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol DISCR_CONSTANT_INTEGER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_DISCR_CONSTANT_INTEGER =
	melthookproc_HOOK_NAMED_SYMBOL ("DISCR_CONSTANT_INTEGER",
					(long) MELT_GET);
   /*_._VALDATA___V509*/ meltfptr[508] =
	(melt_ptr_t) meltsy_DISCR_CONSTANT_INTEGER;
    }				/*endgetnamedsym DISCR_CONSTANT_INTEGER */


  /*^getnamedsymbol */
  /*getnamedsym:CLASS_CHILD_PROCESS_HANDLER */

  if (NULL == /*_._VALDATA___V518*/ meltfptr[517])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol CLASS_CHILD_PROCESS_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_CLASS_CHILD_PROCESS_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("CLASS_CHILD_PROCESS_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V518*/ meltfptr[517] =
	(melt_ptr_t) meltsy_CLASS_CHILD_PROCESS_HANDLER;
    }				/*endgetnamedsym CLASS_CHILD_PROCESS_HANDLER */


  /*^getnamedsymbol */
  /*getnamedsym:LIST_TO_MULTIPLE */

  if (NULL == /*_._VALDATA___V520*/ meltfptr[519])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol LIST_TO_MULTIPLE without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_LIST_TO_MULTIPLE =
	melthookproc_HOOK_NAMED_SYMBOL ("LIST_TO_MULTIPLE", (long) MELT_GET);
   /*_._VALDATA___V520*/ meltfptr[519] =
	(melt_ptr_t) meltsy_LIST_TO_MULTIPLE;
    }				/*endgetnamedsym LIST_TO_MULTIPLE */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_ALARM_TIMER */

  if (NULL == /*_._VALDATA___V526*/ meltfptr[525])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_ALARM_TIMER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_ALARM_TIMER =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_ALARM_TIMER",
					(long) MELT_GET);
   /*_._VALDATA___V526*/ meltfptr[525] =
	(melt_ptr_t) meltsy_REGISTER_ALARM_TIMER;
    }				/*endgetnamedsym REGISTER_ALARM_TIMER */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_CHILD_PROCESS_HANDLER */

  if (NULL == /*_._VALDATA___V528*/ meltfptr[527])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_CHILD_PROCESS_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_CHILD_PROCESS_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_CHILD_PROCESS_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V528*/ meltfptr[527] =
	(melt_ptr_t) meltsy_REGISTER_CHILD_PROCESS_HANDLER;
    }				/*endgetnamedsym REGISTER_CHILD_PROCESS_HANDLER */


  /*^getnamedsymbol */
  /*getnamedsym:REGISTER_INPUT_CHANNEL_HANDLER */

  if (NULL == /*_._VALDATA___V530*/ meltfptr[529])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol REGISTER_INPUT_CHANNEL_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_REGISTER_INPUT_CHANNEL_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("REGISTER_INPUT_CHANNEL_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V530*/ meltfptr[529] =
	(melt_ptr_t) meltsy_REGISTER_INPUT_CHANNEL_HANDLER;
    }				/*endgetnamedsym REGISTER_INPUT_CHANNEL_HANDLER */


  /*^getnamedsymbol */
  /*getnamedsym:UNREGISTER_ALARM_TIMER */

  if (NULL == /*_._VALDATA___V532*/ meltfptr[531])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol UNREGISTER_ALARM_TIMER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_UNREGISTER_ALARM_TIMER =
	melthookproc_HOOK_NAMED_SYMBOL ("UNREGISTER_ALARM_TIMER",
					(long) MELT_GET);
   /*_._VALDATA___V532*/ meltfptr[531] =
	(melt_ptr_t) meltsy_UNREGISTER_ALARM_TIMER;
    }				/*endgetnamedsym UNREGISTER_ALARM_TIMER */


  /*^getnamedsymbol */
  /*getnamedsym:UNREGISTER_CHILD_PROCESS_HANDLER */

  if (NULL == /*_._VALDATA___V534*/ meltfptr[533])
    {
#if !MELT_HAS_INITIAL_ENVIRONMENT
#error MELT getting named symbol UNREGISTER_CHILD_PROCESS_HANDLER without initial environment
#endif /*!MELT_HAS_INITIAL_ENVIRONMENT */
      melt_ptr_t meltsy_UNREGISTER_CHILD_PROCESS_HANDLER =
	melthookproc_HOOK_NAMED_SYMBOL ("UNREGISTER_CHILD_PROCESS_HANDLER",
					(long) MELT_GET);
   /*_._VALDATA___V534*/ meltfptr[533] =
	(melt_ptr_t) meltsy_UNREGISTER_CHILD_PROCESS_HANDLER;
    }				/*endgetnamedsym UNREGISTER_CHILD_PROCESS_HANDLER */


  /*^comment */
 /**COMMENT: before getting imported values thru hook **/ ;

  MELT_LOCATION ("warmelt-hooks.melt:4:/ compute");
 /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V5*/ meltfptr[4] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER",
				   "warmelt-hooks", /*_._PREVENV___V4*/
				   meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:38:/ compute");
 /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "MELT_DEBUG_FUN", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:50:/ compute");
 /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_DELAYED_QUEUE", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:52:/ compute");
 /*_.DISCR_LIST__V8*/ meltfptr[7] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "DISCR_LIST", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:66:/ compute");
 /*_.CLASS_REFERENCE__V9*/ meltfptr[8] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_REFERENCE", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:273:/ compute");
 /*_.LIST_EVERY__V10*/ meltfptr[9] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "LIST_EVERY", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1464:/ compute");
 /*_.CLASS_CONTAINER__V11*/ meltfptr[10] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_CONTAINER", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1784:/ compute");
 /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "INITIAL_SYSTEM_DATA", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1811:/ compute");
 /*_.CLASS_GCC_GIMPLE_PASS__V13*/ meltfptr[12] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_GCC_GIMPLE_PASS", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1813:/ compute");
 /*_.CLASS_GCC_PASS__V14*/ meltfptr[13] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_GCC_PASS", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1849:/ compute");
 /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_SYSTEM_DATA", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:1937:/ compute");
 /*_.CLASS_GCC_RTL_PASS__V16*/ meltfptr[15] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_GCC_RTL_PASS", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2055:/ compute");
 /*_.CLASS_GCC_SIMPLE_IPA_PASS__V17*/ meltfptr[16] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_GCC_SIMPLE_IPA_PASS",
				   "warmelt-hooks", /*_._PREVENV___V4*/
				   meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2339:/ compute");
 /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_INPUT_CHANNEL_HANDLER",
				   "warmelt-hooks", /*_._PREVENV___V4*/
				   meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2448:/ compute");
 /*_.DISCR_MULTIPLE__V19*/ meltfptr[18] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "DISCR_MULTIPLE", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2608:/ compute");
 /*_.DISCR_STRBUF__V20*/ meltfptr[19] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "DISCR_STRBUF", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2617:/ compute");
 /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "DISCR_BUCKET_LONGS", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2681:/ compute");
 /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_ALARM_HANDLER", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2732:/ compute");
 /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "DISCR_CONSTANT_INTEGER", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2809:/ compute");
 /*_.CLASS_CHILD_PROCESS_HANDLER__V24*/ meltfptr[23] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "CLASS_CHILD_PROCESS_HANDLER",
				   "warmelt-hooks", /*_._PREVENV___V4*/
				   meltfptr[3]);
  MELT_LOCATION ("warmelt-hooks.melt:2830:/ compute");
 /*_.LIST_TO_MULTIPLE__V25*/ meltfptr[24] =
    /*hookcall */
    melthook_HOOK_SYMBOL_IMPORTER ((melt_ptr_t)
				   ((melt_ptr_t)
				    (MELT_PREDEF (HOOK_SYMBOL_IMPORTER))),
				   "LIST_TO_MULTIPLE", "warmelt-hooks",
				   /*_._PREVENV___V4*/ meltfptr[3]);
 /**COMMENT: after getting imported values **/ ;

 /**initial routine cdata initializer**/

  memset (meltpredefinited, 0, sizeof (meltpredefinited));
  initialize_module_meltdata_WARMELTmiHOOKS (&meltfram__, meltpredefinited);
 /**initial routine body**/

  meltmod__WARMELTmiHOOKS__initialmeltchunk_0 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_1 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_2 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_3 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_4 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_5 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_6 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_7 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_8 (&meltfram__, meltpredefinited);
  meltmod__WARMELTmiHOOKS__initialmeltchunk_9 (&meltfram__,
					       meltpredefinited);;
  goto meltlabend_rout;
meltlabend_rout:;
  melt_topframe = (struct melt_callframe_st *) meltfram__.mcfr_prev;
/* popped initial frame */
  {				/* clear initial frame & return */
    melt_ptr_t retval = /*_._RETINIT___V1*/ meltfptr[0];
    memset ((void *) &meltfram__, 0, sizeof (meltfram__));
    return retval;
  }
#undef meltcallcount
#undef meltfram__
#undef MELTFRAM_NBVARNUM
#undef MELTFRAM_NBVARPTR

}				/* end  */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_0 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
/**COMMENT: start of oinibody **/ ;

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V26*/ meltfptr[25])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_1__HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V26*/ meltfptr[25]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V26*/ meltfptr[25]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V27*/ meltfptr[26]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V26*/ meltfptr[25]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V26*/ meltfptr[25],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_4__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V29*/ meltfptr[28])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_4__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V29*/
					meltfptr[28]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V29*/ meltfptr[28]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V30*/ meltfptr[29]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_6__VAL @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V32*/ meltfptr[31])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_6__VAL @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V32*/
					meltfptr[31]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V32*/ meltfptr[31]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V33*/ meltfptr[32]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V32*/ meltfptr[31]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V32*/ meltfptr[31],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_8 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V31*/ meltfptr[30])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_8 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V31*/
					meltfptr[30]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V31*/ meltfptr[30]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V32*/ meltfptr[31]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_8 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V31*/ meltfptr[30])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_8 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V31*/
					meltfptr[30]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V31*/ meltfptr[30]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VALUE))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V31*/ meltfptr[30]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V31*/ meltfptr[30],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_9__FILENAME @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V35*/ meltfptr[34])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_9__FILENAME @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V35*/
					meltfptr[34]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V35*/ meltfptr[34]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V36*/ meltfptr[35]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V35*/ meltfptr[34]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V35*/ meltfptr[34],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_11 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V34*/ meltfptr[33])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_11 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V34*/
					meltfptr[33]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V34*/ meltfptr[33]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V35*/ meltfptr[34]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_11 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V34*/ meltfptr[33])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_11 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V34*/
					meltfptr[33]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V34*/ meltfptr[33]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_CSTRING))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V34*/ meltfptr[33]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V34*/ meltfptr[33],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_12__LINENO @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V38*/ meltfptr[37])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_12__LINENO @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V38*/
					meltfptr[37]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V38*/ meltfptr[37]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V39*/ meltfptr[38]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V38*/ meltfptr[37]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V38*/ meltfptr[37],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_14 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V37*/ meltfptr[36])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_14 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V37*/
					meltfptr[36]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V37*/ meltfptr[36]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V38*/ meltfptr[37]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_14 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V37*/ meltfptr[36])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_14 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V37*/
					meltfptr[36]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V37*/ meltfptr[36]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V37*/ meltfptr[36]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V37*/ meltfptr[36],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_15__MSG @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V41*/ meltfptr[40])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_15__MSG @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V41*/
					meltfptr[40]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V41*/ meltfptr[40]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V42*/ meltfptr[41]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V41*/ meltfptr[40]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V41*/ meltfptr[40],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_17 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V40*/ meltfptr[39])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_17 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V40*/
					meltfptr[39]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V40*/ meltfptr[39]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V41*/ meltfptr[40]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_17 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V40*/ meltfptr[39])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_17 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V40*/
					meltfptr[39]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V40*/ meltfptr[39]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_CSTRING))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V40*/ meltfptr[39]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V40*/ meltfptr[39],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_18__COUNT @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V44*/ meltfptr[43])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_18__COUNT @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V44*/
					meltfptr[43]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V44*/ meltfptr[43]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V45*/ meltfptr[44]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V44*/ meltfptr[43]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V44*/ meltfptr[43],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_20 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V43*/ meltfptr[42])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_20 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V43*/
					meltfptr[42]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V43*/ meltfptr[42]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V44*/ meltfptr[43]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_20 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V43*/ meltfptr[42])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_20 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V43*/
					meltfptr[42]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V43*/ meltfptr[42]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V43*/ meltfptr[42]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V43*/ meltfptr[42],
				"new static instance");

  /*putupl#1 */
  melt_assertmsg ("putupl #1 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V46*/ meltfptr[45])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #1 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V46*/
					  meltfptr[45]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V46*/ meltfptr[45]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V31*/ meltfptr[30]);

  /*putupl#2 */
  melt_assertmsg ("putupl #2 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V46*/ meltfptr[45])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #2 checkoff",
		  (1 >= 0
		   && 1 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V46*/
					  meltfptr[45]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V46*/ meltfptr[45]))->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V34*/ meltfptr[33]);

  /*putupl#3 */
  melt_assertmsg ("putupl #3 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V46*/ meltfptr[45])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #3 checkoff",
		  (2 >= 0
		   && 2 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V46*/
					  meltfptr[45]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V46*/ meltfptr[45]))->tabval[2] =
    (melt_ptr_t) ( /*_._VALDATA___V37*/ meltfptr[36]);

  /*putupl#4 */
  melt_assertmsg ("putupl #4 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V46*/ meltfptr[45])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #4 checkoff",
		  (3 >= 0
		   && 3 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V46*/
					  meltfptr[45]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V46*/ meltfptr[45]))->tabval[3] =
    (melt_ptr_t) ( /*_._VALDATA___V40*/ meltfptr[39]);

  /*putupl#5 */
  melt_assertmsg ("putupl #5 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V46*/ meltfptr[45])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #5 checkoff",
		  (4 >= 0
		   && 4 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V46*/
					  meltfptr[45]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V46*/ meltfptr[45]))->tabval[4] =
    (melt_ptr_t) ( /*_._VALDATA___V43*/ meltfptr[42]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V46*/ meltfptr[45]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_4__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V29*/ meltfptr[28])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_4__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V29*/
					meltfptr[28]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V29*/ meltfptr[28]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V46*/ meltfptr[45]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V47*/ meltfptr[46]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_4__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V29*/ meltfptr[28])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_4__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V29*/
					meltfptr[28]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V29*/ meltfptr[28]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V47*/ meltfptr[46]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_4__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V29*/ meltfptr[28])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_4__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V29*/
					meltfptr[28]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V29*/ meltfptr[28]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V29*/ meltfptr[28]);

  MELT_LOCATION ("warmelt-hooks.melt:32:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V29*/ meltfptr[28],
				"new static instance");

  /*put data in hook HOOK_LOW_DEBUG_VALUE_AT */
  melt_assertmsg ("puthookdata checkhook HOOK_LOW_DEBUG_VALUE_AT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V28*/ meltfptr[27])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V28*/ meltfptr[27])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V29*/ meltfptr[28]);

  /*put inside hook HOOK_LOW_DEBUG_VALUE_AT */
  melt_assertmsg ("puthookconst checkhook HOOK_LOW_DEBUG_VALUE_AT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V28*/ meltfptr[27])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_LOW_DEBUG_VALUE_AT", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V28*/
				  meltfptr[27]));
  ((melthook_ptr_t) /*_._VALHOOK___V28*/ meltfptr[27])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*touch:HOOK_LOW_DEBUG_VALUE_AT */
  meltgc_touch ( /*_._VALHOOK___V28*/ meltfptr[27]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_23__MELT_DEBUG_FUN @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V48*/ meltfptr[47])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_23__MELT_DEBUG_FUN @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V48*/
					meltfptr[47]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V48*/ meltfptr[47]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V49*/ meltfptr[48]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V48*/ meltfptr[47]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V48*/ meltfptr[47],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_25__OVERRIDE_GATE_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V50*/ meltfptr[49])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_25__OVERRIDE_GATE_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V50*/ meltfptr[49]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V50*/ meltfptr[49]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V51*/ meltfptr[50]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V50*/ meltfptr[49]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V50*/ meltfptr[49],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_27__CLASS_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V52*/ meltfptr[51])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_27__CLASS_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V52*/
					meltfptr[51]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V52*/ meltfptr[51]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V53*/ meltfptr[52]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V52*/ meltfptr[51]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V52*/ meltfptr[51],
				"new static instance");

 /*_.MAKE_LIST__V55*/ meltfptr[54] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
 /*_.MAKE_LIST__V56*/ meltfptr[55] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
  MELT_LOCATION ("warmelt-hooks.melt:50:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V54*/ meltfptr[53]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V57*/ meltfptr[56]);

  MELT_LOCATION ("warmelt-hooks.melt:50:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V54*/ meltfptr[53]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V55*/ meltfptr[54]);

  MELT_LOCATION ("warmelt-hooks.melt:50:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_29__OVERRIDE_GATE_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V54*/ meltfptr[53]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V56*/ meltfptr[55]);

  MELT_LOCATION ("warmelt-hooks.melt:50:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V54*/ meltfptr[53]);

  MELT_LOCATION ("warmelt-hooks.melt:50:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V54*/ meltfptr[53],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_31__DISCR_LIST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V58*/ meltfptr[57])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_31__DISCR_LIST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V58*/
					meltfptr[57]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V58*/ meltfptr[57]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V59*/ meltfptr[58]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V58*/ meltfptr[57]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V58*/ meltfptr[57],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_34__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V61*/ meltfptr[60])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_34__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V61*/
					meltfptr[60]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V61*/ meltfptr[60]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V62*/ meltfptr[61]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_36__BEFOREGATE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V64*/ meltfptr[63])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_36__BEFOREGATE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V64*/
					meltfptr[63]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V64*/ meltfptr[63]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V65*/ meltfptr[64]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V64*/ meltfptr[63]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V64*/ meltfptr[63],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_38 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V63*/ meltfptr[62])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_38 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V63*/
					meltfptr[62]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V63*/ meltfptr[62]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V64*/ meltfptr[63]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_38 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V63*/ meltfptr[62])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_38 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V63*/
					meltfptr[62]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V63*/ meltfptr[62]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V63*/ meltfptr[62]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V63*/ meltfptr[62],
				"new static instance");

  /*putupl#6 */
  melt_assertmsg ("putupl #6 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V66*/ meltfptr[65])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #6 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V66*/
					  meltfptr[65]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V66*/ meltfptr[65]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V63*/ meltfptr[62]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V66*/ meltfptr[65]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_34__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V61*/ meltfptr[60])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_34__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V61*/
					meltfptr[60]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V61*/ meltfptr[60]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V66*/ meltfptr[65]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_40__AFTERGATE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V68*/ meltfptr[67])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_40__AFTERGATE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V68*/
					meltfptr[67]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V68*/ meltfptr[67]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V69*/ meltfptr[68]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V68*/ meltfptr[67]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V68*/ meltfptr[67],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_42 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V67*/ meltfptr[66])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_42 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V67*/
					meltfptr[66]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V67*/ meltfptr[66]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V68*/ meltfptr[67]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_42 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V67*/ meltfptr[66])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_42 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V67*/
					meltfptr[66]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V67*/ meltfptr[66]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V67*/ meltfptr[66]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V67*/ meltfptr[66],
				"new static instance");

  /*putupl#7 */
  melt_assertmsg ("putupl #7 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V70*/ meltfptr[69])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #7 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V70*/
					  meltfptr[69]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V70*/ meltfptr[69]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V67*/ meltfptr[66]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V70*/ meltfptr[69]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_34__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V61*/ meltfptr[60])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_34__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V61*/
					meltfptr[60]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V61*/ meltfptr[60]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V70*/ meltfptr[69]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_34__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V61*/ meltfptr[60])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_34__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V61*/
					meltfptr[60]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V61*/ meltfptr[60]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V61*/ meltfptr[60]);

  MELT_LOCATION ("warmelt-hooks.melt:56:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V61*/ meltfptr[60],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_44__TRUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V71*/ meltfptr[70])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_44__TRUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V71*/
					meltfptr[70]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V71*/ meltfptr[70]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V72*/ meltfptr[71]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V71*/ meltfptr[70]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V71*/ meltfptr[70],
				"new static instance");

  /*put data in hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookdata checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V61*/ meltfptr[60]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_REFERENCE__V9*/ meltfptr[8]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[3] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[4] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_OVERRIDE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V60*/ meltfptr[59])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_OVERRIDE_GATE", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V60*/
				  meltfptr[59]));
  ((melthook_ptr_t) /*_._VALHOOK___V60*/ meltfptr[59])->tabval[5] =
    (melt_ptr_t) ( /*_._VALDATA___V71*/ meltfptr[70]);

  /*touch:HOOK_OVERRIDE_GATE */
  meltgc_touch ( /*_._VALHOOK___V60*/ meltfptr[59]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_46__CLASS_REFERENCE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V73*/ meltfptr[72])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_46__CLASS_REFERENCE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V73*/
					meltfptr[72]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V73*/ meltfptr[72]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V74*/ meltfptr[73]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V73*/ meltfptr[72]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V73*/ meltfptr[72],
				"new static instance");

  /*putclosurout#1 */
  melt_assertmsg ("putclosrout#1 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V76*/ meltfptr[75])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#1 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V75*/ meltfptr[74])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V76*/ meltfptr[75])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V75*/ meltfptr[74]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V76*/ meltfptr[75]);

  MELT_LOCATION ("warmelt-hooks.melt:166:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V77*/ meltfptr[76])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V54*/ meltfptr[53]);
  ((meltroutine_ptr_t) /*_._VALROUT___V77*/ meltfptr[76])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);

  MELT_LOCATION ("warmelt-hooks.melt:166:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V77*/ meltfptr[76])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_50__MAYBE_DISABLE_OVERRIDE_GATE#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V77*/ meltfptr[76])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:166:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V77*/ meltfptr[76]);

  /*putclosurout#2 */
  melt_assertmsg ("putclosrout#2 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V78*/ meltfptr[77])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#2 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V77*/ meltfptr[76])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V78*/ meltfptr[77])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V77*/ meltfptr[76]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V78*/ meltfptr[77]);

  MELT_LOCATION ("warmelt-hooks.melt:182:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V79*/ meltfptr[78])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_52__REGISTER_OVERRIDE_GATE_FIRST#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V79*/ meltfptr[78])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:182:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V79*/ meltfptr[78])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V54*/ meltfptr[53]);
  ((meltroutine_ptr_t) /*_._VALROUT___V79*/ meltfptr[78])->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);

  MELT_LOCATION ("warmelt-hooks.melt:182:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V79*/ meltfptr[78])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_52__REGISTER_OVERRIDE_GATE_FIRST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V79*/ meltfptr[78])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:182:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V79*/ meltfptr[78])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V76*/ meltfptr[75]);
  ((meltroutine_ptr_t) /*_._VALROUT___V79*/ meltfptr[78])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V76*/ meltfptr[75]);

  MELT_LOCATION ("warmelt-hooks.melt:182:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V79*/ meltfptr[78]);

  /*putclosurout#3 */
  melt_assertmsg ("putclosrout#3 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V80*/ meltfptr[79])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#3 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V79*/ meltfptr[78])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V80*/ meltfptr[79])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V79*/ meltfptr[78]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V80*/ meltfptr[79]);

  MELT_LOCATION ("warmelt-hooks.melt:190:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V81*/ meltfptr[80])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_54__REGISTER_OVERRIDE_GATE_LAST#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V81*/ meltfptr[80])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:190:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V81*/ meltfptr[80])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V54*/ meltfptr[53]);
  ((meltroutine_ptr_t) /*_._VALROUT___V81*/ meltfptr[80])->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_0 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_1 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
  MELT_LOCATION ("warmelt-hooks.melt:190:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V81*/ meltfptr[80])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_54__REGISTER_OVERRIDE_GATE_LAST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V81*/ meltfptr[80])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:190:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V81*/ meltfptr[80])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V76*/ meltfptr[75]);
  ((meltroutine_ptr_t) /*_._VALROUT___V81*/ meltfptr[80])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V76*/ meltfptr[75]);

  MELT_LOCATION ("warmelt-hooks.melt:190:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V81*/ meltfptr[80]);

  /*putclosurout#4 */
  melt_assertmsg ("putclosrout#4 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V82*/ meltfptr[81])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#4 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V81*/ meltfptr[80])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V82*/ meltfptr[81])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V81*/ meltfptr[80]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V82*/ meltfptr[81]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_56__UNREGISTER_OVERRIDE_GATE_FIRST#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V83*/ meltfptr[82])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V54*/ meltfptr[53]);
  ((meltroutine_ptr_t) /*_._VALROUT___V83*/ meltfptr[82])->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_56__UNREGISTER_OVERRIDE_GATE_FIRST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V83*/ meltfptr[82])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_56__UNREGISTER_OVERRIDE_GATE_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V83*/ meltfptr[82])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V78*/ meltfptr[77]);
  ((meltroutine_ptr_t) /*_._VALROUT___V83*/ meltfptr[82])->tabval[4] =
    (melt_ptr_t) ( /*_._VALCLO___V78*/ meltfptr[77]);

  MELT_LOCATION ("warmelt-hooks.melt:198:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V83*/ meltfptr[82]);

  /*putclosurout#5 */
  melt_assertmsg ("putclosrout#5 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V84*/ meltfptr[83])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#5 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V83*/ meltfptr[82])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V84*/ meltfptr[83])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V83*/ meltfptr[82]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V84*/ meltfptr[83]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_58__UNREGISTER_OVERRIDE_GATE_LAST#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V85*/ meltfptr[84])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V54*/ meltfptr[53]);
  ((meltroutine_ptr_t) /*_._VALROUT___V85*/ meltfptr[84])->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V54*/ meltfptr[53]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_58__UNREGISTER_OVERRIDE_GATE_LAST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V85*/ meltfptr[84])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		    MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_58__UNREGISTER_OVERRIDE_GATE_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V85*/ meltfptr[84])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V78*/ meltfptr[77]);
  ((meltroutine_ptr_t) /*_._VALROUT___V85*/ meltfptr[84])->tabval[4] =
    (melt_ptr_t) ( /*_._VALCLO___V78*/ meltfptr[77]);

  MELT_LOCATION ("warmelt-hooks.melt:221:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V85*/ meltfptr[84]);

  /*putclosurout#6 */
  melt_assertmsg ("putclosrout#6 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V86*/ meltfptr[85])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#6 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V85*/ meltfptr[84])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V86*/ meltfptr[85])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V85*/ meltfptr[84]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V86*/ meltfptr[85]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_60__START_UNIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V87*/ meltfptr[86])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_60__START_UNIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V87*/
					meltfptr[86]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V87*/ meltfptr[86]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V88*/ meltfptr[87]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V87*/ meltfptr[86]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V87*/ meltfptr[86],
				"new static instance");

 /*_.MAKE_LIST__V90*/ meltfptr[89] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
 /*_.MAKE_LIST__V91*/ meltfptr[90] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
  MELT_LOCATION ("warmelt-hooks.melt:257:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V89*/ meltfptr[88])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V89*/
					meltfptr[88]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V92*/ meltfptr[91]);

  MELT_LOCATION ("warmelt-hooks.melt:257:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V89*/ meltfptr[88])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V89*/
					meltfptr[88]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V90*/ meltfptr[89]);

  MELT_LOCATION ("warmelt-hooks.melt:257:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V89*/ meltfptr[88])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_62__START_UNIT_DELAYED_QUEUE @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V89*/
					meltfptr[88]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V91*/ meltfptr[90]);

  MELT_LOCATION ("warmelt-hooks.melt:257:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V89*/ meltfptr[88]);

  MELT_LOCATION ("warmelt-hooks.melt:257:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V89*/ meltfptr[88],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_65__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V94*/ meltfptr[93])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_65__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V94*/
					meltfptr[93]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V94*/ meltfptr[93]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V95*/ meltfptr[94]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V96*/ meltfptr[95]);

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_65__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V94*/ meltfptr[93])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_65__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V94*/
					meltfptr[93]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V94*/ meltfptr[93]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V96*/ meltfptr[95]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V97*/ meltfptr[96]);

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_65__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V94*/ meltfptr[93])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_65__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V94*/
					meltfptr[93]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V94*/ meltfptr[93]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V97*/ meltfptr[96]);

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_65__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V94*/ meltfptr[93])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_65__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V94*/
					meltfptr[93]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V94*/ meltfptr[93]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V94*/ meltfptr[93]);

  MELT_LOCATION ("warmelt-hooks.melt:265:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V94*/ meltfptr[93],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:275:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V98*/ meltfptr[97])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V89*/ meltfptr[88]);
  ((meltroutine_ptr_t) /*_._VALROUT___V98*/ meltfptr[97])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]);

  MELT_LOCATION ("warmelt-hooks.melt:275:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V98*/ meltfptr[97]);

  MELT_LOCATION ("warmelt-hooks.melt:289:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V100*/ meltfptr[99])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V89*/ meltfptr[88]);
  ((meltroutine_ptr_t) /*_._VALROUT___V100*/ meltfptr[99])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]);

  MELT_LOCATION ("warmelt-hooks.melt:289:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V100*/ meltfptr[99]);

  /*put data in hook HOOK_START_UNIT */
  melt_assertmsg ("puthookdata checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V94*/ meltfptr[93]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_REFERENCE__V9*/ meltfptr[8]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[3] =
    (melt_ptr_t) ( /*_.LIST_EVERY__V10*/ meltfptr[9]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[4] =
    (melt_ptr_t) ( /*_._VALROUT___V98*/ meltfptr[97]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[5] =
    (melt_ptr_t) ( /*_._VALROUT___V99*/ meltfptr[98]);

  /*put inside hook HOOK_START_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V93*/ meltfptr[92])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_START_UNIT", (6) >= 0
		  && (6) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V93*/
				  meltfptr[92]));
  ((melthook_ptr_t) /*_._VALHOOK___V93*/ meltfptr[92])->tabval[6] =
    (melt_ptr_t) ( /*_._VALROUT___V100*/ meltfptr[99]);

  /*touch:HOOK_START_UNIT */
  meltgc_touch ( /*_._VALHOOK___V93*/ meltfptr[92]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_69__LIST_EVERY @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V101*/ meltfptr[100])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_69__LIST_EVERY @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V101*/
					meltfptr[100]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V101*/ meltfptr[100]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V102*/ meltfptr[101]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V101*/ meltfptr[100]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V101*/ meltfptr[100],
				"new static instance");

  /*putclosurout#7 */
  melt_assertmsg ("putclosrout#7 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V104*/ meltfptr[103])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#7 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V103*/ meltfptr[102])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V104*/ meltfptr[103])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V103*/ meltfptr[102]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V104*/ meltfptr[103]);

  MELT_LOCATION ("warmelt-hooks.melt:328:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V105*/ meltfptr[104])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V89*/ meltfptr[88]);
  ((meltroutine_ptr_t) /*_._VALROUT___V105*/ meltfptr[104])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]);

  MELT_LOCATION ("warmelt-hooks.melt:328:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V105*/ meltfptr[104])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V104*/ meltfptr[103]);
  ((meltroutine_ptr_t) /*_._VALROUT___V105*/ meltfptr[104])->tabval[1] =
    (melt_ptr_t) ( /*_._VALCLO___V104*/ meltfptr[103]);

  MELT_LOCATION ("warmelt-hooks.melt:328:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V105*/ meltfptr[104]);

  /*putclosurout#8 */
  melt_assertmsg ("putclosrout#8 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V106*/ meltfptr[105])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#8 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V105*/ meltfptr[104])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V106*/ meltfptr[105])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V105*/ meltfptr[104]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V106*/ meltfptr[105]);

  MELT_LOCATION ("warmelt-hooks.melt:337:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V107*/ meltfptr[106])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V89*/ meltfptr[88]);
  ((meltroutine_ptr_t) /*_._VALROUT___V107*/ meltfptr[106])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V89*/ meltfptr[88]);

  MELT_LOCATION ("warmelt-hooks.melt:337:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V107*/ meltfptr[106])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V104*/ meltfptr[103]);
  ((meltroutine_ptr_t) /*_._VALROUT___V107*/ meltfptr[106])->tabval[1] =
    (melt_ptr_t) ( /*_._VALCLO___V104*/ meltfptr[103]);

  MELT_LOCATION ("warmelt-hooks.melt:337:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V107*/ meltfptr[106]);

  /*putclosurout#9 */
  melt_assertmsg ("putclosrout#9 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V108*/ meltfptr[107])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#9 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V107*/ meltfptr[106])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V108*/ meltfptr[107])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V107*/ meltfptr[106]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V108*/ meltfptr[107]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_80__FINISH_UNIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V109*/ meltfptr[108])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_80__FINISH_UNIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V109*/
					meltfptr[108]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V109*/ meltfptr[108]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V110*/ meltfptr[109]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V109*/ meltfptr[108]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V109*/ meltfptr[108],
				"new static instance");

 /*_.MAKE_LIST__V112*/ meltfptr[111] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
 /*_.MAKE_LIST__V113*/ meltfptr[112] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
  MELT_LOCATION ("warmelt-hooks.melt:353:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V111*/ meltfptr[110])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V111*/
					meltfptr[110]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V114*/ meltfptr[113]);

  MELT_LOCATION ("warmelt-hooks.melt:353:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V111*/ meltfptr[110])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V111*/
					meltfptr[110]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V112*/ meltfptr[111]);

  MELT_LOCATION ("warmelt-hooks.melt:353:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V111*/ meltfptr[110])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_82__FINISH_UNIT_DELAYED_QUEUE @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V111*/
					meltfptr[110]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V113*/ meltfptr[112]);

  MELT_LOCATION ("warmelt-hooks.melt:353:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V111*/ meltfptr[110]);

  MELT_LOCATION ("warmelt-hooks.melt:353:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V111*/ meltfptr[110],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_85__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V116*/ meltfptr[115])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_85__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V116*/
					meltfptr[115]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V117*/ meltfptr[116]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V118*/ meltfptr[117]);

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_85__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V116*/ meltfptr[115])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_85__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V116*/
					meltfptr[115]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V118*/ meltfptr[117]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V119*/ meltfptr[118]);

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_85__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V116*/ meltfptr[115])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_85__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V116*/
					meltfptr[115]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V119*/ meltfptr[118]);

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_85__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V116*/ meltfptr[115])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_85__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V116*/
					meltfptr[115]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V116*/ meltfptr[115]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V116*/ meltfptr[115]);

  MELT_LOCATION ("warmelt-hooks.melt:367:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V116*/ meltfptr[115],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:377:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V120*/ meltfptr[119])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V111*/ meltfptr[110]);
  ((meltroutine_ptr_t) /*_._VALROUT___V120*/ meltfptr[119])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]);

  MELT_LOCATION ("warmelt-hooks.melt:377:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V120*/ meltfptr[119]);

  MELT_LOCATION ("warmelt-hooks.melt:391:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V122*/ meltfptr[121])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V111*/ meltfptr[110]);
  ((meltroutine_ptr_t) /*_._VALROUT___V122*/ meltfptr[121])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]);

  MELT_LOCATION ("warmelt-hooks.melt:391:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V122*/ meltfptr[121]);

  /*put data in hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookdata checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V116*/ meltfptr[115]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_REFERENCE__V9*/ meltfptr[8]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[3] =
    (melt_ptr_t) ( /*_.LIST_EVERY__V10*/ meltfptr[9]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[4] =
    (melt_ptr_t) ( /*_._VALROUT___V120*/ meltfptr[119]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[5] =
    (melt_ptr_t) ( /*_._VALROUT___V121*/ meltfptr[120]);

  /*put inside hook HOOK_FINISH_UNIT */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V115*/ meltfptr[114])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_UNIT", (6) >= 0
		  && (6) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V115*/
				  meltfptr[114]));
  ((melthook_ptr_t) /*_._VALHOOK___V115*/ meltfptr[114])->tabval[6] =
    (melt_ptr_t) ( /*_._VALROUT___V122*/ meltfptr[121]);

  /*touch:HOOK_FINISH_UNIT */
  meltgc_touch ( /*_._VALHOOK___V115*/ meltfptr[114]);

  /*putclosurout#10 */
  melt_assertmsg ("putclosrout#10 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V124*/ meltfptr[123])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#10 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V123*/ meltfptr[122])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V124*/ meltfptr[123])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V123*/ meltfptr[122]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V124*/ meltfptr[123]);

  MELT_LOCATION ("warmelt-hooks.melt:433:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V125*/ meltfptr[124])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V111*/ meltfptr[110]);
  ((meltroutine_ptr_t) /*_._VALROUT___V125*/ meltfptr[124])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]);

  MELT_LOCATION ("warmelt-hooks.melt:433:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V125*/ meltfptr[124])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V124*/ meltfptr[123]);
  ((meltroutine_ptr_t) /*_._VALROUT___V125*/ meltfptr[124])->tabval[1] =
    (melt_ptr_t) ( /*_._VALCLO___V124*/ meltfptr[123]);

  MELT_LOCATION ("warmelt-hooks.melt:433:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V125*/ meltfptr[124]);

  /*putclosurout#11 */
  melt_assertmsg ("putclosrout#11 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V126*/ meltfptr[125])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#11 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V125*/ meltfptr[124])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V126*/ meltfptr[125])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V125*/ meltfptr[124]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V126*/ meltfptr[125]);

  MELT_LOCATION ("warmelt-hooks.melt:443:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V127*/ meltfptr[126])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V111*/ meltfptr[110]);
  ((meltroutine_ptr_t) /*_._VALROUT___V127*/ meltfptr[126])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V111*/ meltfptr[110]);

  MELT_LOCATION ("warmelt-hooks.melt:443:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V127*/ meltfptr[126])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V124*/ meltfptr[123]);
  ((meltroutine_ptr_t) /*_._VALROUT___V127*/ meltfptr[126])->tabval[1] =
    (melt_ptr_t) ( /*_._VALCLO___V124*/ meltfptr[123]);

  MELT_LOCATION ("warmelt-hooks.melt:443:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V127*/ meltfptr[126]);

  /*putclosurout#12 */
  melt_assertmsg ("putclosrout#12 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V128*/ meltfptr[127])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#12 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V127*/ meltfptr[126])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V128*/ meltfptr[127])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V127*/ meltfptr[126]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V128*/ meltfptr[127]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_98__ALL_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V129*/ meltfptr[128])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_98__ALL_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V129*/ meltfptr[128]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V129*/ meltfptr[128]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V130*/ meltfptr[129]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V129*/ meltfptr[128]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V129*/ meltfptr[128],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:464:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V131*/ meltfptr[130]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V132*/ meltfptr[131]);

  MELT_LOCATION ("warmelt-hooks.melt:464:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V131*/ meltfptr[130]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:464:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_100__ALL_PASSES_START_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V131*/ meltfptr[130]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:464:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V131*/ meltfptr[130]);

  MELT_LOCATION ("warmelt-hooks.melt:464:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V131*/ meltfptr[130],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_103__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V134*/ meltfptr[133])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_103__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V134*/
					meltfptr[133]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V135*/ meltfptr[134]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V136*/ meltfptr[135]);

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_103__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V134*/ meltfptr[133])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_103__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V134*/
					meltfptr[133]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V136*/ meltfptr[135]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V137*/ meltfptr[136]);

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_103__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V134*/ meltfptr[133])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_103__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V134*/
					meltfptr[133]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V137*/ meltfptr[136]);

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_103__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V134*/ meltfptr[133])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_103__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V134*/
					meltfptr[133]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V134*/ meltfptr[133]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V134*/ meltfptr[133]);

  MELT_LOCATION ("warmelt-hooks.melt:478:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V134*/ meltfptr[133],
				"new static instance");

  /*put data in hook HOOK_ALL_PASSES_START */
  melt_assertmsg ("puthookdata checkhook HOOK_ALL_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V133*/ meltfptr[132])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V133*/ meltfptr[132])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V134*/ meltfptr[133]);

  /*put inside hook HOOK_ALL_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V133*/ meltfptr[132])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V133*/
				  meltfptr[132]));
  ((melthook_ptr_t) /*_._VALHOOK___V133*/ meltfptr[132])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_1 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_2 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
/*put inside hook HOOK_ALL_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V133*/ meltfptr[132])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V133*/
				  meltfptr[132]));
  ((melthook_ptr_t) /*_._VALHOOK___V133*/ meltfptr[132])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_ALL_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V133*/ meltfptr[132])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_START", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V133*/
				  meltfptr[132]));
  ((melthook_ptr_t) /*_._VALHOOK___V133*/ meltfptr[132])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_ALL_PASSES_START */
  meltgc_touch ( /*_._VALHOOK___V133*/ meltfptr[132]);

  /*putclosurout#13 */
  melt_assertmsg ("putclosrout#13 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V139*/ meltfptr[138])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#13 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V138*/ meltfptr[137])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V139*/ meltfptr[138])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V138*/ meltfptr[137]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V139*/ meltfptr[138]);

  MELT_LOCATION ("warmelt-hooks.melt:532:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V140*/ meltfptr[139])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V131*/ meltfptr[130]);
  ((meltroutine_ptr_t) /*_._VALROUT___V140*/ meltfptr[139])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]);

  MELT_LOCATION ("warmelt-hooks.melt:532:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V140*/ meltfptr[139]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_109__REGISTER_ALL_PASSES_START_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V140*/ meltfptr[139])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:532:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V140*/ meltfptr[139])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V139*/ meltfptr[138]);
  ((meltroutine_ptr_t) /*_._VALROUT___V140*/ meltfptr[139])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V139*/ meltfptr[138]);

  MELT_LOCATION ("warmelt-hooks.melt:532:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V140*/ meltfptr[139]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_109__REGISTER_ALL_PASSES_START_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V140*/ meltfptr[139])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:532:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V140*/ meltfptr[139]);

  /*putclosurout#14 */
  melt_assertmsg ("putclosrout#14 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V141*/ meltfptr[140])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#14 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V140*/ meltfptr[139])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V141*/ meltfptr[140])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V140*/ meltfptr[139]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V141*/ meltfptr[140]);

  MELT_LOCATION ("warmelt-hooks.melt:555:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V142*/ meltfptr[141])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V131*/ meltfptr[130]);
  ((meltroutine_ptr_t) /*_._VALROUT___V142*/ meltfptr[141])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V131*/ meltfptr[130]);

  MELT_LOCATION ("warmelt-hooks.melt:555:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V142*/ meltfptr[141]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_111__REGISTER_ALL_PASSES_START_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V142*/ meltfptr[141])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:555:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V142*/ meltfptr[141])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V139*/ meltfptr[138]);
  ((meltroutine_ptr_t) /*_._VALROUT___V142*/ meltfptr[141])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V139*/ meltfptr[138]);

  MELT_LOCATION ("warmelt-hooks.melt:555:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V142*/ meltfptr[141]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_111__REGISTER_ALL_PASSES_START_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V142*/ meltfptr[141])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:555:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V142*/ meltfptr[141]);

  /*putclosurout#15 */
  melt_assertmsg ("putclosrout#15 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V143*/ meltfptr[142])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#15 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V142*/ meltfptr[141])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V143*/ meltfptr[142])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V142*/ meltfptr[141]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V143*/ meltfptr[142]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_113__ALL_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V144*/ meltfptr[143])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_113__ALL_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V144*/ meltfptr[143]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V144*/ meltfptr[143]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V145*/ meltfptr[144]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V144*/ meltfptr[143]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V144*/ meltfptr[143],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:595:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V146*/ meltfptr[145]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V147*/ meltfptr[146]);

  MELT_LOCATION ("warmelt-hooks.melt:595:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V146*/ meltfptr[145]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:595:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_115__ALL_PASSES_END_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V146*/ meltfptr[145]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:595:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V146*/ meltfptr[145]);

  MELT_LOCATION ("warmelt-hooks.melt:595:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V146*/ meltfptr[145],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_118__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V149*/ meltfptr[148])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_118__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V149*/
					meltfptr[148]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V149*/ meltfptr[148]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V150*/ meltfptr[149]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V151*/ meltfptr[150]);

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_118__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V149*/ meltfptr[148])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_118__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V149*/
					meltfptr[148]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V149*/ meltfptr[148]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V151*/ meltfptr[150]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V152*/ meltfptr[151]);

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_118__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V149*/ meltfptr[148])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_118__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V149*/
					meltfptr[148]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V149*/ meltfptr[148]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V152*/ meltfptr[151]);

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_118__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V149*/ meltfptr[148])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_118__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V149*/
					meltfptr[148]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V149*/ meltfptr[148]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V149*/ meltfptr[148]);

  MELT_LOCATION ("warmelt-hooks.melt:602:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V149*/ meltfptr[148],
				"new static instance");

  /*put data in hook HOOK_ALL_PASSES_END */
  melt_assertmsg ("puthookdata checkhook HOOK_ALL_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V148*/ meltfptr[147])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V148*/ meltfptr[147])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V149*/ meltfptr[148]);

  /*put inside hook HOOK_ALL_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V148*/ meltfptr[147])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V148*/
				  meltfptr[147]));
  ((melthook_ptr_t) /*_._VALHOOK___V148*/ meltfptr[147])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]);

  /*put inside hook HOOK_ALL_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V148*/ meltfptr[147])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V148*/
				  meltfptr[147]));
  ((melthook_ptr_t) /*_._VALHOOK___V148*/ meltfptr[147])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_ALL_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V148*/ meltfptr[147])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_PASSES_END", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V148*/
				  meltfptr[147]));
  ((melthook_ptr_t) /*_._VALHOOK___V148*/ meltfptr[147])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_ALL_PASSES_END */
  meltgc_touch ( /*_._VALHOOK___V148*/ meltfptr[147]);

  /*putclosurout#16 */
  melt_assertmsg ("putclosrout#16 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V154*/ meltfptr[153])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#16 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V153*/ meltfptr[152])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V154*/ meltfptr[153])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V153*/ meltfptr[152]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V154*/ meltfptr[153]);

  MELT_LOCATION ("warmelt-hooks.melt:655:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V155*/ meltfptr[154])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V146*/ meltfptr[145]);
  ((meltroutine_ptr_t) /*_._VALROUT___V155*/ meltfptr[154])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]);

  MELT_LOCATION ("warmelt-hooks.melt:655:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V155*/ meltfptr[154]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_124__REGISTER_ALL_PASSES_END_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V155*/ meltfptr[154])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:655:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V155*/ meltfptr[154])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V154*/ meltfptr[153]);
  ((meltroutine_ptr_t) /*_._VALROUT___V155*/ meltfptr[154])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V154*/ meltfptr[153]);

  MELT_LOCATION ("warmelt-hooks.melt:655:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V155*/ meltfptr[154]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_124__REGISTER_ALL_PASSES_END_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V155*/ meltfptr[154])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:655:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V155*/ meltfptr[154]);

  /*putclosurout#17 */
  melt_assertmsg ("putclosrout#17 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V156*/ meltfptr[155])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#17 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V155*/ meltfptr[154])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V156*/ meltfptr[155])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V155*/ meltfptr[154]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V156*/ meltfptr[155]);

  MELT_LOCATION ("warmelt-hooks.melt:678:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V157*/ meltfptr[156])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V146*/ meltfptr[145]);
  ((meltroutine_ptr_t) /*_._VALROUT___V157*/ meltfptr[156])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V146*/ meltfptr[145]);

  MELT_LOCATION ("warmelt-hooks.melt:678:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V157*/ meltfptr[156]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_126__REGISTER_ALL_PASSES_END_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V157*/ meltfptr[156])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:678:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V157*/ meltfptr[156])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V154*/ meltfptr[153]);
  ((meltroutine_ptr_t) /*_._VALROUT___V157*/ meltfptr[156])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V154*/ meltfptr[153]);

  MELT_LOCATION ("warmelt-hooks.melt:678:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V157*/ meltfptr[156]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_126__REGISTER_ALL_PASSES_END_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V157*/ meltfptr[156])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:678:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V157*/ meltfptr[156]);

  /*putclosurout#18 */
  melt_assertmsg ("putclosrout#18 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V158*/ meltfptr[157])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#18 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V157*/ meltfptr[156])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V158*/ meltfptr[157])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V157*/ meltfptr[156]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V158*/ meltfptr[157]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V159*/ meltfptr[158])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_128__ALL_IPA_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V159*/ meltfptr[158]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V159*/ meltfptr[158]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V160*/ meltfptr[159]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V159*/ meltfptr[158]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V159*/ meltfptr[158],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:709:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V161*/ meltfptr[160]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V162*/ meltfptr[161]);

  MELT_LOCATION ("warmelt-hooks.melt:709:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V161*/ meltfptr[160]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:709:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_130__ALL_IPA_PASSES_START_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V161*/ meltfptr[160]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:709:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V161*/ meltfptr[160]);

  MELT_LOCATION ("warmelt-hooks.melt:709:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V161*/ meltfptr[160],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_133__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V164*/ meltfptr[163])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_133__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V164*/
					meltfptr[163]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V164*/ meltfptr[163]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V165*/ meltfptr[164]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V166*/ meltfptr[165]);

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_133__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V164*/ meltfptr[163])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_133__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V164*/
					meltfptr[163]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V164*/ meltfptr[163]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V166*/ meltfptr[165]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V167*/ meltfptr[166]);

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_133__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V164*/ meltfptr[163])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_133__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V164*/
					meltfptr[163]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V164*/ meltfptr[163]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V167*/ meltfptr[166]);

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_133__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V164*/ meltfptr[163])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_133__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V164*/
					meltfptr[163]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V164*/ meltfptr[163]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V164*/ meltfptr[163]);

  MELT_LOCATION ("warmelt-hooks.melt:723:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V164*/ meltfptr[163],
				"new static instance");

  /*put data in hook HOOK_ALL_IPA_PASSES_START */
  melt_assertmsg ("puthookdata checkhook HOOK_ALL_IPA_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V163*/ meltfptr[162])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V163*/ meltfptr[162])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V164*/ meltfptr[163]);

  /*put inside hook HOOK_ALL_IPA_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V163*/ meltfptr[162])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V163*/
				  meltfptr[162]));
  ((melthook_ptr_t) /*_._VALHOOK___V163*/ meltfptr[162])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]);

  /*put inside hook HOOK_ALL_IPA_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V163*/ meltfptr[162])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V163*/
				  meltfptr[162]));
  ((melthook_ptr_t) /*_._VALHOOK___V163*/ meltfptr[162])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_ALL_IPA_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V163*/ meltfptr[162])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_START", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V163*/
				  meltfptr[162]));
  ((melthook_ptr_t) /*_._VALHOOK___V163*/ meltfptr[162])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_ALL_IPA_PASSES_START */
  meltgc_touch ( /*_._VALHOOK___V163*/ meltfptr[162]);

  /*putclosurout#19 */
  melt_assertmsg ("putclosrout#19 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V169*/ meltfptr[168])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#19 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V168*/ meltfptr[167])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V169*/ meltfptr[168])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V168*/ meltfptr[167]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V169*/ meltfptr[168]);

  MELT_LOCATION ("warmelt-hooks.melt:777:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V170*/ meltfptr[169])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V161*/ meltfptr[160]);
  ((meltroutine_ptr_t) /*_._VALROUT___V170*/ meltfptr[169])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]);

  MELT_LOCATION ("warmelt-hooks.melt:777:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V170*/ meltfptr[169]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V170*/ meltfptr[169])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:777:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V170*/ meltfptr[169])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V169*/ meltfptr[168]);
  ((meltroutine_ptr_t) /*_._VALROUT___V170*/ meltfptr[169])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V169*/ meltfptr[168]);

  MELT_LOCATION ("warmelt-hooks.melt:777:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V170*/ meltfptr[169]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_139__REGISTER_ALL_IPA_PASSES_START_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V170*/ meltfptr[169])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:777:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V170*/ meltfptr[169]);

  /*putclosurout#20 */
  melt_assertmsg ("putclosrout#20 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V171*/ meltfptr[170])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#20 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V170*/ meltfptr[169])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V171*/ meltfptr[170])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V170*/ meltfptr[169]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V171*/ meltfptr[170]);

  MELT_LOCATION ("warmelt-hooks.melt:800:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V172*/ meltfptr[171])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V161*/ meltfptr[160]);
  ((meltroutine_ptr_t) /*_._VALROUT___V172*/ meltfptr[171])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V161*/ meltfptr[160]);

  MELT_LOCATION ("warmelt-hooks.melt:800:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V172*/ meltfptr[171]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_141__REGISTER_ALL_IPA_PASSES_START_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V172*/ meltfptr[171])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:800:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V172*/ meltfptr[171])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V169*/ meltfptr[168]);
  ((meltroutine_ptr_t) /*_._VALROUT___V172*/ meltfptr[171])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V169*/ meltfptr[168]);

  MELT_LOCATION ("warmelt-hooks.melt:800:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V172*/ meltfptr[171]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_141__REGISTER_ALL_IPA_PASSES_START_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V172*/ meltfptr[171])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:800:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V172*/ meltfptr[171]);

  /*putclosurout#21 */
  melt_assertmsg ("putclosrout#21 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V173*/ meltfptr[172])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#21 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V172*/ meltfptr[171])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V173*/ meltfptr[172])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V172*/ meltfptr[171]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V173*/ meltfptr[172]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V174*/ meltfptr[173])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_143__ALL_IPA_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V174*/ meltfptr[173]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V174*/ meltfptr[173]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V175*/ meltfptr[174]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V174*/ meltfptr[173]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V174*/ meltfptr[173],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:840:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V176*/ meltfptr[175]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V177*/ meltfptr[176]);

  MELT_LOCATION ("warmelt-hooks.melt:840:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V176*/ meltfptr[175]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:840:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_145__ALL_IPA_PASSES_END_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V176*/ meltfptr[175]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:840:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V176*/ meltfptr[175]);

  MELT_LOCATION ("warmelt-hooks.melt:840:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V176*/ meltfptr[175],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_148__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V179*/ meltfptr[178])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_148__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V179*/
					meltfptr[178]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V179*/ meltfptr[178]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V180*/ meltfptr[179]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V181*/ meltfptr[180]);

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_148__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V179*/ meltfptr[178])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_148__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V179*/
					meltfptr[178]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V179*/ meltfptr[178]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V181*/ meltfptr[180]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V182*/ meltfptr[181]);

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_148__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V179*/ meltfptr[178])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_148__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V179*/
					meltfptr[178]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V179*/ meltfptr[178]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V182*/ meltfptr[181]);

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_148__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V179*/ meltfptr[178])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_148__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V179*/
					meltfptr[178]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V179*/ meltfptr[178]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V179*/ meltfptr[178]);

  MELT_LOCATION ("warmelt-hooks.melt:847:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V179*/ meltfptr[178],
				"new static instance");

  /*put data in hook HOOK_ALL_IPA_PASSES_END */
  melt_assertmsg ("puthookdata checkhook HOOK_ALL_IPA_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V178*/ meltfptr[177])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V178*/ meltfptr[177])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V179*/ meltfptr[178]);

  /*put inside hook HOOK_ALL_IPA_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V178*/ meltfptr[177])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V178*/
				  meltfptr[177]));
  ((melthook_ptr_t) /*_._VALHOOK___V178*/ meltfptr[177])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]);

  /*put inside hook HOOK_ALL_IPA_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V178*/ meltfptr[177])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V178*/
				  meltfptr[177]));
  ((melthook_ptr_t) /*_._VALHOOK___V178*/ meltfptr[177])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_ALL_IPA_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V178*/ meltfptr[177])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_ALL_IPA_PASSES_END", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V178*/
				  meltfptr[177]));
  ((melthook_ptr_t) /*_._VALHOOK___V178*/ meltfptr[177])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_ALL_IPA_PASSES_END */
  meltgc_touch ( /*_._VALHOOK___V178*/ meltfptr[177]);

  /*putclosurout#22 */
  melt_assertmsg ("putclosrout#22 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V184*/ meltfptr[183])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#22 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V183*/ meltfptr[182])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V184*/ meltfptr[183])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V183*/ meltfptr[182]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V184*/ meltfptr[183]);

  MELT_LOCATION ("warmelt-hooks.melt:900:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V185*/ meltfptr[184])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V176*/ meltfptr[175]);
  ((meltroutine_ptr_t) /*_._VALROUT___V185*/ meltfptr[184])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]);

  MELT_LOCATION ("warmelt-hooks.melt:900:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V185*/ meltfptr[184]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V185*/ meltfptr[184])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:900:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V185*/ meltfptr[184])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V184*/ meltfptr[183]);
  ((meltroutine_ptr_t) /*_._VALROUT___V185*/ meltfptr[184])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V184*/ meltfptr[183]);

  MELT_LOCATION ("warmelt-hooks.melt:900:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V185*/ meltfptr[184]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_154__REGISTER_ALL_IPA_PASSES_END_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V185*/ meltfptr[184])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:900:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V185*/ meltfptr[184]);

  /*putclosurout#23 */
  melt_assertmsg ("putclosrout#23 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V186*/ meltfptr[185])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#23 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V185*/ meltfptr[184])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V186*/ meltfptr[185])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V185*/ meltfptr[184]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V186*/ meltfptr[185]);

  MELT_LOCATION ("warmelt-hooks.melt:923:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V187*/ meltfptr[186])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V176*/ meltfptr[175]);
  ((meltroutine_ptr_t) /*_._VALROUT___V187*/ meltfptr[186])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V176*/ meltfptr[175]);

  MELT_LOCATION ("warmelt-hooks.melt:923:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V187*/ meltfptr[186]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_156__REGISTER_ALL_IPA_PASSES_END_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V187*/ meltfptr[186])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:923:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V187*/ meltfptr[186])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V184*/ meltfptr[183]);
  ((meltroutine_ptr_t) /*_._VALROUT___V187*/ meltfptr[186])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V184*/ meltfptr[183]);

  MELT_LOCATION ("warmelt-hooks.melt:923:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V187*/ meltfptr[186]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_156__REGISTER_ALL_IPA_PASSES_END_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V187*/ meltfptr[186])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:923:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V187*/ meltfptr[186]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_2 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_3 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
/*putclosurout#24*/
  melt_assertmsg ("putclosrout#24 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V188*/ meltfptr[187])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#24 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V187*/ meltfptr[186])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V188*/ meltfptr[187])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V187*/ meltfptr[186]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V188*/ meltfptr[187]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V189*/ meltfptr[188])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_158__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V189*/ meltfptr[188]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V189*/ meltfptr[188]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V190*/ meltfptr[189]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V189*/ meltfptr[188]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V189*/ meltfptr[188],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:955:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V191*/ meltfptr[190]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V192*/ meltfptr[191]);

  MELT_LOCATION ("warmelt-hooks.melt:955:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V191*/ meltfptr[190]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:955:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_160__EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V191*/ meltfptr[190]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:955:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V191*/ meltfptr[190]);

  MELT_LOCATION ("warmelt-hooks.melt:955:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V191*/ meltfptr[190],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_163__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V194*/ meltfptr[193])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_163__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V194*/
					meltfptr[193]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V194*/ meltfptr[193]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V195*/ meltfptr[194]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V196*/ meltfptr[195]);

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_163__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V194*/ meltfptr[193])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_163__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V194*/
					meltfptr[193]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V194*/ meltfptr[193]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V196*/ meltfptr[195]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V197*/ meltfptr[196]);

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_163__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V194*/ meltfptr[193])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_163__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V194*/
					meltfptr[193]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V194*/ meltfptr[193]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V197*/ meltfptr[196]);

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_163__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V194*/ meltfptr[193])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_163__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V194*/
					meltfptr[193]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V194*/ meltfptr[193]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V194*/ meltfptr[193]);

  MELT_LOCATION ("warmelt-hooks.melt:969:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V194*/ meltfptr[193],
				"new static instance");

  /*put data in hook HOOK_EARLY_GIMPLE_PASSES_START */
  melt_assertmsg ("puthookdata checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V193*/ meltfptr[192])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V193*/ meltfptr[192])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V194*/ meltfptr[193]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V193*/ meltfptr[192])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V193*/
				  meltfptr[192]));
  ((melthook_ptr_t) /*_._VALHOOK___V193*/ meltfptr[192])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V193*/ meltfptr[192])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V193*/
				  meltfptr[192]));
  ((melthook_ptr_t) /*_._VALHOOK___V193*/ meltfptr[192])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_START */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V193*/ meltfptr[192])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_START",
		  (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V193*/
				  meltfptr[192]));
  ((melthook_ptr_t) /*_._VALHOOK___V193*/ meltfptr[192])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_EARLY_GIMPLE_PASSES_START */
  meltgc_touch ( /*_._VALHOOK___V193*/ meltfptr[192]);

  /*putclosurout#25 */
  melt_assertmsg ("putclosrout#25 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V199*/ meltfptr[198])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#25 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V198*/ meltfptr[197])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V199*/ meltfptr[198])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V198*/ meltfptr[197]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V199*/ meltfptr[198]);

  MELT_LOCATION ("warmelt-hooks.melt:1023:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V200*/ meltfptr[199])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V191*/ meltfptr[190]);
  ((meltroutine_ptr_t) /*_._VALROUT___V200*/ meltfptr[199])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]);

  MELT_LOCATION ("warmelt-hooks.melt:1023:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V200*/ meltfptr[199]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V200*/ meltfptr[199])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1023:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V200*/ meltfptr[199])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V199*/ meltfptr[198]);
  ((meltroutine_ptr_t) /*_._VALROUT___V200*/ meltfptr[199])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V199*/ meltfptr[198]);

  MELT_LOCATION ("warmelt-hooks.melt:1023:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V200*/ meltfptr[199]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_169__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V200*/ meltfptr[199])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1023:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V200*/ meltfptr[199]);

  /*putclosurout#26 */
  melt_assertmsg ("putclosrout#26 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V201*/ meltfptr[200])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#26 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V200*/ meltfptr[199])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V201*/ meltfptr[200])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V200*/ meltfptr[199]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V201*/ meltfptr[200]);

  MELT_LOCATION ("warmelt-hooks.melt:1046:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V202*/ meltfptr[201])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V191*/ meltfptr[190]);
  ((meltroutine_ptr_t) /*_._VALROUT___V202*/ meltfptr[201])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V191*/ meltfptr[190]);

  MELT_LOCATION ("warmelt-hooks.melt:1046:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V202*/ meltfptr[201]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V202*/ meltfptr[201])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1046:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V202*/ meltfptr[201])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V199*/ meltfptr[198]);
  ((meltroutine_ptr_t) /*_._VALROUT___V202*/ meltfptr[201])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V199*/ meltfptr[198]);

  MELT_LOCATION ("warmelt-hooks.melt:1046:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V202*/ meltfptr[201]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_171__REGISTER_EARLY_GIMPLE_PASSES_START_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V202*/ meltfptr[201])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1046:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V202*/ meltfptr[201]);

  /*putclosurout#27 */
  melt_assertmsg ("putclosrout#27 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V203*/ meltfptr[202])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#27 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V202*/ meltfptr[201])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V203*/ meltfptr[202])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V202*/ meltfptr[201]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V203*/ meltfptr[202]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V204*/ meltfptr[203])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_173__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V204*/ meltfptr[203]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V204*/ meltfptr[203]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V205*/ meltfptr[204]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V204*/ meltfptr[203]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V204*/ meltfptr[203],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V206*/ meltfptr[205]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V207*/ meltfptr[206]);

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V206*/ meltfptr[205]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_175__EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V206*/ meltfptr[205]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V206*/ meltfptr[205]);

  MELT_LOCATION ("warmelt-hooks.melt:1086:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V206*/ meltfptr[205],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_178__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V209*/ meltfptr[208])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_178__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V209*/
					meltfptr[208]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V209*/ meltfptr[208]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V210*/ meltfptr[209]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V211*/ meltfptr[210]);

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_178__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V209*/ meltfptr[208])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_178__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V209*/
					meltfptr[208]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V209*/ meltfptr[208]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V211*/ meltfptr[210]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V212*/ meltfptr[211]);

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_178__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V209*/ meltfptr[208])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_178__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V209*/
					meltfptr[208]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V209*/ meltfptr[208]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V212*/ meltfptr[211]);

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_178__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V209*/ meltfptr[208])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_178__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V209*/
					meltfptr[208]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V209*/ meltfptr[208]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V209*/ meltfptr[208]);

  MELT_LOCATION ("warmelt-hooks.melt:1093:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V209*/ meltfptr[208],
				"new static instance");

  /*put data in hook HOOK_EARLY_GIMPLE_PASSES_END */
  melt_assertmsg ("puthookdata checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V208*/ meltfptr[207])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V208*/ meltfptr[207])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V209*/ meltfptr[208]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V208*/ meltfptr[207])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V208*/
				  meltfptr[207]));
  ((melthook_ptr_t) /*_._VALHOOK___V208*/ meltfptr[207])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V208*/ meltfptr[207])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V208*/
				  meltfptr[207]));
  ((melthook_ptr_t) /*_._VALHOOK___V208*/ meltfptr[207])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_EARLY_GIMPLE_PASSES_END */
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V208*/ meltfptr[207])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EARLY_GIMPLE_PASSES_END",
		  (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V208*/
				  meltfptr[207]));
  ((melthook_ptr_t) /*_._VALHOOK___V208*/ meltfptr[207])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_EARLY_GIMPLE_PASSES_END */
  meltgc_touch ( /*_._VALHOOK___V208*/ meltfptr[207]);

  /*putclosurout#28 */
  melt_assertmsg ("putclosrout#28 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V214*/ meltfptr[213])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#28 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V213*/ meltfptr[212])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V214*/ meltfptr[213])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V213*/ meltfptr[212]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V214*/ meltfptr[213]);

  MELT_LOCATION ("warmelt-hooks.melt:1146:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V215*/ meltfptr[214])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V206*/ meltfptr[205]);
  ((meltroutine_ptr_t) /*_._VALROUT___V215*/ meltfptr[214])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]);

  MELT_LOCATION ("warmelt-hooks.melt:1146:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V215*/ meltfptr[214]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V215*/ meltfptr[214])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1146:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V215*/ meltfptr[214])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V214*/ meltfptr[213]);
  ((meltroutine_ptr_t) /*_._VALROUT___V215*/ meltfptr[214])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V214*/ meltfptr[213]);

  MELT_LOCATION ("warmelt-hooks.melt:1146:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V215*/ meltfptr[214]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_184__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V215*/ meltfptr[214])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1146:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V215*/ meltfptr[214]);

  /*putclosurout#29 */
  melt_assertmsg ("putclosrout#29 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V216*/ meltfptr[215])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#29 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V215*/ meltfptr[214])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V216*/ meltfptr[215])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V215*/ meltfptr[214]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V216*/ meltfptr[215]);

  MELT_LOCATION ("warmelt-hooks.melt:1169:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V217*/ meltfptr[216])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V206*/ meltfptr[205]);
  ((meltroutine_ptr_t) /*_._VALROUT___V217*/ meltfptr[216])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V206*/ meltfptr[205]);

  MELT_LOCATION ("warmelt-hooks.melt:1169:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V217*/ meltfptr[216]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V217*/ meltfptr[216])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1169:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V217*/ meltfptr[216])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V214*/ meltfptr[213]);
  ((meltroutine_ptr_t) /*_._VALROUT___V217*/ meltfptr[216])->tabval[2] =
    (melt_ptr_t) ( /*_._VALCLO___V214*/ meltfptr[213]);

  MELT_LOCATION ("warmelt-hooks.melt:1169:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V217*/ meltfptr[216]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_186__REGISTER_EARLY_GIMPLE_PASSES_END_LAST#3",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V217*/ meltfptr[216])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1169:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V217*/ meltfptr[216]);

  /*putclosurout#30 */
  melt_assertmsg ("putclosrout#30 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V218*/ meltfptr[217])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#30 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V217*/ meltfptr[216])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V218*/ meltfptr[217])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V217*/ meltfptr[216]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V218*/ meltfptr[217]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_188__PREGENERICIZE_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V219*/ meltfptr[218])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_188__PREGENERICIZE_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V219*/ meltfptr[218]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V219*/ meltfptr[218]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V220*/ meltfptr[219]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V219*/ meltfptr[218]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V219*/ meltfptr[218],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V221*/ meltfptr[220]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V222*/ meltfptr[221]);

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V221*/ meltfptr[220]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_190__PREGENERICIZE_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V221*/ meltfptr[220]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V221*/ meltfptr[220]);

  MELT_LOCATION ("warmelt-hooks.melt:1199:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V221*/ meltfptr[220],
				"new static instance");

  /*putclosurout#31 */
  melt_assertmsg ("putclosrout#31 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V224*/ meltfptr[223])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#31 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V223*/ meltfptr[222])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V224*/ meltfptr[223])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V223*/ meltfptr[222]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V224*/ meltfptr[223]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_195__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V226*/ meltfptr[225])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_195__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V226*/
					meltfptr[225]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V226*/ meltfptr[225]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V227*/ meltfptr[226]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_197__TFNDECL @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V229*/ meltfptr[228])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_197__TFNDECL @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V229*/
					meltfptr[228]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V229*/ meltfptr[228]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V230*/ meltfptr[229]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V229*/ meltfptr[228]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V229*/ meltfptr[228],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_199 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V228*/ meltfptr[227])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_199 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V228*/
					meltfptr[227]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V228*/ meltfptr[227]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V229*/ meltfptr[228]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_199 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V228*/ meltfptr[227])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_199 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V228*/
					meltfptr[227]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V228*/ meltfptr[227]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_TREE))));

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V228*/ meltfptr[227]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V228*/ meltfptr[227],
				"new static instance");

  /*putupl#8 */
  melt_assertmsg ("putupl #8 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V231*/ meltfptr[230])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #8 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V231*/
					  meltfptr[230]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V231*/ meltfptr[230]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V228*/ meltfptr[227]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V231*/ meltfptr[230]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_195__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V226*/ meltfptr[225])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_195__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V226*/
					meltfptr[225]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V226*/ meltfptr[225]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V231*/ meltfptr[230]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V232*/ meltfptr[231]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_195__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V226*/ meltfptr[225])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_195__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V226*/
					meltfptr[225]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V226*/ meltfptr[225]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V232*/ meltfptr[231]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_195__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V226*/ meltfptr[225])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_195__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V226*/
					meltfptr[225]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V226*/ meltfptr[225]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V226*/ meltfptr[225]);

  MELT_LOCATION ("warmelt-hooks.melt:1243:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V226*/ meltfptr[225],
				"new static instance");

  /*put data in hook HOOK_PRE_GENERICIZE */
  melt_assertmsg ("puthookdata checkhook HOOK_PRE_GENERICIZE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V225*/ meltfptr[224])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V225*/ meltfptr[224])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V226*/ meltfptr[225]);

  /*put inside hook HOOK_PRE_GENERICIZE */
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V225*/ meltfptr[224])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V225*/
				  meltfptr[224]));
  ((melthook_ptr_t) /*_._VALHOOK___V225*/ meltfptr[224])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]);

  /*put inside hook HOOK_PRE_GENERICIZE */
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V225*/ meltfptr[224])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V225*/
				  meltfptr[224]));
  ((melthook_ptr_t) /*_._VALHOOK___V225*/ meltfptr[224])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_PRE_GENERICIZE */
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V225*/ meltfptr[224])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PRE_GENERICIZE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V225*/
				  meltfptr[224]));
  ((melthook_ptr_t) /*_._VALHOOK___V225*/ meltfptr[224])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_PRE_GENERICIZE */
  meltgc_touch ( /*_._VALHOOK___V225*/ meltfptr[224]);

  MELT_LOCATION ("warmelt-hooks.melt:1274:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V233*/ meltfptr[232])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V221*/ meltfptr[220]);
  ((meltroutine_ptr_t) /*_._VALROUT___V233*/ meltfptr[232])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]);

  MELT_LOCATION ("warmelt-hooks.melt:1274:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V233*/ meltfptr[232]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_202__REGISTER_PRE_GENERICIZE_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V233*/ meltfptr[232])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1274:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V233*/ meltfptr[232]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_202__REGISTER_PRE_GENERICIZE_FIRST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V233*/ meltfptr[232])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1274:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V233*/ meltfptr[232])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V224*/ meltfptr[223]);
  ((meltroutine_ptr_t) /*_._VALROUT___V233*/ meltfptr[232])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V224*/ meltfptr[223]);

  MELT_LOCATION ("warmelt-hooks.melt:1274:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V233*/ meltfptr[232]);

  /*putclosurout#32 */
  melt_assertmsg ("putclosrout#32 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V234*/ meltfptr[233])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#32 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V233*/ meltfptr[232])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V234*/ meltfptr[233])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V233*/ meltfptr[232]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V234*/ meltfptr[233]);

  MELT_LOCATION ("warmelt-hooks.melt:1297:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V235*/ meltfptr[234])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V221*/ meltfptr[220]);
  ((meltroutine_ptr_t) /*_._VALROUT___V235*/ meltfptr[234])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V221*/ meltfptr[220]);

  MELT_LOCATION ("warmelt-hooks.melt:1297:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V235*/ meltfptr[234]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_204__REGISTER_PRE_GENERICIZE_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V235*/ meltfptr[234])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1297:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V235*/ meltfptr[234]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_204__REGISTER_PRE_GENERICIZE_LAST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V235*/ meltfptr[234])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1297:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V235*/ meltfptr[234])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V224*/ meltfptr[223]);
  ((meltroutine_ptr_t) /*_._VALROUT___V235*/ meltfptr[234])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V224*/ meltfptr[223]);

  MELT_LOCATION ("warmelt-hooks.melt:1297:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V235*/ meltfptr[234]);

  /*putclosurout#33 */
  melt_assertmsg ("putclosrout#33 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V236*/ meltfptr[235])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#33 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V235*/ meltfptr[234])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V236*/ meltfptr[235])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V235*/ meltfptr[234]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V236*/ meltfptr[235]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_206__FINISHTYPE_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V237*/ meltfptr[236])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_206__FINISHTYPE_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V237*/
					meltfptr[236]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V237*/ meltfptr[236]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V238*/ meltfptr[237]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V237*/ meltfptr[236]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V237*/ meltfptr[236],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1330:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V239*/ meltfptr[238])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V239*/
					meltfptr[238]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V240*/ meltfptr[239]);

  MELT_LOCATION ("warmelt-hooks.melt:1330:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V239*/ meltfptr[238])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V239*/
					meltfptr[238]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1330:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V239*/ meltfptr[238])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_208__FINISHTYPE_DELAYED_QUEUE @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V239*/
					meltfptr[238]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1330:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V239*/ meltfptr[238]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_3 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_4 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
  MELT_LOCATION ("warmelt-hooks.melt:1330:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V239*/ meltfptr[238],
				"new static instance");

  /*putclosurout#34 */
  melt_assertmsg ("putclosrout#34 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V242*/ meltfptr[241])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#34 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V241*/ meltfptr[240])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V242*/ meltfptr[241])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V241*/ meltfptr[240]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V242*/ meltfptr[241]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_213__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V244*/ meltfptr[243])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_213__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V244*/
					meltfptr[243]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V244*/ meltfptr[243]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V245*/ meltfptr[244]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_215 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V246*/ meltfptr[245])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_215 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V246*/
					meltfptr[245]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V246*/ meltfptr[245]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V229*/ meltfptr[228]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_215 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V246*/ meltfptr[245])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_215 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V246*/
					meltfptr[245]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V246*/ meltfptr[245]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_TREE))));

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V246*/ meltfptr[245]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V246*/ meltfptr[245],
				"new static instance");

  /*putupl#9 */
  melt_assertmsg ("putupl #9 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V247*/ meltfptr[246])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #9 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V247*/
					  meltfptr[246]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V247*/ meltfptr[246]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V246*/ meltfptr[245]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V247*/ meltfptr[246]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_213__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V244*/ meltfptr[243])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_213__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V244*/
					meltfptr[243]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V244*/ meltfptr[243]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V247*/ meltfptr[246]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V248*/ meltfptr[247]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_213__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V244*/ meltfptr[243])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_213__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V244*/
					meltfptr[243]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V244*/ meltfptr[243]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V248*/ meltfptr[247]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_213__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V244*/ meltfptr[243])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_213__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V244*/
					meltfptr[243]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V244*/ meltfptr[243]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V244*/ meltfptr[243]);

  MELT_LOCATION ("warmelt-hooks.melt:1372:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V244*/ meltfptr[243],
				"new static instance");

  /*put data in hook HOOK_FINISH_TYPE */
  melt_assertmsg ("puthookdata checkhook HOOK_FINISH_TYPE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V243*/ meltfptr[242])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V243*/ meltfptr[242])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V244*/ meltfptr[243]);

  /*put inside hook HOOK_FINISH_TYPE */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V243*/ meltfptr[242])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V243*/
				  meltfptr[242]));
  ((melthook_ptr_t) /*_._VALHOOK___V243*/ meltfptr[242])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]);

  /*put inside hook HOOK_FINISH_TYPE */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V243*/ meltfptr[242])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V243*/
				  meltfptr[242]));
  ((melthook_ptr_t) /*_._VALHOOK___V243*/ meltfptr[242])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_FINISH_TYPE */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V243*/ meltfptr[242])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_TYPE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V243*/
				  meltfptr[242]));
  ((melthook_ptr_t) /*_._VALHOOK___V243*/ meltfptr[242])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_FINISH_TYPE */
  meltgc_touch ( /*_._VALHOOK___V243*/ meltfptr[242]);

  MELT_LOCATION ("warmelt-hooks.melt:1403:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V249*/ meltfptr[248])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V239*/ meltfptr[238]);
  ((meltroutine_ptr_t) /*_._VALROUT___V249*/ meltfptr[248])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]);

  MELT_LOCATION ("warmelt-hooks.melt:1403:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V249*/ meltfptr[248]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_218__REGISTER_FINISH_TYPE_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V249*/ meltfptr[248])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1403:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V249*/ meltfptr[248]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_218__REGISTER_FINISH_TYPE_FIRST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V249*/ meltfptr[248])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1403:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V249*/ meltfptr[248])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V242*/ meltfptr[241]);
  ((meltroutine_ptr_t) /*_._VALROUT___V249*/ meltfptr[248])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V242*/ meltfptr[241]);

  MELT_LOCATION ("warmelt-hooks.melt:1403:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V249*/ meltfptr[248]);

  /*putclosurout#35 */
  melt_assertmsg ("putclosrout#35 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V250*/ meltfptr[249])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#35 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V249*/ meltfptr[248])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V250*/ meltfptr[249])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V249*/ meltfptr[248]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V250*/ meltfptr[249]);

  MELT_LOCATION ("warmelt-hooks.melt:1426:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V251*/ meltfptr[250])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V239*/ meltfptr[238]);
  ((meltroutine_ptr_t) /*_._VALROUT___V251*/ meltfptr[250])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V239*/ meltfptr[238]);

  MELT_LOCATION ("warmelt-hooks.melt:1426:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V251*/ meltfptr[250]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_220__REGISTER_FINISH_TYPE_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V251*/ meltfptr[250])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1426:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V251*/ meltfptr[250]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_220__REGISTER_FINISH_TYPE_LAST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V251*/ meltfptr[250])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1426:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V251*/ meltfptr[250])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V242*/ meltfptr[241]);
  ((meltroutine_ptr_t) /*_._VALROUT___V251*/ meltfptr[250])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V242*/ meltfptr[241]);

  MELT_LOCATION ("warmelt-hooks.melt:1426:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V251*/ meltfptr[250]);

  /*putclosurout#36 */
  melt_assertmsg ("putclosrout#36 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V252*/ meltfptr[251])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#36 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V251*/ meltfptr[250])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V252*/ meltfptr[251])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V251*/ meltfptr[250]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V252*/ meltfptr[251]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_222__ENDMELTPASS_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V253*/ meltfptr[252])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_222__ENDMELTPASS_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V253*/ meltfptr[252]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V253*/ meltfptr[252]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V254*/ meltfptr[253]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V253*/ meltfptr[252]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V253*/ meltfptr[252],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V255*/ meltfptr[254]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V256*/ meltfptr[255]);

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V255*/ meltfptr[254]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_224__ENDMELTPASS_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V255*/ meltfptr[254]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V255*/ meltfptr[254]);

  MELT_LOCATION ("warmelt-hooks.melt:1454:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V255*/ meltfptr[254],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1460:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V257*/ meltfptr[256])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V255*/ meltfptr[254]);
  ((meltroutine_ptr_t) /*_._VALROUT___V257*/ meltfptr[256])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]);

  MELT_LOCATION ("warmelt-hooks.melt:1460:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V257*/ meltfptr[256]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_226__RUN_ENDMELTPASS_FUNCTIONS#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V257*/ meltfptr[256])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1460:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V257*/ meltfptr[256]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_226__RUN_ENDMELTPASS_FUNCTIONS#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V257*/ meltfptr[256])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1460:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V257*/ meltfptr[256]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_226__RUN_ENDMELTPASS_FUNCTIONS#3",
       NULL != ( /*_.CLASS_CONTAINER__V11*/ meltfptr[10]));
  ((meltroutine_ptr_t) /*_._VALROUT___V257*/ meltfptr[256])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_CONTAINER__V11*/ meltfptr[10]);

  MELT_LOCATION ("warmelt-hooks.melt:1460:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V257*/ meltfptr[256]);

  /*putclosurout#37 */
  melt_assertmsg ("putclosrout#37 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V258*/ meltfptr[257])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#37 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V257*/ meltfptr[256])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V258*/ meltfptr[257])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V257*/ meltfptr[256]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V258*/ meltfptr[257]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_228__CLASS_CONTAINER @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V259*/ meltfptr[258])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_228__CLASS_CONTAINER @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V259*/
					meltfptr[258]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V259*/ meltfptr[258]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V260*/ meltfptr[259]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V259*/ meltfptr[258]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V259*/ meltfptr[258],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1490:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V261*/ meltfptr[260])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V255*/ meltfptr[254]);
  ((meltroutine_ptr_t) /*_._VALROUT___V261*/ meltfptr[260])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]);

  MELT_LOCATION ("warmelt-hooks.melt:1490:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V261*/ meltfptr[260]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_230__AT_END_OF_THIS_MELT_PASS_FIRST#1",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V261*/ meltfptr[260])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1490:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V261*/ meltfptr[260]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_230__AT_END_OF_THIS_MELT_PASS_FIRST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V261*/ meltfptr[260])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1490:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V261*/ meltfptr[260]);

  /*putclosurout#38 */
  melt_assertmsg ("putclosrout#38 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V262*/ meltfptr[261])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#38 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V261*/ meltfptr[260])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V262*/ meltfptr[261])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V261*/ meltfptr[260]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V262*/ meltfptr[261]);

  MELT_LOCATION ("warmelt-hooks.melt:1501:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V263*/ meltfptr[262])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V255*/ meltfptr[254]);
  ((meltroutine_ptr_t) /*_._VALROUT___V263*/ meltfptr[262])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V255*/ meltfptr[254]);

  MELT_LOCATION ("warmelt-hooks.melt:1501:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V263*/ meltfptr[262]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_232__AT_END_OF_THIS_MELT_PASS_LAST#1",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V263*/ meltfptr[262])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1501:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V263*/ meltfptr[262]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_232__AT_END_OF_THIS_MELT_PASS_LAST#2",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V263*/ meltfptr[262])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1501:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V263*/ meltfptr[262]);

  /*putclosurout#39 */
  melt_assertmsg ("putclosrout#39 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V264*/ meltfptr[263])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#39 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V263*/ meltfptr[262])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V264*/ meltfptr[263])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V263*/ meltfptr[262]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V264*/ meltfptr[263]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_234__FINISHDECL_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V265*/ meltfptr[264])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_234__FINISHDECL_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V265*/
					meltfptr[264]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V265*/ meltfptr[264]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V266*/ meltfptr[265]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V265*/ meltfptr[264]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V265*/ meltfptr[264],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V267*/ meltfptr[266])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V267*/
					meltfptr[266]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V268*/ meltfptr[267]);

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V267*/ meltfptr[266])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V267*/
					meltfptr[266]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V267*/ meltfptr[266])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_236__FINISHDECL_DELAYED_QUEUE @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V267*/
					meltfptr[266]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V267*/ meltfptr[266]);

  MELT_LOCATION ("warmelt-hooks.melt:1522:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V267*/ meltfptr[266],
				"new static instance");

  /*putclosurout#40 */
  melt_assertmsg ("putclosrout#40 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V270*/ meltfptr[269])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#40 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V269*/ meltfptr[268])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V270*/ meltfptr[269])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V269*/ meltfptr[268]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V270*/ meltfptr[269]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_241__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V272*/ meltfptr[271])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_241__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V272*/
					meltfptr[271]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V272*/ meltfptr[271]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V273*/ meltfptr[272]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_243 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V274*/ meltfptr[273])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_243 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V274*/
					meltfptr[273]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V274*/ meltfptr[273]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V229*/ meltfptr[228]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_243 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V274*/ meltfptr[273])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_243 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V274*/
					meltfptr[273]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V274*/ meltfptr[273]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_TREE))));

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V274*/ meltfptr[273]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V274*/ meltfptr[273],
				"new static instance");

  /*putupl#10 */
  melt_assertmsg ("putupl #10 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V275*/ meltfptr[274])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #10 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V275*/
					  meltfptr[274]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V275*/ meltfptr[274]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V274*/ meltfptr[273]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V275*/ meltfptr[274]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_241__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V272*/ meltfptr[271])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_241__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V272*/
					meltfptr[271]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V272*/ meltfptr[271]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V275*/ meltfptr[274]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V276*/ meltfptr[275]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_241__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V272*/ meltfptr[271])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_241__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V272*/
					meltfptr[271]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V272*/ meltfptr[271]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V276*/ meltfptr[275]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_241__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V272*/ meltfptr[271])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_241__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V272*/
					meltfptr[271]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V272*/ meltfptr[271]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V272*/ meltfptr[271]);

  MELT_LOCATION ("warmelt-hooks.melt:1568:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V272*/ meltfptr[271],
				"new static instance");

  /*put data in hook HOOK_FINISH_DECL */
  melt_assertmsg ("puthookdata checkhook HOOK_FINISH_DECL",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V271*/ meltfptr[270])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V271*/ meltfptr[270])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V272*/ meltfptr[271]);

  /*put inside hook HOOK_FINISH_DECL */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V271*/ meltfptr[270])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V271*/
				  meltfptr[270]));
  ((melthook_ptr_t) /*_._VALHOOK___V271*/ meltfptr[270])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]);

  /*put inside hook HOOK_FINISH_DECL */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V271*/ meltfptr[270])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V271*/
				  meltfptr[270]));
  ((melthook_ptr_t) /*_._VALHOOK___V271*/ meltfptr[270])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_FINISH_DECL */
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V271*/ meltfptr[270])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_FINISH_DECL", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V271*/
				  meltfptr[270]));
  ((melthook_ptr_t) /*_._VALHOOK___V271*/ meltfptr[270])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_FINISH_DECL */
  meltgc_touch ( /*_._VALHOOK___V271*/ meltfptr[270]);

  MELT_LOCATION ("warmelt-hooks.melt:1599:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V277*/ meltfptr[276])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V267*/ meltfptr[266]);
  ((meltroutine_ptr_t) /*_._VALROUT___V277*/ meltfptr[276])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]);

  MELT_LOCATION ("warmelt-hooks.melt:1599:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V277*/ meltfptr[276]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_246__REGISTER_FINISH_DECL_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V277*/ meltfptr[276])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1599:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V277*/ meltfptr[276]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_246__REGISTER_FINISH_DECL_FIRST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V277*/ meltfptr[276])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1599:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V277*/ meltfptr[276])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V270*/ meltfptr[269]);
  ((meltroutine_ptr_t) /*_._VALROUT___V277*/ meltfptr[276])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V270*/ meltfptr[269]);

  MELT_LOCATION ("warmelt-hooks.melt:1599:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V277*/ meltfptr[276]);

  /*putclosurout#41 */
  melt_assertmsg ("putclosrout#41 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V278*/ meltfptr[277])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#41 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V277*/ meltfptr[276])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V278*/ meltfptr[277])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V277*/ meltfptr[276]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V278*/ meltfptr[277]);

  MELT_LOCATION ("warmelt-hooks.melt:1622:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V279*/ meltfptr[278])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V267*/ meltfptr[266]);
  ((meltroutine_ptr_t) /*_._VALROUT___V279*/ meltfptr[278])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V267*/ meltfptr[266]);

  MELT_LOCATION ("warmelt-hooks.melt:1622:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V279*/ meltfptr[278]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_248__REGISTER_FINISH_DECL_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V279*/ meltfptr[278])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1622:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V279*/ meltfptr[278]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_248__REGISTER_FINISH_DECL_LAST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V279*/ meltfptr[278])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1622:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V279*/ meltfptr[278])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALCLO___V270*/ meltfptr[269]);
  ((meltroutine_ptr_t) /*_._VALROUT___V279*/ meltfptr[278])->tabval[3] =
    (melt_ptr_t) ( /*_._VALCLO___V270*/ meltfptr[269]);

  MELT_LOCATION ("warmelt-hooks.melt:1622:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V279*/ meltfptr[278]);

  /*putclosurout#42 */
  melt_assertmsg ("putclosrout#42 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V280*/ meltfptr[279])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#42 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V279*/ meltfptr[278])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V280*/ meltfptr[279])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V279*/ meltfptr[278]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V280*/ meltfptr[279]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_250__PASS_EXECUTION_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V281*/ meltfptr[280])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_250__PASS_EXECUTION_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V281*/ meltfptr[280]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V281*/ meltfptr[280]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V282*/ meltfptr[281]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V281*/ meltfptr[280]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V281*/ meltfptr[280],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V283*/ meltfptr[282]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V284*/ meltfptr[283]);

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V283*/ meltfptr[282]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]))->obj_vartab[2] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_252__PASS_EXECUTION_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V283*/ meltfptr[282]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]))->obj_vartab[3] =
    (melt_ptr_t) (
		    ( /*nil */ NULL));

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V283*/ meltfptr[282]);

  MELT_LOCATION ("warmelt-hooks.melt:1655:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V283*/ meltfptr[282],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_255__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V286*/ meltfptr[285])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_255__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V286*/
					meltfptr[285]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V286*/ meltfptr[285]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V287*/ meltfptr[286]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_257__PASSNAME @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V289*/ meltfptr[288])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_257__PASSNAME @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V289*/
					meltfptr[288]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V289*/ meltfptr[288]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V290*/ meltfptr[289]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V289*/ meltfptr[288]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V289*/ meltfptr[288],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_259 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V288*/ meltfptr[287])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_259 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V288*/
					meltfptr[287]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V288*/ meltfptr[287]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V289*/ meltfptr[288]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_259 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V288*/ meltfptr[287])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_259 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V288*/
					meltfptr[287]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V288*/ meltfptr[287]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_CSTRING))));

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V288*/ meltfptr[287]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V288*/ meltfptr[287],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_260__PASSNUM @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V292*/ meltfptr[291])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_260__PASSNUM @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V292*/
					meltfptr[291]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V292*/ meltfptr[291]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V293*/ meltfptr[292]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V292*/ meltfptr[291]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V292*/ meltfptr[291],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_262 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V291*/ meltfptr[290])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_262 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V291*/
					meltfptr[290]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V291*/ meltfptr[290]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V292*/ meltfptr[291]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_262 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V291*/ meltfptr[290])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_262 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V291*/
					meltfptr[290]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V291*/ meltfptr[290]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_4 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_5 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V291*/ meltfptr[290]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V291*/ meltfptr[290],
				"new static instance");

  /*putupl#11 */
  melt_assertmsg ("putupl #11 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V294*/ meltfptr[293])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #11 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V294*/
					  meltfptr[293]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V294*/ meltfptr[293]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V288*/ meltfptr[287]);

  /*putupl#12 */
  melt_assertmsg ("putupl #12 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V294*/ meltfptr[293])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #12 checkoff",
		  (1 >= 0
		   && 1 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V294*/
					  meltfptr[293]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V294*/ meltfptr[293]))->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V291*/ meltfptr[290]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V294*/ meltfptr[293]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_255__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V286*/ meltfptr[285])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_255__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V286*/
					meltfptr[285]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V286*/ meltfptr[285]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V294*/ meltfptr[293]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V295*/ meltfptr[294]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_255__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V286*/ meltfptr[285])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_255__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V286*/
					meltfptr[285]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V286*/ meltfptr[285]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V295*/ meltfptr[294]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_255__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V286*/ meltfptr[285])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_255__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V286*/
					meltfptr[285]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V286*/ meltfptr[285]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V286*/ meltfptr[285]);

  MELT_LOCATION ("warmelt-hooks.melt:1694:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V286*/ meltfptr[285],
				"new static instance");

  /*put data in hook HOOK_PASS_EXECUTION */
  melt_assertmsg ("puthookdata checkhook HOOK_PASS_EXECUTION",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V285*/ meltfptr[284])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V285*/ meltfptr[284])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V286*/ meltfptr[285]);

  /*put inside hook HOOK_PASS_EXECUTION */
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V285*/ meltfptr[284])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V285*/
				  meltfptr[284]));
  ((melthook_ptr_t) /*_._VALHOOK___V285*/ meltfptr[284])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]);

  /*put inside hook HOOK_PASS_EXECUTION */
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V285*/ meltfptr[284])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V285*/
				  meltfptr[284]));
  ((melthook_ptr_t) /*_._VALHOOK___V285*/ meltfptr[284])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_PASS_EXECUTION */
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V285*/ meltfptr[284])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_PASS_EXECUTION", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V285*/
				  meltfptr[284]));
  ((melthook_ptr_t) /*_._VALHOOK___V285*/ meltfptr[284])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_PASS_EXECUTION */
  meltgc_touch ( /*_._VALHOOK___V285*/ meltfptr[284]);

  MELT_LOCATION ("warmelt-hooks.melt:1734:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V296*/ meltfptr[295])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V283*/ meltfptr[282]);
  ((meltroutine_ptr_t) /*_._VALROUT___V296*/ meltfptr[295])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]);

  MELT_LOCATION ("warmelt-hooks.melt:1734:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V296*/ meltfptr[295]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_265__REGISTER_PASS_EXECUTION_FIRST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V296*/ meltfptr[295])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1734:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V296*/ meltfptr[295]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_265__REGISTER_PASS_EXECUTION_FIRST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V296*/ meltfptr[295])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1734:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V296*/ meltfptr[295]);

  /*putclosurout#43 */
  melt_assertmsg ("putclosrout#43 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V297*/ meltfptr[296])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#43 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V296*/ meltfptr[295])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V297*/ meltfptr[296])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V296*/ meltfptr[295]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V297*/ meltfptr[296]);

  MELT_LOCATION ("warmelt-hooks.melt:1755:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V298*/ meltfptr[297])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V283*/ meltfptr[282]);
  ((meltroutine_ptr_t) /*_._VALROUT___V298*/ meltfptr[297])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V283*/ meltfptr[282]);

  MELT_LOCATION ("warmelt-hooks.melt:1755:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V298*/ meltfptr[297]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_267__REGISTER_PASS_EXECUTION_LAST#1",
       NULL != ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]));
  ((meltroutine_ptr_t) /*_._VALROUT___V298*/ meltfptr[297])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  MELT_LOCATION ("warmelt-hooks.melt:1755:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V298*/ meltfptr[297]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_267__REGISTER_PASS_EXECUTION_LAST#2",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V298*/ meltfptr[297])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:1755:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V298*/ meltfptr[297]);

  /*putclosurout#44 */
  melt_assertmsg ("putclosrout#44 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V299*/ meltfptr[298])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#44 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V298*/ meltfptr[297])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V299*/ meltfptr[298])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V298*/ meltfptr[297]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V299*/ meltfptr[298]);

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_270__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V301*/ meltfptr[300])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_270__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V301*/
					meltfptr[300]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V301*/ meltfptr[300]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V302*/ meltfptr[301]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V303*/ meltfptr[302]);

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_270__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V301*/ meltfptr[300])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_270__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V301*/
					meltfptr[300]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V301*/ meltfptr[300]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V303*/ meltfptr[302]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V304*/ meltfptr[303]);

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_270__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V301*/ meltfptr[300])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_270__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V301*/
					meltfptr[300]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V301*/ meltfptr[300]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V304*/ meltfptr[303]);

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_270__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V301*/ meltfptr[300])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_270__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V301*/
					meltfptr[300]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V301*/ meltfptr[300]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V301*/ meltfptr[300]);

  MELT_LOCATION ("warmelt-hooks.melt:1779:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V301*/ meltfptr[300],
				"new static instance");

  /*put data in hook HOOK_GIMPLE_GATE */
  melt_assertmsg ("puthookdata checkhook HOOK_GIMPLE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V300*/ meltfptr[299])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V300*/ meltfptr[299])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V301*/ meltfptr[300]);

  /*put inside hook HOOK_GIMPLE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V300*/ meltfptr[299])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V300*/
				  meltfptr[299]));
  ((melthook_ptr_t) /*_._VALHOOK___V300*/ meltfptr[299])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_GIMPLE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V300*/ meltfptr[299])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V300*/
				  meltfptr[299]));
  ((melthook_ptr_t) /*_._VALHOOK___V300*/ meltfptr[299])->tabval[1] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_GIMPLE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V300*/ meltfptr[299])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V300*/
				  meltfptr[299]));
  ((melthook_ptr_t) /*_._VALHOOK___V300*/ meltfptr[299])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_GCC_GIMPLE_PASS__V13*/ meltfptr[12]);

  /*put inside hook HOOK_GIMPLE_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V300*/ meltfptr[299])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_GATE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V300*/
				  meltfptr[299]));
  ((melthook_ptr_t) /*_._VALHOOK___V300*/ meltfptr[299])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*touch:HOOK_GIMPLE_GATE */
  meltgc_touch ( /*_._VALHOOK___V300*/ meltfptr[299]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_274__INITIAL_SYSTEM_DATA @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V305*/ meltfptr[304])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_274__INITIAL_SYSTEM_DATA @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V305*/
					meltfptr[304]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V305*/ meltfptr[304]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V306*/ meltfptr[305]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V305*/ meltfptr[304]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V305*/ meltfptr[304],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_276__CLASS_GCC_GIMPLE_PASS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V307*/ meltfptr[306])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_276__CLASS_GCC_GIMPLE_PASS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V307*/
					meltfptr[306]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V307*/ meltfptr[306]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V308*/ meltfptr[307]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V307*/ meltfptr[306]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V307*/ meltfptr[306],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_278__CLASS_GCC_PASS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V309*/ meltfptr[308])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_278__CLASS_GCC_PASS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V309*/
					meltfptr[308]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V309*/ meltfptr[308]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V310*/ meltfptr[309]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V309*/ meltfptr[308]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V309*/ meltfptr[308],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_281__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V312*/ meltfptr[311])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_281__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V312*/
					meltfptr[311]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V312*/ meltfptr[311]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V313*/ meltfptr[312]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V314*/ meltfptr[313]);

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_281__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V312*/ meltfptr[311])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_281__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V312*/
					meltfptr[311]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V312*/ meltfptr[311]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V314*/ meltfptr[313]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V315*/ meltfptr[314]);

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_281__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V312*/ meltfptr[311])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_281__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V312*/
					meltfptr[311]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V312*/ meltfptr[311]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V315*/ meltfptr[314]);

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_281__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V312*/ meltfptr[311])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_281__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V312*/
					meltfptr[311]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V312*/ meltfptr[311]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V312*/ meltfptr[311]);

  MELT_LOCATION ("warmelt-hooks.melt:1843:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V312*/ meltfptr[311],
				"new static instance");

  /*put data in hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookdata checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V312*/ meltfptr[311]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[2] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_GIMPLE_PASS__V13*/ meltfptr[12]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[4] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*put inside hook HOOK_GIMPLE_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V311*/ meltfptr[310])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_GIMPLE_EXECUTE", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V311*/
				  meltfptr[310]));
  ((melthook_ptr_t) /*_._VALHOOK___V311*/ meltfptr[310])->tabval[5] =
    (melt_ptr_t) ( /*_._VALCLO___V258*/ meltfptr[257]);

  /*touch:HOOK_GIMPLE_EXECUTE */
  meltgc_touch ( /*_._VALHOOK___V311*/ meltfptr[310]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_285__CLASS_SYSTEM_DATA @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V316*/ meltfptr[315])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_285__CLASS_SYSTEM_DATA @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V316*/
					meltfptr[315]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V316*/ meltfptr[315]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V317*/ meltfptr[316]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V316*/ meltfptr[315]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V316*/ meltfptr[315],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_288__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V319*/ meltfptr[318])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_288__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V319*/
					meltfptr[318]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V319*/ meltfptr[318]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V320*/ meltfptr[319]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V321*/ meltfptr[320]);

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_288__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V319*/ meltfptr[318])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_288__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V319*/
					meltfptr[318]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V319*/ meltfptr[318]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V321*/ meltfptr[320]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V322*/ meltfptr[321]);

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_288__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V319*/ meltfptr[318])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_288__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V319*/
					meltfptr[318]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V319*/ meltfptr[318]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V322*/ meltfptr[321]);

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_288__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V319*/ meltfptr[318])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_288__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V319*/
					meltfptr[318]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V319*/ meltfptr[318]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V319*/ meltfptr[318]);

  MELT_LOCATION ("warmelt-hooks.melt:1910:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V319*/ meltfptr[318],
				"new static instance");

  /*put data in hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookdata checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V319*/ meltfptr[318]);

  /*put inside hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V318*/
				  meltfptr[317]));
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V318*/
				  meltfptr[317]));
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14]);

  /*put inside hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V318*/
				  meltfptr[317]));
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_GCC_RTL_PASS__V16*/ meltfptr[15]);

  /*put inside hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V318*/
				  meltfptr[317]));
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*put inside hook HOOK_RTL_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V318*/ meltfptr[317])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_GATE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V318*/
				  meltfptr[317]));
  ((melthook_ptr_t) /*_._VALHOOK___V318*/ meltfptr[317])->tabval[4] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*touch:HOOK_RTL_GATE */
  meltgc_touch ( /*_._VALHOOK___V318*/ meltfptr[317]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_292__CLASS_GCC_RTL_PASS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V323*/ meltfptr[322])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_292__CLASS_GCC_RTL_PASS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V323*/
					meltfptr[322]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V323*/ meltfptr[322]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V324*/ meltfptr[323]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V323*/ meltfptr[322]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V323*/ meltfptr[322],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_295__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V326*/ meltfptr[325])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_295__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V326*/
					meltfptr[325]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V326*/ meltfptr[325]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V327*/ meltfptr[326]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V328*/ meltfptr[327]);

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_295__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V326*/ meltfptr[325])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_295__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V326*/
					meltfptr[325]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V326*/ meltfptr[325]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V328*/ meltfptr[327]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V329*/ meltfptr[328]);

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_295__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V326*/ meltfptr[325])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_295__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V326*/
					meltfptr[325]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V326*/ meltfptr[325]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V329*/ meltfptr[328]);

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_295__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V326*/ meltfptr[325])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_295__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V326*/
					meltfptr[325]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V326*/ meltfptr[325]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V326*/ meltfptr[325]);

  MELT_LOCATION ("warmelt-hooks.melt:1965:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V326*/ meltfptr[325],
				"new static instance");

  /*put data in hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookdata checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V326*/ meltfptr[325]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_GCC_RTL_PASS__V16*/ meltfptr[15]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[4] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_RTL_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V325*/ meltfptr[324])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_RTL_EXECUTE", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V325*/
				  meltfptr[324]));
  ((melthook_ptr_t) /*_._VALHOOK___V325*/ meltfptr[324])->tabval[5] =
    (melt_ptr_t) ( /*_._VALCLO___V258*/ meltfptr[257]);

  /*touch:HOOK_RTL_EXECUTE */
  meltgc_touch ( /*_._VALHOOK___V325*/ meltfptr[324]);

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_300__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V331*/ meltfptr[330])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_300__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V331*/
					meltfptr[330]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V331*/ meltfptr[330]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V332*/ meltfptr[331]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V333*/ meltfptr[332]);

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_300__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V331*/ meltfptr[330])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_300__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V331*/
					meltfptr[330]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V331*/ meltfptr[330]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V333*/ meltfptr[332]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V334*/ meltfptr[333]);

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_300__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V331*/ meltfptr[330])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_300__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V331*/
					meltfptr[330]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V331*/ meltfptr[330]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V334*/ meltfptr[333]);

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_300__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V331*/ meltfptr[330])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_300__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V331*/
					meltfptr[330]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V331*/ meltfptr[330]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V331*/ meltfptr[330]);

  MELT_LOCATION ("warmelt-hooks.melt:2028:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V331*/ meltfptr[330],
				"new static instance");

  /*put data in hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookdata checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V331*/ meltfptr[330]);

  /*put inside hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V330*/
				  meltfptr[329]));
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V330*/
				  meltfptr[329]));
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14]);

  /*put inside hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V330*/
				  meltfptr[329]));
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_GCC_SIMPLE_IPA_PASS__V17*/ meltfptr[16]);

  /*put inside hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V330*/
				  meltfptr[329]));
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*put inside hook HOOK_SIMPLE_IPA_GATE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V330*/ meltfptr[329])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_GATE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V330*/
				  meltfptr[329]));
  ((melthook_ptr_t) /*_._VALHOOK___V330*/ meltfptr[329])->tabval[4] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*touch:HOOK_SIMPLE_IPA_GATE */
  meltgc_touch ( /*_._VALHOOK___V330*/ meltfptr[329]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_304__CLASS_GCC_SIMPLE_IPA_PASS @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V335*/ meltfptr[334])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_304__CLASS_GCC_SIMPLE_IPA_PASS @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V335*/ meltfptr[334]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V335*/ meltfptr[334]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V336*/ meltfptr[335]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V335*/ meltfptr[334]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V335*/ meltfptr[334],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_307__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V338*/ meltfptr[337])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_307__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V338*/
					meltfptr[337]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V338*/ meltfptr[337]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V339*/ meltfptr[338]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V340*/ meltfptr[339]);

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_307__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V338*/ meltfptr[337])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_307__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V338*/
					meltfptr[337]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V338*/ meltfptr[337]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V340*/ meltfptr[339]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V341*/ meltfptr[340]);

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_307__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V338*/ meltfptr[337])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_307__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V338*/
					meltfptr[337]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V338*/ meltfptr[337]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V341*/ meltfptr[340]);

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_307__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V338*/ meltfptr[337])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_307__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V338*/
					meltfptr[337]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V338*/ meltfptr[337]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_5 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_6 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V338*/ meltfptr[337]);

  MELT_LOCATION ("warmelt-hooks.melt:2083:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V338*/ meltfptr[337],
				"new static instance");

  /*put data in hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookdata checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V338*/ meltfptr[337]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[0] =
    (melt_ptr_t) ( /*_.INITIAL_SYSTEM_DATA__V12*/ meltfptr[11]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_SYSTEM_DATA__V15*/ meltfptr[14]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_GCC_SIMPLE_IPA_PASS__V17*/ meltfptr[16]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_GCC_PASS__V14*/ meltfptr[13]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[4] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_SIMPLE_IPA_EXECUTE */
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V337*/ meltfptr[336])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_SIMPLE_IPA_EXECUTE", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V337*/
				  meltfptr[336]));
  ((melthook_ptr_t) /*_._VALHOOK___V337*/ meltfptr[336])->tabval[5] =
    (melt_ptr_t) ( /*_._VALCLO___V258*/ meltfptr[257]);

  /*touch:HOOK_SIMPLE_IPA_EXECUTE */
  meltgc_touch ( /*_._VALHOOK___V337*/ meltfptr[336]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V342*/ meltfptr[341])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_311__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V342*/ meltfptr[341]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V342*/ meltfptr[341]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V343*/ meltfptr[342]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V342*/ meltfptr[341]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V342*/ meltfptr[341],
				"new static instance");

 /*_.MAKE_LIST__V345*/ meltfptr[344] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
 /*_.MAKE_LIST__V346*/ meltfptr[345] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
  MELT_LOCATION ("warmelt-hooks.melt:2150:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V344*/ meltfptr[343]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V347*/ meltfptr[346]);

  MELT_LOCATION ("warmelt-hooks.melt:2150:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#2",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#2",
     (2 >= 0
      && 2 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V344*/ meltfptr[343]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V345*/ meltfptr[344]);

  MELT_LOCATION ("warmelt-hooks.melt:2150:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#3",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dobj_313__ATTRIBUTE_DEFINER_DELAYED_QUEUE @#3",
     (3 >= 0
      && 3 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V344*/ meltfptr[343]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V346*/ meltfptr[345]);

  MELT_LOCATION ("warmelt-hooks.melt:2150:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V344*/ meltfptr[343]);

  MELT_LOCATION ("warmelt-hooks.melt:2150:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V344*/ meltfptr[343],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_316__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V349*/ meltfptr[348])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_316__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V349*/
					meltfptr[348]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V349*/ meltfptr[348]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V350*/ meltfptr[349]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_318__DECL @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V352*/ meltfptr[351])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_318__DECL @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V352*/
					meltfptr[351]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V352*/ meltfptr[351]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V353*/ meltfptr[352]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V352*/ meltfptr[351]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V352*/ meltfptr[351],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_320 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V351*/ meltfptr[350])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_320 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V351*/
					meltfptr[350]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V351*/ meltfptr[350]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V352*/ meltfptr[351]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_320 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V351*/ meltfptr[350])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_320 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V351*/
					meltfptr[350]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V351*/ meltfptr[350]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_TREE))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V351*/ meltfptr[350]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V351*/ meltfptr[350],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_321__NAME @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V355*/ meltfptr[354])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_321__NAME @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V355*/
					meltfptr[354]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V355*/ meltfptr[354]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V356*/ meltfptr[355]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V355*/ meltfptr[354]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V355*/ meltfptr[354],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_323 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V354*/ meltfptr[353])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_323 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V354*/
					meltfptr[353]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V354*/ meltfptr[353]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V355*/ meltfptr[354]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_323 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V354*/ meltfptr[353])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_323 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V354*/
					meltfptr[353]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V354*/ meltfptr[353]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_TREE))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V354*/ meltfptr[353]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V354*/ meltfptr[353],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_324__ATTRSEQ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V358*/ meltfptr[357])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_324__ATTRSEQ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V358*/
					meltfptr[357]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V358*/ meltfptr[357]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V359*/ meltfptr[358]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V358*/ meltfptr[357]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V358*/ meltfptr[357],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_326 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V357*/ meltfptr[356])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_326 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V357*/
					meltfptr[356]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V357*/ meltfptr[356]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V358*/ meltfptr[357]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_326 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V357*/ meltfptr[356])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_326 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V357*/
					meltfptr[356]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V357*/ meltfptr[356]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VALUE))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V357*/ meltfptr[356]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V357*/ meltfptr[356],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_327__FILELOC @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V361*/ meltfptr[360])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_327__FILELOC @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V361*/
					meltfptr[360]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V361*/ meltfptr[360]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V362*/ meltfptr[361]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V361*/ meltfptr[360]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V361*/ meltfptr[360],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_329 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V360*/ meltfptr[359])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_329 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V360*/
					meltfptr[359]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V360*/ meltfptr[359]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V361*/ meltfptr[360]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_329 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V360*/ meltfptr[359])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_329 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V360*/
					meltfptr[359]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V360*/ meltfptr[359]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_CSTRING))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V360*/ meltfptr[359]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V360*/ meltfptr[359],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_330 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V363*/ meltfptr[362])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_330 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V363*/
					meltfptr[362]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V363*/ meltfptr[362]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V38*/ meltfptr[37]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_330 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V363*/ meltfptr[362])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_330 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V363*/
					meltfptr[362]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V363*/ meltfptr[362]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V363*/ meltfptr[362]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V363*/ meltfptr[362],
				"new static instance");

  /*putupl#13 */
  melt_assertmsg ("putupl #13 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V364*/ meltfptr[363])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #13 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V364*/
					  meltfptr[363]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V364*/ meltfptr[363]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V351*/ meltfptr[350]);

  /*putupl#14 */
  melt_assertmsg ("putupl #14 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V364*/ meltfptr[363])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #14 checkoff",
		  (1 >= 0
		   && 1 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V364*/
					  meltfptr[363]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V364*/ meltfptr[363]))->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V354*/ meltfptr[353]);

  /*putupl#15 */
  melt_assertmsg ("putupl #15 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V364*/ meltfptr[363])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #15 checkoff",
		  (2 >= 0
		   && 2 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V364*/
					  meltfptr[363]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V364*/ meltfptr[363]))->tabval[2] =
    (melt_ptr_t) ( /*_._VALDATA___V357*/ meltfptr[356]);

  /*putupl#16 */
  melt_assertmsg ("putupl #16 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V364*/ meltfptr[363])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #16 checkoff",
		  (3 >= 0
		   && 3 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V364*/
					  meltfptr[363]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V364*/ meltfptr[363]))->tabval[3] =
    (melt_ptr_t) ( /*_._VALDATA___V360*/ meltfptr[359]);

  /*putupl#17 */
  melt_assertmsg ("putupl #17 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V364*/ meltfptr[363])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #17 checkoff",
		  (4 >= 0
		   && 4 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V364*/
					  meltfptr[363]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V364*/ meltfptr[363]))->tabval[4] =
    (melt_ptr_t) ( /*_._VALDATA___V363*/ meltfptr[362]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V364*/ meltfptr[363]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_316__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V349*/ meltfptr[348])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_316__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V349*/
					meltfptr[348]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V349*/ meltfptr[348]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V364*/ meltfptr[363]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V365*/ meltfptr[364]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_316__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V349*/ meltfptr[348])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_316__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V349*/
					meltfptr[348]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V349*/ meltfptr[348]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V365*/ meltfptr[364]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_316__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V349*/ meltfptr[348])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_316__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V349*/
					meltfptr[348]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V349*/ meltfptr[348]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V349*/ meltfptr[348]);

  MELT_LOCATION ("warmelt-hooks.melt:2156:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V349*/ meltfptr[348],
				"new static instance");

  /*put data in hook HOOK_MELT_ATTRIBUTE_DEFINER */
  melt_assertmsg ("puthookdata checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V348*/ meltfptr[347])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V348*/ meltfptr[347])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V349*/ meltfptr[348]);

  /*put inside hook HOOK_MELT_ATTRIBUTE_DEFINER */
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V348*/ meltfptr[347])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V348*/
				  meltfptr[347]));
  ((melthook_ptr_t) /*_._VALHOOK___V348*/ meltfptr[347])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]);

  /*put inside hook HOOK_MELT_ATTRIBUTE_DEFINER */
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V348*/ meltfptr[347])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V348*/
				  meltfptr[347]));
  ((melthook_ptr_t) /*_._VALHOOK___V348*/ meltfptr[347])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_MELT_ATTRIBUTE_DEFINER */
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V348*/ meltfptr[347])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V348*/
				  meltfptr[347]));
  ((melthook_ptr_t) /*_._VALHOOK___V348*/ meltfptr[347])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_MELT_ATTRIBUTE_DEFINER */
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V348*/ meltfptr[347])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_MELT_ATTRIBUTE_DEFINER",
		  (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V348*/
				  meltfptr[347]));
  ((melthook_ptr_t) /*_._VALHOOK___V348*/ meltfptr[347])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_REFERENCE__V9*/ meltfptr[8]);

  /*touch:HOOK_MELT_ATTRIBUTE_DEFINER */
  meltgc_touch ( /*_._VALHOOK___V348*/ meltfptr[347]);

  MELT_LOCATION ("warmelt-hooks.melt:2187:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V366*/ meltfptr[365])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V344*/ meltfptr[343]);
  ((meltroutine_ptr_t) /*_._VALROUT___V366*/ meltfptr[365])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]);

  MELT_LOCATION ("warmelt-hooks.melt:2187:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V366*/ meltfptr[365]);

  /*putclosurout#45 */
  melt_assertmsg ("putclosrout#45 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V367*/ meltfptr[366])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#45 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V366*/ meltfptr[365])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V367*/ meltfptr[366])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V366*/ meltfptr[365]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V367*/ meltfptr[366]);

  MELT_LOCATION ("warmelt-hooks.melt:2196:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V368*/ meltfptr[367])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V344*/ meltfptr[343]);
  ((meltroutine_ptr_t) /*_._VALROUT___V368*/ meltfptr[367])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V344*/ meltfptr[343]);

  MELT_LOCATION ("warmelt-hooks.melt:2196:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V368*/ meltfptr[367]);

  /*putclosurout#46 */
  melt_assertmsg ("putclosrout#46 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V369*/ meltfptr[368])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#46 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V368*/ meltfptr[367])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V369*/ meltfptr[368])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V368*/ meltfptr[367]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V369*/ meltfptr[368]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_337__FINAL_EXIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V370*/ meltfptr[369])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_337__FINAL_EXIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V370*/
					meltfptr[369]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V370*/ meltfptr[369]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V371*/ meltfptr[370]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V370*/ meltfptr[369]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V370*/ meltfptr[369],
				"new static instance");

 /*_.MAKE_LIST__V373*/ meltfptr[372] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
 /*_.MAKE_LIST__V374*/ meltfptr[373] =
    (meltgc_new_list
     ((meltobject_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7])));
  MELT_LOCATION ("warmelt-hooks.melt:2208:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V372*/ meltfptr[371])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V372*/
					meltfptr[371]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V375*/ meltfptr[374]);

  MELT_LOCATION ("warmelt-hooks.melt:2208:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V372*/ meltfptr[371])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V372*/
					meltfptr[371]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V373*/ meltfptr[372]);

  MELT_LOCATION ("warmelt-hooks.melt:2208:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V372*/ meltfptr[371])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_339__FINAL_EXIT_DELAYED_QUEUE @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V372*/
					meltfptr[371]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_.MAKE_LIST__V374*/ meltfptr[373]);

  MELT_LOCATION ("warmelt-hooks.melt:2208:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V372*/ meltfptr[371]);

  MELT_LOCATION ("warmelt-hooks.melt:2208:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V372*/ meltfptr[371],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_342__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V377*/ meltfptr[376])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_342__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V377*/
					meltfptr[376]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V377*/ meltfptr[376]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V378*/ meltfptr[377]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V379*/ meltfptr[378]);

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_342__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V377*/ meltfptr[376])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_342__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V377*/
					meltfptr[376]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V377*/ meltfptr[376]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V379*/ meltfptr[378]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V380*/ meltfptr[379]);

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_342__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V377*/ meltfptr[376])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_342__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V377*/
					meltfptr[376]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V377*/ meltfptr[376]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V380*/ meltfptr[379]);

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_342__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V377*/ meltfptr[376])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_342__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V377*/
					meltfptr[376]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V377*/ meltfptr[376]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V377*/ meltfptr[376]);

  MELT_LOCATION ("warmelt-hooks.melt:2215:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V377*/ meltfptr[376],
				"new static instance");

  /*put data in hook HOOK_EXIT_FINALIZER */
  melt_assertmsg ("puthookdata checkhook HOOK_EXIT_FINALIZER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V376*/ meltfptr[375])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V376*/ meltfptr[375])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V377*/ meltfptr[376]);

  /*put inside hook HOOK_EXIT_FINALIZER */
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V376*/ meltfptr[375])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V376*/
				  meltfptr[375]));
  ((melthook_ptr_t) /*_._VALHOOK___V376*/ meltfptr[375])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_EXIT_FINALIZER */
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V376*/ meltfptr[375])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V376*/
				  meltfptr[375]));
  ((melthook_ptr_t) /*_._VALHOOK___V376*/ meltfptr[375])->tabval[1] =
    (melt_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]);

  /*put inside hook HOOK_EXIT_FINALIZER */
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V376*/ meltfptr[375])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V376*/
				  meltfptr[375]));
  ((melthook_ptr_t) /*_._VALHOOK___V376*/ meltfptr[375])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_DELAYED_QUEUE__V7*/ meltfptr[6]);

  /*put inside hook HOOK_EXIT_FINALIZER */
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V376*/ meltfptr[375])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_EXIT_FINALIZER", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V376*/
				  meltfptr[375]));
  ((melthook_ptr_t) /*_._VALHOOK___V376*/ meltfptr[375])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*touch:HOOK_EXIT_FINALIZER */
  meltgc_touch ( /*_._VALHOOK___V376*/ meltfptr[375]);

  MELT_LOCATION ("warmelt-hooks.melt:2241:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V381*/ meltfptr[380])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V372*/ meltfptr[371]);
  ((meltroutine_ptr_t) /*_._VALROUT___V381*/ meltfptr[380])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]);

  MELT_LOCATION ("warmelt-hooks.melt:2241:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V381*/ meltfptr[380]);

  /*putclosurout#47 */
  melt_assertmsg ("putclosrout#47 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V382*/ meltfptr[381])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#47 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V381*/ meltfptr[380])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V382*/ meltfptr[381])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V381*/ meltfptr[380]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V382*/ meltfptr[381]);

  MELT_LOCATION ("warmelt-hooks.melt:2249:/ initchunk");
  /*^putroutconstnotnull */
  /*putroutconstnotnull */
  melt_assertmsg ("putroutconstnotnull checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V383*/ meltfptr[382])) ==
		  MELTOBMAG_ROUTINE);
  melt_assertmsg ("putroutconstnotnull notnullconst",
		  NULL != /*_._VALDATA___V372*/ meltfptr[371]);
  ((meltroutine_ptr_t) /*_._VALROUT___V383*/ meltfptr[382])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V372*/ meltfptr[371]);

  MELT_LOCATION ("warmelt-hooks.melt:2249:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V383*/ meltfptr[382]);

  /*putclosurout#48 */
  melt_assertmsg ("putclosrout#48 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V384*/ meltfptr[383])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#48 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V383*/ meltfptr[382])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V384*/ meltfptr[383])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V383*/ meltfptr[382]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V384*/ meltfptr[383]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V385*/ meltfptr[384])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_350__AT_END_OF_THIS_MELT_PASS_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V385*/ meltfptr[384]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V385*/ meltfptr[384]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V386*/ meltfptr[385]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V385*/ meltfptr[384]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V385*/ meltfptr[384],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_352__AT_END_OF_THIS_MELT_PASS_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V387*/ meltfptr[386])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_352__AT_END_OF_THIS_MELT_PASS_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V387*/ meltfptr[386]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V387*/ meltfptr[386]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V388*/ meltfptr[387]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V387*/ meltfptr[386]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V387*/ meltfptr[386],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_354__AT_EXIT_FIRST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V389*/ meltfptr[388])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_354__AT_EXIT_FIRST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V389*/
					meltfptr[388]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V389*/ meltfptr[388]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V390*/ meltfptr[389]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V389*/ meltfptr[388]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V389*/ meltfptr[388],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_356__AT_EXIT_LAST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V391*/ meltfptr[390])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_356__AT_EXIT_LAST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V391*/
					meltfptr[390]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V391*/ meltfptr[390]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V392*/ meltfptr[391]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V391*/ meltfptr[390]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V391*/ meltfptr[390],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_358__AT_FINISH_UNIT_FIRST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V393*/ meltfptr[392])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_358__AT_FINISH_UNIT_FIRST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V393*/
					meltfptr[392]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V393*/ meltfptr[392]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V394*/ meltfptr[393]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V393*/ meltfptr[392]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V393*/ meltfptr[392],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_360__AT_FINISH_UNIT_LAST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V395*/ meltfptr[394])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_360__AT_FINISH_UNIT_LAST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V395*/
					meltfptr[394]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V395*/ meltfptr[394]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V396*/ meltfptr[395]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V395*/ meltfptr[394]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_6 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_7 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;

  melt_dbgtrace_written_object ( /*_._VALDATA___V395*/ meltfptr[394],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_362__AT_MELT_ATTRIBUTE_FIRST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V397*/ meltfptr[396])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_362__AT_MELT_ATTRIBUTE_FIRST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V397*/
					meltfptr[396]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V397*/ meltfptr[396]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V398*/ meltfptr[397]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V397*/ meltfptr[396]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V397*/ meltfptr[396],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_364__AT_MELT_ATTRIBUTE_LAST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V399*/ meltfptr[398])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_364__AT_MELT_ATTRIBUTE_LAST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V399*/
					meltfptr[398]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V399*/ meltfptr[398]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V400*/ meltfptr[399]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V399*/ meltfptr[398]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V399*/ meltfptr[398],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_366__AT_START_UNIT_FIRST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V401*/ meltfptr[400])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_366__AT_START_UNIT_FIRST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V401*/
					meltfptr[400]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V401*/ meltfptr[400]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V402*/ meltfptr[401]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V401*/ meltfptr[400]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V401*/ meltfptr[400],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_368__AT_START_UNIT_LAST @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V403*/ meltfptr[402])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_368__AT_START_UNIT_LAST @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V403*/
					meltfptr[402]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V403*/ meltfptr[402]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V404*/ meltfptr[403]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V403*/ meltfptr[402]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V403*/ meltfptr[402],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_370__HOOK_LOW_DEBUG_VALUE_AT @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V405*/ meltfptr[404])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_370__HOOK_LOW_DEBUG_VALUE_AT @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V405*/
					meltfptr[404]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V405*/ meltfptr[404]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V406*/ meltfptr[405]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V405*/ meltfptr[404]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V405*/ meltfptr[404],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_372__HOOK_OVERRIDE_GATE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V407*/ meltfptr[406])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_372__HOOK_OVERRIDE_GATE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V407*/
					meltfptr[406]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V407*/ meltfptr[406]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V408*/ meltfptr[407]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V407*/ meltfptr[406]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V407*/ meltfptr[406],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V409*/ meltfptr[408])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_374__REGISTER_ALL_IPA_PASSES_END_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V409*/ meltfptr[408]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V409*/ meltfptr[408]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V410*/ meltfptr[409]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V409*/ meltfptr[408]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V409*/ meltfptr[408],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V411*/ meltfptr[410])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_376__REGISTER_ALL_IPA_PASSES_END_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V411*/ meltfptr[410]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V411*/ meltfptr[410]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V412*/ meltfptr[411]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V411*/ meltfptr[410]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V411*/ meltfptr[410],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V413*/ meltfptr[412])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_378__REGISTER_ALL_IPA_PASSES_START_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V413*/ meltfptr[412]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V413*/ meltfptr[412]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V414*/ meltfptr[413]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V413*/ meltfptr[412]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V413*/ meltfptr[412],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V415*/ meltfptr[414])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_380__REGISTER_ALL_IPA_PASSES_START_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V415*/ meltfptr[414]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V415*/ meltfptr[414]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V416*/ meltfptr[415]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V415*/ meltfptr[414]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V415*/ meltfptr[414],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_382__REGISTER_ALL_PASSES_END_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V417*/ meltfptr[416])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_382__REGISTER_ALL_PASSES_END_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V417*/ meltfptr[416]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V417*/ meltfptr[416]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V418*/ meltfptr[417]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V417*/ meltfptr[416]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V417*/ meltfptr[416],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_384__REGISTER_ALL_PASSES_END_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V419*/ meltfptr[418])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_384__REGISTER_ALL_PASSES_END_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V419*/ meltfptr[418]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V419*/ meltfptr[418]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V420*/ meltfptr[419]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V419*/ meltfptr[418]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V419*/ meltfptr[418],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_386__REGISTER_ALL_PASSES_START_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V421*/ meltfptr[420])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_386__REGISTER_ALL_PASSES_START_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V421*/ meltfptr[420]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V421*/ meltfptr[420]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V422*/ meltfptr[421]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V421*/ meltfptr[420]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V421*/ meltfptr[420],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_388__REGISTER_ALL_PASSES_START_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V423*/ meltfptr[422])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_388__REGISTER_ALL_PASSES_START_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V423*/ meltfptr[422]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V423*/ meltfptr[422]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V424*/ meltfptr[423]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V423*/ meltfptr[422]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V423*/ meltfptr[422],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V425*/ meltfptr[424])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_390__REGISTER_EARLY_GIMPLE_PASSES_END_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V425*/ meltfptr[424]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V425*/ meltfptr[424]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V426*/ meltfptr[425]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V425*/ meltfptr[424]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V425*/ meltfptr[424],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V427*/ meltfptr[426])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_392__REGISTER_EARLY_GIMPLE_PASSES_END_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V427*/ meltfptr[426]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V427*/ meltfptr[426]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V428*/ meltfptr[427]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V427*/ meltfptr[426]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V427*/ meltfptr[426],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V429*/ meltfptr[428])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_394__REGISTER_EARLY_GIMPLE_PASSES_START_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V429*/ meltfptr[428]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V429*/ meltfptr[428]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V430*/ meltfptr[429]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V429*/ meltfptr[428]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V429*/ meltfptr[428],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V431*/ meltfptr[430])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_396__REGISTER_EARLY_GIMPLE_PASSES_START_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V431*/ meltfptr[430]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V431*/ meltfptr[430]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V432*/ meltfptr[431]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V431*/ meltfptr[430]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V431*/ meltfptr[430],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_398__REGISTER_FINISH_DECL_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V433*/ meltfptr[432])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_398__REGISTER_FINISH_DECL_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V433*/ meltfptr[432]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V433*/ meltfptr[432]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V434*/ meltfptr[433]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V433*/ meltfptr[432]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V433*/ meltfptr[432],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_400__REGISTER_FINISH_DECL_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V435*/ meltfptr[434])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_400__REGISTER_FINISH_DECL_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V435*/ meltfptr[434]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V435*/ meltfptr[434]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V436*/ meltfptr[435]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V435*/ meltfptr[434]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V435*/ meltfptr[434],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_402__REGISTER_FINISH_TYPE_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V437*/ meltfptr[436])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_402__REGISTER_FINISH_TYPE_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V437*/ meltfptr[436]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V437*/ meltfptr[436]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V438*/ meltfptr[437]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V437*/ meltfptr[436]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V437*/ meltfptr[436],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_404__REGISTER_FINISH_TYPE_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V439*/ meltfptr[438])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_404__REGISTER_FINISH_TYPE_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V439*/ meltfptr[438]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V439*/ meltfptr[438]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V440*/ meltfptr[439]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V439*/ meltfptr[438]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V439*/ meltfptr[438],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_406__REGISTER_OVERRIDE_GATE_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V441*/ meltfptr[440])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_406__REGISTER_OVERRIDE_GATE_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V441*/ meltfptr[440]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V441*/ meltfptr[440]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V442*/ meltfptr[441]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V441*/ meltfptr[440]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V441*/ meltfptr[440],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_408__REGISTER_OVERRIDE_GATE_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V443*/ meltfptr[442])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_408__REGISTER_OVERRIDE_GATE_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V443*/ meltfptr[442]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V443*/ meltfptr[442]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V444*/ meltfptr[443]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V443*/ meltfptr[442]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V443*/ meltfptr[442],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_410__REGISTER_PASS_EXECUTION_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V445*/ meltfptr[444])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_410__REGISTER_PASS_EXECUTION_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V445*/ meltfptr[444]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V445*/ meltfptr[444]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V446*/ meltfptr[445]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V445*/ meltfptr[444]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V445*/ meltfptr[444],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_412__REGISTER_PASS_EXECUTION_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V447*/ meltfptr[446])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_412__REGISTER_PASS_EXECUTION_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V447*/ meltfptr[446]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V447*/ meltfptr[446]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V448*/ meltfptr[447]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V447*/ meltfptr[446]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V447*/ meltfptr[446],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_414__REGISTER_PRE_GENERICIZE_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V449*/ meltfptr[448])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_414__REGISTER_PRE_GENERICIZE_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V449*/ meltfptr[448]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V449*/ meltfptr[448]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V450*/ meltfptr[449]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V449*/ meltfptr[448]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V449*/ meltfptr[448],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_416__REGISTER_PRE_GENERICIZE_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V451*/ meltfptr[450])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_416__REGISTER_PRE_GENERICIZE_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V451*/ meltfptr[450]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V451*/ meltfptr[450]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V452*/ meltfptr[451]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V451*/ meltfptr[450]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V451*/ meltfptr[450],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V453*/ meltfptr[452])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_418__UNREGISTER_OVERRIDE_GATE_FIRST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V453*/ meltfptr[452]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V453*/ meltfptr[452]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V454*/ meltfptr[453]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V453*/ meltfptr[452]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V453*/ meltfptr[452],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_420__UNREGISTER_OVERRIDE_GATE_LAST @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V455*/ meltfptr[454])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_420__UNREGISTER_OVERRIDE_GATE_LAST @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V455*/ meltfptr[454]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V455*/ meltfptr[454]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V456*/ meltfptr[455]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V455*/ meltfptr[454]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V455*/ meltfptr[454],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2323:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V457*/ meltfptr[456]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_422__MELT_INVOKE_INPUT_CALLBACKS#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V457*/ meltfptr[456])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2323:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V457*/ meltfptr[456]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_422__MELT_INVOKE_INPUT_CALLBACKS#1",
       NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V457*/ meltfptr[456])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:2323:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V457*/ meltfptr[456]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_422__MELT_INVOKE_INPUT_CALLBACKS#2",
       NULL != ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]));
  ((meltroutine_ptr_t) /*_._VALROUT___V457*/ meltfptr[456])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]);

  MELT_LOCATION ("warmelt-hooks.melt:2323:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V457*/ meltfptr[456]);

  /*putclosurout#49 */
  melt_assertmsg ("putclosrout#49 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V458*/ meltfptr[457])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#49 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V457*/ meltfptr[456])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V458*/ meltfptr[457])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V457*/ meltfptr[456]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V458*/ meltfptr[457]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_424__CLASS_INPUT_CHANNEL_HANDLER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V459*/ meltfptr[458])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_424__CLASS_INPUT_CHANNEL_HANDLER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V459*/ meltfptr[458]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V459*/ meltfptr[458]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V460*/ meltfptr[459]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V459*/ meltfptr[458]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V459*/ meltfptr[458],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_427__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V462*/ meltfptr[461])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_427__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V462*/
					meltfptr[461]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V462*/ meltfptr[461]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V463*/ meltfptr[462]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_429__DELAYMS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V465*/ meltfptr[464])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_429__DELAYMS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V465*/
					meltfptr[464]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V465*/ meltfptr[464]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V466*/ meltfptr[465]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V465*/ meltfptr[464]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V465*/ meltfptr[464],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_431 @#0",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V464*/ meltfptr[463])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_431 @#0",
		  (0 >= 0
		   && 0 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V464*/
					meltfptr[463]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V464*/ meltfptr[463]))->obj_vartab[0] =
    (melt_ptr_t) (
  /*_._VALDATA___V465*/ meltfptr[464]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_431 @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V464*/ meltfptr[463])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_431 @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V464*/
					meltfptr[463]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V464*/ meltfptr[463]))->obj_vartab[1] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_LONG))));

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V464*/ meltfptr[463]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V464*/ meltfptr[463],
				"new static instance");

  /*putupl#18 */
  melt_assertmsg ("putupl #18 checktup",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALTUP___V467*/ meltfptr[466])) ==
		  MELTOBMAG_MULTIPLE);
  melt_assertmsg ("putupl #18 checkoff",
		  (0 >= 0
		   && 0 <
		   melt_multiple_length ((melt_ptr_t)
					 ( /*_._VALTUP___V467*/
					  meltfptr[466]))));
  ((meltmultiple_ptr_t) ( /*_._VALTUP___V467*/ meltfptr[466]))->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V464*/ meltfptr[463]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V467*/ meltfptr[466]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_427__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V462*/ meltfptr[461])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_427__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V462*/
					meltfptr[461]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V462*/ meltfptr[461]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V467*/ meltfptr[466]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V468*/ meltfptr[467]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_427__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V462*/ meltfptr[461])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_427__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V462*/
					meltfptr[461]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V462*/ meltfptr[461]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V468*/ meltfptr[467]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_427__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V462*/ meltfptr[461])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_427__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V462*/
					meltfptr[461]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V462*/ meltfptr[461]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V462*/ meltfptr[461]);

  MELT_LOCATION ("warmelt-hooks.melt:2423:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V462*/ meltfptr[461],
				"new static instance");

  /*put data in hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookdata checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V462*/ meltfptr[461]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_MULTIPLE__V19*/ meltfptr[18]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[4] =
    (melt_ptr_t) ( /*_._VALCLO___V458*/ meltfptr[457]);

  /*put inside hook HOOK_POLL_INPUTS */
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V461*/ meltfptr[460])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_POLL_INPUTS", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V461*/
				  meltfptr[460]));
  ((melthook_ptr_t) /*_._VALHOOK___V461*/ meltfptr[460])->tabval[5] =
    (melt_ptr_t) ( /*_._VALDATA___V71*/ meltfptr[70]);

  /*touch:HOOK_POLL_INPUTS */
  meltgc_touch ( /*_._VALHOOK___V461*/ meltfptr[460]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_434__DISCR_MULTIPLE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V469*/ meltfptr[468])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_434__DISCR_MULTIPLE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V469*/
					meltfptr[468]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V469*/ meltfptr[468]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V470*/ meltfptr[469]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V469*/ meltfptr[468]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V469*/ meltfptr[468],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2528:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V471*/ meltfptr[470]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_436__IS_POLLING_INPUTS#0",
		   NULL != ( /*_._VALDATA___V71*/ meltfptr[70]));
  ((meltroutine_ptr_t) /*_._VALROUT___V471*/ meltfptr[470])->tabval[0] =
    (melt_ptr_t) ( /*_._VALDATA___V71*/ meltfptr[70]);


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_7 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_8 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
  MELT_LOCATION ("warmelt-hooks.melt:2528:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V471*/ meltfptr[470]);

  /*putclosurout#50 */
  melt_assertmsg ("putclosrout#50 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V472*/ meltfptr[471])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#50 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V471*/ meltfptr[470])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V472*/ meltfptr[471])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V471*/ meltfptr[470]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V472*/ meltfptr[471]);

  MELT_LOCATION ("warmelt-hooks.melt:2538:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V473*/ meltfptr[472]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_438__EVERY_POLLING_INPUT#0",
		   NULL != ( /*_.DISCR_LIST__V8*/ meltfptr[7]));
  ((meltroutine_ptr_t) /*_._VALROUT___V473*/ meltfptr[472])->tabval[0] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  MELT_LOCATION ("warmelt-hooks.melt:2538:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V473*/ meltfptr[472]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_438__EVERY_POLLING_INPUT#1",
		   NULL !=
		   ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]));
  ((meltroutine_ptr_t) /*_._VALROUT___V473*/ meltfptr[472])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]);

  MELT_LOCATION ("warmelt-hooks.melt:2538:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V473*/ meltfptr[472]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_438__EVERY_POLLING_INPUT#2",
		   NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V473*/ meltfptr[472])->tabval[2] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2538:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V473*/ meltfptr[472]);

  /*putclosurout#51 */
  melt_assertmsg ("putclosrout#51 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V474*/ meltfptr[473])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#51 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V473*/ meltfptr[472])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V474*/ meltfptr[473])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V473*/ meltfptr[472]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V474*/ meltfptr[473]);

  MELT_LOCATION ("warmelt-hooks.melt:2562:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V475*/ meltfptr[474]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_440__GET_POLLING_INPUT#0",
		   NULL !=
		   ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]));
  ((meltroutine_ptr_t) /*_._VALROUT___V475*/ meltfptr[474])->tabval[0] =
    (melt_ptr_t) ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]);

  MELT_LOCATION ("warmelt-hooks.melt:2562:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V475*/ meltfptr[474]);

  /*putclosurout#52 */
  melt_assertmsg ("putclosrout#52 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V476*/ meltfptr[475])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#52 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V475*/ meltfptr[474])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V476*/ meltfptr[475])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V475*/ meltfptr[474]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V476*/ meltfptr[475]);

  MELT_LOCATION ("warmelt-hooks.melt:2579:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V477*/ meltfptr[476]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_442__REGISTER_INPUT_CHANNEL_HANDLER#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V477*/ meltfptr[476])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2579:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V477*/ meltfptr[476]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_442__REGISTER_INPUT_CHANNEL_HANDLER#1",
       NULL != ( /*_.DISCR_STRBUF__V20*/ meltfptr[19]));
  ((meltroutine_ptr_t) /*_._VALROUT___V477*/ meltfptr[476])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_STRBUF__V20*/ meltfptr[19]);

  MELT_LOCATION ("warmelt-hooks.melt:2579:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V477*/ meltfptr[476]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_442__REGISTER_INPUT_CHANNEL_HANDLER#2",
       NULL != ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]));
  ((meltroutine_ptr_t) /*_._VALROUT___V477*/ meltfptr[476])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_INPUT_CHANNEL_HANDLER__V18*/ meltfptr[17]);

  MELT_LOCATION ("warmelt-hooks.melt:2579:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V477*/ meltfptr[476]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_442__REGISTER_INPUT_CHANNEL_HANDLER#3",
       NULL != ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]));
  ((meltroutine_ptr_t) /*_._VALROUT___V477*/ meltfptr[476])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]);

  MELT_LOCATION ("warmelt-hooks.melt:2579:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V477*/ meltfptr[476]);

  /*putclosurout#53 */
  melt_assertmsg ("putclosrout#53 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V478*/ meltfptr[477])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#53 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V477*/ meltfptr[476])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V478*/ meltfptr[477])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V477*/ meltfptr[476]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V478*/ meltfptr[477]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_444__DISCR_STRBUF @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V479*/ meltfptr[478])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_444__DISCR_STRBUF @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V479*/
					meltfptr[478]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V479*/ meltfptr[478]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V480*/ meltfptr[479]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V479*/ meltfptr[478]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V479*/ meltfptr[478],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_446__DISCR_BUCKET_LONGS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V481*/ meltfptr[480])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_446__DISCR_BUCKET_LONGS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V481*/
					meltfptr[480]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V481*/ meltfptr[480]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V482*/ meltfptr[481]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V481*/ meltfptr[480]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V481*/ meltfptr[480],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_449__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V484*/ meltfptr[483])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_449__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V484*/
					meltfptr[483]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V484*/ meltfptr[483]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V485*/ meltfptr[484]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V486*/ meltfptr[485]);

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_449__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V484*/ meltfptr[483])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_449__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V484*/
					meltfptr[483]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V484*/ meltfptr[483]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V486*/ meltfptr[485]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V487*/ meltfptr[486]);

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_449__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V484*/ meltfptr[483])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_449__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V484*/
					meltfptr[483]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V484*/ meltfptr[483]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V487*/ meltfptr[486]);

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_449__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V484*/ meltfptr[483])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_449__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V484*/
					meltfptr[483]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V484*/ meltfptr[483]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V484*/ meltfptr[483]);

  MELT_LOCATION ("warmelt-hooks.melt:2637:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V484*/ meltfptr[483],
				"new static instance");

  /*put data in hook HOOK_HANDLE_SIGIO */
  melt_assertmsg ("puthookdata checkhook HOOK_HANDLE_SIGIO",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V483*/ meltfptr[482])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V483*/ meltfptr[482])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V484*/ meltfptr[483]);

  /*put inside hook HOOK_HANDLE_SIGIO */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGIO",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V483*/ meltfptr[482])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGIO", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V483*/
				  meltfptr[482]));
  ((melthook_ptr_t) /*_._VALHOOK___V483*/ meltfptr[482])->tabval[0] =
    (melt_ptr_t) ( /*_._VALHOOK___V461*/ meltfptr[460]);

  /*touch:HOOK_HANDLE_SIGIO */
  meltgc_touch ( /*_._VALHOOK___V483*/ meltfptr[482]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_453__EVERY_POLLING_INPUT @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V488*/ meltfptr[487])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_453__EVERY_POLLING_INPUT @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V488*/
					meltfptr[487]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V488*/ meltfptr[487]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V489*/ meltfptr[488]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V488*/ meltfptr[487]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V488*/ meltfptr[487],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_455__GET_POLLING_INPUT @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V490*/ meltfptr[489])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_455__GET_POLLING_INPUT @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V490*/
					meltfptr[489]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V490*/ meltfptr[489]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V491*/ meltfptr[490]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V490*/ meltfptr[489]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V490*/ meltfptr[489],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_457__HOOK_HANDLE_SIGIO @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V492*/ meltfptr[491])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_457__HOOK_HANDLE_SIGIO @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V492*/
					meltfptr[491]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V492*/ meltfptr[491]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V493*/ meltfptr[492]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V492*/ meltfptr[491]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V492*/ meltfptr[491],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_459__HOOK_POLL_INPUTS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V494*/ meltfptr[493])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_459__HOOK_POLL_INPUTS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V494*/
					meltfptr[493]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V494*/ meltfptr[493]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V495*/ meltfptr[494]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V494*/ meltfptr[493]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V494*/ meltfptr[493],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_461__IS_POLLING_INPUTS @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V496*/ meltfptr[495])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_461__IS_POLLING_INPUTS @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V496*/
					meltfptr[495]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V496*/ meltfptr[495]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V497*/ meltfptr[496]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V496*/ meltfptr[495]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V496*/ meltfptr[495],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_463__MELT_INVOKE_INPUT_CALLBACKS @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V498*/ meltfptr[497])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_463__MELT_INVOKE_INPUT_CALLBACKS @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V498*/ meltfptr[497]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V498*/ meltfptr[497]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V499*/ meltfptr[498]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V498*/ meltfptr[497]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V498*/ meltfptr[497],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_466__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V501*/ meltfptr[500])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_466__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V501*/
					meltfptr[500]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V501*/ meltfptr[500]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V502*/ meltfptr[501]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V503*/ meltfptr[502]);

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_466__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V501*/ meltfptr[500])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_466__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V501*/
					meltfptr[500]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V501*/ meltfptr[500]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V503*/ meltfptr[502]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V504*/ meltfptr[503]);

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_466__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V501*/ meltfptr[500])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_466__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V501*/
					meltfptr[500]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V501*/ meltfptr[500]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V504*/ meltfptr[503]);

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_466__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V501*/ meltfptr[500])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_466__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V501*/
					meltfptr[500]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V501*/ meltfptr[500]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V501*/ meltfptr[500]);

  MELT_LOCATION ("warmelt-hooks.melt:2661:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V501*/ meltfptr[500],
				"new static instance");

  /*put data in hook HOOK_HANDLE_SIGALRM */
  melt_assertmsg ("puthookdata checkhook HOOK_HANDLE_SIGALRM",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V500*/ meltfptr[499])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V500*/ meltfptr[499])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V501*/ meltfptr[500]);

  /*put inside hook HOOK_HANDLE_SIGALRM */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGALRM",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V500*/ meltfptr[499])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGALRM", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V500*/
				  meltfptr[499]));
  ((melthook_ptr_t) /*_._VALHOOK___V500*/ meltfptr[499])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_HANDLE_SIGALRM */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGALRM",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V500*/ meltfptr[499])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGALRM", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V500*/
				  meltfptr[499]));
  ((melthook_ptr_t) /*_._VALHOOK___V500*/ meltfptr[499])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21]);

  /*touch:HOOK_HANDLE_SIGALRM */
  meltgc_touch ( /*_._VALHOOK___V500*/ meltfptr[499]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_470__CLASS_ALARM_HANDLER @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V505*/ meltfptr[504])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_470__CLASS_ALARM_HANDLER @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V505*/
					meltfptr[504]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V505*/ meltfptr[504]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V506*/ meltfptr[505]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V505*/ meltfptr[504]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V505*/ meltfptr[504],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2719:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V507*/ meltfptr[506]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_472__REGISTER_ALARM_TIMER#0",
		   NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V507*/ meltfptr[506])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2719:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V507*/ meltfptr[506]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_472__REGISTER_ALARM_TIMER#1",
		   NULL != ( /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22]));
  ((meltroutine_ptr_t) /*_._VALROUT___V507*/ meltfptr[506])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22]);

  MELT_LOCATION ("warmelt-hooks.melt:2719:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V507*/ meltfptr[506]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_472__REGISTER_ALARM_TIMER#2",
		   NULL != ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]));
  ((meltroutine_ptr_t) /*_._VALROUT___V507*/ meltfptr[506])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]);

  MELT_LOCATION ("warmelt-hooks.melt:2719:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V507*/ meltfptr[506]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg ("putroutconst constnull.drout_472__REGISTER_ALARM_TIMER#3",
		   NULL != ( /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21]));
  ((meltroutine_ptr_t) /*_._VALROUT___V507*/ meltfptr[506])->tabval[3] =
    (melt_ptr_t) ( /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21]);

  MELT_LOCATION ("warmelt-hooks.melt:2719:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V507*/ meltfptr[506]);

  /*putclosurout#54 */
  melt_assertmsg ("putclosrout#54 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V508*/ meltfptr[507])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#54 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V507*/ meltfptr[506])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V508*/ meltfptr[507])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V507*/ meltfptr[506]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V508*/ meltfptr[507]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_474__DISCR_CONSTANT_INTEGER @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V509*/ meltfptr[508])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_474__DISCR_CONSTANT_INTEGER @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V509*/
					meltfptr[508]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V509*/ meltfptr[508]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V510*/ meltfptr[509]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V509*/ meltfptr[508]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V509*/ meltfptr[508],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2751:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V511*/ meltfptr[510]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_476__UNREGISTER_ALARM_TIMER#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V511*/ meltfptr[510])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2751:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V511*/ meltfptr[510]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_476__UNREGISTER_ALARM_TIMER#1",
       NULL != ( /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21]));
  ((meltroutine_ptr_t) /*_._VALROUT___V511*/ meltfptr[510])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_ALARM_HANDLER__V22*/ meltfptr[21]);

  MELT_LOCATION ("warmelt-hooks.melt:2751:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V511*/ meltfptr[510]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_476__UNREGISTER_ALARM_TIMER#2",
       NULL != ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]));
  ((meltroutine_ptr_t) /*_._VALROUT___V511*/ meltfptr[510])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]);

  MELT_LOCATION ("warmelt-hooks.melt:2751:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V511*/ meltfptr[510]);

  /*putclosurout#55 */
  melt_assertmsg ("putclosrout#55 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V512*/ meltfptr[511])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#55 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V511*/ meltfptr[510])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V512*/ meltfptr[511])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V511*/ meltfptr[510]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V512*/ meltfptr[511]);

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_479__ @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V514*/ meltfptr[513])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_479__ @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V514*/
					meltfptr[513]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V514*/ meltfptr[513]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V515*/ meltfptr[514]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V516*/ meltfptr[515]);

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_479__ @#2",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V514*/ meltfptr[513])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_479__ @#2",
		  (2 >= 0
		   && 2 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V514*/
					meltfptr[513]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V514*/ meltfptr[513]))->obj_vartab[2] =
    (melt_ptr_t) (
  /*_._VALTUP___V516*/ meltfptr[515]);

  /*touch:_INITUP_ */
  meltgc_touch ( /*_._VALTUP___V517*/ meltfptr[516]);

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_479__ @#3",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V514*/ meltfptr[513])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_479__ @#3",
		  (3 >= 0
		   && 3 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V514*/
					meltfptr[513]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V514*/ meltfptr[513]))->obj_vartab[3] =
    (melt_ptr_t) (
  /*_._VALTUP___V517*/ meltfptr[516]);

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^putslot */
  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dobj_479__ @#4",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V514*/ meltfptr[513])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dobj_479__ @#4",
		  (4 >= 0
		   && 4 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V514*/
					meltfptr[513]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V514*/ meltfptr[513]))->obj_vartab[4] =
    (melt_ptr_t) (
		    ((melt_ptr_t) (MELT_PREDEF (CTYPE_VOID))));

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^touch */
  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V514*/ meltfptr[513]);

  MELT_LOCATION ("warmelt-hooks.melt:2783:/ initchunk");
  /*^touchobj */

  melt_dbgtrace_written_object ( /*_._VALDATA___V514*/ meltfptr[513],
				"new static instance");

  /*put data in hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookdata checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->hookdata =
    (melt_ptr_t) ( /*_._VALDATA___V514*/ meltfptr[513]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (0) >= 0
		  && (0) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (1) >= 0
		  && (1) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[1] =
    (melt_ptr_t) ( /*_.DISCR_LIST__V8*/ meltfptr[7]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (2) >= 0
		  && (2) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[2] =
    (melt_ptr_t) ( /*_.CLASS_CHILD_PROCESS_HANDLER__V24*/ meltfptr[23]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (3) >= 0
		  && (3) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (4) >= 0
		  && (4) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[4] =
    (melt_ptr_t) ( /*_.LIST_TO_MULTIPLE__V25*/ meltfptr[24]);

  /*put inside hook HOOK_HANDLE_SIGCHLD */
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALHOOK___V513*/ meltfptr[512])) ==
		  MELTOBMAG_HOOK);
  melt_assertmsg ("puthookconst checkhook HOOK_HANDLE_SIGCHLD", (5) >= 0
		  && (5) <
		  melt_hook_size ((melt_ptr_t) /*_._VALHOOK___V513*/
				  meltfptr[512]));
  ((melthook_ptr_t) /*_._VALHOOK___V513*/ meltfptr[512])->tabval[5] =
    (melt_ptr_t) ( /*_.DISCR_MULTIPLE__V19*/ meltfptr[18]);

  /*touch:HOOK_HANDLE_SIGCHLD */
  meltgc_touch ( /*_._VALHOOK___V513*/ meltfptr[512]);

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_483__CLASS_CHILD_PROCESS_HANDLER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V518*/ meltfptr[517])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_483__CLASS_CHILD_PROCESS_HANDLER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V518*/ meltfptr[517]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V518*/ meltfptr[517]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V519*/ meltfptr[518]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V518*/ meltfptr[517]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V518*/ meltfptr[517],
				"new static instance");

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_485__LIST_TO_MULTIPLE @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V520*/ meltfptr[519])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_485__LIST_TO_MULTIPLE @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V520*/
					meltfptr[519]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V520*/ meltfptr[519]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V521*/ meltfptr[520]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V520*/ meltfptr[519]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V520*/ meltfptr[519],
				"new static instance");

  MELT_LOCATION ("warmelt-hooks.melt:2899:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V522*/ meltfptr[521]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_487__REGISTER_CHILD_PROCESS_HANDLER#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V522*/ meltfptr[521])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2899:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V522*/ meltfptr[521]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_487__REGISTER_CHILD_PROCESS_HANDLER#1",
       NULL != ( /*_.CLASS_CHILD_PROCESS_HANDLER__V24*/ meltfptr[23]));
  ((meltroutine_ptr_t) /*_._VALROUT___V522*/ meltfptr[521])->tabval[1] =
    (melt_ptr_t) ( /*_.CLASS_CHILD_PROCESS_HANDLER__V24*/ meltfptr[23]);

  MELT_LOCATION ("warmelt-hooks.melt:2899:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V522*/ meltfptr[521]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_487__REGISTER_CHILD_PROCESS_HANDLER#2",
       NULL != ( /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22]));
  ((meltroutine_ptr_t) /*_._VALROUT___V522*/ meltfptr[521])->tabval[2] =
    (melt_ptr_t) ( /*_.DISCR_CONSTANT_INTEGER__V23*/ meltfptr[22]);

  MELT_LOCATION ("warmelt-hooks.melt:2899:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V522*/ meltfptr[521]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_487__REGISTER_CHILD_PROCESS_HANDLER#3",
       NULL != ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]));
  ((meltroutine_ptr_t) /*_._VALROUT___V522*/ meltfptr[521])->tabval[3] =
    (melt_ptr_t) ( /*_.DISCR_BUCKET_LONGS__V21*/ meltfptr[20]);

  MELT_LOCATION ("warmelt-hooks.melt:2899:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V522*/ meltfptr[521]);

  /*putclosurout#56 */
  melt_assertmsg ("putclosrout#56 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V523*/ meltfptr[522])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#56 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V522*/ meltfptr[521])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V523*/ meltfptr[522])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V522*/ meltfptr[521]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V523*/ meltfptr[522]);

  MELT_LOCATION ("warmelt-hooks.melt:2938:/ initchunk");
  /*^putroutconst */
  /*putroutconst */
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_assertmsg ("putroutconst checkrout",
		    melt_magic_discr ((melt_ptr_t)
				      ( /*_._VALROUT___V524*/ meltfptr[523]))
		    == MELTOBMAG_ROUTINE);
  if (MELT_HAS_INITIAL_ENVIRONMENT)
    melt_checkmsg
      ("putroutconst constnull.drout_489__UNREGISTER_CHILD_PROCESS_HANDLER#0",
       NULL != ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]));
  ((meltroutine_ptr_t) /*_._VALROUT___V524*/ meltfptr[523])->tabval[0] =
    (melt_ptr_t) ( /*_.MELT_DEBUG_FUN__V6*/ meltfptr[5]);

  MELT_LOCATION ("warmelt-hooks.melt:2938:/ initchunk");
  /*^touch */
  /*touch:_IROUTVAL_ */
  meltgc_touch ( /*_._VALROUT___V524*/ meltfptr[523]);

  /*putclosurout#57 */
  melt_assertmsg ("putclosrout#57 checkclo",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALCLO___V525*/ meltfptr[524])) ==
		  MELTOBMAG_CLOSURE);
  melt_assertmsg ("putclosrout#57 checkrout",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALROUT___V524*/ meltfptr[523])) ==
		  MELTOBMAG_ROUTINE);
  ((meltclosure_ptr_t) /*_._VALCLO___V525*/ meltfptr[524])->rout =
    (meltroutine_ptr_t) ( /*_._VALROUT___V524*/ meltfptr[523]);

  /*touch:_DATACLOSURE_ */
  meltgc_touch ( /*_._VALCLO___V525*/ meltfptr[524]);

  /*putslot */
  melt_assertmsg ("checkobj putslot  ~dsym_491__REGISTER_ALARM_TIMER @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V526*/ meltfptr[525])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_491__REGISTER_ALARM_TIMER @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V526*/
					meltfptr[525]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V526*/ meltfptr[525]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V527*/ meltfptr[526]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V526*/ meltfptr[525]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V526*/ meltfptr[525],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_493__REGISTER_CHILD_PROCESS_HANDLER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V528*/ meltfptr[527])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_493__REGISTER_CHILD_PROCESS_HANDLER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V528*/ meltfptr[527]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V528*/ meltfptr[527]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V529*/ meltfptr[528]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V528*/ meltfptr[527]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V528*/ meltfptr[527],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_495__REGISTER_INPUT_CHANNEL_HANDLER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V530*/ meltfptr[529])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_495__REGISTER_INPUT_CHANNEL_HANDLER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V530*/ meltfptr[529]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V530*/ meltfptr[529]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V531*/ meltfptr[530]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V530*/ meltfptr[529]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V530*/ meltfptr[529],
				"new static instance");


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_8 */

void
meltmod__WARMELTmiHOOKS__initialmeltchunk_9 (meltinitial_frame_t *
					     meltmeltframptr__,
					     char meltpredefinited[])
{
#define meltfram__ (*meltmeltframptr__)
#undef meltcallcount
#define meltcallcount 0L
  (void) meltpredefinited;
/*putslot*/
  melt_assertmsg ("checkobj putslot  ~dsym_497__UNREGISTER_ALARM_TIMER @#1",
		  melt_magic_discr ((melt_ptr_t)
				    ( /*_._VALDATA___V532*/ meltfptr[531])) ==
		  MELTOBMAG_OBJECT);

  melt_assertmsg ("checkoff putslot  ~dsym_497__UNREGISTER_ALARM_TIMER @#1",
		  (1 >= 0
		   && 1 <
		   melt_object_length ((melt_ptr_t)
				       ( /*_._VALDATA___V532*/
					meltfptr[531]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V532*/ meltfptr[531]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V533*/ meltfptr[532]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V532*/ meltfptr[531]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V532*/ meltfptr[531],
				"new static instance");

  /*putslot */
  melt_assertmsg
    ("checkobj putslot  ~dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER @#1",
     melt_magic_discr ((melt_ptr_t) ( /*_._VALDATA___V534*/ meltfptr[533])) ==
     MELTOBMAG_OBJECT);

  melt_assertmsg
    ("checkoff putslot  ~dsym_499__UNREGISTER_CHILD_PROCESS_HANDLER @#1",
     (1 >= 0
      && 1 <
      melt_object_length ((melt_ptr_t)
			  ( /*_._VALDATA___V534*/ meltfptr[533]))));
  ((meltobject_ptr_t) ( /*_._VALDATA___V534*/ meltfptr[533]))->obj_vartab[1] =
    (melt_ptr_t) (
  /*_._VALSTR___V535*/ meltfptr[534]);

  /*touch:_VALUEDATA_ */
  meltgc_touch ( /*_._VALDATA___V534*/ meltfptr[533]);


  melt_dbgtrace_written_object ( /*_._VALDATA___V534*/ meltfptr[533],
				"new static instance");

 /**COMMENT: before toplevel body **/ ;

  MELT_LOCATION ("warmelt-hooks.melt:4:/ initchunk");
  /*^block */
  /*anyblock */
  {

    /*^cond */
    /*cond */ if (
		   /*quasi.cur.mod.env.cont cur.mod.env.cont : at very start */
							/*_._CONTENV___V2*/ meltfptr[1])
							/*then */
      {
	/*^cond.then */
  /*_.OR___V536*/ meltfptr[535] =
	  /*quasi.cur.mod.env.cont cur.mod.env.cont : at very start */
/*_._CONTENV___V2*/ meltfptr[1];;
      }
    else
      {
	MELT_LOCATION ("warmelt-hooks.melt:4:/ cond.else");

	/*^block */
	/*anyblock */
	{

    /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V537*/ meltfptr[536] =
	    /*hookcall */
	    melthook_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER ((melt_ptr_t)
							     /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V5*/
							     meltfptr[4],
							     /*_._PREVENV___V4*/
							     meltfptr[3],
							     "warmelt-hooks");;
	  /*^compute */
	  /*_.OR___V536*/ meltfptr[535] =
	    /*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V537*/ meltfptr[536];;
	  /*epilog */

	  MELT_LOCATION ("warmelt-hooks.melt:4:/ clear");
	      /*clear *//*_.HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER__V537*/
	    meltfptr[536] = 0;
	}
	;
      }
    ;
    /*^block */
    /*com.block:upd.cur.mod.env.cont : at very start */
    {
    }				/*com.end block:upd.cur.mod.env.cont : at very start */
    ;
    /*epilog */

    /*^clear */
	    /*clear *//*_.OR___V536*/ meltfptr[535] = 0;
  }

  MELT_LOCATION ("warmelt-hooks.melt:1687:/ initchunk");
  /*^block */
  /*anyblock */
  {


    {
      /*^locexp */
      /* we always REGISTER_PASS_EXECUTION_HOOK_CHK__1 */
      register_callback (melt_plugin_name, PLUGIN_PASS_EXECUTION,
			 melt_pass_execution_hook_callback, NULL);
      ;
    }
    ;
    /*epilog */
  }

  MELT_LOCATION ("warmelt-hooks.melt:2262:/ initchunk");
  /*^block */
  /*anyblock */
  {


    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V385*/ meltfptr[384],
				    /*_._VALCLO___V262*/ meltfptr[261],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_END_OF_THIS_MELT_PASS_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V387*/ meltfptr[386],
				    /*_._VALCLO___V264*/ meltfptr[263],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_END_OF_THIS_MELT_PASS_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V389*/ meltfptr[388],
				    /*_._VALCLO___V382*/ meltfptr[381],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_EXIT_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V391*/ meltfptr[390],
				    /*_._VALCLO___V384*/ meltfptr[383],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_EXIT_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V393*/ meltfptr[392],
				    /*_._VALCLO___V126*/ meltfptr[125],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_FINISH_UNIT_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V395*/ meltfptr[394],
				    /*_._VALCLO___V128*/ meltfptr[127],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_FINISH_UNIT_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V397*/ meltfptr[396],
				    /*_._VALCLO___V367*/ meltfptr[366],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_MELT_ATTRIBUTE_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V399*/ meltfptr[398],
				    /*_._VALCLO___V369*/ meltfptr[368],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_MELT_ATTRIBUTE_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V401*/ meltfptr[400],
				    /*_._VALCLO___V106*/ meltfptr[105],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_START_UNIT_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V403*/ meltfptr[402],
				    /*_._VALCLO___V108*/ meltfptr[107],
				    /*quasi.cur.mod.env.cont norm.exp.val : AT_START_UNIT_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V405*/ meltfptr[404],
				    /*_._VALHOOK___V28*/ meltfptr[27],
				    /*quasi.cur.mod.env.cont norm.exp.val : HOOK_LOW_DEBUG_VALUE_AT */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V407*/ meltfptr[406],
				    /*_._VALHOOK___V60*/ meltfptr[59],
				    /*quasi.cur.mod.env.cont norm.exp.val : HOOK_OVERRIDE_GATE */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V409*/ meltfptr[408],
				    /*_._VALCLO___V186*/ meltfptr[185],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_IPA_PASSES_END_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V411*/ meltfptr[410],
				    /*_._VALCLO___V188*/ meltfptr[187],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_IPA_PASSES_END_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V413*/ meltfptr[412],
				    /*_._VALCLO___V171*/ meltfptr[170],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_IPA_PASSES_START_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V415*/ meltfptr[414],
				    /*_._VALCLO___V173*/ meltfptr[172],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_IPA_PASSES_START_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V417*/ meltfptr[416],
				    /*_._VALCLO___V156*/ meltfptr[155],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_PASSES_END_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V419*/ meltfptr[418],
				    /*_._VALCLO___V158*/ meltfptr[157],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_PASSES_END_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V421*/ meltfptr[420],
				    /*_._VALCLO___V141*/ meltfptr[140],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_PASSES_START_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V423*/ meltfptr[422],
				    /*_._VALCLO___V143*/ meltfptr[142],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALL_PASSES_START_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V425*/ meltfptr[424],
				    /*_._VALCLO___V216*/ meltfptr[215],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V427*/ meltfptr[426],
				    /*_._VALCLO___V218*/ meltfptr[217],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_EARLY_GIMPLE_PASSES_END_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V429*/ meltfptr[428],
				    /*_._VALCLO___V201*/ meltfptr[200],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V431*/ meltfptr[430],
				    /*_._VALCLO___V203*/ meltfptr[202],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_EARLY_GIMPLE_PASSES_START_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V433*/ meltfptr[432],
				    /*_._VALCLO___V278*/ meltfptr[277],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_FINISH_DECL_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V435*/ meltfptr[434],
				    /*_._VALCLO___V280*/ meltfptr[279],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_FINISH_DECL_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V437*/ meltfptr[436],
				    /*_._VALCLO___V250*/ meltfptr[249],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_FINISH_TYPE_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V439*/ meltfptr[438],
				    /*_._VALCLO___V252*/ meltfptr[251],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_FINISH_TYPE_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V441*/ meltfptr[440],
				    /*_._VALCLO___V80*/ meltfptr[79],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_OVERRIDE_GATE_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V443*/ meltfptr[442],
				    /*_._VALCLO___V82*/ meltfptr[81],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_OVERRIDE_GATE_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V445*/ meltfptr[444],
				    /*_._VALCLO___V297*/ meltfptr[296],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_PASS_EXECUTION_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V447*/ meltfptr[446],
				    /*_._VALCLO___V299*/ meltfptr[298],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_PASS_EXECUTION_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V449*/ meltfptr[448],
				    /*_._VALCLO___V234*/ meltfptr[233],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_PRE_GENERICIZE_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V451*/ meltfptr[450],
				    /*_._VALCLO___V236*/ meltfptr[235],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_PRE_GENERICIZE_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V453*/ meltfptr[452],
				    /*_._VALCLO___V84*/ meltfptr[83],
				    /*quasi.cur.mod.env.cont norm.exp.val : UNREGISTER_OVERRIDE_GATE_FIRST */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V455*/ meltfptr[454],
				    /*_._VALCLO___V86*/ meltfptr[85],
				    /*quasi.cur.mod.env.cont norm.exp.val : UNREGISTER_OVERRIDE_GATE_LAST */
/*_._CONTENV___V2*/ meltfptr[1]);
    /*epilog */
  }

  MELT_LOCATION ("warmelt-hooks.melt:2644:/ initchunk");
  /*^block */
  /*anyblock */
  {


    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V488*/ meltfptr[487],
				    /*_._VALCLO___V474*/ meltfptr[473],
				    /*quasi.cur.mod.env.cont norm.exp.val : EVERY_POLLING_INPUT */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V490*/ meltfptr[489],
				    /*_._VALCLO___V476*/ meltfptr[475],
				    /*quasi.cur.mod.env.cont norm.exp.val : GET_POLLING_INPUT */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V492*/ meltfptr[491],
				    /*_._VALHOOK___V483*/ meltfptr[482],
				    /*quasi.cur.mod.env.cont norm.exp.val : HOOK_HANDLE_SIGIO */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V494*/ meltfptr[493],
				    /*_._VALHOOK___V461*/ meltfptr[460],
				    /*quasi.cur.mod.env.cont norm.exp.val : HOOK_POLL_INPUTS */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V496*/ meltfptr[495],
				    /*_._VALCLO___V472*/ meltfptr[471],
				    /*quasi.cur.mod.env.cont norm.exp.val : IS_POLLING_INPUTS */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V498*/ meltfptr[497],
				    /*_._VALCLO___V458*/ meltfptr[457],
				    /*quasi.cur.mod.env.cont norm.exp.val : MELT_INVOKE_INPUT_CALLBACKS */
/*_._CONTENV___V2*/ meltfptr[1]);
    /*epilog */
  }

  MELT_LOCATION ("warmelt-hooks.melt:2944:/ initchunk");
  /*^block */
  /*anyblock */
  {


    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V526*/ meltfptr[525],
				    /*_._VALCLO___V508*/ meltfptr[507],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_ALARM_TIMER */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V528*/ meltfptr[527],
				    /*_._VALCLO___V523*/ meltfptr[522],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_CHILD_PROCESS_HANDLER */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V530*/ meltfptr[529],
				    /*_._VALCLO___V478*/ meltfptr[477],
				    /*quasi.cur.mod.env.cont norm.exp.val : REGISTER_INPUT_CHANNEL_HANDLER */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V532*/ meltfptr[531],
				    /*_._VALCLO___V512*/ meltfptr[511],
				    /*quasi.cur.mod.env.cont norm.exp.val : UNREGISTER_ALARM_TIMER */
/*_._CONTENV___V2*/ meltfptr[1]);

    /*hookcall */
      melthook_HOOK_VALUE_EXPORTER ((melt_ptr_t)
				    ((melt_ptr_t)
				     (MELT_PREDEF (HOOK_VALUE_EXPORTER))),
				    /*_._VALDATA___V534*/ meltfptr[533],
				    /*_._VALCLO___V525*/ meltfptr[524],
				    /*quasi.cur.mod.env.cont norm.exp.val : UNREGISTER_CHILD_PROCESS_HANDLER */
/*_._CONTENV___V2*/ meltfptr[1]);
    /*epilog */
  }

 /**COMMENT: after toplevel body **/ ;

 /**COMMENT: compute boxloc again **/ ;

  /*cond */ if ( /*_._CONTENV___V2*/ meltfptr[1])	/*then */
    {
    }
  else
    {				/*^cond.else */

      /*^compute */

      /* compile2obj_initproc emitted initialization of environment reference for warmelt-hooks */
      if ( /*_._PREVENV___V4*/ meltfptr[3])
	{
		  /*_._CONTENV___V2*/ meltfptr[1] = melthookproc_HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER
	    ((melt_ptr_t) /*_._PREVENV___V4*/ meltfptr[3], "warmelt-hooks");
	}
      else			/* no prevenv */
	{
#if MELT_HAS_INITIAL_ENVIRONMENT>0
	  if (!melt_flag_bootstrapping)
	    warning (0,
		     "MELT is not creating a fresh environment reference for warmelt-hooks without parent env.");
#endif /* MELT_HAS_INITIAL_ENVIRONMENT>0 */
	}
      ;;
    }

 /**COMMENT: intern symbols **/ ;

  /*internsym:HOOK_FRESH_ENVIRONMENT_REFERENCE_MAKER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V26*/ meltfptr[25]));

  /*internsym:VAL */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V32*/ meltfptr[31]));

  /*internsym:FILENAME */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V35*/ meltfptr[34]));

  /*internsym:LINENO */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V38*/ meltfptr[37]));

  /*internsym:MSG */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V41*/ meltfptr[40]));

  /*internsym:COUNT */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V44*/ meltfptr[43]));

  /*internsym:MELT_DEBUG_FUN */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V48*/ meltfptr[47]));

  /*internsym:OVERRIDE_GATE_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V50*/ meltfptr[49]));

  /*internsym:CLASS_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V52*/ meltfptr[51]));

  /*internsym:DISCR_LIST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V58*/ meltfptr[57]));

  /*internsym:BEFOREGATE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V64*/ meltfptr[63]));

  /*internsym:AFTERGATE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V68*/ meltfptr[67]));

  /*internkeyw:TRUE */
  (void)
    melthookproc_HOOK_INTERN_KEYWORD ((melt_ptr_t)
				      ( /*_._VALDATA___V71*/ meltfptr[70]));

  /*internsym:CLASS_REFERENCE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V73*/ meltfptr[72]));

  /*internsym:START_UNIT_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V87*/ meltfptr[86]));

  /*internsym:LIST_EVERY */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V101*/ meltfptr[100]));

  /*internsym:FINISH_UNIT_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V109*/ meltfptr[108]));

  /*internsym:ALL_PASSES_START_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V129*/ meltfptr[128]));

  /*internsym:ALL_PASSES_END_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V144*/ meltfptr[143]));

  /*internsym:ALL_IPA_PASSES_START_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V159*/ meltfptr[158]));

  /*internsym:ALL_IPA_PASSES_END_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V174*/ meltfptr[173]));

  /*internsym:EARLY_GIMPLE_PASSES_START_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V189*/ meltfptr[188]));

  /*internsym:EARLY_GIMPLE_PASSES_END_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V204*/ meltfptr[203]));

  /*internsym:PREGENERICIZE_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V219*/ meltfptr[218]));

  /*internsym:TFNDECL */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V229*/ meltfptr[228]));

  /*internsym:FINISHTYPE_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V237*/ meltfptr[236]));

  /*internsym:ENDMELTPASS_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V253*/ meltfptr[252]));

  /*internsym:CLASS_CONTAINER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V259*/ meltfptr[258]));

  /*internsym:FINISHDECL_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V265*/ meltfptr[264]));

  /*internsym:PASS_EXECUTION_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V281*/ meltfptr[280]));

  /*internsym:PASSNAME */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V289*/ meltfptr[288]));

  /*internsym:PASSNUM */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V292*/ meltfptr[291]));

  /*internsym:INITIAL_SYSTEM_DATA */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V305*/ meltfptr[304]));

  /*internsym:CLASS_GCC_GIMPLE_PASS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V307*/ meltfptr[306]));

  /*internsym:CLASS_GCC_PASS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V309*/ meltfptr[308]));

  /*internsym:CLASS_SYSTEM_DATA */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V316*/ meltfptr[315]));

  /*internsym:CLASS_GCC_RTL_PASS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V323*/ meltfptr[322]));

  /*internsym:CLASS_GCC_SIMPLE_IPA_PASS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V335*/ meltfptr[334]));

  /*internsym:ATTRIBUTE_DEFINER_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V342*/ meltfptr[341]));

  /*internsym:DECL */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V352*/ meltfptr[351]));

  /*internsym:NAME */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V355*/ meltfptr[354]));

  /*internsym:ATTRSEQ */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V358*/ meltfptr[357]));

  /*internsym:FILELOC */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V361*/ meltfptr[360]));

  /*internsym:FINAL_EXIT_DELAYED_QUEUE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V370*/ meltfptr[369]));

  /*internsym:AT_END_OF_THIS_MELT_PASS_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V385*/ meltfptr[384]));

  /*internsym:AT_END_OF_THIS_MELT_PASS_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V387*/ meltfptr[386]));

  /*internsym:AT_EXIT_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V389*/ meltfptr[388]));

  /*internsym:AT_EXIT_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V391*/ meltfptr[390]));

  /*internsym:AT_FINISH_UNIT_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V393*/ meltfptr[392]));

  /*internsym:AT_FINISH_UNIT_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V395*/ meltfptr[394]));

  /*internsym:AT_MELT_ATTRIBUTE_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V397*/ meltfptr[396]));

  /*internsym:AT_MELT_ATTRIBUTE_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V399*/ meltfptr[398]));

  /*internsym:AT_START_UNIT_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V401*/ meltfptr[400]));

  /*internsym:AT_START_UNIT_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V403*/ meltfptr[402]));

  /*internsym:HOOK_LOW_DEBUG_VALUE_AT */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V405*/ meltfptr[404]));

  /*internsym:HOOK_OVERRIDE_GATE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V407*/ meltfptr[406]));

  /*internsym:REGISTER_ALL_IPA_PASSES_END_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V409*/ meltfptr[408]));

  /*internsym:REGISTER_ALL_IPA_PASSES_END_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V411*/ meltfptr[410]));

  /*internsym:REGISTER_ALL_IPA_PASSES_START_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V413*/ meltfptr[412]));

  /*internsym:REGISTER_ALL_IPA_PASSES_START_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V415*/ meltfptr[414]));

  /*internsym:REGISTER_ALL_PASSES_END_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V417*/ meltfptr[416]));

  /*internsym:REGISTER_ALL_PASSES_END_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V419*/ meltfptr[418]));

  /*internsym:REGISTER_ALL_PASSES_START_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V421*/ meltfptr[420]));

  /*internsym:REGISTER_ALL_PASSES_START_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V423*/ meltfptr[422]));

  /*internsym:REGISTER_EARLY_GIMPLE_PASSES_END_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V425*/ meltfptr[424]));

  /*internsym:REGISTER_EARLY_GIMPLE_PASSES_END_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V427*/ meltfptr[426]));

  /*internsym:REGISTER_EARLY_GIMPLE_PASSES_START_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V429*/ meltfptr[428]));

  /*internsym:REGISTER_EARLY_GIMPLE_PASSES_START_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V431*/ meltfptr[430]));

  /*internsym:REGISTER_FINISH_DECL_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V433*/ meltfptr[432]));

  /*internsym:REGISTER_FINISH_DECL_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V435*/ meltfptr[434]));

  /*internsym:REGISTER_FINISH_TYPE_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V437*/ meltfptr[436]));

  /*internsym:REGISTER_FINISH_TYPE_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V439*/ meltfptr[438]));

  /*internsym:REGISTER_OVERRIDE_GATE_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V441*/ meltfptr[440]));

  /*internsym:REGISTER_OVERRIDE_GATE_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V443*/ meltfptr[442]));

  /*internsym:REGISTER_PASS_EXECUTION_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V445*/ meltfptr[444]));

  /*internsym:REGISTER_PASS_EXECUTION_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V447*/ meltfptr[446]));

  /*internsym:REGISTER_PRE_GENERICIZE_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V449*/ meltfptr[448]));

  /*internsym:REGISTER_PRE_GENERICIZE_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V451*/ meltfptr[450]));

  /*internsym:UNREGISTER_OVERRIDE_GATE_FIRST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V453*/ meltfptr[452]));

  /*internsym:UNREGISTER_OVERRIDE_GATE_LAST */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V455*/ meltfptr[454]));

  /*internsym:CLASS_INPUT_CHANNEL_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V459*/ meltfptr[458]));

  /*internsym:DELAYMS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V465*/ meltfptr[464]));

  /*internsym:DISCR_MULTIPLE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V469*/ meltfptr[468]));

  /*internsym:DISCR_STRBUF */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V479*/ meltfptr[478]));

  /*internsym:DISCR_BUCKET_LONGS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V481*/ meltfptr[480]));

  /*internsym:EVERY_POLLING_INPUT */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V488*/ meltfptr[487]));

  /*internsym:GET_POLLING_INPUT */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V490*/ meltfptr[489]));

  /*internsym:HOOK_HANDLE_SIGIO */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V492*/ meltfptr[491]));

  /*internsym:HOOK_POLL_INPUTS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V494*/ meltfptr[493]));

  /*internsym:IS_POLLING_INPUTS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V496*/ meltfptr[495]));

  /*internsym:MELT_INVOKE_INPUT_CALLBACKS */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V498*/ meltfptr[497]));

  /*internsym:CLASS_ALARM_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V505*/ meltfptr[504]));

  /*internsym:DISCR_CONSTANT_INTEGER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V509*/ meltfptr[508]));

  /*internsym:CLASS_CHILD_PROCESS_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V518*/ meltfptr[517]));

  /*internsym:LIST_TO_MULTIPLE */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V520*/ meltfptr[519]));

  /*internsym:REGISTER_ALARM_TIMER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V526*/ meltfptr[525]));

  /*internsym:REGISTER_CHILD_PROCESS_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V528*/ meltfptr[527]));

  /*internsym:REGISTER_INPUT_CHANNEL_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V530*/ meltfptr[529]));

  /*internsym:UNREGISTER_ALARM_TIMER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V532*/ meltfptr[531]));

  /*internsym:UNREGISTER_CHILD_PROCESS_HANDLER */
  (void)
    melthookproc_HOOK_INTERN_SYMBOL ((melt_ptr_t)
				     ( /*_._VALDATA___V534*/ meltfptr[533]));

 /**COMMENT: set retinit from boxloc **/ ;

 /*_._RETINIT___V1*/ meltfptr[0] =
    /* finalsetretinit */
    melt_reference_value ((melt_ptr_t) ( /*_._CONTENV___V2*/ meltfptr[1]));
 /**COMMENT: end the initproc **/ ;


#undef meltfram__
}				/*end of meltmod__WARMELTmiHOOKS__initialmeltchunk_9 */

void
meltmod__WARMELTmiHOOKS__forward_or_mark_module_start_frame (struct
							     melt_callframe_st
							     *fp, int marking)
{
  int meltix = 0;
  struct melt_initial_frame_st *meltframptr_ =
    (struct melt_initial_frame_st *) fp;
  melt_assertmsg ("check module frame",
		  meltframptr_->mcfr_nbvar == /*minihash */ -3283);
  if (!marking && melt_is_forwarding)
    {
      dbgprintf
	("forward_or_mark_module_start_frame_WARMELTmiHOOKS forwarding %d pointers in frame %p",
	 537, (void *) meltframptr_);
      for (meltix = 0; meltix < 537; meltix++)
	MELT_FORWARDED (meltframptr_->mcfr_varptr[meltix]);
      return;
    }				/*end forwarding */
  dbgprintf
    ("forward_or_mark_module_start_frame_WARMELTmiHOOKS marking in frame %p",
     (void *) meltframptr_);
  for (meltix = 0; meltix < 537; meltix++)
    if (meltframptr_->mcfr_varptr[meltix])
      gt_ggc_mx_melt_un (meltframptr_->mcfr_varptr[meltix]);

}				/* end meltmod__WARMELTmiHOOKS__forward_or_mark_module_start_frame */



/* exported 0 field offsets */

/* exported 0 class lengths */



/**** end of warmelt-hooks ****/
