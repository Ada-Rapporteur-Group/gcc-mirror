General information
-------------------

The hsa branch is a development branch for compiling device OpenMP
constructs (and in future hopefuely not only them) into HSA
intermediate language called BRIG which can be run on HSA capable GPU
acclerators.


======================================================================

Setup
-----

HSA branch now produces HSAIL version 1.0f which isn't currently
supported by any simulator I am aware of.  Until there is one you will
need real HSA capable hardware to execute code generated by this
branch.

In order to run the code produced by the HSA branch on such hardware,
you'll need the following prerequisites (if you only want to build the
branch, and not run anything, you can skip step 1):

1. Linux kernel driver capable of KFD 1.6.  At the time of writing
   this, it seems the only options to pick one up depending on your
   Linux distribution are are:

   - http://download.opensuse.org/repositories/home:/marxin:/carrizo/openSUSE_Tumbleweed/
   - https://github.com/HSAFoundation/HSA-Drivers-Linux-AMD

   Please note that you may also need a recent firmware for the APU
   you want to use.  I got mine from:
   wget http://people.freedesktop.org/~gabbayo/kfd-v1.4/radeon_ucode.tar.gz
   and need to create an udev rule for HSA with
   echo 'KERNEL=="kfd", MODE="0666"' > /etc/udev/rules.d/kfd.rules

   The github repository contains a testing script that can verify whether
   your kernel is ready to run HSA.

2. libhsakmt.so.1 from HSA-Drivers-Linux-AMD repository.  Checkout
   https://github.com/HSAFoundation/HSA-Drivers-Linux-AMD, go to the
   src/libhsakmt subdirectory and just run make.

3. Finally, you need the HSA runtime.  You can choose between an
   open-source one which however does not contain the finalizer and so
   cannot be used to run anything (but allows you to build hsa-capable
   libgomp) or a proprietary one with which contains finalizer for
   Carrizo/Khaveri APUs but, well, is proprietary, at least for now.

   The former is available at
   https://github.com/HSAFoundation/HSA-Runtime-Reference-Source and
   is fairly straightforward to build, the latter is available at
   https://github.com/HSAFoundation/HSA-Runtime-AMD is distributed in
   binary form so you don't have to build it.

With those prerequisites in place, you can build HSA-enabled gcc
simply by configuring it with option

--enable-offload-targets=hsa

of course, you can list other offloading targets the usual way.
Unless you have the hsa-run time and hsakmt library in default paths,
you also need to provide paths to them with options

--with-hsa-runtime=/path/to/hsa/runtime/ and
--with-hsa-kmt-lib=/path/to/libhsakmt.so.1

You can simply combine these configure options with those you are used
to and then run make.
