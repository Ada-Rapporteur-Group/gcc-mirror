2011-05-04  Diego Novillo  <dnovillo@google.com>

	* Makefile.in (cgraphunit.o): Add dependency on LTO_STREAMER_H.
	* cgraphunit.c: Include lto-streamer.h
	(cgraph_finalize_compilation_unit): Call gimple_streamer_hooks_init
	if LTO is enabled.
	* lto-streamer-out.c (lto_output): Move call to
	gimple_streamer_hooks_init to cgraph_finalize_compilation_unit.
	* lto-streamer.c (lto_get_common_nodes): Remove if0 hack.
	(lto_streamer_cache_create): Call streamer_hooks.get_common_nodes
	instead of lto_get_common_nodes.
	(gimple_streamer_hooks_init): Set h->get_common_nodes to
	lto_get_common_nodes.
	* lto-streamer.h (struct lto_streamer_hooks): Add field
	get_common_nodes.

2011-04-26  Diego Novillo  <dnovillo@google.com>

	* lto-streamer.h (enum LTO_tags): Change LTO_bb0 to begin
	after MAX_TREE_CODES.

2011-04-26  Diego Novillo  <dnovillo@google.com>

	* tree.c (tree_node_structure_enum): Make extern.
	(mark_ts_structures_for): Factor out of
	initialize_tree_contains_struct.
	(initialize_tree_contains_struct): Call it.
	* tree.h (tree_node_structure_for_code): Declare.
	(mark_ts_structures_for): Declare.

2011-04-20  Diego Novillo  <dnovillo@google.com>

	Merge from trunk rev 172663.

2011-04-19  Diego Novillo  <dnovillo@google.com>

	Merge from trunk rev 172662.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-out.c (pack_ts_type_value_fields): Pack all bits
	of -1 value.
	* lto-streamer.h (bitpack_create): Assert that the value to
	pack does not overflow NBITS.
	* lto-streamer-in.c (unpack_ts_type_value_fields): Unpack
	BITS_PER_BITPACK_WORD bits for TYPE_ALIAS_SET.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* lto-streamer.h (bitpack_create): Only use the lower NBITS
	from VAL.

2011-04-14  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (unpack_ts_base_value_fields): Handle
	TYPE_ADDR_SPACE.
	* lto-streamer-out.c (pack_ts_base_value_fields): Likewise.

2011-04-04  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (lto_input_tree_pointers): Remove checks
	for TS_SSA_NAME, TS_STATEMENT_LIST, TS_OMP_CLAUSE and
	TS_OPTIMIZATION.
	(lto_read_tree): Check for
	streamer_hooks.register_decls_in_symtab_p before registering
	symbols in LTO symtabs.
	(gimple_streamer_reader_init): Move file_name_hash_table
	initialization to lto_reader_init.
	(lto_materialize_tree): Call streamer_hooks.alloc_tree if it exists.
	* lto-streamer-out.c (lto_output_tree_header): Remove empty
	line.
	(lto_output_tree_header): Assert that the tag to be written is valid.
	Call streamer_hooks.output_tree_header if it exists.
	* lto-streamer.c (gimple_streamer_hooks_init): Set
	register_decls_in_symtab_p to true.
	* lto-streamer.h (struct lto_streamer_hooks): Add field
	register_decls_in_symtab_p.
	(struct lto_file_decl_data): Add field sdata.
	(struct output_block): Add field sdata.
	(struct lto_streamer_hooks): Add fields
	alloc_tree and output_tree_header.
	(enum LTO_tags): Add an LTO_LAST_TAG marker, force
	LTO_NUM_TAGS have a value bigger than MAX_TREE_CODES and
	LAST_AND_UNUSED_GIMPLE_CODE.
	(lto_tag_is_tree_code_p): Return true for anything less than
	MAX_TREE_CODES.

2011-03-30  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (lto_input_chain): Make extern.
	* lto-streamer-out.c (lto_output_tree_ref): Call
	streamer_hook->indexable_with_decls_p, if it exists.  If it
	returns true, emit a reference to EXPR in the VAR_DECL index.
	(lto_output_chain): Make extern.
	(lto_output_tree_pointers): Move checks for invalid gimple trees ...
	* lto-streamer.c (lto_is_streamable): ... here.
	* lto-streamer.h (lto_streamer_hooks): Add
	indexable_with_decls_p.
	(lto_output_chain): Declare.
	(lto_input_chain): Declare.

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (unpack_value_fields): Remove checks for
	TS_SSA_NAME, TS_STATEMENT_LIST and TS_OMP_CLAUSE.
	Call streamer_hooks.unpack_value_fields if defined.
	* lto-streamer-out.c (pack_value_fields): Remove checks for
	TS_SSA_NAME, TS_STATEMENT_LIST and TS_OMP_CLAUSE.
	Call streamer_hooks.pack_value_fields if defined.
	(lto_output_tree_header): Call streamer_hooks.is_streamable
	if defined.
	* lto-streamer.c (gimple_streamer_hooks_init): Assign hooks
	for name and is_streamable.
	(lto_is_streamable): Move from ...
	* lto-streamer.h: ... here.
	(lto_streamer_hooks): Add field name, pack_value_fields,
	unpack_value_fields and is_streamable.
	(lto_stream_as_builtin_p):

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (lto_input_ts_decl_minimal_tree_pointers):
	(lto_input_ts_decl_common_tree_pointers):
	* a/gcc/lto-streamer-out.c (lto_output_tree_ref):
	(lto_output_ts_decl_minimal_tree_pointers):
	(lto_output_ts_decl_common_tree_pointers):
	* a/gcc/lto-streamer.h (typedef):
	(extern):

2011-03-25  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (lto_reader_init): Rename from
	lto_init_reader.  Update all users.
	If streamer_hooks.reader_init exists, call it.
	Move gimple-specific initialization ...
	(gimple_streamer_init_reader): ... to this new function.
	(lto_input_ts_decl_common_tree_pointers): Document unhandled fields.
	Do not handle DECL_INITIAL.
	(lto_input_ts_decl_non_common_tree_pointers): Document
	unhandled fields.
	Do not handle DECL_SAVED_TREE.
	(lto_read_tree): If streamer_hooks.read_tree is defined, call
	it.
	(gimple_streamer_read_tree): New.  Handle DECL_INITIAL.
	(gimple_streamer_reader_init): Rename from
	gimple_streamer_init_reader.  Update all users.
	* lto-streamer-out.c (lto_writer_init): Make extern.
	(lto_output): Call gimple_streamer_hooks_init.
	(lto_output_ts_decl_common_tree_pointers): Document unhandled fields.
	Do not handle DECL_INITIAL.
	(lto_output_ts_decl_non_common_tree_pointers): Document
	unhandled fields.
	Do not handle DECL_SAVED_TREE.
	(lto_write_tree): If streamer_hooks.write_tree is defined,
	call it.
	(gimple_streamer_write_tree): New.  Handle DECL_INITIAL and
	DECL_SAVED_TREE.
	* lto-streamer.c (gimple_streamer_hooks_init): New.
	(streamer_hooks): New.
	(streamer_hooks_init): New.
	* lto-streamer.h (lto_streamer_hooks): Declare.
	(streamer_hooks): Declare
	(streamer_hooks_init): Declare
	(gimple_streamer_hooks_init): Declare.
	(gimple_streamer_init_reader): Declare.
	(lto_writer_init): Declare.
	(struct output_block): Forward declare.
	(struct lto_input_block): Likewise.
	(struct data_in): Likewise.

2011-03-24  Diego Novillo  <dnovillo@google.com>

	Merge from trunk rev 171388.

2011-03-23  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (input_string_internal): Add clarifying
	comments.
	* lto-streamer-out.c (lto_output_string_with_length): Rename from
	output_string_with_length.
	Output 0 to indicate a non-NULL string.  Update all callers to
	not emit 0.
	(lto_output_string): Rename from output_string.  Make extern.
	Update all users.

2011-03-23  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-in.c (lto_input_ts_decl_non_common_tree_pointers):
	Always read DECL_SAVED_TREE.
	* lto-streamer-out.c (lto_output_ts_decl_common_tree_pointers):
	Igonore varpool nodes.
	(lto_output_ts_decl_non_common_tree_pointers): Output NULL
	DECL_SAVED_TREE.

2011-03-17  Diego Novillo  <dnovillo@google.com>

	Merge from trunk rev 171104.

2011-03-15  Diego Novillo  <dnovillo@google.com>

	Merge from google/integration rev 170999 (4.6 branch
	point at rev 170934).

2011-03-09  Diego Novillo  <dnovillo@google.com>

	* lto-opts.c (input_data_block): Rename and move ...
	* lto-streamer-in.c (lto_input_data_block): ... here.
	* lto-streamer-in.c (lto_input_string): Rename from
	input_string.  Make extern.  Update all users.
	* lto-streamer-out.c (lto_output_string_with_length): Rename
	from output_string_with_length.  Make extern.  Update all
	users.
	(lto_output_string): Rename from output_string.  Make extern.
	Update all users.
	(lto_output_decl_state_streams): Make extern.
	(lto_output_decl_state_refs): Make extern.
	* lto-streamer.c (lto_get_common_nodes): #if0 assertions not
	valid inside the front end.
	* lto-streamer.h (lto_input_string): Declare.
	(lto_input_data_block): Declare.
	(lto_output_string): Declare.
	(lto_output_string_with_length): Declare.
	(lto_output_decl_state_streams): Declare.
	(lto_output_decl_state_refs): Declare.

2011-03-04  Lawrence Crowl <crowl@google.com>

	* tree-pass.h:
	Add TDF_VISDEF to flags for pretty printing "visible definitions".
	This enables more C-like output.

        * tree-pretty-print.c (dump_generic_node):
	Turn off visible definitions for bases of arrays and pointers.
	Print struct definitions under visible definitions.

	* (print_declaration):
	Filter artificial nodes under visible definitions.
	Make "static" mean what the language means, not the linker.
	Create a separate case for typedefs distinct from variables.
	Move printing of "typedef" to that case.

	* (print_struct_decl):
	Change field print algorithm.
	Filter out struct tags that are artificial, i.e. start with ".".

2011-02-15  Lawrence Crowl <crowl@google.com>

	* strstrmap.h: Add.
	* strstrmap.c: Add.
	* Makefile.in:
	Add rule for strstrmap.o.
	Add strstrmap.o to OBJS-common.
	Add dependence of c-family/c-opts.o on strstrmap.h.

2011-02-07  Diego Novillo  <dnovillo@google.com>

	Merge from google/integration.

2011-01-24  Lawrence Crowl <crowl@google.com>

	Merge timevar patch.

	* timevar.h (timevar_cond_start): Remove unused POP_TIMEVAR_AND_RETURN.
	* (timevar_cond_start): New for starting a timer only when it is not
	already running.
	* (timevar_cond_stop): New for stopping a timer when it was not already
	running.

	* timevar.c (timevar_stop): Enable start/stop timers to start again.
	* (timevar_cond_start): New as above.
	* (timevar_cond_stop): New as above.
	* (timevar_print): Reduce time output to fit in an 80-column window.
	Factor out units to column headings.
	Conditionally compile column headings as well as column data.

	* timevar.def: Add start/stop timers for compiler phases,
	TV_PHASE_SETUP, TV_PHASE_PARSING, TV_PHASE_C_WRAPUP_CHECK,
	TV_PHASE_CP_DEFERRED, TV_PHASE_CGRAPH, TV_PHASE_DBGINFO
	(C), TV_PHASE_CHECK_DBGINFO (C++), TV_PHASE_GENERATE, and
	TV_PHASE_FINALIZE.
	Change push/pop timer TV_PARSE to TV_PARSE_GLOBAL.
	Add push/pop timers TV_PARSE_STRUCT, TV_PARSE_ENUM, TV_PARSE_FUNC,
	TV_PARSE_INMETH, TV_INSTANTIATE_TEMPLATE.
	Change push/pop timers TV_GC and TV_NAME_LOOKUP into start/stop timers.
	Add start/stop timer TV_RESOLVE_OVERLOAD.
	Remove unused timers TV_OVERLOAD, TV_TEMPLATE_INSTANTIATION.
	Mark the strings for TV_GC, TV_NAME_LOOKUP, and
	TV_RESOLVE_OVERLOAD with a "|" to indicate that they are
	start/stop timers.

	* toplev.c (compile_file): Change TV_PARSE to TV_PARSE_GLOBAL.
	Start/stop timers TV_PHASE_PARSING and TV_PHASE_GENERATE.
	* (do_compile): Start/stop timers TV_PHASE_SETUP and TV_PHASE_FINALIZE.

	* c-decl.c (c_write_global_declarations): Add start/stop of
	TV_PHASE_C_WRAPUP_CHECK, TV_PHASE_CGRAPH, TV_PHASE_DBGINFO.

	* ggc-zone.c (ggc_collect): Change TV_GC to start/stop.
	* ggc-page.c (ggc_collect): Change TV_GC to start/stop.

	* c-parser.c (c_parser_declaration_or_fndef): Push/pop TV_PARSE_FUNC.
	* (c_parser_enum_specifier): Push/pop TV_PARSE_ENUM.
	* (c_parser_struct_or_union_specifier): Push/pop TV_PARSE_STRUCT.

2011-01-21  Diego Novillo  <dnovillo@google.com>

	Mainline merge r169107.

	* DATESTAMP: Update merge revision.

2011-01-05  Diego Novillo  <dnovillo@google.com>

	Mainline merge r168483.

	* DATESTAMP: Update merge revision.

2010-12-17  Diego Novillo  <dnovillo@google.com>

	Fix broken bootstrap.

	* BASE-VER: Move trunk revision suffix...
	* DATESTAMP: ... here.

2010-12-17  Diego Novillo  <dnovillo@google.com>

	Mainline merge r167963.

	* BASE-VER: Update revision stamp.

2010-11-02  Lawrence Crowl  <crowl@google.com>
	    Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (dump_generic_node): Protect
	against NULL TREE_TYPE.
	* tree.c (make_node_stat): Call
	lang_hooks.pph_catch_tree, if defined.
	* input.h (LOCATION_COLUMN): Define.
	* timevar.def (TV_PTH_DEPENDENCY): Define.
	(TV_PTH_MANAGE): Define.
	(TV_PTH_MD5): Define.
	(TV_PTH_LOAD): Define.
	(TV_PTH_SAVE): Define.
	(TV_PTH_SKIP_TOKENS): Define.
	(TV_PTH_INIT): Define.
	(TV_PPH_CACHE_IN): Define.
	(TV_PPH_CACHE_OUT): Define.
	(TV_PPH_MANAGE): Define.
	* langhooks.h: Add fields pph_catch_tree and pph_uncatch_tree.
	* tree-inline.c (copy_tree_r): Tolerate STATEMENT_LISTs
	when DATA is not NULL.
	* langhooks-def.h (LANG_HOOKS_PPH_UNCATCH_TREE): Define.
	(LANG_HOOKS_PPH_CATCH_TREE): Define.
	(LANG_HOOKS_INITIALIZER): Add LANG_HOOKS_PPH_UNCATCH_TREE
	and LANG_HOOKS_PPH_CATCH_TREE.
