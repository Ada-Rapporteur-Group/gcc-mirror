
#@!  -*- buffer-read-only: t -*- vi: set ro:
#@#@# 
#@#@# DO NOT EDIT THIS FILE   (melt-build.mk)
#@#@# 
#@#@# It has been AutoGen-ed  June 18, 2012 at 10:06:50 AM by AutoGen 5.16
#@#@# From the definitions    melt-build.def
#@#@# and the template file   melt-build.tpl
##@@ melt-build.mk is generated from melt-build.tpl by 'autogen melt-build.def'
#
# Makefile fragment for MELT modules and MELT translator bootstrap.
#   Copyright (C) 2010,2011,2012  Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#@ from melt-build.tpl line 22 generated by Autogen 5.16 using melt-build.def
## See http://stackoverflow.com/q/8727896/841108
## and http://lists.gnu.org/archive/html/help-make/2012-01/msg00017.html
## and http://gcc.gnu.org/ml/gcc/2012-01/msg00089.html
## and Ian Taylor's explanation http://gcc.gnu.org/ml/gcc/2012-01/msg00090.html
## Using remake http://bashdb.sourceforge.net/remake/ may help debugging this.
## Conventionally, all our timestamp files lie in the current directory.

#@ default MELT variant from melt-build.tpl line 30
melt_default_variant ?= optimized

## the following Makefile variables are expected to be set from melt-build.tpl line 33 


#@ from melt-build.tpl line 62 name= melt_source_dir comment=   directory containing *.melt & *.c files
ifndef melt_source_dir
$(warning unknown melt_source_dir :::  directory containing *.melt & *.c files)
endif



#@ from melt-build.tpl line 62 name= melt_module_dir comment=   directory containing *.so MELT module files
ifndef melt_module_dir
$(warning unknown melt_module_dir :::  directory containing *.so MELT module files)
endif



#@ from melt-build.tpl line 62 name= melt_make_module_makefile comment=   our melt-module.mk Makefile  when making MELT
ifndef melt_make_module_makefile
$(warning unknown melt_make_module_makefile :::  our melt-module.mk Makefile  when making MELT)
endif



#@ from melt-build.tpl line 62 name= melt_make_source_dir comment=   directory containing the *.melt files when making MELT
ifndef melt_make_source_dir
$(warning unknown melt_make_source_dir :::  directory containing the *.melt files when making MELT)
endif



#@ from melt-build.tpl line 62 name= melt_make_module_dir comment=   directory containing the *.so files when making MELT
ifndef melt_make_module_dir
$(warning unknown melt_make_module_dir :::  directory containing the *.so files when making MELT)
endif



#@ from melt-build.tpl line 62 name= melt_default_modules_list comment=   basename of the default module list
ifndef melt_default_modules_list
$(warning unknown melt_default_modules_list :::  basename of the default module list)
endif



#@ from melt-build.tpl line 62 name= melt_make_cc1 comment=   gcc -fplugin=melt or cc1-melt program within MELT branch
ifndef melt_make_cc1
$(warning unknown melt_make_cc1 :::  gcc -fplugin=melt or cc1-melt program within MELT branch)
endif



#@ from melt-build.tpl line 62 name= melt_make_cc1_dependency comment=   the make dependency for above
ifndef melt_make_cc1_dependency
$(warning unknown melt_make_cc1_dependency :::  the make dependency for above)
endif



#@ from melt-build.tpl line 62 name= melt_make_gencdeps comment=   extra make dependency of generated C files -often empty-
ifndef melt_make_gencdeps
$(warning unknown melt_make_gencdeps :::  extra make dependency of generated C files -often empty-)
endif



#@ from melt-build.tpl line 62 name= melt_move_if_change comment=   a move if change command for MELT
ifndef melt_move_if_change
$(warning unknown melt_move_if_change :::  a move if change command for MELT)
endif



#@ from melt-build.tpl line 62 name= melt_cflags comment=   the CFLAGS for compiling MELT generated C code
ifndef melt_cflags
$(warning unknown melt_cflags :::  the CFLAGS for compiling MELT generated C code)
endif



#@ from melt-build.tpl line 62 name= melt_xtra_cflags comment=   th CFLAGS for compiling extra applicative C code - often empty
ifndef melt_xtra_cflags
$(warning unknown melt_xtra_cflags :::  th CFLAGS for compiling extra applicative C code - often empty)
endif



#@ from melt-build.tpl line 62 name= melt_default_variant comment=   quicklybuilt | optimized | debugnoline
ifndef melt_default_variant
$(warning unknown melt_default_variant :::  quicklybuilt | optimized | debugnoline)
endif





## LN_S might not be defined, e.g. in MELT-Plugin-Makefile from melt-build.tpl line 71
LN_S ?= ln -sv

## GAWK is needed, the GNU awk from melt-build.tpl line 74
GAWK ?= gawk

## the md5sum utility is needed  from melt-build.tpl line 77
MD5SUM ?= md5sum

## the various arguments to MELT - avoid spaces in them! from melt-build.tpl line 80
meltarg_mode=$(if $(melt_is_plugin),-fplugin-arg-melt-mode,-fmelt-mode)
meltarg_init=$(if $(melt_is_plugin),-fplugin-arg-melt-init,-fmelt-init)
meltarg_module_path=$(if $(melt_is_plugin),-fplugin-arg-melt-module-path,-fmelt-module-path)
meltarg_source_path=$(if $(melt_is_plugin),-fplugin-arg-melt-source-path,-fmelt-source-path)
meltarg_tempdir=$(if $(melt_is_plugin),-fplugin-arg-melt-tempdir,-fmelt-tempdir)
meltarg_workdir=$(if $(melt_is_plugin),-fplugin-arg-melt-workdir,-fmelt-workdir)
meltarg_arg=$(if $(melt_is_plugin),-fplugin-arg-melt-arg,-fmelt-arg)
meltarg_bootstrapping=$(if $(melt_is_plugin),-fplugin-arg-melt-bootstrapping,-fmelt-bootstrapping)
meltarg_genworklink=$(if $(melt_is_plugin),-fplugin-arg-melt-generate-work-link,-fmelt-generate-work-link)
meltarg_makefile=$(if $(melt_is_plugin),-fplugin-arg-melt-module-makefile,-fmelt-module-makefile)
meltarg_makecmd=$(if $(melt_is_plugin),-fplugin-arg-melt-module-make-command,-fmelt-module-make-command)
meltarg_arglist=$(if $(melt_is_plugin),-fplugin-arg-melt-arglist,-fmelt-arglist)
meltarg_output=$(if $(melt_is_plugin),-fplugin-arg-melt-output,-fmelt-output)
meltarg_modulecflags=$(if $(melt_is_plugin),-fplugin-arg-melt-module-cflags,-fmelt-module-cflags)
meltarg_inhibitautobuild=$(if $(melt_is_plugin),-fplugin-arg-melt-inhibit-auto-build,-fmelt-inhibit-auto-build)

#@ from melt-build.tpl line 97
## MELT_DEBUG could be set to -fmelt-debug or -fplugin-arg-melt-debug
## the invocation to translate the very first initial MELT file from melt-build.tpl line 99
MELTCCINIT1ARGS= $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translateinit  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(meltarg_bootstrapping) $(MELT_DEBUG)

#@ from melt-build.tpl line 106
## the invocation to translate the other files from melt-build.tpl line 107
MELTCCFILE1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translatefile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(meltarg_bootstrapping)  $(MELT_DEBUG)

#@ from melt-build.tpl line 114
## the invocation to translate the application files -don't pass the -fmelt-bootstrap flag
MELTCCAPPLICATION1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translatefile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG)
MELTCCAPPLICATION1=$(melt_make_cc1) $(MELTCCAPPLICATION1ARGS)

#@ from melt-build.tpl line 123
## the invocation to run the application files -don't pass the -fmelt-bootstrap flag
MELTCCRUNFILE1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=runfile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG)
MELTCCRUNFILE1=$(melt_make_cc1) $(MELTCCRUNFILE1ARGS)

## our vpath  from melt-build.tpl line 132
vpath %.quicklybuilt.so . melt-workdir/ $(melt_make_module_dir)
vpath %.debugnoline.so . melt-workdir/ $(melt_make_module_dir)
vpath %.dynamic.so . melt-workdir/ $(melt_make_module_dir)
vpath %.pic.o .  melt-workdir/ $(melt_make_module_dir)
vpath %.so $(melt_make_module_dir) .
vpath %.c $(melt_make_source_dir)/generated . $(melt_source_dir)
vpath %.h . $(melt_make_source_dir)/generated $(melt_source_dir)
vpath %.melt $(melt_make_source_dir) . $(melt_source_dir)


## using make to compile the generated C into MELT modules from melt-build.tpl line 143
## the invoking command could set MELT_MAKE_MODULE_XTRAMAKEFLAGS=-j2
export MELT_MAKE_MODULE_XTRAMAKEFLAGS 
##always prefix $(MELT_MAKE_MODULE) with a + in this file.
MELT_MAKE_MODULE=$(MAKE) -f $(melt_make_module_makefile) $(MELT_MAKE_MODULE_XTRAMAKEFLAGS) VPATH=$(VPATH):.

## The base name of the MELT translator files from melt-build.tpl line 149
MELT_TRANSLATOR_BASE= \
    warmelt-first \
  warmelt-base \
  warmelt-debug \
  warmelt-macro \
  warmelt-normal \
  warmelt-normatch \
  warmelt-genobj \
  warmelt-outobj \
  warmelt-modes

## the MELT translator MELT source files from melt-build.tpl line 153
MELT_TRANSLATOR_SOURCE= $(patsubst %,$(melt_make_source_dir)/%.melt,$(MELT_TRANSLATOR_BASE))

## The base name of the MELT application files from melt-build.tpl line 156
MELT_APPLICATION_BASE= \
    xtramelt-ana-base \
  xtramelt-ana-tree \
  xtramelt-ana-gimple \
  xtramelt-probe \
  xtramelt-ana-simple \
  xtramelt-c-generator \
  xtramelt-opengpu

## The MELT application source files from melt-build.tpl line 160
MELT_APPLICATION_SOURCE= $(patsubst %,$(melt_make_source_dir)/%.melt,$(MELT_APPLICATION_BASE))

## The cold stage 0 of the translator from melt-build.tpl line 163

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_FIRST_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-first.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-first+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_FIRST_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_FIRST_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_FIRST_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_FIRST_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_BASE_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-base.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-base+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_BASE_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_BASE_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_BASE_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_BASE_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_DEBUG_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-debug.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-debug+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_DEBUG_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_DEBUG_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_DEBUG_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_DEBUG_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_MACRO_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-macro.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-macro+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_MACRO_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_MACRO_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_MACRO_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_MACRO_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_NORMAL_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-normal.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-normal+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_NORMAL_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_NORMAL_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_NORMAL_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_NORMAL_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_NORMATCH_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-normatch.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-normatch+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_NORMATCH_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_NORMATCH_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_NORMATCH_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_NORMATCH_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_GENOBJ_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-genobj.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-genobj+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_GENOBJ_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_GENOBJ_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_GENOBJ_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_GENOBJ_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_OUTOBJ_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-outobj.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-outobj+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_OUTOBJ_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_OUTOBJ_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_OUTOBJ_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c)

#@ The C files of the stage 0 are deposited from melt-build.tpl line 165
MELT_ZERO_GENERATED_MODES_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-modes.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-modes+*.c)
# The base names of stage 0 files from melt-build.tpl line 169
MELT_ZERO_GENERATED_MODES_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_MODES_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited from melt-build.tpl line 172
## avoid spaces in MELT_GENERATED_MODES_CUMULMD5 below from melt-build.tpl line 173
MELT_ZERO_GENERATED_MODES_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c)


#@ the required work directory from melt-build.tpl line 177
melt-workdir:
	mkdir -p melt-workdir
	ls -ld $$PWD/melt-workdir > melt-workdir-directory.stamp

#@ the work directory timestamp  from melt-build.tpl line 182
melt-workdir-directory.stamp: melt-workdir ; @true

####----------------------------------------------------------------


## An empty file is needed for every MELT translation from melt-build.tpl line 188
empty-file-for-melt.c:
	date +"/* empty-file-for-melt.c %c */" > $@-tmp
	mv $@-tmp $@

## can be overridden manually to either melt-stage0-dynamic or
## melt-stage0-quicklybuilt  from melt-build.tpl line 194
.PHONY: warmelt0
## the default stage0 is from melt-build.tpl line 196
MELT_STAGE_ZERO?=melt-stage0-dynamic
MELT_ZERO_FLAVOR=$(patsubst melt-stage0-%,%,$(MELT_STAGE_ZERO))
warmelt0: $(melt_make_cc1_dependency) \
   $(MELT_STAGE_ZERO)-directory.stamp $(MELT_STAGE_ZERO)-fullstage.stamp 


########################################################################
## the rules to build the quicklybuilt and dynamic flavors of stage0, that
## is with static or dynamic field object offsets  from melt-build.tpl line 205


## stage 0 flavor dynamic  from melt-build.tpl line 208

## stage 0 for  from melt-build.tpl line 210
melt-stage0-dynamic:
	test -d  melt-stage0-dynamic/ || mkdir  melt-stage0-dynamic/
	ls -ld $$PWD/melt-stage0-dynamic/ > melt-stage0-dynamic-directory.stamp
melt-stage0-dynamic-directory.stamp: melt-stage0-dynamic ; @true

#@ stage 0 flavor dynamic from melt-build.tpl line 216



#@ stage 0 for warmelt-first flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_FIRST_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-first MELT_GENERATED_FIRST_CUMULMD5= $(MELT_GENERATED_FIRST_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-first \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_FIRST_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-first
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-first*  melt-workdir/warmelt-first*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-first* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-first flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-first+meltdesc.c melt-stage0-dynamic/warmelt-first+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-first+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-first flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-first.dynamic.so: \
  melt-stage0-dynamic/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-first.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-first.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-first.dynamic-module.stamp

#@ stage 0 for warmelt-first flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-first.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-first.dynamic.so ; @true

#@ stage 0 for warmelt-first flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-first flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-base flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_BASE_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-base MELT_GENERATED_BASE_CUMULMD5= $(MELT_GENERATED_BASE_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-base \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_BASE_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-base
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-base*  melt-workdir/warmelt-base*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-base* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-base flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-base+meltdesc.c melt-stage0-dynamic/warmelt-base+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-base+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-base flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-base.dynamic.so: \
  melt-stage0-dynamic/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-base.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-base.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-base.dynamic-module.stamp

#@ stage 0 for warmelt-base flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-base.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-base.dynamic.so ; @true

#@ stage 0 for warmelt-base flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-base flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-debug flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_DEBUG_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-debug MELT_GENERATED_DEBUG_CUMULMD5= $(MELT_GENERATED_DEBUG_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-debug \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-debug
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-debug*  melt-workdir/warmelt-debug*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-debug* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-debug flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-debug+meltdesc.c melt-stage0-dynamic/warmelt-debug+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-debug+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-debug flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-debug.dynamic.so: \
  melt-stage0-dynamic/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-debug.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-debug.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-debug.dynamic-module.stamp

#@ stage 0 for warmelt-debug flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-debug.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-debug.dynamic.so ; @true

#@ stage 0 for warmelt-debug flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-debug flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-macro flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_MACRO_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-macro MELT_GENERATED_MACRO_CUMULMD5= $(MELT_GENERATED_MACRO_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-macro \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MACRO_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-macro
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-macro*  melt-workdir/warmelt-macro*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-macro* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-macro flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-macro+meltdesc.c melt-stage0-dynamic/warmelt-macro+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-macro+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-macro flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-macro.dynamic.so: \
  melt-stage0-dynamic/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-macro.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-macro.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-macro.dynamic-module.stamp

#@ stage 0 for warmelt-macro flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-macro.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-macro.dynamic.so ; @true

#@ stage 0 for warmelt-macro flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-macro flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-normal flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_NORMAL_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-normal MELT_GENERATED_NORMAL_CUMULMD5= $(MELT_GENERATED_NORMAL_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normal \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-normal
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-normal*  melt-workdir/warmelt-normal*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-normal* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normal flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-normal+meltdesc.c melt-stage0-dynamic/warmelt-normal+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normal+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-normal flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-normal.dynamic.so: \
  melt-stage0-dynamic/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-normal.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normal.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-normal.dynamic-module.stamp

#@ stage 0 for warmelt-normal flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-normal.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-normal.dynamic.so ; @true

#@ stage 0 for warmelt-normal flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-normal flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-normatch flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_NORMATCH_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-normatch MELT_GENERATED_NORMATCH_CUMULMD5= $(MELT_GENERATED_NORMATCH_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normatch \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-normatch
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-normatch*  melt-workdir/warmelt-normatch*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-normatch* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normatch flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-normatch+meltdesc.c melt-stage0-dynamic/warmelt-normatch+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normatch+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-normatch flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-normatch.dynamic.so: \
  melt-stage0-dynamic/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-normatch.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normatch.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-normatch.dynamic-module.stamp

#@ stage 0 for warmelt-normatch flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-normatch.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-normatch.dynamic.so ; @true

#@ stage 0 for warmelt-normatch flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-normatch flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-genobj flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_GENOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-genobj MELT_GENERATED_GENOBJ_CUMULMD5= $(MELT_GENERATED_GENOBJ_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-genobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-genobj
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-genobj*  melt-workdir/warmelt-genobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-genobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-genobj flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-genobj+meltdesc.c melt-stage0-dynamic/warmelt-genobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-genobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-genobj flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-genobj.dynamic.so: \
  melt-stage0-dynamic/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-genobj.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-genobj.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-genobj.dynamic-module.stamp

#@ stage 0 for warmelt-genobj flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-genobj.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-genobj.dynamic.so ; @true

#@ stage 0 for warmelt-genobj flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-genobj flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-outobj flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_OUTOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-outobj MELT_GENERATED_OUTOBJ_CUMULMD5= $(MELT_GENERATED_OUTOBJ_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-outobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-outobj
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-outobj*  melt-workdir/warmelt-outobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-outobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-outobj flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-outobj+meltdesc.c melt-stage0-dynamic/warmelt-outobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-outobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-outobj flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-outobj.dynamic.so: \
  melt-stage0-dynamic/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-outobj.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-outobj.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-outobj.dynamic-module.stamp

#@ stage 0 for warmelt-outobj flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-outobj.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-outobj.dynamic.so ; @true

#@ stage 0 for warmelt-outobj flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-outobj flavored dynamic  from melt-build.tpl line 266


#@ stage 0 for warmelt-modes flavor dynamic  from melt-build.tpl line 220
melt-stage0-dynamic/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_MODES_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-modes MELT_GENERATED_MODES_CUMULMD5= $(MELT_GENERATED_MODES_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-modes \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MODES_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-modes
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-modes*  melt-workdir/warmelt-modes*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-dynamic/warmelt-modes* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-modes flavor dynamic  descfiles from melt-build.tpl line 239 
melt-stage0-dynamic/warmelt-modes+meltdesc.c melt-stage0-dynamic/warmelt-modes+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-modes+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-modes flavor dynamic  shortmodule from melt-build.tpl line 246 
melt-stage0-dynamic/warmelt-modes.dynamic.so: \
  melt-stage0-dynamic/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).dynamic.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-modes.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-modes.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-modes.dynamic-module.stamp

#@ stage 0 for warmelt-modes flavor dynamic  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-modes.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-modes.dynamic.so ; @true

#@ stage 0 for warmelt-modes flavor dynamic done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-modes flavored dynamic  from melt-build.tpl line 266



#@ stage 0 flavor dynamic modulelist  from melt-build.tpl line 270 
melt-stage0-dynamic/warmelt.modlis:  | \
             melt-stage0-dynamic/warmelt-first.dynamic.so \
                melt-stage0-dynamic/warmelt-first+meltdesc.c  \
             melt-stage0-dynamic/warmelt-base.dynamic.so \
                melt-stage0-dynamic/warmelt-base+meltdesc.c  \
             melt-stage0-dynamic/warmelt-debug.dynamic.so \
                melt-stage0-dynamic/warmelt-debug+meltdesc.c  \
             melt-stage0-dynamic/warmelt-macro.dynamic.so \
                melt-stage0-dynamic/warmelt-macro+meltdesc.c  \
             melt-stage0-dynamic/warmelt-normal.dynamic.so \
                melt-stage0-dynamic/warmelt-normal+meltdesc.c  \
             melt-stage0-dynamic/warmelt-normatch.dynamic.so \
                melt-stage0-dynamic/warmelt-normatch+meltdesc.c  \
             melt-stage0-dynamic/warmelt-genobj.dynamic.so \
                melt-stage0-dynamic/warmelt-genobj+meltdesc.c  \
             melt-stage0-dynamic/warmelt-outobj.dynamic.so \
                melt-stage0-dynamic/warmelt-outobj+meltdesc.c  \
             melt-stage0-dynamic/warmelt-modes.dynamic.so \
                melt-stage0-dynamic/warmelt-modes+meltdesc.c 
	date  +"#$@ generated %F" > $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-first.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-base.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-debug.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-macro.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normal.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normatch.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-genobj.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-outobj.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-modes.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@




#@ stage 0 flavor dynamic fullstage stamp  from melt-build.tpl line 284 
melt-stage0-dynamic-fullstage.stamp: \
 melt-stage0-warmelt-first.dynamic-module.stamp  \
 melt-stage0-warmelt-base.dynamic-module.stamp  \
 melt-stage0-warmelt-debug.dynamic-module.stamp  \
 melt-stage0-warmelt-macro.dynamic-module.stamp  \
 melt-stage0-warmelt-normal.dynamic-module.stamp  \
 melt-stage0-warmelt-normatch.dynamic-module.stamp  \
 melt-stage0-warmelt-genobj.dynamic-module.stamp  \
 melt-stage0-warmelt-outobj.dynamic-module.stamp  \
 melt-stage0-warmelt-modes.dynamic-module.stamp 
	cat $^ > $@-tmp
	$(melt_move_if_change) $@-tmp $@


##@ end STAGE0  flavor dynamic  from melt-build.tpl line 292
####-------------------------------------------------------------


## stage 0 flavor quicklybuilt  from melt-build.tpl line 208

## stage 0 for  from melt-build.tpl line 210
melt-stage0-quicklybuilt:
	test -d  melt-stage0-quicklybuilt/ || mkdir  melt-stage0-quicklybuilt/
	ls -ld $$PWD/melt-stage0-quicklybuilt/ > melt-stage0-quicklybuilt-directory.stamp
melt-stage0-quicklybuilt-directory.stamp: melt-stage0-quicklybuilt ; @true

#@ stage 0 flavor quicklybuilt from melt-build.tpl line 216



#@ stage 0 for warmelt-first flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_FIRST_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-first MELT_GENERATED_FIRST_CUMULMD5= $(MELT_GENERATED_FIRST_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-first \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_FIRST_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-first
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-first*  melt-workdir/warmelt-first*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-first* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-first flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-first+meltdesc.c melt-stage0-quicklybuilt/warmelt-first+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-first+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-first flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-first.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-first.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-first.quicklybuilt-module.stamp

#@ stage 0 for warmelt-first flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-first.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so ; @true

#@ stage 0 for warmelt-first flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-first flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-base flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_BASE_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-base MELT_GENERATED_BASE_CUMULMD5= $(MELT_GENERATED_BASE_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-base \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_BASE_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-base
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-base*  melt-workdir/warmelt-base*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-base* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-base flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-base+meltdesc.c melt-stage0-quicklybuilt/warmelt-base+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-base+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-base flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-base.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-base.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-base.quicklybuilt-module.stamp

#@ stage 0 for warmelt-base flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-base.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so ; @true

#@ stage 0 for warmelt-base flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-base flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-debug flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_DEBUG_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-debug MELT_GENERATED_DEBUG_CUMULMD5= $(MELT_GENERATED_DEBUG_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-debug \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-debug
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-debug*  melt-workdir/warmelt-debug*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-debug* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-debug flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-debug+meltdesc.c melt-stage0-quicklybuilt/warmelt-debug+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-debug+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-debug flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-debug.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-debug.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-debug.quicklybuilt-module.stamp

#@ stage 0 for warmelt-debug flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-debug.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so ; @true

#@ stage 0 for warmelt-debug flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-debug flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-macro flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_MACRO_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-macro MELT_GENERATED_MACRO_CUMULMD5= $(MELT_GENERATED_MACRO_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-macro \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MACRO_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-macro
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-macro*  melt-workdir/warmelt-macro*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-macro* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-macro flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-macro+meltdesc.c melt-stage0-quicklybuilt/warmelt-macro+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-macro+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-macro flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-macro.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-macro.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-macro.quicklybuilt-module.stamp

#@ stage 0 for warmelt-macro flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-macro.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so ; @true

#@ stage 0 for warmelt-macro flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-macro flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-normal flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_NORMAL_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-normal MELT_GENERATED_NORMAL_CUMULMD5= $(MELT_GENERATED_NORMAL_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normal \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-normal
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-normal*  melt-workdir/warmelt-normal*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-normal* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normal flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-normal+meltdesc.c melt-stage0-quicklybuilt/warmelt-normal+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normal+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-normal flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-normal.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normal.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-normal.quicklybuilt-module.stamp

#@ stage 0 for warmelt-normal flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-normal.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so ; @true

#@ stage 0 for warmelt-normal flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-normal flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-normatch flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_NORMATCH_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-normatch MELT_GENERATED_NORMATCH_CUMULMD5= $(MELT_GENERATED_NORMATCH_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normatch \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-normatch
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-normatch*  melt-workdir/warmelt-normatch*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-normatch* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normatch flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-normatch+meltdesc.c melt-stage0-quicklybuilt/warmelt-normatch+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normatch+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-normatch flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-normatch.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normatch.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-normatch.quicklybuilt-module.stamp

#@ stage 0 for warmelt-normatch flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-normatch.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so ; @true

#@ stage 0 for warmelt-normatch flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-normatch flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-genobj flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_GENOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-genobj MELT_GENERATED_GENOBJ_CUMULMD5= $(MELT_GENERATED_GENOBJ_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-genobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-genobj
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-genobj*  melt-workdir/warmelt-genobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-genobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-genobj flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-genobj+meltdesc.c melt-stage0-quicklybuilt/warmelt-genobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-genobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-genobj flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-genobj.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-genobj.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-genobj.quicklybuilt-module.stamp

#@ stage 0 for warmelt-genobj flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-genobj.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so ; @true

#@ stage 0 for warmelt-genobj flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-genobj flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-outobj flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_OUTOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-outobj MELT_GENERATED_OUTOBJ_CUMULMD5= $(MELT_GENERATED_OUTOBJ_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-outobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-outobj
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-outobj*  melt-workdir/warmelt-outobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-outobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-outobj flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-outobj+meltdesc.c melt-stage0-quicklybuilt/warmelt-outobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-outobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-outobj flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-outobj.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-outobj.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-outobj.quicklybuilt-module.stamp

#@ stage 0 for warmelt-outobj flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-outobj.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so ; @true

#@ stage 0 for warmelt-outobj flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-outobj flavored quicklybuilt  from melt-build.tpl line 266


#@ stage 0 for warmelt-modes flavor quicklybuilt  from melt-build.tpl line 220
melt-stage0-quicklybuilt/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_MODES_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-modes MELT_GENERATED_MODES_CUMULMD5= $(MELT_GENERATED_MODES_CUMULMD5)
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-modes \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MODES_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-modes
	@echo  from melt-build.tpl line 232 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-modes*  melt-workdir/warmelt-modes*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 236
	-ls -l melt-stage0-quicklybuilt/warmelt-modes* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-modes flavor quicklybuilt  descfiles from melt-build.tpl line 239 
melt-stage0-quicklybuilt/warmelt-modes+meltdesc.c melt-stage0-quicklybuilt/warmelt-modes+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-modes+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-modes flavor quicklybuilt  shortmodule from melt-build.tpl line 246 
melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).quicklybuilt.so
	@echo  from melt-build.tpl line 249 $@
	-ls -l $< $@
	@echo  from melt-build.tpl line 251 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ from melt-build.tpl line 255 
	$(MD5SUM) $@ > melt-stage0-warmelt-modes.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-modes.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-modes.quicklybuilt-module.stamp

#@ stage 0 for warmelt-modes flavor quicklybuilt  stamp from melt-build.tpl line 260 
melt-stage0-warmelt-modes.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so ; @true

#@ stage 0 for warmelt-modes flavor quicklybuilt done  from melt-build.tpl line 264

#### end STAGE0 of warmelt-modes flavored quicklybuilt  from melt-build.tpl line 266



#@ stage 0 flavor quicklybuilt modulelist  from melt-build.tpl line 270 
melt-stage0-quicklybuilt/warmelt.modlis:  | \
             melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-first+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-base+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-debug+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-macro+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-normal+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-normatch+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-genobj+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-outobj+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-modes+meltdesc.c 
	date  +"#$@ generated %F" > $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-first.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-base.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-debug.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-macro.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normal.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normatch.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-genobj.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-outobj.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-modes.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@




#@ stage 0 flavor quicklybuilt fullstage stamp  from melt-build.tpl line 284 
melt-stage0-quicklybuilt-fullstage.stamp: \
 melt-stage0-warmelt-first.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-base.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-debug.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-macro.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-normal.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-normatch.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-genobj.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-outobj.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-modes.quicklybuilt-module.stamp 
	cat $^ > $@-tmp
	$(melt_move_if_change) $@-tmp $@


##@ end STAGE0  flavor quicklybuilt  from melt-build.tpl line 292
####-------------------------------------------------------------

 


################################################################
################################################################
#### making our melt stages  from melt-build.tpl line 300


#@  for melt-stage1 from melt-build.tpl line 303
#### rules for melt-stage1, previous $(MELT_STAGE_ZERO)


### the C source of melt-stage1 for warmelt-first from melt-build.tpl line 313

## the timestamp C header file  for warmelt-first from melt-build.tpl line 315
melt-stage1/warmelt-first+melttime.h: melt-stage1/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-first from melt-build.tpl line 318
melt-stage1/warmelt-first+meltdesc.c melt-stage1/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
$(MELT_STAGE_ZERO)/warmelt-first.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-base.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-first+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage1.args-tmp  warmelt-first+melt-stage1.args
	@echo; echo; echo -n  warmelt-first+melt-stage1.args: ; cat warmelt-first+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-first+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-first+melt-stage1.args
	@ls -l melt-stage1/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-first.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-first for melt-stage1
melt-stage1/warmelt-first.quicklybuilt.so: melt-stage1/warmelt-first.c \
              $(wildcard melt-stage1/warmelt-first+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-first-module.stamp-tmp melt-stage1-warmelt-first-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-first-module.stamp: melt-stage1/warmelt-first.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-first for melt-stage1
melt-stage1/warmelt-first.debugnoline.so:   melt-stage1/warmelt-first.c \
              $(wildcard melt-stage1/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-first



### the C source of melt-stage1 for warmelt-base from melt-build.tpl line 313

## the timestamp C header file  for warmelt-base from melt-build.tpl line 315
melt-stage1/warmelt-base+melttime.h: melt-stage1/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-base from melt-build.tpl line 318
melt-stage1/warmelt-base+meltdesc.c melt-stage1/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-base.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-base+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage1.args-tmp  warmelt-base+melt-stage1.args
	@echo; echo; echo -n  warmelt-base+melt-stage1.args: ; cat warmelt-base+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-base+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-base+melt-stage1.args
	@ls -l melt-stage1/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-base.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-base for melt-stage1
melt-stage1/warmelt-base.quicklybuilt.so: melt-stage1/warmelt-base.c \
              $(wildcard melt-stage1/warmelt-base+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-base-module.stamp-tmp melt-stage1-warmelt-base-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-base-module.stamp: melt-stage1/warmelt-base.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-base for melt-stage1
melt-stage1/warmelt-base.debugnoline.so:   melt-stage1/warmelt-base.c \
              $(wildcard melt-stage1/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-base



### the C source of melt-stage1 for warmelt-debug from melt-build.tpl line 313

## the timestamp C header file  for warmelt-debug from melt-build.tpl line 315
melt-stage1/warmelt-debug+melttime.h: melt-stage1/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-debug from melt-build.tpl line 318
melt-stage1/warmelt-debug+meltdesc.c melt-stage1/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-debug+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage1.args-tmp  warmelt-debug+melt-stage1.args
	@echo; echo; echo -n  warmelt-debug+melt-stage1.args: ; cat warmelt-debug+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-debug+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-debug+melt-stage1.args
	@ls -l melt-stage1/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-debug.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-debug for melt-stage1
melt-stage1/warmelt-debug.quicklybuilt.so: melt-stage1/warmelt-debug.c \
              $(wildcard melt-stage1/warmelt-debug+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-debug-module.stamp-tmp melt-stage1-warmelt-debug-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-debug-module.stamp: melt-stage1/warmelt-debug.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-debug for melt-stage1
melt-stage1/warmelt-debug.debugnoline.so:   melt-stage1/warmelt-debug.c \
              $(wildcard melt-stage1/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-debug



### the C source of melt-stage1 for warmelt-macro from melt-build.tpl line 313

## the timestamp C header file  for warmelt-macro from melt-build.tpl line 315
melt-stage1/warmelt-macro+melttime.h: melt-stage1/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-macro from melt-build.tpl line 318
melt-stage1/warmelt-macro+meltdesc.c melt-stage1/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-macro+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage1.args-tmp  warmelt-macro+melt-stage1.args
	@echo; echo; echo -n  warmelt-macro+melt-stage1.args: ; cat warmelt-macro+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-macro+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-macro+melt-stage1.args
	@ls -l melt-stage1/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-macro.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-macro for melt-stage1
melt-stage1/warmelt-macro.quicklybuilt.so: melt-stage1/warmelt-macro.c \
              $(wildcard melt-stage1/warmelt-macro+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-macro-module.stamp-tmp melt-stage1-warmelt-macro-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-macro-module.stamp: melt-stage1/warmelt-macro.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-macro for melt-stage1
melt-stage1/warmelt-macro.debugnoline.so:   melt-stage1/warmelt-macro.c \
              $(wildcard melt-stage1/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-macro



### the C source of melt-stage1 for warmelt-normal from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normal from melt-build.tpl line 315
melt-stage1/warmelt-normal+melttime.h: melt-stage1/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-normal from melt-build.tpl line 318
melt-stage1/warmelt-normal+meltdesc.c melt-stage1/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-normal+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage1.args-tmp  warmelt-normal+melt-stage1.args
	@echo; echo; echo -n  warmelt-normal+melt-stage1.args: ; cat warmelt-normal+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normal+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normal+melt-stage1.args
	@ls -l melt-stage1/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-normal.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normal for melt-stage1
melt-stage1/warmelt-normal.quicklybuilt.so: melt-stage1/warmelt-normal.c \
              $(wildcard melt-stage1/warmelt-normal+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-normal-module.stamp-tmp melt-stage1-warmelt-normal-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-normal-module.stamp: melt-stage1/warmelt-normal.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normal for melt-stage1
melt-stage1/warmelt-normal.debugnoline.so:   melt-stage1/warmelt-normal.c \
              $(wildcard melt-stage1/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normal



### the C source of melt-stage1 for warmelt-normatch from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normatch from melt-build.tpl line 315
melt-stage1/warmelt-normatch+melttime.h: melt-stage1/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-normatch from melt-build.tpl line 318
melt-stage1/warmelt-normatch+meltdesc.c melt-stage1/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-normatch+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage1.args-tmp  warmelt-normatch+melt-stage1.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage1.args: ; cat warmelt-normatch+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normatch+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normatch+melt-stage1.args
	@ls -l melt-stage1/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-normatch.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normatch for melt-stage1
melt-stage1/warmelt-normatch.quicklybuilt.so: melt-stage1/warmelt-normatch.c \
              $(wildcard melt-stage1/warmelt-normatch+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-normatch-module.stamp-tmp melt-stage1-warmelt-normatch-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-normatch-module.stamp: melt-stage1/warmelt-normatch.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normatch for melt-stage1
melt-stage1/warmelt-normatch.debugnoline.so:   melt-stage1/warmelt-normatch.c \
              $(wildcard melt-stage1/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normatch



### the C source of melt-stage1 for warmelt-genobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-genobj from melt-build.tpl line 315
melt-stage1/warmelt-genobj+melttime.h: melt-stage1/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-genobj from melt-build.tpl line 318
melt-stage1/warmelt-genobj+meltdesc.c melt-stage1/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-genobj+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage1.args-tmp  warmelt-genobj+melt-stage1.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage1.args: ; cat warmelt-genobj+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-genobj+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-genobj+melt-stage1.args
	@ls -l melt-stage1/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-genobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-genobj for melt-stage1
melt-stage1/warmelt-genobj.quicklybuilt.so: melt-stage1/warmelt-genobj.c \
              $(wildcard melt-stage1/warmelt-genobj+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-genobj-module.stamp-tmp melt-stage1-warmelt-genobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-genobj-module.stamp: melt-stage1/warmelt-genobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-genobj for melt-stage1
melt-stage1/warmelt-genobj.debugnoline.so:   melt-stage1/warmelt-genobj.c \
              $(wildcard melt-stage1/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-genobj



### the C source of melt-stage1 for warmelt-outobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-outobj from melt-build.tpl line 315
melt-stage1/warmelt-outobj+melttime.h: melt-stage1/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-outobj from melt-build.tpl line 318
melt-stage1/warmelt-outobj+meltdesc.c melt-stage1/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
       melt-stage1-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-outobj+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage1.args-tmp  warmelt-outobj+melt-stage1.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage1.args: ; cat warmelt-outobj+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-outobj+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-outobj+melt-stage1.args
	@ls -l melt-stage1/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-outobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-outobj for melt-stage1
melt-stage1/warmelt-outobj.quicklybuilt.so: melt-stage1/warmelt-outobj.c \
              $(wildcard melt-stage1/warmelt-outobj+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-outobj-module.stamp-tmp melt-stage1-warmelt-outobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-outobj-module.stamp: melt-stage1/warmelt-outobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-outobj for melt-stage1
melt-stage1/warmelt-outobj.debugnoline.so:   melt-stage1/warmelt-outobj.c \
              $(wildcard melt-stage1/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-outobj



### the C source of melt-stage1 for warmelt-modes from melt-build.tpl line 313

## the timestamp C header file  for warmelt-modes from melt-build.tpl line 315
melt-stage1/warmelt-modes+melttime.h: melt-stage1/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-modes from melt-build.tpl line 318
melt-stage1/warmelt-modes+meltdesc.c melt-stage1/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
       melt-stage1-warmelt-genobj-module.stamp \
       melt-stage1-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-modes+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage1.args-tmp  warmelt-modes+melt-stage1.args
	@echo; echo; echo -n  warmelt-modes+melt-stage1.args: ; cat warmelt-modes+melt-stage1.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-modes+melt-stage1  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-modes+melt-stage1.args
	@ls -l melt-stage1/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-modes.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-modes for melt-stage1
melt-stage1/warmelt-modes.quicklybuilt.so: melt-stage1/warmelt-modes.c \
              $(wildcard melt-stage1/warmelt-modes+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage1-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-modes-module.stamp-tmp melt-stage1-warmelt-modes-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage1-warmelt-modes-module.stamp: melt-stage1/warmelt-modes.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-modes for melt-stage1
melt-stage1/warmelt-modes.debugnoline.so:   melt-stage1/warmelt-modes.c \
              $(wildcard melt-stage1/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-modes




#@ from melt-build.tpl line 392
## the module list in melt-stage1
melt-stage1/warmelt.modlis:  \
             melt-stage1/warmelt-first.quicklybuilt.so \
             melt-stage1/warmelt-base.quicklybuilt.so \
             melt-stage1/warmelt-debug.quicklybuilt.so \
             melt-stage1/warmelt-macro.quicklybuilt.so \
             melt-stage1/warmelt-normal.quicklybuilt.so \
             melt-stage1/warmelt-normatch.quicklybuilt.so \
             melt-stage1/warmelt-genobj.quicklybuilt.so \
             melt-stage1/warmelt-outobj.quicklybuilt.so \
             melt-stage1/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 404
melt-stage1/warmelt.debugnoline.modlis:  \
             melt-stage1/warmelt-first.debugnoline.so \
             melt-stage1/warmelt-base.debugnoline.so \
             melt-stage1/warmelt-debug.debugnoline.so \
             melt-stage1/warmelt-macro.debugnoline.so \
             melt-stage1/warmelt-normal.debugnoline.so \
             melt-stage1/warmelt-normatch.debugnoline.so \
             melt-stage1/warmelt-genobj.debugnoline.so \
             melt-stage1/warmelt-outobj.debugnoline.so \
             melt-stage1/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage1
#@ from melt-build.tpl line 416
melt-stage1-fullstage.stamp:  melt-run.h  melt-stage1/warmelt.modlis \
 melt-stage1-warmelt-first-module.stamp melt-stage1/warmelt-first.c \
 melt-stage1-warmelt-base-module.stamp melt-stage1/warmelt-base.c \
 melt-stage1-warmelt-debug-module.stamp melt-stage1/warmelt-debug.c \
 melt-stage1-warmelt-macro-module.stamp melt-stage1/warmelt-macro.c \
 melt-stage1-warmelt-normal-module.stamp melt-stage1/warmelt-normal.c \
 melt-stage1-warmelt-normatch-module.stamp melt-stage1/warmelt-normatch.c \
 melt-stage1-warmelt-genobj-module.stamp melt-stage1/warmelt-genobj.c \
 melt-stage1-warmelt-outobj-module.stamp melt-stage1/warmelt-outobj.c \
 melt-stage1-warmelt-modes-module.stamp melt-stage1/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-first.c $(wildcard melt-stage1/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-base.c $(wildcard melt-stage1/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-debug.c $(wildcard melt-stage1/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-macro.c $(wildcard melt-stage1/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-normal.c $(wildcard melt-stage1/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-normatch.c $(wildcard melt-stage1/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-genobj.c $(wildcard melt-stage1/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-outobj.c $(wildcard melt-stage1/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-modes.c $(wildcard melt-stage1/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage1
#@ from melt-build.tpl line 427
.PHONY: warmelt1 warmelt1n
warmelt1: melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis
	@echo MELT build made $@
warmelt1n:  melt-stage1-fullstage.stamp melt-stage1/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ from melt-build.tpl line 434 melt-stage1 directory and stamp
melt-stage1:
	test -d  melt-stage1/ || mkdir melt-stage1 
	ls -ld $$PWD/melt-stage1 > melt-stage1-directory.stamp
melt-stage1-directory.stamp: melt-stage1 ; @true


### end of melt-stage1 from melt-build.tpl line 441 


#@  for melt-stage2 from melt-build.tpl line 303
#### rules for melt-stage2, previous melt-stage1


### the C source of melt-stage2 for warmelt-first from melt-build.tpl line 313

## the timestamp C header file  for warmelt-first from melt-build.tpl line 315
melt-stage2/warmelt-first+melttime.h: melt-stage2/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-first from melt-build.tpl line 318
melt-stage2/warmelt-first+meltdesc.c melt-stage2/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-first+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage2.args-tmp  warmelt-first+melt-stage2.args
	@echo; echo; echo -n  warmelt-first+melt-stage2.args: ; cat warmelt-first+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-first+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-first+melt-stage2.args
	@ls -l melt-stage2/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-first.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-first for melt-stage2
melt-stage2/warmelt-first.quicklybuilt.so: melt-stage2/warmelt-first.c \
              $(wildcard melt-stage2/warmelt-first+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-first-module.stamp-tmp melt-stage2-warmelt-first-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-first-module.stamp: melt-stage2/warmelt-first.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-first for melt-stage2
melt-stage2/warmelt-first.debugnoline.so:   melt-stage2/warmelt-first.c \
              $(wildcard melt-stage2/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-first



### the C source of melt-stage2 for warmelt-base from melt-build.tpl line 313

## the timestamp C header file  for warmelt-base from melt-build.tpl line 315
melt-stage2/warmelt-base+melttime.h: melt-stage2/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-base from melt-build.tpl line 318
melt-stage2/warmelt-base+meltdesc.c melt-stage2/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-base+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage2.args-tmp  warmelt-base+melt-stage2.args
	@echo; echo; echo -n  warmelt-base+melt-stage2.args: ; cat warmelt-base+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-base+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-base+melt-stage2.args
	@ls -l melt-stage2/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-base.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-base for melt-stage2
melt-stage2/warmelt-base.quicklybuilt.so: melt-stage2/warmelt-base.c \
              $(wildcard melt-stage2/warmelt-base+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-base-module.stamp-tmp melt-stage2-warmelt-base-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-base-module.stamp: melt-stage2/warmelt-base.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-base for melt-stage2
melt-stage2/warmelt-base.debugnoline.so:   melt-stage2/warmelt-base.c \
              $(wildcard melt-stage2/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-base



### the C source of melt-stage2 for warmelt-debug from melt-build.tpl line 313

## the timestamp C header file  for warmelt-debug from melt-build.tpl line 315
melt-stage2/warmelt-debug+melttime.h: melt-stage2/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-debug from melt-build.tpl line 318
melt-stage2/warmelt-debug+meltdesc.c melt-stage2/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-debug+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage2.args-tmp  warmelt-debug+melt-stage2.args
	@echo; echo; echo -n  warmelt-debug+melt-stage2.args: ; cat warmelt-debug+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-debug+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-debug+melt-stage2.args
	@ls -l melt-stage2/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-debug.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-debug for melt-stage2
melt-stage2/warmelt-debug.quicklybuilt.so: melt-stage2/warmelt-debug.c \
              $(wildcard melt-stage2/warmelt-debug+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-debug-module.stamp-tmp melt-stage2-warmelt-debug-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-debug-module.stamp: melt-stage2/warmelt-debug.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-debug for melt-stage2
melt-stage2/warmelt-debug.debugnoline.so:   melt-stage2/warmelt-debug.c \
              $(wildcard melt-stage2/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-debug



### the C source of melt-stage2 for warmelt-macro from melt-build.tpl line 313

## the timestamp C header file  for warmelt-macro from melt-build.tpl line 315
melt-stage2/warmelt-macro+melttime.h: melt-stage2/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-macro from melt-build.tpl line 318
melt-stage2/warmelt-macro+meltdesc.c melt-stage2/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-macro+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage2.args-tmp  warmelt-macro+melt-stage2.args
	@echo; echo; echo -n  warmelt-macro+melt-stage2.args: ; cat warmelt-macro+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-macro+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-macro+melt-stage2.args
	@ls -l melt-stage2/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-macro.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-macro for melt-stage2
melt-stage2/warmelt-macro.quicklybuilt.so: melt-stage2/warmelt-macro.c \
              $(wildcard melt-stage2/warmelt-macro+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-macro-module.stamp-tmp melt-stage2-warmelt-macro-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-macro-module.stamp: melt-stage2/warmelt-macro.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-macro for melt-stage2
melt-stage2/warmelt-macro.debugnoline.so:   melt-stage2/warmelt-macro.c \
              $(wildcard melt-stage2/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-macro



### the C source of melt-stage2 for warmelt-normal from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normal from melt-build.tpl line 315
melt-stage2/warmelt-normal+melttime.h: melt-stage2/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-normal from melt-build.tpl line 318
melt-stage2/warmelt-normal+meltdesc.c melt-stage2/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-normal+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage2.args-tmp  warmelt-normal+melt-stage2.args
	@echo; echo; echo -n  warmelt-normal+melt-stage2.args: ; cat warmelt-normal+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normal+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normal+melt-stage2.args
	@ls -l melt-stage2/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-normal.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normal for melt-stage2
melt-stage2/warmelt-normal.quicklybuilt.so: melt-stage2/warmelt-normal.c \
              $(wildcard melt-stage2/warmelt-normal+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-normal-module.stamp-tmp melt-stage2-warmelt-normal-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-normal-module.stamp: melt-stage2/warmelt-normal.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normal for melt-stage2
melt-stage2/warmelt-normal.debugnoline.so:   melt-stage2/warmelt-normal.c \
              $(wildcard melt-stage2/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normal



### the C source of melt-stage2 for warmelt-normatch from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normatch from melt-build.tpl line 315
melt-stage2/warmelt-normatch+melttime.h: melt-stage2/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-normatch from melt-build.tpl line 318
melt-stage2/warmelt-normatch+meltdesc.c melt-stage2/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-normatch+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage2.args-tmp  warmelt-normatch+melt-stage2.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage2.args: ; cat warmelt-normatch+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normatch+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normatch+melt-stage2.args
	@ls -l melt-stage2/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-normatch.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normatch for melt-stage2
melt-stage2/warmelt-normatch.quicklybuilt.so: melt-stage2/warmelt-normatch.c \
              $(wildcard melt-stage2/warmelt-normatch+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-normatch-module.stamp-tmp melt-stage2-warmelt-normatch-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-normatch-module.stamp: melt-stage2/warmelt-normatch.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normatch for melt-stage2
melt-stage2/warmelt-normatch.debugnoline.so:   melt-stage2/warmelt-normatch.c \
              $(wildcard melt-stage2/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normatch



### the C source of melt-stage2 for warmelt-genobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-genobj from melt-build.tpl line 315
melt-stage2/warmelt-genobj+melttime.h: melt-stage2/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-genobj from melt-build.tpl line 318
melt-stage2/warmelt-genobj+meltdesc.c melt-stage2/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-genobj+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage2.args-tmp  warmelt-genobj+melt-stage2.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage2.args: ; cat warmelt-genobj+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-genobj+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-genobj+melt-stage2.args
	@ls -l melt-stage2/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-genobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-genobj for melt-stage2
melt-stage2/warmelt-genobj.quicklybuilt.so: melt-stage2/warmelt-genobj.c \
              $(wildcard melt-stage2/warmelt-genobj+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-genobj-module.stamp-tmp melt-stage2-warmelt-genobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-genobj-module.stamp: melt-stage2/warmelt-genobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-genobj for melt-stage2
melt-stage2/warmelt-genobj.debugnoline.so:   melt-stage2/warmelt-genobj.c \
              $(wildcard melt-stage2/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-genobj



### the C source of melt-stage2 for warmelt-outobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-outobj from melt-build.tpl line 315
melt-stage2/warmelt-outobj+melttime.h: melt-stage2/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-outobj from melt-build.tpl line 318
melt-stage2/warmelt-outobj+meltdesc.c melt-stage2/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
       melt-stage2-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-outobj+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage2.args-tmp  warmelt-outobj+melt-stage2.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage2.args: ; cat warmelt-outobj+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-outobj+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-outobj+melt-stage2.args
	@ls -l melt-stage2/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-outobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-outobj for melt-stage2
melt-stage2/warmelt-outobj.quicklybuilt.so: melt-stage2/warmelt-outobj.c \
              $(wildcard melt-stage2/warmelt-outobj+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-outobj-module.stamp-tmp melt-stage2-warmelt-outobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-outobj-module.stamp: melt-stage2/warmelt-outobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-outobj for melt-stage2
melt-stage2/warmelt-outobj.debugnoline.so:   melt-stage2/warmelt-outobj.c \
              $(wildcard melt-stage2/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-outobj



### the C source of melt-stage2 for warmelt-modes from melt-build.tpl line 313

## the timestamp C header file  for warmelt-modes from melt-build.tpl line 315
melt-stage2/warmelt-modes+melttime.h: melt-stage2/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-modes from melt-build.tpl line 318
melt-stage2/warmelt-modes+meltdesc.c melt-stage2/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
       melt-stage2-warmelt-genobj-module.stamp \
       melt-stage2-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-modes+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage2.args-tmp  warmelt-modes+melt-stage2.args
	@echo; echo; echo -n  warmelt-modes+melt-stage2.args: ; cat warmelt-modes+melt-stage2.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-modes+melt-stage2  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-modes+melt-stage2.args
	@ls -l melt-stage2/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-modes.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-modes for melt-stage2
melt-stage2/warmelt-modes.quicklybuilt.so: melt-stage2/warmelt-modes.c \
              $(wildcard melt-stage2/warmelt-modes+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage2-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-modes-module.stamp-tmp melt-stage2-warmelt-modes-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage2-warmelt-modes-module.stamp: melt-stage2/warmelt-modes.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-modes for melt-stage2
melt-stage2/warmelt-modes.debugnoline.so:   melt-stage2/warmelt-modes.c \
              $(wildcard melt-stage2/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-modes




#@ from melt-build.tpl line 392
## the module list in melt-stage2
melt-stage2/warmelt.modlis:  \
             melt-stage2/warmelt-first.quicklybuilt.so \
             melt-stage2/warmelt-base.quicklybuilt.so \
             melt-stage2/warmelt-debug.quicklybuilt.so \
             melt-stage2/warmelt-macro.quicklybuilt.so \
             melt-stage2/warmelt-normal.quicklybuilt.so \
             melt-stage2/warmelt-normatch.quicklybuilt.so \
             melt-stage2/warmelt-genobj.quicklybuilt.so \
             melt-stage2/warmelt-outobj.quicklybuilt.so \
             melt-stage2/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 404
melt-stage2/warmelt.debugnoline.modlis:  \
             melt-stage2/warmelt-first.debugnoline.so \
             melt-stage2/warmelt-base.debugnoline.so \
             melt-stage2/warmelt-debug.debugnoline.so \
             melt-stage2/warmelt-macro.debugnoline.so \
             melt-stage2/warmelt-normal.debugnoline.so \
             melt-stage2/warmelt-normatch.debugnoline.so \
             melt-stage2/warmelt-genobj.debugnoline.so \
             melt-stage2/warmelt-outobj.debugnoline.so \
             melt-stage2/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage2
#@ from melt-build.tpl line 416
melt-stage2-fullstage.stamp:  melt-run.h  melt-stage2/warmelt.modlis \
 melt-stage2-warmelt-first-module.stamp melt-stage2/warmelt-first.c \
 melt-stage2-warmelt-base-module.stamp melt-stage2/warmelt-base.c \
 melt-stage2-warmelt-debug-module.stamp melt-stage2/warmelt-debug.c \
 melt-stage2-warmelt-macro-module.stamp melt-stage2/warmelt-macro.c \
 melt-stage2-warmelt-normal-module.stamp melt-stage2/warmelt-normal.c \
 melt-stage2-warmelt-normatch-module.stamp melt-stage2/warmelt-normatch.c \
 melt-stage2-warmelt-genobj-module.stamp melt-stage2/warmelt-genobj.c \
 melt-stage2-warmelt-outobj-module.stamp melt-stage2/warmelt-outobj.c \
 melt-stage2-warmelt-modes-module.stamp melt-stage2/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-first.c $(wildcard melt-stage2/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-base.c $(wildcard melt-stage2/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-debug.c $(wildcard melt-stage2/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-macro.c $(wildcard melt-stage2/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-normal.c $(wildcard melt-stage2/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-normatch.c $(wildcard melt-stage2/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-genobj.c $(wildcard melt-stage2/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-outobj.c $(wildcard melt-stage2/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-modes.c $(wildcard melt-stage2/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage2
#@ from melt-build.tpl line 427
.PHONY: warmelt2 warmelt2n
warmelt2: melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis
	@echo MELT build made $@
warmelt2n:  melt-stage2-fullstage.stamp melt-stage2/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ from melt-build.tpl line 434 melt-stage2 directory and stamp
melt-stage2:
	test -d  melt-stage2/ || mkdir melt-stage2 
	ls -ld $$PWD/melt-stage2 > melt-stage2-directory.stamp
melt-stage2-directory.stamp: melt-stage2 ; @true


### end of melt-stage2 from melt-build.tpl line 441 


#@  for melt-stage3 from melt-build.tpl line 303
#### rules for melt-stage3, previous melt-stage2


### the C source of melt-stage3 for warmelt-first from melt-build.tpl line 313

## the timestamp C header file  for warmelt-first from melt-build.tpl line 315
melt-stage3/warmelt-first+melttime.h: melt-stage3/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-first from melt-build.tpl line 318
melt-stage3/warmelt-first+meltdesc.c melt-stage3/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-first+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage3.args-tmp  warmelt-first+melt-stage3.args
	@echo; echo; echo -n  warmelt-first+melt-stage3.args: ; cat warmelt-first+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-first+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-first+melt-stage3.args
	@ls -l melt-stage3/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-first.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-first for melt-stage3
melt-stage3/warmelt-first.quicklybuilt.so: melt-stage3/warmelt-first.c \
              $(wildcard melt-stage3/warmelt-first+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-first-module.stamp-tmp melt-stage3-warmelt-first-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-first-module.stamp: melt-stage3/warmelt-first.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-first for melt-stage3
melt-stage3/warmelt-first.debugnoline.so:   melt-stage3/warmelt-first.c \
              $(wildcard melt-stage3/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-first



### the C source of melt-stage3 for warmelt-base from melt-build.tpl line 313

## the timestamp C header file  for warmelt-base from melt-build.tpl line 315
melt-stage3/warmelt-base+melttime.h: melt-stage3/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-base from melt-build.tpl line 318
melt-stage3/warmelt-base+meltdesc.c melt-stage3/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-base+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage3.args-tmp  warmelt-base+melt-stage3.args
	@echo; echo; echo -n  warmelt-base+melt-stage3.args: ; cat warmelt-base+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-base+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-base+melt-stage3.args
	@ls -l melt-stage3/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-base.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-base for melt-stage3
melt-stage3/warmelt-base.quicklybuilt.so: melt-stage3/warmelt-base.c \
              $(wildcard melt-stage3/warmelt-base+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-base-module.stamp-tmp melt-stage3-warmelt-base-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-base-module.stamp: melt-stage3/warmelt-base.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-base for melt-stage3
melt-stage3/warmelt-base.debugnoline.so:   melt-stage3/warmelt-base.c \
              $(wildcard melt-stage3/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-base



### the C source of melt-stage3 for warmelt-debug from melt-build.tpl line 313

## the timestamp C header file  for warmelt-debug from melt-build.tpl line 315
melt-stage3/warmelt-debug+melttime.h: melt-stage3/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-debug from melt-build.tpl line 318
melt-stage3/warmelt-debug+meltdesc.c melt-stage3/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-debug+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage3.args-tmp  warmelt-debug+melt-stage3.args
	@echo; echo; echo -n  warmelt-debug+melt-stage3.args: ; cat warmelt-debug+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-debug+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-debug+melt-stage3.args
	@ls -l melt-stage3/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-debug.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-debug for melt-stage3
melt-stage3/warmelt-debug.quicklybuilt.so: melt-stage3/warmelt-debug.c \
              $(wildcard melt-stage3/warmelt-debug+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-debug-module.stamp-tmp melt-stage3-warmelt-debug-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-debug-module.stamp: melt-stage3/warmelt-debug.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-debug for melt-stage3
melt-stage3/warmelt-debug.debugnoline.so:   melt-stage3/warmelt-debug.c \
              $(wildcard melt-stage3/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-debug



### the C source of melt-stage3 for warmelt-macro from melt-build.tpl line 313

## the timestamp C header file  for warmelt-macro from melt-build.tpl line 315
melt-stage3/warmelt-macro+melttime.h: melt-stage3/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-macro from melt-build.tpl line 318
melt-stage3/warmelt-macro+meltdesc.c melt-stage3/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-macro+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage3.args-tmp  warmelt-macro+melt-stage3.args
	@echo; echo; echo -n  warmelt-macro+melt-stage3.args: ; cat warmelt-macro+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-macro+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-macro+melt-stage3.args
	@ls -l melt-stage3/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-macro.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-macro for melt-stage3
melt-stage3/warmelt-macro.quicklybuilt.so: melt-stage3/warmelt-macro.c \
              $(wildcard melt-stage3/warmelt-macro+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-macro-module.stamp-tmp melt-stage3-warmelt-macro-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-macro-module.stamp: melt-stage3/warmelt-macro.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-macro for melt-stage3
melt-stage3/warmelt-macro.debugnoline.so:   melt-stage3/warmelt-macro.c \
              $(wildcard melt-stage3/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-macro



### the C source of melt-stage3 for warmelt-normal from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normal from melt-build.tpl line 315
melt-stage3/warmelt-normal+melttime.h: melt-stage3/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-normal from melt-build.tpl line 318
melt-stage3/warmelt-normal+meltdesc.c melt-stage3/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-normal+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage3.args-tmp  warmelt-normal+melt-stage3.args
	@echo; echo; echo -n  warmelt-normal+melt-stage3.args: ; cat warmelt-normal+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normal+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normal+melt-stage3.args
	@ls -l melt-stage3/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-normal.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normal for melt-stage3
melt-stage3/warmelt-normal.quicklybuilt.so: melt-stage3/warmelt-normal.c \
              $(wildcard melt-stage3/warmelt-normal+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-normal-module.stamp-tmp melt-stage3-warmelt-normal-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-normal-module.stamp: melt-stage3/warmelt-normal.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normal for melt-stage3
melt-stage3/warmelt-normal.debugnoline.so:   melt-stage3/warmelt-normal.c \
              $(wildcard melt-stage3/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normal



### the C source of melt-stage3 for warmelt-normatch from melt-build.tpl line 313

## the timestamp C header file  for warmelt-normatch from melt-build.tpl line 315
melt-stage3/warmelt-normatch+melttime.h: melt-stage3/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-normatch from melt-build.tpl line 318
melt-stage3/warmelt-normatch+meltdesc.c melt-stage3/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-normatch+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage3.args-tmp  warmelt-normatch+melt-stage3.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage3.args: ; cat warmelt-normatch+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-normatch+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-normatch+melt-stage3.args
	@ls -l melt-stage3/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-normatch.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-normatch for melt-stage3
melt-stage3/warmelt-normatch.quicklybuilt.so: melt-stage3/warmelt-normatch.c \
              $(wildcard melt-stage3/warmelt-normatch+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-normatch-module.stamp-tmp melt-stage3-warmelt-normatch-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-normatch-module.stamp: melt-stage3/warmelt-normatch.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-normatch for melt-stage3
melt-stage3/warmelt-normatch.debugnoline.so:   melt-stage3/warmelt-normatch.c \
              $(wildcard melt-stage3/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normatch



### the C source of melt-stage3 for warmelt-genobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-genobj from melt-build.tpl line 315
melt-stage3/warmelt-genobj+melttime.h: melt-stage3/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-genobj from melt-build.tpl line 318
melt-stage3/warmelt-genobj+meltdesc.c melt-stage3/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-genobj+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage3.args-tmp  warmelt-genobj+melt-stage3.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage3.args: ; cat warmelt-genobj+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-genobj+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-genobj+melt-stage3.args
	@ls -l melt-stage3/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-genobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-genobj for melt-stage3
melt-stage3/warmelt-genobj.quicklybuilt.so: melt-stage3/warmelt-genobj.c \
              $(wildcard melt-stage3/warmelt-genobj+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-genobj-module.stamp-tmp melt-stage3-warmelt-genobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-genobj-module.stamp: melt-stage3/warmelt-genobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-genobj for melt-stage3
melt-stage3/warmelt-genobj.debugnoline.so:   melt-stage3/warmelt-genobj.c \
              $(wildcard melt-stage3/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-genobj



### the C source of melt-stage3 for warmelt-outobj from melt-build.tpl line 313

## the timestamp C header file  for warmelt-outobj from melt-build.tpl line 315
melt-stage3/warmelt-outobj+melttime.h: melt-stage3/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-outobj from melt-build.tpl line 318
melt-stage3/warmelt-outobj+meltdesc.c melt-stage3/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
       melt-stage3-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage3/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-outobj+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage3.args-tmp  warmelt-outobj+melt-stage3.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage3.args: ; cat warmelt-outobj+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-outobj+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-outobj+melt-stage3.args
	@ls -l melt-stage3/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-outobj.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-outobj for melt-stage3
melt-stage3/warmelt-outobj.quicklybuilt.so: melt-stage3/warmelt-outobj.c \
              $(wildcard melt-stage3/warmelt-outobj+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-outobj-module.stamp-tmp melt-stage3-warmelt-outobj-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-outobj-module.stamp: melt-stage3/warmelt-outobj.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-outobj for melt-stage3
melt-stage3/warmelt-outobj.debugnoline.so:   melt-stage3/warmelt-outobj.c \
              $(wildcard melt-stage3/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-outobj



### the C source of melt-stage3 for warmelt-modes from melt-build.tpl line 313

## the timestamp C header file  for warmelt-modes from melt-build.tpl line 315
melt-stage3/warmelt-modes+melttime.h: melt-stage3/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-modes from melt-build.tpl line 318
melt-stage3/warmelt-modes+meltdesc.c melt-stage3/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
       melt-stage3-warmelt-genobj-module.stamp \
       melt-stage3-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  from melt-build.tpl line 332
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage3/warmelt-genobj.quicklybuilt:\
melt-stage3/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-modes+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage3.args-tmp  warmelt-modes+melt-stage3.args
	@echo; echo; echo -n  warmelt-modes+melt-stage3.args: ; cat warmelt-modes+melt-stage3.args ; echo; echo; echo "***** doing " $@  from melt-build.tpl line 347
	@echo doing warmelt-modes+melt-stage3  from melt-build.tpl line 348
	$(melt_make_cc1) @warmelt-modes+melt-stage3.args
	@ls -l melt-stage3/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-modes.c from melt-build.tpl line 350 ; exit 1 )

#@ from melt-build.tpl line 352
################## quicklybuilt module warmelt-modes for melt-stage3
melt-stage3/warmelt-modes.quicklybuilt.so: melt-stage3/warmelt-modes.c \
              $(wildcard melt-stage3/warmelt-modes+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 358
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  from melt-build.tpl line 366
	$(MD5SUM) $@ > melt-stage3-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-modes-module.stamp-tmp melt-stage3-warmelt-modes-module.stamp


#@ from melt-build.tpl line 371 time stamp for module
melt-stage3-warmelt-modes-module.stamp: melt-stage3/warmelt-modes.quicklybuilt.so; @true


#@ from melt-build.tpl line 375
################## debugnoline module warmelt-modes for melt-stage3
melt-stage3/warmelt-modes.debugnoline.so:   melt-stage3/warmelt-modes.c \
              $(wildcard melt-stage3/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 381
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-modes




#@ from melt-build.tpl line 392
## the module list in melt-stage3
melt-stage3/warmelt.modlis:  \
             melt-stage3/warmelt-first.quicklybuilt.so \
             melt-stage3/warmelt-base.quicklybuilt.so \
             melt-stage3/warmelt-debug.quicklybuilt.so \
             melt-stage3/warmelt-macro.quicklybuilt.so \
             melt-stage3/warmelt-normal.quicklybuilt.so \
             melt-stage3/warmelt-normatch.quicklybuilt.so \
             melt-stage3/warmelt-genobj.quicklybuilt.so \
             melt-stage3/warmelt-outobj.quicklybuilt.so \
             melt-stage3/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 404
melt-stage3/warmelt.debugnoline.modlis:  \
             melt-stage3/warmelt-first.debugnoline.so \
             melt-stage3/warmelt-base.debugnoline.so \
             melt-stage3/warmelt-debug.debugnoline.so \
             melt-stage3/warmelt-macro.debugnoline.so \
             melt-stage3/warmelt-normal.debugnoline.so \
             melt-stage3/warmelt-normatch.debugnoline.so \
             melt-stage3/warmelt-genobj.debugnoline.so \
             melt-stage3/warmelt-outobj.debugnoline.so \
             melt-stage3/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage3
#@ from melt-build.tpl line 416
melt-stage3-fullstage.stamp:  melt-run.h  melt-stage3/warmelt.modlis \
 melt-stage3-warmelt-first-module.stamp melt-stage3/warmelt-first.c \
 melt-stage3-warmelt-base-module.stamp melt-stage3/warmelt-base.c \
 melt-stage3-warmelt-debug-module.stamp melt-stage3/warmelt-debug.c \
 melt-stage3-warmelt-macro-module.stamp melt-stage3/warmelt-macro.c \
 melt-stage3-warmelt-normal-module.stamp melt-stage3/warmelt-normal.c \
 melt-stage3-warmelt-normatch-module.stamp melt-stage3/warmelt-normatch.c \
 melt-stage3-warmelt-genobj-module.stamp melt-stage3/warmelt-genobj.c \
 melt-stage3-warmelt-outobj-module.stamp melt-stage3/warmelt-outobj.c \
 melt-stage3-warmelt-modes-module.stamp melt-stage3/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-first.c $(wildcard melt-stage3/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-base.c $(wildcard melt-stage3/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-debug.c $(wildcard melt-stage3/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-macro.c $(wildcard melt-stage3/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-normal.c $(wildcard melt-stage3/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-normatch.c $(wildcard melt-stage3/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-genobj.c $(wildcard melt-stage3/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-outobj.c $(wildcard melt-stage3/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-modes.c $(wildcard melt-stage3/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage3
#@ from melt-build.tpl line 427
.PHONY: warmelt3 warmelt3n
warmelt3: melt-stage3-fullstage.stamp melt-stage3/warmelt.modlis
	@echo MELT build made $@
warmelt3n:  melt-stage3-fullstage.stamp melt-stage3/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ from melt-build.tpl line 434 melt-stage3 directory and stamp
melt-stage3:
	test -d  melt-stage3/ || mkdir melt-stage3 
	ls -ld $$PWD/melt-stage3 > melt-stage3-directory.stamp
melt-stage3-directory.stamp: melt-stage3 ; @true


### end of melt-stage3 from melt-build.tpl line 441 



#@ from melt-build.tpl line 445
######## last stage melt-stage3
MELT_LAST_STAGE=melt-stage3
WARMELT_LAST= warmelt3
WARMELT_LAST_STAGESTAMP= melt-stage3-fullstage.stamp
WARMELT_LAST_MODLIS= melt-stage3/warmelt.modlis



#@ from melt-build.tpl line 454
.PHONY: warmelt
warmelt: $(WARMELT_LAST)



#@ from melt-build.tpl line 460
####### final targets from melt-build.tpl line 461
.PHONY: all-melt melt-all-modules melt-all-sources melt-tiny-tests
all-melt: melt-workdir-directory.stamp melt-modules-directory.stamp melt-sources-directory.stamp \
   melt-all-modules melt-all-sources melt-tiny-tests

### the final module directory from melt-build.tpl line 466
melt-modules: 
	test -d melt-modules/ || mkdir  melt-modules/
	ls -ld $$PWD/melt-modules > melt-modules-directory.stamp
melt-modules-directory.stamp: melt-modules; @true

### the final source directory from melt-build.tpl line 472
melt-sources: 
	test -d melt-sources/ || mkdir  melt-sources/
	ls -ld $$PWD/melt-sources > melt-sources-directory.stamp
melt-sources-directory.stamp: melt-sources; @true


### all sources from melt-build.tpl line 479
melt-all-sources: $(WARMELT_LAST_MODLIS) $(WARMELT_LAST_STAGESTAMP) empty-file-for-melt.c \
    melt-run.h melt-runtime.h melt-predef.h melt-sources-directory.stamp \
    $(melt_make_cc1_dependency) \
      melt-sources/warmelt-first.melt \
    melt-sources/warmelt-first+melttime.h \
      melt-sources/warmelt-base.melt \
    melt-sources/warmelt-base+melttime.h \
      melt-sources/warmelt-debug.melt \
    melt-sources/warmelt-debug+melttime.h \
      melt-sources/warmelt-macro.melt \
    melt-sources/warmelt-macro+melttime.h \
      melt-sources/warmelt-normal.melt \
    melt-sources/warmelt-normal+melttime.h \
       melt-sources/warmelt-predef.melt \
      melt-sources/warmelt-normatch.melt \
    melt-sources/warmelt-normatch+melttime.h \
      melt-sources/warmelt-genobj.melt \
    melt-sources/warmelt-genobj+melttime.h \
      melt-sources/warmelt-outobj.melt \
    melt-sources/warmelt-outobj+melttime.h \
      melt-sources/warmelt-modes.melt \
    melt-sources/warmelt-modes+melttime.h \
  melt-sources/xtramelt-ana-base.melt \
    melt-sources/xtramelt-ana-base+melttime.h   \
  melt-sources/xtramelt-ana-tree.melt \
    melt-sources/xtramelt-ana-tree+melttime.h   \
  melt-sources/xtramelt-ana-gimple.melt \
    melt-sources/xtramelt-ana-gimple+melttime.h   \
  melt-sources/xtramelt-probe.melt \
    melt-sources/xtramelt-probe+melttime.h   \
  melt-sources/xtramelt-ana-simple.melt \
    melt-sources/xtramelt-ana-simple+melttime.h   \
  melt-sources/xtramelt-c-generator.melt \
    melt-sources/xtramelt-c-generator+melttime.h   \
  melt-sources/xtramelt-opengpu.melt \
    melt-sources/xtramelt-opengpu+melttime.h  


#### melt-sources translator files from melt-build.tpl line 491

#@ from melt-build.tpl line 493


## melt translator warmelt-first # 0 from melt-build.tpl line 496
melt-sources/warmelt-first.melt: $(melt_make_source_dir)/warmelt-first.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-first.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-first.melt warmelt-first.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-first in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-first+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-first.c melt-sources/warmelt-first+meltdesc.c; @true

# MELT translator warmelt-first in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-first.c melt-sources/warmelt-first+meltdesc.c: \
    melt-sources/warmelt-first.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCINIT1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-first empty-file-for-melt.c > warmelt-first+sources.args-tmp
	@$(melt_move_if_change) warmelt-first+sources.args-tmp warmelt-first+sources.args
	@echo; echo; echo; echo -n warmelt-first+sources.args: ; cat warmelt-first+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-first+sources.args



#@  base= warmelt-first from melt-build.tpl line 535
melt-modules/warmelt-first.optimized.so: melt-sources/warmelt-first.c \
      $(wildcard  melt-sources/warmelt-first+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first 

#@  base= warmelt-first from melt-build.tpl line 548
melt-modules/warmelt-first.debugnoline.so: melt-sources/warmelt-first.c \
   $(wildcard  melt-sources/warmelt-first+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first 

#@ from melt-build.tpl line 561
melt-modules/warmelt-first.quicklybuilt.so: melt-sources/warmelt-first.c \
    $(wildcard  melt-sources/warmelt-first+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-first

#@  warmelt-first from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-base # 1 from melt-build.tpl line 496
melt-sources/warmelt-base.melt: $(melt_make_source_dir)/warmelt-base.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-base.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-base.melt warmelt-base.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-base in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-base+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-base.c melt-sources/warmelt-base+meltdesc.c; @true

# MELT translator warmelt-base in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-base.c melt-sources/warmelt-base+meltdesc.c: \
    melt-sources/warmelt-base.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-base empty-file-for-melt.c > warmelt-base+sources.args-tmp
	@$(melt_move_if_change) warmelt-base+sources.args-tmp warmelt-base+sources.args
	@echo; echo; echo; echo -n warmelt-base+sources.args: ; cat warmelt-base+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-base+sources.args



#@  base= warmelt-base from melt-build.tpl line 535
melt-modules/warmelt-base.optimized.so: melt-sources/warmelt-base.c \
      $(wildcard  melt-sources/warmelt-base+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base 

#@  base= warmelt-base from melt-build.tpl line 548
melt-modules/warmelt-base.debugnoline.so: melt-sources/warmelt-base.c \
   $(wildcard  melt-sources/warmelt-base+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base 

#@ from melt-build.tpl line 561
melt-modules/warmelt-base.quicklybuilt.so: melt-sources/warmelt-base.c \
    $(wildcard  melt-sources/warmelt-base+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-base

#@  warmelt-base from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-debug # 2 from melt-build.tpl line 496
melt-sources/warmelt-debug.melt: $(melt_make_source_dir)/warmelt-debug.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-debug.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-debug.melt warmelt-debug.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-debug in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-debug+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-debug.c melt-sources/warmelt-debug+meltdesc.c; @true

# MELT translator warmelt-debug in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-debug.c melt-sources/warmelt-debug+meltdesc.c: \
    melt-sources/warmelt-debug.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-debug empty-file-for-melt.c > warmelt-debug+sources.args-tmp
	@$(melt_move_if_change) warmelt-debug+sources.args-tmp warmelt-debug+sources.args
	@echo; echo; echo; echo -n warmelt-debug+sources.args: ; cat warmelt-debug+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-debug+sources.args



#@  base= warmelt-debug from melt-build.tpl line 535
melt-modules/warmelt-debug.optimized.so: melt-sources/warmelt-debug.c \
      $(wildcard  melt-sources/warmelt-debug+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug 

#@  base= warmelt-debug from melt-build.tpl line 548
melt-modules/warmelt-debug.debugnoline.so: melt-sources/warmelt-debug.c \
   $(wildcard  melt-sources/warmelt-debug+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug 

#@ from melt-build.tpl line 561
melt-modules/warmelt-debug.quicklybuilt.so: melt-sources/warmelt-debug.c \
    $(wildcard  melt-sources/warmelt-debug+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-debug

#@  warmelt-debug from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-macro # 3 from melt-build.tpl line 496
melt-sources/warmelt-macro.melt: $(melt_make_source_dir)/warmelt-macro.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-macro.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-macro.melt warmelt-macro.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-macro in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-macro+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-macro.c melt-sources/warmelt-macro+meltdesc.c; @true

# MELT translator warmelt-macro in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-macro.c melt-sources/warmelt-macro+meltdesc.c: \
    melt-sources/warmelt-macro.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-macro empty-file-for-melt.c > warmelt-macro+sources.args-tmp
	@$(melt_move_if_change) warmelt-macro+sources.args-tmp warmelt-macro+sources.args
	@echo; echo; echo; echo -n warmelt-macro+sources.args: ; cat warmelt-macro+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-macro+sources.args



#@  base= warmelt-macro from melt-build.tpl line 535
melt-modules/warmelt-macro.optimized.so: melt-sources/warmelt-macro.c \
      $(wildcard  melt-sources/warmelt-macro+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro 

#@  base= warmelt-macro from melt-build.tpl line 548
melt-modules/warmelt-macro.debugnoline.so: melt-sources/warmelt-macro.c \
   $(wildcard  melt-sources/warmelt-macro+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro 

#@ from melt-build.tpl line 561
melt-modules/warmelt-macro.quicklybuilt.so: melt-sources/warmelt-macro.c \
    $(wildcard  melt-sources/warmelt-macro+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-macro

#@  warmelt-macro from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-normal # 4 from melt-build.tpl line 496
melt-sources/warmelt-normal.melt: $(melt_make_source_dir)/warmelt-normal.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-normal.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-normal.melt warmelt-normal.melt

### melt included files with (load ...) macro from melt-build.tpl line 501

# included warmelt-predef.melt from melt-build.tpl line 503
melt-sources/warmelt-predef.melt: warmelt-predef.melt melt-sources-directory.stamp
	rm -f melt-sources/warmelt-predef.melt*
	cp -v $< melt-sources/warmelt-predef.melt-tmp
	mv melt-sources/warmelt-predef.melt-tmp  melt-sources/warmelt-predef.melt


# MELT translator warmelt-normal in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-normal+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-normal.c melt-sources/warmelt-normal+meltdesc.c; @true

# MELT translator warmelt-normal in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-normal.c melt-sources/warmelt-normal+meltdesc.c: \
    melt-sources/warmelt-normal.melt  melt-sources-directory.stamp melt-sources/warmelt-predef.melt  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-normal empty-file-for-melt.c > warmelt-normal+sources.args-tmp
	@$(melt_move_if_change) warmelt-normal+sources.args-tmp warmelt-normal+sources.args
	@echo; echo; echo; echo -n warmelt-normal+sources.args: ; cat warmelt-normal+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-normal+sources.args



#@  base= warmelt-normal from melt-build.tpl line 535
melt-modules/warmelt-normal.optimized.so: melt-sources/warmelt-normal.c \
      $(wildcard  melt-sources/warmelt-normal+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal 

#@  base= warmelt-normal from melt-build.tpl line 548
melt-modules/warmelt-normal.debugnoline.so: melt-sources/warmelt-normal.c \
   $(wildcard  melt-sources/warmelt-normal+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal 

#@ from melt-build.tpl line 561
melt-modules/warmelt-normal.quicklybuilt.so: melt-sources/warmelt-normal.c \
    $(wildcard  melt-sources/warmelt-normal+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-normal

#@  warmelt-normal from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-normatch # 5 from melt-build.tpl line 496
melt-sources/warmelt-normatch.melt: $(melt_make_source_dir)/warmelt-normatch.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-normatch.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-normatch.melt warmelt-normatch.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-normatch in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-normatch+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-normatch.c melt-sources/warmelt-normatch+meltdesc.c; @true

# MELT translator warmelt-normatch in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-normatch.c melt-sources/warmelt-normatch+meltdesc.c: \
    melt-sources/warmelt-normatch.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-normatch empty-file-for-melt.c > warmelt-normatch+sources.args-tmp
	@$(melt_move_if_change) warmelt-normatch+sources.args-tmp warmelt-normatch+sources.args
	@echo; echo; echo; echo -n warmelt-normatch+sources.args: ; cat warmelt-normatch+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-normatch+sources.args



#@  base= warmelt-normatch from melt-build.tpl line 535
melt-modules/warmelt-normatch.optimized.so: melt-sources/warmelt-normatch.c \
      $(wildcard  melt-sources/warmelt-normatch+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch 

#@  base= warmelt-normatch from melt-build.tpl line 548
melt-modules/warmelt-normatch.debugnoline.so: melt-sources/warmelt-normatch.c \
   $(wildcard  melt-sources/warmelt-normatch+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch 

#@ from melt-build.tpl line 561
melt-modules/warmelt-normatch.quicklybuilt.so: melt-sources/warmelt-normatch.c \
    $(wildcard  melt-sources/warmelt-normatch+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-normatch

#@  warmelt-normatch from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-genobj # 6 from melt-build.tpl line 496
melt-sources/warmelt-genobj.melt: $(melt_make_source_dir)/warmelt-genobj.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-genobj.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-genobj.melt warmelt-genobj.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-genobj in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-genobj+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-genobj.c melt-sources/warmelt-genobj+meltdesc.c; @true

# MELT translator warmelt-genobj in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-genobj.c melt-sources/warmelt-genobj+meltdesc.c: \
    melt-sources/warmelt-genobj.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-genobj empty-file-for-melt.c > warmelt-genobj+sources.args-tmp
	@$(melt_move_if_change) warmelt-genobj+sources.args-tmp warmelt-genobj+sources.args
	@echo; echo; echo; echo -n warmelt-genobj+sources.args: ; cat warmelt-genobj+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-genobj+sources.args



#@  base= warmelt-genobj from melt-build.tpl line 535
melt-modules/warmelt-genobj.optimized.so: melt-sources/warmelt-genobj.c \
      $(wildcard  melt-sources/warmelt-genobj+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj 

#@  base= warmelt-genobj from melt-build.tpl line 548
melt-modules/warmelt-genobj.debugnoline.so: melt-sources/warmelt-genobj.c \
   $(wildcard  melt-sources/warmelt-genobj+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj 

#@ from melt-build.tpl line 561
melt-modules/warmelt-genobj.quicklybuilt.so: melt-sources/warmelt-genobj.c \
    $(wildcard  melt-sources/warmelt-genobj+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-genobj

#@  warmelt-genobj from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-outobj # 7 from melt-build.tpl line 496
melt-sources/warmelt-outobj.melt: $(melt_make_source_dir)/warmelt-outobj.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-outobj.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-outobj.melt warmelt-outobj.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-outobj in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-outobj+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-outobj.c melt-sources/warmelt-outobj+meltdesc.c; @true

# MELT translator warmelt-outobj in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-outobj.c melt-sources/warmelt-outobj+meltdesc.c: \
    melt-sources/warmelt-outobj.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-outobj empty-file-for-melt.c > warmelt-outobj+sources.args-tmp
	@$(melt_move_if_change) warmelt-outobj+sources.args-tmp warmelt-outobj+sources.args
	@echo; echo; echo; echo -n warmelt-outobj+sources.args: ; cat warmelt-outobj+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-outobj+sources.args



#@  base= warmelt-outobj from melt-build.tpl line 535
melt-modules/warmelt-outobj.optimized.so: melt-sources/warmelt-outobj.c \
      $(wildcard  melt-sources/warmelt-outobj+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj 

#@  base= warmelt-outobj from melt-build.tpl line 548
melt-modules/warmelt-outobj.debugnoline.so: melt-sources/warmelt-outobj.c \
   $(wildcard  melt-sources/warmelt-outobj+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj 

#@ from melt-build.tpl line 561
melt-modules/warmelt-outobj.quicklybuilt.so: melt-sources/warmelt-outobj.c \
    $(wildcard  melt-sources/warmelt-outobj+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-outobj

#@  warmelt-outobj from melt-build.tpl line 575

#@ from melt-build.tpl line 493


## melt translator warmelt-modes # 8 from melt-build.tpl line 496
melt-sources/warmelt-modes.melt: $(melt_make_source_dir)/warmelt-modes.melt melt-sources-directory.stamp
	@echo  from melt-build.tpl line 498; ls -l $(melt_make_source_dir)/warmelt-modes.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-modes.melt warmelt-modes.melt

### melt included files with (load ...) macro from melt-build.tpl line 501


# MELT translator warmelt-modes in melt-sources/ timestamp from melt-build.tpl line 510
melt-sources/warmelt-modes+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-modes.c melt-sources/warmelt-modes+meltdesc.c; @true

# MELT translator warmelt-modes in melt-sources/ C files from melt-build.tpl line 514
melt-sources/warmelt-modes.c melt-sources/warmelt-modes+meltdesc.c: \
    melt-sources/warmelt-modes.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 521
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-modes empty-file-for-melt.c > warmelt-modes+sources.args-tmp
	@$(melt_move_if_change) warmelt-modes+sources.args-tmp warmelt-modes+sources.args
	@echo; echo; echo; echo -n warmelt-modes+sources.args: ; cat warmelt-modes+sources.args ; echo "***** doing " $@ from melt-build.tpl line 530
	$(melt_make_cc1) @warmelt-modes+sources.args



#@  base= warmelt-modes from melt-build.tpl line 535
melt-modules/warmelt-modes.optimized.so: melt-sources/warmelt-modes.c \
      $(wildcard  melt-sources/warmelt-modes+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  from melt-build.tpl line 540
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes 

#@  base= warmelt-modes from melt-build.tpl line 548
melt-modules/warmelt-modes.debugnoline.so: melt-sources/warmelt-modes.c \
   $(wildcard  melt-sources/warmelt-modes+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 553
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes 

#@ from melt-build.tpl line 561
melt-modules/warmelt-modes.quicklybuilt.so: melt-sources/warmelt-modes.c \
    $(wildcard  melt-sources/warmelt-modes+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 566
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-modes

#@  warmelt-modes from melt-build.tpl line 575


#@ from melt-build.tpl line 578


#@ from melt-build.tpl line 581
#### melt-sources warmelt-quicklybuilt is the sequence of translator files:
melt-sources/warmelt-quicklybuilt.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building quicklybuilt module list $@ from melt-build.tpl line 584
	date  +"# MELT warmelt-quicklybuilt list $@ generated %F" > $@-tmp
	echo "#  quicklybuilt translator files" >> $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 581
#### melt-sources warmelt-optimized is the sequence of translator files:
melt-sources/warmelt-optimized.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building optimized module list $@ from melt-build.tpl line 584
	date  +"# MELT warmelt-optimized list $@ generated %F" > $@-tmp
	echo "#  optimized translator files" >> $@-tmp
	echo warmelt-first.optimized >> $@-tmp
	echo warmelt-base.optimized >> $@-tmp
	echo warmelt-debug.optimized >> $@-tmp
	echo warmelt-macro.optimized >> $@-tmp
	echo warmelt-normal.optimized >> $@-tmp
	echo warmelt-normatch.optimized >> $@-tmp
	echo warmelt-genobj.optimized >> $@-tmp
	echo warmelt-outobj.optimized >> $@-tmp
	echo warmelt-modes.optimized >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 581
#### melt-sources warmelt-debugnoline is the sequence of translator files:
melt-sources/warmelt-debugnoline.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building debugnoline module list $@ from melt-build.tpl line 584
	date  +"# MELT warmelt-debugnoline list $@ generated %F" > $@-tmp
	echo "#  debugnoline translator files" >> $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@



#### melt-sources application files



#@ from melt-build.tpl line 598
## melt application xtramelt-ana-base
melt-sources/xtramelt-ana-base.melt: $(melt_make_source_dir)/xtramelt-ana-base.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-base.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-ana-base generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-base.c: \
   melt-sources/xtramelt-ana-base.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt: \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized: \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-ana-base various flavors of modules


## melt application xtramelt-ana-base flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-ana-base.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ from melt-build.tpl line 659 xtramelt-ana-base.quicklybuilt

## melt application xtramelt-ana-base flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-ana-base.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ from melt-build.tpl line 659 xtramelt-ana-base.optimized

## melt application xtramelt-ana-base flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-ana-base.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ from melt-build.tpl line 659 xtramelt-ana-base.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-ana-base

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-ana-tree
melt-sources/xtramelt-ana-tree.melt: $(melt_make_source_dir)/xtramelt-ana-tree.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-tree.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-ana-tree generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-tree.c: \
   melt-sources/xtramelt-ana-tree.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-ana-tree various flavors of modules


## melt application xtramelt-ana-tree flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-ana-tree.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ from melt-build.tpl line 659 xtramelt-ana-tree.quicklybuilt

## melt application xtramelt-ana-tree flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-ana-tree.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ from melt-build.tpl line 659 xtramelt-ana-tree.optimized

## melt application xtramelt-ana-tree flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-ana-tree.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ from melt-build.tpl line 659 xtramelt-ana-tree.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-ana-tree

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-ana-gimple
melt-sources/xtramelt-ana-gimple.melt: $(melt_make_source_dir)/xtramelt-ana-gimple.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-gimple.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-ana-gimple generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-gimple.c: \
   melt-sources/xtramelt-ana-gimple.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-ana-gimple various flavors of modules


## melt application xtramelt-ana-gimple flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-ana-gimple.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ from melt-build.tpl line 659 xtramelt-ana-gimple.quicklybuilt

## melt application xtramelt-ana-gimple flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-ana-gimple.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ from melt-build.tpl line 659 xtramelt-ana-gimple.optimized

## melt application xtramelt-ana-gimple flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-ana-gimple.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ from melt-build.tpl line 659 xtramelt-ana-gimple.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-ana-gimple

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-probe
melt-sources/xtramelt-probe.melt: $(melt_make_source_dir)/xtramelt-probe.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-probe.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-probe generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-probe.c: \
   melt-sources/xtramelt-probe.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-probe various flavors of modules


## melt application xtramelt-probe flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-probe.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ from melt-build.tpl line 659 xtramelt-probe.quicklybuilt

## melt application xtramelt-probe flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-probe.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ from melt-build.tpl line 659 xtramelt-probe.optimized

## melt application xtramelt-probe flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-probe.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ from melt-build.tpl line 659 xtramelt-probe.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-probe

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-ana-simple
melt-sources/xtramelt-ana-simple.melt: $(melt_make_source_dir)/xtramelt-ana-simple.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-simple.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-ana-simple generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-simple.c: \
   melt-sources/xtramelt-ana-simple.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-ana-simple various flavors of modules


## melt application xtramelt-ana-simple flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-ana-simple.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ from melt-build.tpl line 659 xtramelt-ana-simple.quicklybuilt

## melt application xtramelt-ana-simple flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-ana-simple.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ from melt-build.tpl line 659 xtramelt-ana-simple.optimized

## melt application xtramelt-ana-simple flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-ana-simple.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ from melt-build.tpl line 659 xtramelt-ana-simple.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-ana-simple

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-c-generator
melt-sources/xtramelt-c-generator.melt: $(melt_make_source_dir)/xtramelt-c-generator.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-c-generator.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-c-generator generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-c-generator.c: \
   melt-sources/xtramelt-c-generator.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-c-generator various flavors of modules


## melt application xtramelt-c-generator flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-c-generator.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ from melt-build.tpl line 659 xtramelt-c-generator.quicklybuilt

## melt application xtramelt-c-generator flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-c-generator.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ from melt-build.tpl line 659 xtramelt-c-generator.optimized

## melt application xtramelt-c-generator flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-c-generator.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ from melt-build.tpl line 659 xtramelt-c-generator.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-c-generator

#@ from melt-build.tpl line 665


#@ from melt-build.tpl line 598
## melt application xtramelt-opengpu
melt-sources/xtramelt-opengpu.melt: $(melt_make_source_dir)/xtramelt-opengpu.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-opengpu.melt


#@ from melt-build.tpl line 604
## melt application xtramelt-opengpu generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-opengpu.c: \
   melt-sources/xtramelt-opengpu.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  from melt-build.tpl line 618 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple:xtramelt-c-generator \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ from melt-build.tpl line 627
	$(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ from melt-build.tpl line 629
	@echo doing $@  from melt-build.tpl line 630 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple:xtramelt-c-generator \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ from melt-build.tpl line 639
	$(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ from melt-build.tpl line 642
## melt application xtramelt-opengpu various flavors of modules


## melt application xtramelt-opengpu flavor quicklybuilt  from melt-build.tpl line 646
melt-modules/xtramelt-opengpu.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ from melt-build.tpl line 659 xtramelt-opengpu.quicklybuilt

## melt application xtramelt-opengpu flavor optimized  from melt-build.tpl line 646
melt-modules/xtramelt-opengpu.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ from melt-build.tpl line 659 xtramelt-opengpu.optimized

## melt application xtramelt-opengpu flavor debugnoline  from melt-build.tpl line 646
melt-modules/xtramelt-opengpu.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  from melt-build.tpl line 651
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ from melt-build.tpl line 659 xtramelt-opengpu.debugnoline

#@ from melt-build.tpl line 661

# end application xtramelt-opengpu

#@ from melt-build.tpl line 665


################

#@ from melt-build.tpl line 670
melt-sayhello.melt: $(melt_default_modules_list).modlis
	@date +'(code_chunk say%YM%mhello #{printf("hello_from_MELT on %c pid %%d\n", (int) getpid());}#)' > $@
#@ from melt-build.tpl line 673

melt-tiny-tests: melt-sayhello.melt melt-modules melt-sources \
		melt-all-modules melt-all-sources \
		melt-default-modules-quicklybuilt.modlis melt-runtime.args \
		$(MELT_RUNTIME_C)
# test that a helloworld can be translated from melt-build.tpl line 679
	@echo doing $@  from melt-build.tpl line 680
	@echo	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
       $(meltarg_output)=$(basename $<) empty-file-for-melt.c > $(basename $<).args-tmp
	@$(melt_move_if_change) $(basename $<).args-tmp $(basename $<).args
	@echo; echo; echo; echo -n $(basename $<).args: ; cat $(basename $<).args ; echo "***** doing " $(basename $<)  from melt-build.tpl line 688
	$(melt_make_cc1) @$(basename $<).args
# test that a helloworld can be run from melt-build.tpl line 690
	@echo	$(MELTCCRUNFILE1ARGS) $(meltarg_init)=@melt-default-modules-quicklybuilt \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
       $(meltarg_output)=$(basename $<) empty-file-for-melt.c > $(basename $<)-run.args-tmp
	@$(melt_move_if_change) $(basename $<)-run.args-tmp $(basename $<)-run.args
	@echo; echo; echo; echo -n $(basename $<)-run.args: ; cat $(basename $<)-run.args ; echo "***** doing " $(basename $<)-run  from melt-build.tpl line 698
	$(melt_make_cc1) @$(basename $<)-run.args
# test that the melt-runtime follows MELT coding rules; this also tests
# a real MELT pass on real code, like our melt-runtime.c
# test melt-runtime from melt-build.tpl line 702
	@echo  $(melt_make_cc1flags) >  meltframe.args-tmp
	@echo  $(meltarg_mode)=meltframe  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG) $(meltarg_init)=@melt-default-modules-quicklybuilt \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) >>  meltframe.args-tmp
	@echo -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) -o /dev/null >> meltframe.args-tmp
	@echo -Iinclude/ >> meltframe.args-tmp
	@if [ -d include-fixed ] ; then echo -Iinclude-fixed/  >> meltframe.args-tmp ; fi
	@echo  -O -Wno-shadow  >> meltframe.args-tmp
	@cat melt-runtime.args >> meltframe.args-tmp
	@$(melt_move_if_change) meltframe.args-tmp meltframe.args
	@echo; echo; echo; echo -n meltframe.args: ; cat meltframe.args ; echo "***** doing " meltframe  from melt-build.tpl line 718
	$(melt_make_cc1) @meltframe.args


#@ from melt-build.tpl line 722




################
#@ from melt-build.tpl line 728
melt-all-modules:  melt-workdir \
    melt-modules/warmelt-first.optimized.so \
    melt-modules/warmelt-base.optimized.so \
    melt-modules/warmelt-debug.optimized.so \
    melt-modules/warmelt-macro.optimized.so \
    melt-modules/warmelt-normal.optimized.so \
    melt-modules/warmelt-normatch.optimized.so \
    melt-modules/warmelt-genobj.optimized.so \
    melt-modules/warmelt-outobj.optimized.so \
    melt-modules/warmelt-modes.optimized.so \
 \
    melt-modules/warmelt-first.quicklybuilt.so \
    melt-modules/warmelt-base.quicklybuilt.so \
    melt-modules/warmelt-debug.quicklybuilt.so \
    melt-modules/warmelt-macro.quicklybuilt.so \
    melt-modules/warmelt-normal.quicklybuilt.so \
    melt-modules/warmelt-normatch.quicklybuilt.so \
    melt-modules/warmelt-genobj.quicklybuilt.so \
    melt-modules/warmelt-outobj.quicklybuilt.so \
    melt-modules/warmelt-modes.quicklybuilt.so \
 \
    melt-modules/warmelt-first.debugnoline.so \
    melt-modules/warmelt-base.debugnoline.so \
    melt-modules/warmelt-debug.debugnoline.so \
    melt-modules/warmelt-macro.debugnoline.so \
    melt-modules/warmelt-normal.debugnoline.so \
    melt-modules/warmelt-normatch.debugnoline.so \
    melt-modules/warmelt-genobj.debugnoline.so \
    melt-modules/warmelt-outobj.debugnoline.so \
    melt-modules/warmelt-modes.debugnoline.so \
 \
    \
    melt-modules/xtramelt-ana-base.optimized.so \
    melt-modules/xtramelt-ana-tree.optimized.so \
    melt-modules/xtramelt-ana-gimple.optimized.so \
    melt-modules/xtramelt-probe.optimized.so \
    melt-modules/xtramelt-ana-simple.optimized.so \
    melt-modules/xtramelt-c-generator.optimized.so \
    melt-modules/xtramelt-opengpu.optimized.so \
 \
    melt-modules/xtramelt-ana-base.quicklybuilt.so \
    melt-modules/xtramelt-ana-tree.quicklybuilt.so \
    melt-modules/xtramelt-ana-gimple.quicklybuilt.so \
    melt-modules/xtramelt-probe.quicklybuilt.so \
    melt-modules/xtramelt-ana-simple.quicklybuilt.so \
    melt-modules/xtramelt-c-generator.quicklybuilt.so \
    melt-modules/xtramelt-opengpu.quicklybuilt.so \
 \
    melt-modules/xtramelt-ana-base.debugnoline.so \
    melt-modules/xtramelt-ana-tree.debugnoline.so \
    melt-modules/xtramelt-ana-gimple.debugnoline.so \
    melt-modules/xtramelt-probe.debugnoline.so \
    melt-modules/xtramelt-ana-simple.debugnoline.so \
    melt-modules/xtramelt-c-generator.debugnoline.so \
    melt-modules/xtramelt-opengpu.debugnoline.so \


$(melt_default_modules_list).modlis: melt-all-modules \
       $(melt_default_modules_list)-quicklybuilt.modlis \
       $(melt_default_modules_list)-optimized.modlis \
       $(melt_default_modules_list)-debugnoline.modlis
	cd $(dir $@) ; $(LN_S) -v -f $(melt_default_modules_list)-$(melt_default_variant).modlis  $(notdir $@)


#@ from melt-build.tpl line 751
## MELT various variants of module lists


#@ from melt-build.tpl line 755
### quicklybuilt default module list
$(melt_default_modules_list)-quicklybuilt.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.quicklybuilt.so)
	@echo building quicklybuilt module list $@
	date  +"# MELT module  quicklybuilt list $@ generated %F" > $@-tmp
	echo "#  quicklybuilt translator files" >> $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp

	echo "#  quicklybuilt application files" >> $@-tmp
	echo xtramelt-ana-base.quicklybuilt >> $@-tmp
	echo xtramelt-ana-tree.quicklybuilt >> $@-tmp
	echo xtramelt-ana-gimple.quicklybuilt >> $@-tmp
	echo xtramelt-probe.quicklybuilt >> $@-tmp
	echo xtramelt-ana-simple.quicklybuilt >> $@-tmp
	echo xtramelt-c-generator.quicklybuilt >> $@-tmp
	echo xtramelt-opengpu.quicklybuilt >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 755
### optimized default module list
$(melt_default_modules_list)-optimized.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.optimized.so)
	@echo building optimized module list $@
	date  +"# MELT module  optimized list $@ generated %F" > $@-tmp
	echo "#  optimized translator files" >> $@-tmp
	echo warmelt-first.optimized >> $@-tmp
	echo warmelt-base.optimized >> $@-tmp
	echo warmelt-debug.optimized >> $@-tmp
	echo warmelt-macro.optimized >> $@-tmp
	echo warmelt-normal.optimized >> $@-tmp
	echo warmelt-normatch.optimized >> $@-tmp
	echo warmelt-genobj.optimized >> $@-tmp
	echo warmelt-outobj.optimized >> $@-tmp
	echo warmelt-modes.optimized >> $@-tmp

	echo "#  optimized application files" >> $@-tmp
	echo xtramelt-ana-base.optimized >> $@-tmp
	echo xtramelt-ana-tree.optimized >> $@-tmp
	echo xtramelt-ana-gimple.optimized >> $@-tmp
	echo xtramelt-probe.optimized >> $@-tmp
	echo xtramelt-ana-simple.optimized >> $@-tmp
	echo xtramelt-c-generator.optimized >> $@-tmp
	echo xtramelt-opengpu.optimized >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ from melt-build.tpl line 755
### debugnoline default module list
$(melt_default_modules_list)-debugnoline.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.debugnoline.so)
	@echo building debugnoline module list $@
	date  +"# MELT module  debugnoline list $@ generated %F" > $@-tmp
	echo "#  debugnoline translator files" >> $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp

	echo "#  debugnoline application files" >> $@-tmp
	echo xtramelt-ana-base.debugnoline >> $@-tmp
	echo xtramelt-ana-tree.debugnoline >> $@-tmp
	echo xtramelt-ana-gimple.debugnoline >> $@-tmp
	echo xtramelt-probe.debugnoline >> $@-tmp
	echo xtramelt-ana-simple.debugnoline >> $@-tmp
	echo xtramelt-c-generator.debugnoline >> $@-tmp
	echo xtramelt-opengpu.debugnoline >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@



#@ from melt-build.tpl line 771
### MELT upgrade
.PHONY: warmelt-upgrade-translator meltrun-generate


#@ from melt-build.tpl line 776
####### generate the runtime support files meltrunsup.h meltrunsup-inc.c
meltrun-generate: $(WARMELT_LAST) $(WARMELT_LAST_MODLIS)  $(WARMELT_LAST_STAGESTAMP) empty-file-for-melt.c \
                   $(melt_make_cc1_dependency)
	@rm -f $(wildcard meltrunsup*)
	@echo $(melt_make_cc1flags) \
	      $(meltarg_mode)=runtypesupport  \
	      $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) $(meltarg_bootstrapping)  $(MELT_DEBUG) \
	      $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	      $(meltarg_module_path)=$(MELT_LAST_STAGE):. \
	      $(meltarg_source_path)=$(MELT_LAST_STAGE):$(melt_source_dir):. \
	      $(meltarg_output)=meltrunsup  \
	      empty-file-for-melt.c > $(basename $@).args-tmp
	@$(melt_move_if_change) $(basename $@).args-tmp $(basename $@).args
	@echo; echo; echo; echo -n $(basename $@).args: ; cat $(basename $@).args ; echo "***** doing " $@
	 $(melt_make_cc1) @$(basename $@).args
	if [ -n "$(GCCMELTRUNGEN_DEST)" ]; then \
	   for f in $(GCCMELTRUNGEN_DEST)/meltrunsup*.[ch]; \
	     do mv $$f $$f.bak; \
	   done; \
	   cp -v meltrunsup*.[ch] "$(GCCMELTRUNGEN_DEST)" ; \
        fi
	ls -l meltrunsup*.[ch]


###### generate the translator files warmelt*.c
#@ from melt-build.tpl line 802
warmelt-upgrade-translator: $(WARMELT_LAST) $(WARMELT_LAST_STAGESTAMP) meltrun-generate \
   $(MELT_LAST_STAGE)/warmelt-first.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-first+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-base.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-base+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-debug.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-debug+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-macro.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-macro+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-normal.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-normal+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-normatch.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-normatch+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-genobj.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-genobj+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-outobj.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-outobj+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-modes.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-modes+*.c) 
	@echo upgrading the MELT translator
	@which unifdef > /dev/null || (echo missing unifdef for warmelt-upgrade-translator; exit 1)
	@which indent  > /dev/null || (echo missing indent for warmelt-upgrade-translator; exit 1)
	ls -l meltrunsup.h meltrunsup-inc.c 
	indent meltrunsup.h
	indent meltrunsup-inc.c
#@ from melt-build.tpl line 814

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-first
## dont indent the warmelt-first+meltdesc.c or warmelt-first+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c > $(srcdir)/melt/generated/warmelt-first+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-first+melttime.h  $(MELT_LAST_STAGE)/warmelt-first+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-first+melttime.h > $(srcdir)/melt/generated/warmelt-first+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-first.c $(MELT_LAST_STAGE)/warmelt-first+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-first*.so $(MELT_STAGE_ZERO)/warmelt-first*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-base
## dont indent the warmelt-base+meltdesc.c or warmelt-base+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c > $(srcdir)/melt/generated/warmelt-base+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-base+melttime.h  $(MELT_LAST_STAGE)/warmelt-base+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-base+melttime.h > $(srcdir)/melt/generated/warmelt-base+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-base.c $(MELT_LAST_STAGE)/warmelt-base+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-base*.so $(MELT_STAGE_ZERO)/warmelt-base*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-debug
## dont indent the warmelt-debug+meltdesc.c or warmelt-debug+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c > $(srcdir)/melt/generated/warmelt-debug+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-debug+melttime.h  $(MELT_LAST_STAGE)/warmelt-debug+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-debug+melttime.h > $(srcdir)/melt/generated/warmelt-debug+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-debug.c $(MELT_LAST_STAGE)/warmelt-debug+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-debug*.so $(MELT_STAGE_ZERO)/warmelt-debug*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-macro
## dont indent the warmelt-macro+meltdesc.c or warmelt-macro+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c > $(srcdir)/melt/generated/warmelt-macro+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-macro+melttime.h  $(MELT_LAST_STAGE)/warmelt-macro+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-macro+melttime.h > $(srcdir)/melt/generated/warmelt-macro+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-macro.c $(MELT_LAST_STAGE)/warmelt-macro+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-macro*.so $(MELT_STAGE_ZERO)/warmelt-macro*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-normal
## dont indent the warmelt-normal+meltdesc.c or warmelt-normal+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c > $(srcdir)/melt/generated/warmelt-normal+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-normal+melttime.h  $(MELT_LAST_STAGE)/warmelt-normal+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normal+melttime.h > $(srcdir)/melt/generated/warmelt-normal+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-normal.c $(MELT_LAST_STAGE)/warmelt-normal+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-normal*.so $(MELT_STAGE_ZERO)/warmelt-normal*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-normatch
## dont indent the warmelt-normatch+meltdesc.c or warmelt-normatch+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c > $(srcdir)/melt/generated/warmelt-normatch+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h  $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h > $(srcdir)/melt/generated/warmelt-normatch+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-normatch.c $(MELT_LAST_STAGE)/warmelt-normatch+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-normatch*.so $(MELT_STAGE_ZERO)/warmelt-normatch*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-genobj
## dont indent the warmelt-genobj+meltdesc.c or warmelt-genobj+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c > $(srcdir)/melt/generated/warmelt-genobj+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h  $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h > $(srcdir)/melt/generated/warmelt-genobj+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-genobj.c $(MELT_LAST_STAGE)/warmelt-genobj+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-genobj*.so $(MELT_STAGE_ZERO)/warmelt-genobj*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-outobj
## dont indent the warmelt-outobj+meltdesc.c or warmelt-outobj+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c > $(srcdir)/melt/generated/warmelt-outobj+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h  $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h > $(srcdir)/melt/generated/warmelt-outobj+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-outobj.c $(MELT_LAST_STAGE)/warmelt-outobj+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-outobj*.so $(MELT_STAGE_ZERO)/warmelt-outobj*.c
#@ from melt-build.tpl line 837
#

#@ from melt-build.tpl line 816
	@echo upgrading MELT translator warmelt-modes
## dont indent the warmelt-modes+meltdesc.c or warmelt-modes+melttime.h ::: from melt-build.tpl line 818
	cp $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c > $(srcdir)/melt/generated/warmelt-modes+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-modes+melttime.h  $(MELT_LAST_STAGE)/warmelt-modes+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-modes+melttime.h > $(srcdir)/melt/generated/warmelt-modes+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-modes.c $(MELT_LAST_STAGE)/warmelt-modes+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-modes*.so $(MELT_STAGE_ZERO)/warmelt-modes*.c
#@ from melt-build.tpl line 837
#

	cp -v meltrunsup*.[ch]   $(srcdir)/melt/generated/
#@ from melt-build.tpl line 841





### Generated MELT documentation
#@ from melt-build.tpl line 848
meltgendoc.texi: $(melt_default_modules_list).modlis \
                    melt-sources/warmelt-first.melt \
                    melt-sources/warmelt-base.melt \
                    melt-sources/warmelt-debug.melt \
                    melt-sources/warmelt-macro.melt \
                    melt-sources/warmelt-normal.melt \
                    melt-sources/warmelt-normatch.melt \
                    melt-sources/warmelt-genobj.melt \
                    melt-sources/warmelt-outobj.melt \
                    melt-sources/warmelt-modes.melt \
                    melt-sources/xtramelt-ana-base.melt \
                    melt-sources/xtramelt-ana-tree.melt \
                    melt-sources/xtramelt-ana-gimple.melt \
                    melt-sources/xtramelt-probe.melt \
                    melt-sources/xtramelt-ana-simple.melt \
                    melt-sources/xtramelt-c-generator.melt \
                    melt-sources/xtramelt-opengpu.melt \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	echo $(melt_make_cc1flags) $(meltarg_mode)=makedoc  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
	      $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_bootstrapping)  $(MELT_DEBUG) \
	      $(meltarg_init)=@$(melt_default_modules_list) \
	      $(meltarg_module_path)=$(realpath melt-modules):. \
	      $(meltarg_source_path)=$(realpath melt-sources):. \
	      $(meltarg_output)=$(basename $@).texi  \
              $(meltarg_arglist)=warmelt-first.melt,warmelt-base.melt,warmelt-debug.melt,warmelt-macro.melt,warmelt-normal.melt,warmelt-normatch.melt,warmelt-genobj.melt,warmelt-outobj.melt,warmelt-modes.melt,\
xtramelt-ana-base.melt,xtramelt-ana-tree.melt,xtramelt-ana-gimple.melt,xtramelt-probe.melt,xtramelt-ana-simple.melt,xtramelt-c-generator.melt,xtramelt-opengpu.melt \
              empty-file-for-melt.c > $(notdir $(basename $@)).args-tmp
	$(melt_move_if_change) $(notdir $(basename $@)).args-tmp  $(notdir $(basename $@)).args
	@echo; echo; echo; echo -n $(notdir $(basename $@)).args: ; cat $(notdir $(basename $@)).args ; echo "***** doing " $@
	$(melt_make_cc1) @$(notdir $(basename $@)).args





### MELT cleanup  from melt-build.tpl line 873
.PHONY: melt-clean
melt-clean:
	rm -rf *melt*.args melt-workdir melt-stage0-* melt-sayhello* \
               $(wildcard *melt-*.stamp) \
	       melt-run.h *melt*.o *melt*.so melt*~ meltgen*.texi melt-default* \
           melt-stage1  \
           melt-stage2  \
           melt-stage3  \
               melt-sources melt-modules

#@ from melt-build.tpl line 882
## eof melt-build.mk generated from melt-build.tpl & melt-melt-build.def
