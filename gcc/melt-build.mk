
#@!  -*- buffer-read-only: t -*- vi: set ro:
#@#@# 
#@#@# DO NOT EDIT THIS FILE   (melt-build.mk)
#@#@# 
#@#@# It has been AutoGen-ed  July  7, 2012 at 09:43:43 AM by AutoGen 5.12
#@#@# From the definitions    melt-build.def
#@#@# and the template file   melt-build.tpl
##@@ melt-build.mk is generated from melt-build.tpl by 'autogen melt-build.def'
#
# Makefile fragment for MELT modules and MELT translator bootstrap.
#   Copyright (C) 2010,2011,2012  Free Software Foundation
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
#@ from melt-build.tpl line 22 generated by Autogen 5.12 using melt-build.def
## See http://stackoverflow.com/q/8727896/841108
## and http://lists.gnu.org/archive/html/help-make/2012-01/msg00017.html
## and http://gcc.gnu.org/ml/gcc/2012-01/msg00089.html
## and Ian Taylor's explanation http://gcc.gnu.org/ml/gcc/2012-01/msg00090.html
## Using remake http://bashdb.sourceforge.net/remake/ may help debugging this.
## Conventionally, all our timestamp files lie in the current directory.




#@ default MELT variant melt-build.tpl:35/1
melt_default_variant ?= optimized

# MELT_RUNNER is usually empty; it could be e.g 'time' or 'nice' or
# some other "prefix" to run MELT

## the following Makefile variables are expected to be set melt-build.tpl:41/2 


#@ melt-build.tpl:70/3 name= melt_source_dir comment=   directory containing *.melt & *.c files
ifndef melt_source_dir
$(warning unknown melt_source_dir :::  directory containing *.melt & *.c files)
endif



#@ melt-build.tpl:70/4 name= melt_module_dir comment=   directory containing *.so MELT module files
ifndef melt_module_dir
$(warning unknown melt_module_dir :::  directory containing *.so MELT module files)
endif



#@ melt-build.tpl:70/5 name= melt_make_module_makefile comment=   our melt-module.mk Makefile  when making MELT
ifndef melt_make_module_makefile
$(warning unknown melt_make_module_makefile :::  our melt-module.mk Makefile  when making MELT)
endif



#@ melt-build.tpl:70/6 name= melt_make_source_dir comment=   directory containing the *.melt files when making MELT
ifndef melt_make_source_dir
$(warning unknown melt_make_source_dir :::  directory containing the *.melt files when making MELT)
endif



#@ melt-build.tpl:70/7 name= melt_make_module_dir comment=   directory containing the *.so files when making MELT
ifndef melt_make_module_dir
$(warning unknown melt_make_module_dir :::  directory containing the *.so files when making MELT)
endif



#@ melt-build.tpl:70/8 name= melt_default_modules_list comment=   basename of the default module list
ifndef melt_default_modules_list
$(warning unknown melt_default_modules_list :::  basename of the default module list)
endif



#@ melt-build.tpl:70/9 name= melt_make_cc1 comment=   gcc -fplugin=melt or cc1-melt program within MELT branch
ifndef melt_make_cc1
$(warning unknown melt_make_cc1 :::  gcc -fplugin=melt or cc1-melt program within MELT branch)
endif



#@ melt-build.tpl:70/10 name= melt_make_cc1_dependency comment=   the make dependency for above
ifndef melt_make_cc1_dependency
$(warning unknown melt_make_cc1_dependency :::  the make dependency for above)
endif



#@ melt-build.tpl:70/11 name= melt_make_gencdeps comment=   extra make dependency of generated C files -often empty-
ifndef melt_make_gencdeps
$(warning unknown melt_make_gencdeps :::  extra make dependency of generated C files -often empty-)
endif



#@ melt-build.tpl:70/12 name= melt_move_if_change comment=   a move if change command for MELT
ifndef melt_move_if_change
$(warning unknown melt_move_if_change :::  a move if change command for MELT)
endif



#@ melt-build.tpl:70/13 name= melt_cflags comment=   the CFLAGS for compiling MELT generated C code
ifndef melt_cflags
$(warning unknown melt_cflags :::  the CFLAGS for compiling MELT generated C code)
endif



#@ melt-build.tpl:70/14 name= melt_xtra_cflags comment=   th CFLAGS for compiling extra applicative C code - often empty
ifndef melt_xtra_cflags
$(warning unknown melt_xtra_cflags :::  th CFLAGS for compiling extra applicative C code - often empty)
endif



#@ melt-build.tpl:70/15 name= melt_default_variant comment=   quicklybuilt | optimized | debugnoline
ifndef melt_default_variant
$(warning unknown melt_default_variant :::  quicklybuilt | optimized | debugnoline)
endif





## LN_S might not be defined, e.g. in MELT-Plugin-Makefile melt-build.tpl:79/16
LN_S ?= ln -sv

## GAWK is needed, the GNU awk melt-build.tpl:82/17
GAWK ?= gawk

## the md5sum utility is needed  melt-build.tpl:85/18
MD5SUM ?= md5sum

## the various arguments to MELT - avoid spaces in them! melt-build.tpl:88/19
meltarg_mode=$(if $(melt_is_plugin),-fplugin-arg-melt-mode,-fmelt-mode)
meltarg_init=$(if $(melt_is_plugin),-fplugin-arg-melt-init,-fmelt-init)
meltarg_module_path=$(if $(melt_is_plugin),-fplugin-arg-melt-module-path,-fmelt-module-path)
meltarg_source_path=$(if $(melt_is_plugin),-fplugin-arg-melt-source-path,-fmelt-source-path)
meltarg_tempdir=$(if $(melt_is_plugin),-fplugin-arg-melt-tempdir,-fmelt-tempdir)
meltarg_workdir=$(if $(melt_is_plugin),-fplugin-arg-melt-workdir,-fmelt-workdir)
meltarg_arg=$(if $(melt_is_plugin),-fplugin-arg-melt-arg,-fmelt-arg)
meltarg_bootstrapping=$(if $(melt_is_plugin),-fplugin-arg-melt-bootstrapping,-fmelt-bootstrapping)
meltarg_genworklink=$(if $(melt_is_plugin),-fplugin-arg-melt-generate-work-link,-fmelt-generate-work-link)
meltarg_makefile=$(if $(melt_is_plugin),-fplugin-arg-melt-module-makefile,-fmelt-module-makefile)
meltarg_makecmd=$(if $(melt_is_plugin),-fplugin-arg-melt-module-make-command,-fmelt-module-make-command)
meltarg_arglist=$(if $(melt_is_plugin),-fplugin-arg-melt-arglist,-fmelt-arglist)
meltarg_output=$(if $(melt_is_plugin),-fplugin-arg-melt-output,-fmelt-output)
meltarg_modulecflags=$(if $(melt_is_plugin),-fplugin-arg-melt-module-cflags,-fmelt-module-cflags)
meltarg_inhibitautobuild=$(if $(melt_is_plugin),-fplugin-arg-melt-inhibit-auto-build,-fmelt-inhibit-auto-build)

#@ melt-build.tpl:105/20
## MELT_DEBUG could be set to -fmelt-debug or -fplugin-arg-melt-debug
## the invocation to translate the very first initial MELT file melt-build.tpl:107/21
MELTCCINIT1ARGS= $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translateinit  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(meltarg_bootstrapping) $(MELT_DEBUG)

#@ melt-build.tpl:114/22
## the invocation to translate the other files melt-build.tpl:115/23
MELTCCFILE1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translatefile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(meltarg_bootstrapping)  $(MELT_DEBUG)

#@ melt-build.tpl:122/24
## the invocation to translate the application files -don't pass the -fmelt-bootstrap flag
MELTCCAPPLICATION1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=translatefile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG)
MELTCCAPPLICATION1=$(melt_make_cc1) $(MELTCCAPPLICATION1ARGS)

#@ melt-build.tpl:131/25
## the invocation to run the application files -don't pass the -fmelt-bootstrap flag
MELTCCRUNFILE1ARGS=  $(melt_make_cc1flags) -Wno-shadow $(meltarg_mode)=runfile  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG)
MELTCCRUNFILE1=$(melt_make_cc1) $(MELTCCRUNFILE1ARGS)

## our vpath  melt-build.tpl:140/26
vpath %.quicklybuilt.so . melt-workdir/ $(melt_make_module_dir)
vpath %.debugnoline.so . melt-workdir/ $(melt_make_module_dir)
vpath %.dynamic.so . melt-workdir/ $(melt_make_module_dir)
vpath %.pic.o .  melt-workdir/ $(melt_make_module_dir)
vpath %.so $(melt_make_module_dir) .
vpath %.c $(melt_make_source_dir)/generated . $(melt_source_dir)
vpath %.h . $(melt_make_source_dir)/generated $(melt_source_dir)
vpath %.melt $(melt_make_source_dir) . $(melt_source_dir)


## using make to compile the generated C into MELT modules melt-build.tpl:151/27
## the invoking command could set MELT_MAKE_MODULE_XTRAMAKEFLAGS=-j2
export MELT_MAKE_MODULE_XTRAMAKEFLAGS 
##always prefix $(MELT_MAKE_MODULE) with a + in this file.
MELT_MAKE_MODULE=$(MAKE) -f $(melt_make_module_makefile) $(MELT_MAKE_MODULE_XTRAMAKEFLAGS) VPATH=$(VPATH):.

## The base name of the MELT translator files melt-build.tpl:157/28
MELT_TRANSLATOR_BASE= \
    warmelt-first \
  warmelt-base \
  warmelt-debug \
  warmelt-macro \
  warmelt-normal \
  warmelt-normatch \
  warmelt-genobj \
  warmelt-outobj \
  warmelt-modes

## the MELT translator MELT source files melt-build.tpl:161/29
MELT_TRANSLATOR_SOURCE= $(patsubst %,$(melt_make_source_dir)/%.melt,$(MELT_TRANSLATOR_BASE))

## The base name of the MELT application files melt-build.tpl:164/30
MELT_APPLICATION_BASE= \
    xtramelt-ana-base \
  xtramelt-ana-tree \
  xtramelt-ana-gimple \
  xtramelt-probe \
  xtramelt-ana-simple \
  xtramelt-c-generator \
  xtramelt-opengpu

## The MELT application source files melt-build.tpl:168/31
MELT_APPLICATION_SOURCE= $(patsubst %,$(melt_make_source_dir)/%.melt,$(MELT_APPLICATION_BASE))

## The cold stage 0 of the translator melt-build.tpl:171/32

#@ The C files of the stage 0 are deposited melt-build.tpl:173/33
MELT_ZERO_GENERATED_FIRST_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-first.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-first+*.c)
# The base names of stage 0 files melt-build.tpl:177/34
MELT_ZERO_GENERATED_FIRST_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_FIRST_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/35
## avoid spaces in MELT_GENERATED_FIRST_CUMULMD5 below melt-build.tpl:181/36
MELT_ZERO_GENERATED_FIRST_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/37
MELT_ZERO_GENERATED_BASE_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-base.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-base+*.c)
# The base names of stage 0 files melt-build.tpl:177/38
MELT_ZERO_GENERATED_BASE_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_BASE_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/39
## avoid spaces in MELT_GENERATED_BASE_CUMULMD5 below melt-build.tpl:181/40
MELT_ZERO_GENERATED_BASE_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/41
MELT_ZERO_GENERATED_DEBUG_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-debug.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-debug+*.c)
# The base names of stage 0 files melt-build.tpl:177/42
MELT_ZERO_GENERATED_DEBUG_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_DEBUG_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/43
## avoid spaces in MELT_GENERATED_DEBUG_CUMULMD5 below melt-build.tpl:181/44
MELT_ZERO_GENERATED_DEBUG_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/45
MELT_ZERO_GENERATED_MACRO_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-macro.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-macro+*.c)
# The base names of stage 0 files melt-build.tpl:177/46
MELT_ZERO_GENERATED_MACRO_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_MACRO_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/47
## avoid spaces in MELT_GENERATED_MACRO_CUMULMD5 below melt-build.tpl:181/48
MELT_ZERO_GENERATED_MACRO_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/49
MELT_ZERO_GENERATED_NORMAL_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-normal.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-normal+*.c)
# The base names of stage 0 files melt-build.tpl:177/50
MELT_ZERO_GENERATED_NORMAL_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_NORMAL_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/51
## avoid spaces in MELT_GENERATED_NORMAL_CUMULMD5 below melt-build.tpl:181/52
MELT_ZERO_GENERATED_NORMAL_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/53
MELT_ZERO_GENERATED_NORMATCH_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-normatch.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-normatch+*.c)
# The base names of stage 0 files melt-build.tpl:177/54
MELT_ZERO_GENERATED_NORMATCH_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_NORMATCH_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/55
## avoid spaces in MELT_GENERATED_NORMATCH_CUMULMD5 below melt-build.tpl:181/56
MELT_ZERO_GENERATED_NORMATCH_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/57
MELT_ZERO_GENERATED_GENOBJ_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-genobj.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-genobj+*.c)
# The base names of stage 0 files melt-build.tpl:177/58
MELT_ZERO_GENERATED_GENOBJ_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_GENOBJ_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/59
## avoid spaces in MELT_GENERATED_GENOBJ_CUMULMD5 below melt-build.tpl:181/60
MELT_ZERO_GENERATED_GENOBJ_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/61
MELT_ZERO_GENERATED_OUTOBJ_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-outobj.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-outobj+*.c)
# The base names of stage 0 files melt-build.tpl:177/62
MELT_ZERO_GENERATED_OUTOBJ_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_OUTOBJ_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/63
## avoid spaces in MELT_GENERATED_OUTOBJ_CUMULMD5 below melt-build.tpl:181/64
MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c)

#@ The C files of the stage 0 are deposited melt-build.tpl:173/65
MELT_ZERO_GENERATED_MODES_C_FILES= \
                  $(realpath $(melt_make_source_dir))/generated/warmelt-modes.c \
                  $(wildcard $(realpath $(melt_make_source_dir))/generated/warmelt-modes+*.c)
# The base names of stage 0 files melt-build.tpl:177/66
MELT_ZERO_GENERATED_MODES_BASE= \
                  $(basename $(notdir $(MELT_GENERATED_MODES_C_FILES)))
# for stage 0 files, we don't compute the checksum, we extract what was deposited melt-build.tpl:180/67
## avoid spaces in MELT_GENERATED_MODES_CUMULMD5 below melt-build.tpl:181/68
MELT_ZERO_GENERATED_MODES_CUMULMD5:=$(shell $(GAWK) -F\" '/extern/{next} /melt_cumulated_hexmd5/{print $$2}' $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c)


#@ the required work directory melt-build.tpl:185/69
melt-workdir:
	mkdir -p melt-workdir
	ls -ld $$PWD/melt-workdir > melt-workdir-directory.stamp

#@ the work directory timestamp  melt-build.tpl:190/70
melt-workdir-directory.stamp: melt-workdir ; @true

####----------------------------------------------------------------


## An empty file is needed for every MELT translation melt-build.tpl:196/71
empty-file-for-melt.c:
	date +"/* empty-file-for-melt.c %c */" > $@-tmp
	mv $@-tmp $@

## can be overridden manually to either melt-stage0-dynamic or
## melt-stage0-quicklybuilt  melt-build.tpl:202/72
.PHONY: warmelt0
## the default stage0 is melt-build.tpl:204/73
MELT_STAGE_ZERO?=melt-stage0-dynamic
MELT_ZERO_FLAVOR=$(patsubst melt-stage0-%,%,$(MELT_STAGE_ZERO))
warmelt0: $(melt_make_cc1_dependency) \
   $(MELT_STAGE_ZERO)-directory.stamp $(MELT_STAGE_ZERO)-fullstage.stamp 


########################################################################
## the rules to build the quicklybuilt and dynamic flavors of stage0, that
## is with static or dynamic field object offsets  melt-build.tpl:213/74


## stage 0 flavor dynamic  melt-build.tpl:216/75

## stage 0 for  melt-build.tpl:218/76
melt-stage0-dynamic:
	test -d  melt-stage0-dynamic/ || mkdir  melt-stage0-dynamic/
	ls -ld $$PWD/melt-stage0-dynamic/ > melt-stage0-dynamic-directory.stamp
melt-stage0-dynamic-directory.stamp: melt-stage0-dynamic ; @true

#@ stage 0 flavor dynamic melt-build.tpl:224/77



#@ stage 0 for warmelt-first flavor dynamic  melt-build.tpl:228/78
melt-stage0-dynamic/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_FIRST_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-first MELT_GENERATED_FIRST_CUMULMD5= $(MELT_GENERATED_FIRST_CUMULMD5)  melt-build.tpl:232/79
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/80 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-first \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_FIRST_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-first
	@echo  melt-build.tpl:241/81 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-first*  melt-workdir/warmelt-first*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/82
	-ls -l melt-stage0-dynamic/warmelt-first* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-first flavor dynamic  descfiles melt-build.tpl:248/83 
melt-stage0-dynamic/warmelt-first+meltdesc.c melt-stage0-dynamic/warmelt-first+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-first+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-first flavor dynamic  shortmodule melt-build.tpl:255/84 
melt-stage0-dynamic/warmelt-first.dynamic.so: \
  melt-stage0-dynamic/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/85 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/86 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/87 
	$(MD5SUM) $@ > melt-stage0-warmelt-first.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-first.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-first.dynamic-module.stamp

#@ stage 0 for warmelt-first flavor dynamic  stamp melt-build.tpl:269/88 
melt-stage0-warmelt-first.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-first.dynamic.so ; @true

#@ stage 0 for warmelt-first flavor dynamic done  melt-build.tpl:273/89

#### end STAGE0 of warmelt-first flavored dynamic  melt-build.tpl:275/90


#@ stage 0 for warmelt-base flavor dynamic  melt-build.tpl:228/91
melt-stage0-dynamic/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_BASE_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-base MELT_GENERATED_BASE_CUMULMD5= $(MELT_GENERATED_BASE_CUMULMD5)  melt-build.tpl:232/92
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/93 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-base \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_BASE_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-base
	@echo  melt-build.tpl:241/94 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-base*  melt-workdir/warmelt-base*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/95
	-ls -l melt-stage0-dynamic/warmelt-base* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-base flavor dynamic  descfiles melt-build.tpl:248/96 
melt-stage0-dynamic/warmelt-base+meltdesc.c melt-stage0-dynamic/warmelt-base+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-base+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-base flavor dynamic  shortmodule melt-build.tpl:255/97 
melt-stage0-dynamic/warmelt-base.dynamic.so: \
  melt-stage0-dynamic/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/98 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/99 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/100 
	$(MD5SUM) $@ > melt-stage0-warmelt-base.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-base.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-base.dynamic-module.stamp

#@ stage 0 for warmelt-base flavor dynamic  stamp melt-build.tpl:269/101 
melt-stage0-warmelt-base.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-base.dynamic.so ; @true

#@ stage 0 for warmelt-base flavor dynamic done  melt-build.tpl:273/102

#### end STAGE0 of warmelt-base flavored dynamic  melt-build.tpl:275/103


#@ stage 0 for warmelt-debug flavor dynamic  melt-build.tpl:228/104
melt-stage0-dynamic/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_DEBUG_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-debug MELT_GENERATED_DEBUG_CUMULMD5= $(MELT_GENERATED_DEBUG_CUMULMD5)  melt-build.tpl:232/105
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/106 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-debug \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-debug
	@echo  melt-build.tpl:241/107 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-debug*  melt-workdir/warmelt-debug*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/108
	-ls -l melt-stage0-dynamic/warmelt-debug* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-debug flavor dynamic  descfiles melt-build.tpl:248/109 
melt-stage0-dynamic/warmelt-debug+meltdesc.c melt-stage0-dynamic/warmelt-debug+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-debug+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-debug flavor dynamic  shortmodule melt-build.tpl:255/110 
melt-stage0-dynamic/warmelt-debug.dynamic.so: \
  melt-stage0-dynamic/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/111 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/112 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/113 
	$(MD5SUM) $@ > melt-stage0-warmelt-debug.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-debug.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-debug.dynamic-module.stamp

#@ stage 0 for warmelt-debug flavor dynamic  stamp melt-build.tpl:269/114 
melt-stage0-warmelt-debug.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-debug.dynamic.so ; @true

#@ stage 0 for warmelt-debug flavor dynamic done  melt-build.tpl:273/115

#### end STAGE0 of warmelt-debug flavored dynamic  melt-build.tpl:275/116


#@ stage 0 for warmelt-macro flavor dynamic  melt-build.tpl:228/117
melt-stage0-dynamic/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_MACRO_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-macro MELT_GENERATED_MACRO_CUMULMD5= $(MELT_GENERATED_MACRO_CUMULMD5)  melt-build.tpl:232/118
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/119 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-macro \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MACRO_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-macro
	@echo  melt-build.tpl:241/120 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-macro*  melt-workdir/warmelt-macro*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/121
	-ls -l melt-stage0-dynamic/warmelt-macro* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-macro flavor dynamic  descfiles melt-build.tpl:248/122 
melt-stage0-dynamic/warmelt-macro+meltdesc.c melt-stage0-dynamic/warmelt-macro+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-macro+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-macro flavor dynamic  shortmodule melt-build.tpl:255/123 
melt-stage0-dynamic/warmelt-macro.dynamic.so: \
  melt-stage0-dynamic/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/124 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/125 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/126 
	$(MD5SUM) $@ > melt-stage0-warmelt-macro.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-macro.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-macro.dynamic-module.stamp

#@ stage 0 for warmelt-macro flavor dynamic  stamp melt-build.tpl:269/127 
melt-stage0-warmelt-macro.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-macro.dynamic.so ; @true

#@ stage 0 for warmelt-macro flavor dynamic done  melt-build.tpl:273/128

#### end STAGE0 of warmelt-macro flavored dynamic  melt-build.tpl:275/129


#@ stage 0 for warmelt-normal flavor dynamic  melt-build.tpl:228/130
melt-stage0-dynamic/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_NORMAL_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-normal MELT_GENERATED_NORMAL_CUMULMD5= $(MELT_GENERATED_NORMAL_CUMULMD5)  melt-build.tpl:232/131
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/132 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normal \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-normal
	@echo  melt-build.tpl:241/133 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-normal*  melt-workdir/warmelt-normal*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/134
	-ls -l melt-stage0-dynamic/warmelt-normal* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normal flavor dynamic  descfiles melt-build.tpl:248/135 
melt-stage0-dynamic/warmelt-normal+meltdesc.c melt-stage0-dynamic/warmelt-normal+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normal+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-normal flavor dynamic  shortmodule melt-build.tpl:255/136 
melt-stage0-dynamic/warmelt-normal.dynamic.so: \
  melt-stage0-dynamic/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/137 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/138 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/139 
	$(MD5SUM) $@ > melt-stage0-warmelt-normal.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normal.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-normal.dynamic-module.stamp

#@ stage 0 for warmelt-normal flavor dynamic  stamp melt-build.tpl:269/140 
melt-stage0-warmelt-normal.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-normal.dynamic.so ; @true

#@ stage 0 for warmelt-normal flavor dynamic done  melt-build.tpl:273/141

#### end STAGE0 of warmelt-normal flavored dynamic  melt-build.tpl:275/142


#@ stage 0 for warmelt-normatch flavor dynamic  melt-build.tpl:228/143
melt-stage0-dynamic/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_NORMATCH_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-normatch MELT_GENERATED_NORMATCH_CUMULMD5= $(MELT_GENERATED_NORMATCH_CUMULMD5)  melt-build.tpl:232/144
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/145 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normatch \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-normatch
	@echo  melt-build.tpl:241/146 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-normatch*  melt-workdir/warmelt-normatch*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/147
	-ls -l melt-stage0-dynamic/warmelt-normatch* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normatch flavor dynamic  descfiles melt-build.tpl:248/148 
melt-stage0-dynamic/warmelt-normatch+meltdesc.c melt-stage0-dynamic/warmelt-normatch+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normatch+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-normatch flavor dynamic  shortmodule melt-build.tpl:255/149 
melt-stage0-dynamic/warmelt-normatch.dynamic.so: \
  melt-stage0-dynamic/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/150 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/151 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/152 
	$(MD5SUM) $@ > melt-stage0-warmelt-normatch.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normatch.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-normatch.dynamic-module.stamp

#@ stage 0 for warmelt-normatch flavor dynamic  stamp melt-build.tpl:269/153 
melt-stage0-warmelt-normatch.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-normatch.dynamic.so ; @true

#@ stage 0 for warmelt-normatch flavor dynamic done  melt-build.tpl:273/154

#### end STAGE0 of warmelt-normatch flavored dynamic  melt-build.tpl:275/155


#@ stage 0 for warmelt-genobj flavor dynamic  melt-build.tpl:228/156
melt-stage0-dynamic/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_GENOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-genobj MELT_GENERATED_GENOBJ_CUMULMD5= $(MELT_GENERATED_GENOBJ_CUMULMD5)  melt-build.tpl:232/157
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/158 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-genobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-genobj
	@echo  melt-build.tpl:241/159 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-genobj*  melt-workdir/warmelt-genobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/160
	-ls -l melt-stage0-dynamic/warmelt-genobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-genobj flavor dynamic  descfiles melt-build.tpl:248/161 
melt-stage0-dynamic/warmelt-genobj+meltdesc.c melt-stage0-dynamic/warmelt-genobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-genobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-genobj flavor dynamic  shortmodule melt-build.tpl:255/162 
melt-stage0-dynamic/warmelt-genobj.dynamic.so: \
  melt-stage0-dynamic/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/163 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/164 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/165 
	$(MD5SUM) $@ > melt-stage0-warmelt-genobj.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-genobj.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-genobj.dynamic-module.stamp

#@ stage 0 for warmelt-genobj flavor dynamic  stamp melt-build.tpl:269/166 
melt-stage0-warmelt-genobj.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-genobj.dynamic.so ; @true

#@ stage 0 for warmelt-genobj flavor dynamic done  melt-build.tpl:273/167

#### end STAGE0 of warmelt-genobj flavored dynamic  melt-build.tpl:275/168


#@ stage 0 for warmelt-outobj flavor dynamic  melt-build.tpl:228/169
melt-stage0-dynamic/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_OUTOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-outobj MELT_GENERATED_OUTOBJ_CUMULMD5= $(MELT_GENERATED_OUTOBJ_CUMULMD5)  melt-build.tpl:232/170
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/171 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-outobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-outobj
	@echo  melt-build.tpl:241/172 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-outobj*  melt-workdir/warmelt-outobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/173
	-ls -l melt-stage0-dynamic/warmelt-outobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-outobj flavor dynamic  descfiles melt-build.tpl:248/174 
melt-stage0-dynamic/warmelt-outobj+meltdesc.c melt-stage0-dynamic/warmelt-outobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-outobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-outobj flavor dynamic  shortmodule melt-build.tpl:255/175 
melt-stage0-dynamic/warmelt-outobj.dynamic.so: \
  melt-stage0-dynamic/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/176 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/177 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/178 
	$(MD5SUM) $@ > melt-stage0-warmelt-outobj.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-outobj.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-outobj.dynamic-module.stamp

#@ stage 0 for warmelt-outobj flavor dynamic  stamp melt-build.tpl:269/179 
melt-stage0-warmelt-outobj.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-outobj.dynamic.so ; @true

#@ stage 0 for warmelt-outobj flavor dynamic done  melt-build.tpl:273/180

#### end STAGE0 of warmelt-outobj flavored dynamic  melt-build.tpl:275/181


#@ stage 0 for warmelt-modes flavor dynamic  melt-build.tpl:228/182
melt-stage0-dynamic/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).dynamic.so:  $(MELT_ZERO_GENERATED_MODES_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-dynamic-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-dynamic warmelt-modes MELT_GENERATED_MODES_CUMULMD5= $(MELT_GENERATED_MODES_CUMULMD5)  melt-build.tpl:232/183
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/184 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=dynamic \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-modes \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MODES_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-dynamic/warmelt-modes
	@echo  melt-build.tpl:241/185 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-dynamic/warmelt-modes*  melt-workdir/warmelt-modes*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/186
	-ls -l melt-stage0-dynamic/warmelt-modes* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-modes flavor dynamic  descfiles melt-build.tpl:248/187 
melt-stage0-dynamic/warmelt-modes+meltdesc.c melt-stage0-dynamic/warmelt-modes+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-modes+melttime.h
	$(LN_S) -v -f $? melt-stage0-dynamic/


#@ stage 0 for warmelt-modes flavor dynamic  shortmodule melt-build.tpl:255/188 
melt-stage0-dynamic/warmelt-modes.dynamic.so: \
  melt-stage0-dynamic/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).dynamic.so
	@echo  melt-build.tpl:258/189 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/190 $@
	cd melt-stage0-dynamic/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/191 
	$(MD5SUM) $@ > melt-stage0-warmelt-modes.dynamic-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-modes.dynamic-module.stamp-tmp \
             melt-stage0-warmelt-modes.dynamic-module.stamp

#@ stage 0 for warmelt-modes flavor dynamic  stamp melt-build.tpl:269/192 
melt-stage0-warmelt-modes.dynamic-module.stamp: \
  melt-stage0-dynamic/warmelt-modes.dynamic.so ; @true

#@ stage 0 for warmelt-modes flavor dynamic done  melt-build.tpl:273/193

#### end STAGE0 of warmelt-modes flavored dynamic  melt-build.tpl:275/194



#@ stage 0 flavor dynamic modulelist  melt-build.tpl:279/195 
melt-stage0-dynamic/warmelt.modlis:  | \
             melt-stage0-dynamic/warmelt-first.dynamic.so \
                melt-stage0-dynamic/warmelt-first+meltdesc.c  \
             melt-stage0-dynamic/warmelt-base.dynamic.so \
                melt-stage0-dynamic/warmelt-base+meltdesc.c  \
             melt-stage0-dynamic/warmelt-debug.dynamic.so \
                melt-stage0-dynamic/warmelt-debug+meltdesc.c  \
             melt-stage0-dynamic/warmelt-macro.dynamic.so \
                melt-stage0-dynamic/warmelt-macro+meltdesc.c  \
             melt-stage0-dynamic/warmelt-normal.dynamic.so \
                melt-stage0-dynamic/warmelt-normal+meltdesc.c  \
             melt-stage0-dynamic/warmelt-normatch.dynamic.so \
                melt-stage0-dynamic/warmelt-normatch+meltdesc.c  \
             melt-stage0-dynamic/warmelt-genobj.dynamic.so \
                melt-stage0-dynamic/warmelt-genobj+meltdesc.c  \
             melt-stage0-dynamic/warmelt-outobj.dynamic.so \
                melt-stage0-dynamic/warmelt-outobj+meltdesc.c  \
             melt-stage0-dynamic/warmelt-modes.dynamic.so \
                melt-stage0-dynamic/warmelt-modes+meltdesc.c 
	date  +"#$@ generated %F" > $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-first.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-base.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-debug.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-macro.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normal.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normatch.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-genobj.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-outobj.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-modes.dynamic >> $@-tmp
	echo "#end stage 0 flavor dynamic module list" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@




#@ stage 0 flavor dynamic fullstage stamp  melt-build.tpl:293/196 
melt-stage0-dynamic-fullstage.stamp: \
 melt-stage0-warmelt-first.dynamic-module.stamp  \
 melt-stage0-warmelt-base.dynamic-module.stamp  \
 melt-stage0-warmelt-debug.dynamic-module.stamp  \
 melt-stage0-warmelt-macro.dynamic-module.stamp  \
 melt-stage0-warmelt-normal.dynamic-module.stamp  \
 melt-stage0-warmelt-normatch.dynamic-module.stamp  \
 melt-stage0-warmelt-genobj.dynamic-module.stamp  \
 melt-stage0-warmelt-outobj.dynamic-module.stamp  \
 melt-stage0-warmelt-modes.dynamic-module.stamp 
	cat $^ > $@-tmp
	$(melt_move_if_change) $@-tmp $@


##@ end STAGE0  flavor dynamic  melt-build.tpl:301/197
####-------------------------------------------------------------


## stage 0 flavor quicklybuilt  melt-build.tpl:216/198

## stage 0 for  melt-build.tpl:218/199
melt-stage0-quicklybuilt:
	test -d  melt-stage0-quicklybuilt/ || mkdir  melt-stage0-quicklybuilt/
	ls -ld $$PWD/melt-stage0-quicklybuilt/ > melt-stage0-quicklybuilt-directory.stamp
melt-stage0-quicklybuilt-directory.stamp: melt-stage0-quicklybuilt ; @true

#@ stage 0 flavor quicklybuilt melt-build.tpl:224/200



#@ stage 0 for warmelt-first flavor quicklybuilt  melt-build.tpl:228/201
melt-stage0-quicklybuilt/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_FIRST_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-first MELT_GENERATED_FIRST_CUMULMD5= $(MELT_GENERATED_FIRST_CUMULMD5)  melt-build.tpl:232/202
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/203 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-first \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_FIRST_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-first
	@echo  melt-build.tpl:241/204 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-first*  melt-workdir/warmelt-first*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/205
	-ls -l melt-stage0-quicklybuilt/warmelt-first* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-first flavor quicklybuilt  descfiles melt-build.tpl:248/206 
melt-stage0-quicklybuilt/warmelt-first+meltdesc.c melt-stage0-quicklybuilt/warmelt-first+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-first+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-first+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-first flavor quicklybuilt  shortmodule melt-build.tpl:255/207 
melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-first.$(MELT_ZERO_GENERATED_FIRST_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/208 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/209 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/210 
	$(MD5SUM) $@ > melt-stage0-warmelt-first.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-first.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-first.quicklybuilt-module.stamp

#@ stage 0 for warmelt-first flavor quicklybuilt  stamp melt-build.tpl:269/211 
melt-stage0-warmelt-first.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so ; @true

#@ stage 0 for warmelt-first flavor quicklybuilt done  melt-build.tpl:273/212

#### end STAGE0 of warmelt-first flavored quicklybuilt  melt-build.tpl:275/213


#@ stage 0 for warmelt-base flavor quicklybuilt  melt-build.tpl:228/214
melt-stage0-quicklybuilt/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_BASE_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-base MELT_GENERATED_BASE_CUMULMD5= $(MELT_GENERATED_BASE_CUMULMD5)  melt-build.tpl:232/215
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/216 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-base \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_BASE_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-base
	@echo  melt-build.tpl:241/217 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-base*  melt-workdir/warmelt-base*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/218
	-ls -l melt-stage0-quicklybuilt/warmelt-base* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-base flavor quicklybuilt  descfiles melt-build.tpl:248/219 
melt-stage0-quicklybuilt/warmelt-base+meltdesc.c melt-stage0-quicklybuilt/warmelt-base+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-base+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-base+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-base flavor quicklybuilt  shortmodule melt-build.tpl:255/220 
melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-base.$(MELT_ZERO_GENERATED_BASE_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/221 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/222 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/223 
	$(MD5SUM) $@ > melt-stage0-warmelt-base.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-base.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-base.quicklybuilt-module.stamp

#@ stage 0 for warmelt-base flavor quicklybuilt  stamp melt-build.tpl:269/224 
melt-stage0-warmelt-base.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so ; @true

#@ stage 0 for warmelt-base flavor quicklybuilt done  melt-build.tpl:273/225

#### end STAGE0 of warmelt-base flavored quicklybuilt  melt-build.tpl:275/226


#@ stage 0 for warmelt-debug flavor quicklybuilt  melt-build.tpl:228/227
melt-stage0-quicklybuilt/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_DEBUG_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-debug MELT_GENERATED_DEBUG_CUMULMD5= $(MELT_GENERATED_DEBUG_CUMULMD5)  melt-build.tpl:232/228
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/229 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-debug \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-debug
	@echo  melt-build.tpl:241/230 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-debug*  melt-workdir/warmelt-debug*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/231
	-ls -l melt-stage0-quicklybuilt/warmelt-debug* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-debug flavor quicklybuilt  descfiles melt-build.tpl:248/232 
melt-stage0-quicklybuilt/warmelt-debug+meltdesc.c melt-stage0-quicklybuilt/warmelt-debug+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-debug+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-debug+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-debug flavor quicklybuilt  shortmodule melt-build.tpl:255/233 
melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-debug.$(MELT_ZERO_GENERATED_DEBUG_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/234 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/235 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/236 
	$(MD5SUM) $@ > melt-stage0-warmelt-debug.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-debug.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-debug.quicklybuilt-module.stamp

#@ stage 0 for warmelt-debug flavor quicklybuilt  stamp melt-build.tpl:269/237 
melt-stage0-warmelt-debug.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so ; @true

#@ stage 0 for warmelt-debug flavor quicklybuilt done  melt-build.tpl:273/238

#### end STAGE0 of warmelt-debug flavored quicklybuilt  melt-build.tpl:275/239


#@ stage 0 for warmelt-macro flavor quicklybuilt  melt-build.tpl:228/240
melt-stage0-quicklybuilt/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_MACRO_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-macro MELT_GENERATED_MACRO_CUMULMD5= $(MELT_GENERATED_MACRO_CUMULMD5)  melt-build.tpl:232/241
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/242 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-macro \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MACRO_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-macro
	@echo  melt-build.tpl:241/243 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-macro*  melt-workdir/warmelt-macro*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/244
	-ls -l melt-stage0-quicklybuilt/warmelt-macro* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-macro flavor quicklybuilt  descfiles melt-build.tpl:248/245 
melt-stage0-quicklybuilt/warmelt-macro+meltdesc.c melt-stage0-quicklybuilt/warmelt-macro+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-macro+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-macro+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-macro flavor quicklybuilt  shortmodule melt-build.tpl:255/246 
melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-macro.$(MELT_ZERO_GENERATED_MACRO_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/247 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/248 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/249 
	$(MD5SUM) $@ > melt-stage0-warmelt-macro.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-macro.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-macro.quicklybuilt-module.stamp

#@ stage 0 for warmelt-macro flavor quicklybuilt  stamp melt-build.tpl:269/250 
melt-stage0-warmelt-macro.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so ; @true

#@ stage 0 for warmelt-macro flavor quicklybuilt done  melt-build.tpl:273/251

#### end STAGE0 of warmelt-macro flavored quicklybuilt  melt-build.tpl:275/252


#@ stage 0 for warmelt-normal flavor quicklybuilt  melt-build.tpl:228/253
melt-stage0-quicklybuilt/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_NORMAL_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-normal MELT_GENERATED_NORMAL_CUMULMD5= $(MELT_GENERATED_NORMAL_CUMULMD5)  melt-build.tpl:232/254
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/255 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normal \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-normal
	@echo  melt-build.tpl:241/256 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-normal*  melt-workdir/warmelt-normal*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/257
	-ls -l melt-stage0-quicklybuilt/warmelt-normal* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normal flavor quicklybuilt  descfiles melt-build.tpl:248/258 
melt-stage0-quicklybuilt/warmelt-normal+meltdesc.c melt-stage0-quicklybuilt/warmelt-normal+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normal+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normal+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-normal flavor quicklybuilt  shortmodule melt-build.tpl:255/259 
melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-normal.$(MELT_ZERO_GENERATED_NORMAL_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/260 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/261 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/262 
	$(MD5SUM) $@ > melt-stage0-warmelt-normal.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normal.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-normal.quicklybuilt-module.stamp

#@ stage 0 for warmelt-normal flavor quicklybuilt  stamp melt-build.tpl:269/263 
melt-stage0-warmelt-normal.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so ; @true

#@ stage 0 for warmelt-normal flavor quicklybuilt done  melt-build.tpl:273/264

#### end STAGE0 of warmelt-normal flavored quicklybuilt  melt-build.tpl:275/265


#@ stage 0 for warmelt-normatch flavor quicklybuilt  melt-build.tpl:228/266
melt-stage0-quicklybuilt/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_NORMATCH_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-normatch MELT_GENERATED_NORMATCH_CUMULMD5= $(MELT_GENERATED_NORMATCH_CUMULMD5)  melt-build.tpl:232/267
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/268 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-normatch \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-normatch
	@echo  melt-build.tpl:241/269 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-normatch*  melt-workdir/warmelt-normatch*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/270
	-ls -l melt-stage0-quicklybuilt/warmelt-normatch* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-normatch flavor quicklybuilt  descfiles melt-build.tpl:248/271 
melt-stage0-quicklybuilt/warmelt-normatch+meltdesc.c melt-stage0-quicklybuilt/warmelt-normatch+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-normatch+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-normatch+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-normatch flavor quicklybuilt  shortmodule melt-build.tpl:255/272 
melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-normatch.$(MELT_ZERO_GENERATED_NORMATCH_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/273 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/274 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/275 
	$(MD5SUM) $@ > melt-stage0-warmelt-normatch.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-normatch.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-normatch.quicklybuilt-module.stamp

#@ stage 0 for warmelt-normatch flavor quicklybuilt  stamp melt-build.tpl:269/276 
melt-stage0-warmelt-normatch.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so ; @true

#@ stage 0 for warmelt-normatch flavor quicklybuilt done  melt-build.tpl:273/277

#### end STAGE0 of warmelt-normatch flavored quicklybuilt  melt-build.tpl:275/278


#@ stage 0 for warmelt-genobj flavor quicklybuilt  melt-build.tpl:228/279
melt-stage0-quicklybuilt/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_GENOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-genobj MELT_GENERATED_GENOBJ_CUMULMD5= $(MELT_GENERATED_GENOBJ_CUMULMD5)  melt-build.tpl:232/280
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/281 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-genobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-genobj
	@echo  melt-build.tpl:241/282 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-genobj*  melt-workdir/warmelt-genobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/283
	-ls -l melt-stage0-quicklybuilt/warmelt-genobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-genobj flavor quicklybuilt  descfiles melt-build.tpl:248/284 
melt-stage0-quicklybuilt/warmelt-genobj+meltdesc.c melt-stage0-quicklybuilt/warmelt-genobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-genobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-genobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-genobj flavor quicklybuilt  shortmodule melt-build.tpl:255/285 
melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-genobj.$(MELT_ZERO_GENERATED_GENOBJ_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/286 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/287 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/288 
	$(MD5SUM) $@ > melt-stage0-warmelt-genobj.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-genobj.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-genobj.quicklybuilt-module.stamp

#@ stage 0 for warmelt-genobj flavor quicklybuilt  stamp melt-build.tpl:269/289 
melt-stage0-warmelt-genobj.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so ; @true

#@ stage 0 for warmelt-genobj flavor quicklybuilt done  melt-build.tpl:273/290

#### end STAGE0 of warmelt-genobj flavored quicklybuilt  melt-build.tpl:275/291


#@ stage 0 for warmelt-outobj flavor quicklybuilt  melt-build.tpl:228/292
melt-stage0-quicklybuilt/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_OUTOBJ_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-outobj MELT_GENERATED_OUTOBJ_CUMULMD5= $(MELT_GENERATED_OUTOBJ_CUMULMD5)  melt-build.tpl:232/293
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/294 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-outobj \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-outobj
	@echo  melt-build.tpl:241/295 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-outobj*  melt-workdir/warmelt-outobj*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/296
	-ls -l melt-stage0-quicklybuilt/warmelt-outobj* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-outobj flavor quicklybuilt  descfiles melt-build.tpl:248/297 
melt-stage0-quicklybuilt/warmelt-outobj+meltdesc.c melt-stage0-quicklybuilt/warmelt-outobj+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-outobj+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-outobj+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-outobj flavor quicklybuilt  shortmodule melt-build.tpl:255/298 
melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-outobj.$(MELT_ZERO_GENERATED_OUTOBJ_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/299 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/300 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/301 
	$(MD5SUM) $@ > melt-stage0-warmelt-outobj.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-outobj.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-outobj.quicklybuilt-module.stamp

#@ stage 0 for warmelt-outobj flavor quicklybuilt  stamp melt-build.tpl:269/302 
melt-stage0-warmelt-outobj.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so ; @true

#@ stage 0 for warmelt-outobj flavor quicklybuilt done  melt-build.tpl:273/303

#### end STAGE0 of warmelt-outobj flavored quicklybuilt  melt-build.tpl:275/304


#@ stage 0 for warmelt-modes flavor quicklybuilt  melt-build.tpl:228/305
melt-stage0-quicklybuilt/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).quicklybuilt.so:  $(MELT_ZERO_GENERATED_MODES_C_FILES) \
             melt-run.h melt-runtime.h melt-runtime.c melt-workdir-directory.stamp \
             melt-predef.h melt-stage0-quicklybuilt-directory.stamp $(melt_make_cc1_dependency)
	@echo stage0-quicklybuilt warmelt-modes MELT_GENERATED_MODES_CUMULMD5= $(MELT_GENERATED_MODES_CUMULMD5)  melt-build.tpl:232/306
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MAKEFROM=melt-build.tpl:234/307 \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=$(melt_make_source_dir)/generated/warmelt-modes \
	      GCCMELT_CUMULATED_MD5=$(MELT_ZERO_GENERATED_MODES_CUMULMD5) \
              GCCMELT_MODULE_BINARYBASE=melt-stage0-quicklybuilt/warmelt-modes
	@echo  melt-build.tpl:241/308 $@  "real!melt-workdir=$(realpath melt-workdir)"
	-ls -l melt-stage0-quicklybuilt/warmelt-modes*  melt-workdir/warmelt-modes*
	$(LN_S) -v -f $(realpath melt-workdir)/$(notdir $@) $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:245/309
	-ls -l melt-stage0-quicklybuilt/warmelt-modes* melt-workdir/$(notdir $@) $@

#@ stage 0 for warmelt-modes flavor quicklybuilt  descfiles melt-build.tpl:248/310 
melt-stage0-quicklybuilt/warmelt-modes+meltdesc.c melt-stage0-quicklybuilt/warmelt-modes+melttime.h: \
   $(melt_make_source_dir)/generated/warmelt-modes+meltdesc.c \
   $(melt_make_source_dir)/generated/warmelt-modes+melttime.h
	$(LN_S) -v -f $? melt-stage0-quicklybuilt/


#@ stage 0 for warmelt-modes flavor quicklybuilt  shortmodule melt-build.tpl:255/311 
melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so: \
  melt-stage0-quicklybuilt/warmelt-modes.$(MELT_ZERO_GENERATED_MODES_CUMULMD5).quicklybuilt.so
	@echo  melt-build.tpl:258/312 $@
	-ls -l $< $@
	@echo  melt-build.tpl:260/313 $@
	cd melt-stage0-quicklybuilt/ ; $(LN_S) -v -f $(notdir $<) $(notdir $@)
	-ls -l $< $@
	touch -c $@
	@echo  '@@touched' $@ melt-build.tpl:264/314 
	$(MD5SUM) $@ > melt-stage0-warmelt-modes.quicklybuilt-module.stamp-tmp
	$(melt_move_if_change) melt-stage0-warmelt-modes.quicklybuilt-module.stamp-tmp \
             melt-stage0-warmelt-modes.quicklybuilt-module.stamp

#@ stage 0 for warmelt-modes flavor quicklybuilt  stamp melt-build.tpl:269/315 
melt-stage0-warmelt-modes.quicklybuilt-module.stamp: \
  melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so ; @true

#@ stage 0 for warmelt-modes flavor quicklybuilt done  melt-build.tpl:273/316

#### end STAGE0 of warmelt-modes flavored quicklybuilt  melt-build.tpl:275/317



#@ stage 0 flavor quicklybuilt modulelist  melt-build.tpl:279/318 
melt-stage0-quicklybuilt/warmelt.modlis:  | \
             melt-stage0-quicklybuilt/warmelt-first.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-first+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-base.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-base+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-debug.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-debug+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-macro.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-macro+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-normal.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-normal+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-normatch.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-normatch+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-genobj.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-genobj+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-outobj.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-outobj+meltdesc.c  \
             melt-stage0-quicklybuilt/warmelt-modes.quicklybuilt.so \
                melt-stage0-quicklybuilt/warmelt-modes+meltdesc.c 
	date  +"#$@ generated %F" > $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-first.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-base.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-debug.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-macro.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normal.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-normatch.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-genobj.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-outobj.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	echo $(melt_make_source_dir)/generated/warmelt-modes.quicklybuilt >> $@-tmp
	echo "#end stage 0 flavor quicklybuilt module list" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@




#@ stage 0 flavor quicklybuilt fullstage stamp  melt-build.tpl:293/319 
melt-stage0-quicklybuilt-fullstage.stamp: \
 melt-stage0-warmelt-first.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-base.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-debug.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-macro.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-normal.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-normatch.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-genobj.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-outobj.quicklybuilt-module.stamp  \
 melt-stage0-warmelt-modes.quicklybuilt-module.stamp 
	cat $^ > $@-tmp
	$(melt_move_if_change) $@-tmp $@


##@ end STAGE0  flavor quicklybuilt  melt-build.tpl:301/320
####-------------------------------------------------------------

 


################################################################
################################################################
#### making our melt stages  melt-build.tpl:309/321


#@  for melt-stage1 melt-build.tpl:312/322
#### rules for melt-stage1, previous $(MELT_STAGE_ZERO)


### the C source of melt-stage1 for warmelt-first melt-build.tpl:322/323

## the timestamp C header file  for warmelt-first melt-build.tpl:324/324
melt-stage1/warmelt-first+melttime.h: melt-stage1/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-first melt-build.tpl:327/325
melt-stage1/warmelt-first+meltdesc.c melt-stage1/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/326
	@echo generating $< for melt-stage1
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
$(MELT_STAGE_ZERO)/warmelt-first.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-base.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-first+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage1.args-tmp  warmelt-first+melt-stage1.args
	@echo; echo; echo -n  warmelt-first+melt-stage1.args: ; cat warmelt-first+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/327
	@echo doing warmelt-first+melt-stage1  melt-build.tpl:357/328
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-first+melt-stage1.args
	@ls -l melt-stage1/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-first.c melt-build.tpl:359/329 ; exit 1 )

#@ melt-build.tpl:361/330
################## quicklybuilt module warmelt-first for melt-stage1
melt-stage1/warmelt-first.quicklybuilt.so: melt-stage1/warmelt-first.c \
              $(wildcard melt-stage1/warmelt-first+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/331
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/332 \
	      MELTGEN_MODULENAME=warmelt-first \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/333
	$(MD5SUM) $@ > melt-stage1-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-first-module.stamp-tmp melt-stage1-warmelt-first-module.stamp


#@ melt-build.tpl:382/334 time stamp for module
melt-stage1-warmelt-first-module.stamp: melt-stage1/warmelt-first.quicklybuilt.so; @true


#@ melt-build.tpl:386/335
################## debugnoline module warmelt-first for melt-stage1
melt-stage1/warmelt-first.debugnoline.so:   melt-stage1/warmelt-first.c \
              $(wildcard melt-stage1/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/336
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-first



### the C source of melt-stage1 for warmelt-base melt-build.tpl:322/337

## the timestamp C header file  for warmelt-base melt-build.tpl:324/338
melt-stage1/warmelt-base+melttime.h: melt-stage1/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-base melt-build.tpl:327/339
melt-stage1/warmelt-base+meltdesc.c melt-stage1/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/340
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-base.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-base+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage1.args-tmp  warmelt-base+melt-stage1.args
	@echo; echo; echo -n  warmelt-base+melt-stage1.args: ; cat warmelt-base+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/341
	@echo doing warmelt-base+melt-stage1  melt-build.tpl:357/342
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-base+melt-stage1.args
	@ls -l melt-stage1/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-base.c melt-build.tpl:359/343 ; exit 1 )

#@ melt-build.tpl:361/344
################## quicklybuilt module warmelt-base for melt-stage1
melt-stage1/warmelt-base.quicklybuilt.so: melt-stage1/warmelt-base.c \
              $(wildcard melt-stage1/warmelt-base+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/345
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/346 \
	      MELTGEN_MODULENAME=warmelt-base \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/347
	$(MD5SUM) $@ > melt-stage1-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-base-module.stamp-tmp melt-stage1-warmelt-base-module.stamp


#@ melt-build.tpl:382/348 time stamp for module
melt-stage1-warmelt-base-module.stamp: melt-stage1/warmelt-base.quicklybuilt.so; @true


#@ melt-build.tpl:386/349
################## debugnoline module warmelt-base for melt-stage1
melt-stage1/warmelt-base.debugnoline.so:   melt-stage1/warmelt-base.c \
              $(wildcard melt-stage1/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/350
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-base



### the C source of melt-stage1 for warmelt-debug melt-build.tpl:322/351

## the timestamp C header file  for warmelt-debug melt-build.tpl:324/352
melt-stage1/warmelt-debug+melttime.h: melt-stage1/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-debug melt-build.tpl:327/353
melt-stage1/warmelt-debug+meltdesc.c melt-stage1/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/354
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-debug.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-debug+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage1.args-tmp  warmelt-debug+melt-stage1.args
	@echo; echo; echo -n  warmelt-debug+melt-stage1.args: ; cat warmelt-debug+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/355
	@echo doing warmelt-debug+melt-stage1  melt-build.tpl:357/356
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-debug+melt-stage1.args
	@ls -l melt-stage1/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-debug.c melt-build.tpl:359/357 ; exit 1 )

#@ melt-build.tpl:361/358
################## quicklybuilt module warmelt-debug for melt-stage1
melt-stage1/warmelt-debug.quicklybuilt.so: melt-stage1/warmelt-debug.c \
              $(wildcard melt-stage1/warmelt-debug+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/359
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/360 \
	      MELTGEN_MODULENAME=warmelt-debug \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/361
	$(MD5SUM) $@ > melt-stage1-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-debug-module.stamp-tmp melt-stage1-warmelt-debug-module.stamp


#@ melt-build.tpl:382/362 time stamp for module
melt-stage1-warmelt-debug-module.stamp: melt-stage1/warmelt-debug.quicklybuilt.so; @true


#@ melt-build.tpl:386/363
################## debugnoline module warmelt-debug for melt-stage1
melt-stage1/warmelt-debug.debugnoline.so:   melt-stage1/warmelt-debug.c \
              $(wildcard melt-stage1/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/364
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-debug



### the C source of melt-stage1 for warmelt-macro melt-build.tpl:322/365

## the timestamp C header file  for warmelt-macro melt-build.tpl:324/366
melt-stage1/warmelt-macro+melttime.h: melt-stage1/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-macro melt-build.tpl:327/367
melt-stage1/warmelt-macro+meltdesc.c melt-stage1/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/368
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-macro.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-macro+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage1.args-tmp  warmelt-macro+melt-stage1.args
	@echo; echo; echo -n  warmelt-macro+melt-stage1.args: ; cat warmelt-macro+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/369
	@echo doing warmelt-macro+melt-stage1  melt-build.tpl:357/370
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-macro+melt-stage1.args
	@ls -l melt-stage1/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-macro.c melt-build.tpl:359/371 ; exit 1 )

#@ melt-build.tpl:361/372
################## quicklybuilt module warmelt-macro for melt-stage1
melt-stage1/warmelt-macro.quicklybuilt.so: melt-stage1/warmelt-macro.c \
              $(wildcard melt-stage1/warmelt-macro+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/373
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/374 \
	      MELTGEN_MODULENAME=warmelt-macro \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/375
	$(MD5SUM) $@ > melt-stage1-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-macro-module.stamp-tmp melt-stage1-warmelt-macro-module.stamp


#@ melt-build.tpl:382/376 time stamp for module
melt-stage1-warmelt-macro-module.stamp: melt-stage1/warmelt-macro.quicklybuilt.so; @true


#@ melt-build.tpl:386/377
################## debugnoline module warmelt-macro for melt-stage1
melt-stage1/warmelt-macro.debugnoline.so:   melt-stage1/warmelt-macro.c \
              $(wildcard melt-stage1/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/378
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-macro



### the C source of melt-stage1 for warmelt-normal melt-build.tpl:322/379

## the timestamp C header file  for warmelt-normal melt-build.tpl:324/380
melt-stage1/warmelt-normal+melttime.h: melt-stage1/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-normal melt-build.tpl:327/381
melt-stage1/warmelt-normal+meltdesc.c melt-stage1/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/382
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-normal.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-normal+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage1.args-tmp  warmelt-normal+melt-stage1.args
	@echo; echo; echo -n  warmelt-normal+melt-stage1.args: ; cat warmelt-normal+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/383
	@echo doing warmelt-normal+melt-stage1  melt-build.tpl:357/384
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normal+melt-stage1.args
	@ls -l melt-stage1/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-normal.c melt-build.tpl:359/385 ; exit 1 )

#@ melt-build.tpl:361/386
################## quicklybuilt module warmelt-normal for melt-stage1
melt-stage1/warmelt-normal.quicklybuilt.so: melt-stage1/warmelt-normal.c \
              $(wildcard melt-stage1/warmelt-normal+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/387
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/388 \
	      MELTGEN_MODULENAME=warmelt-normal \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/389
	$(MD5SUM) $@ > melt-stage1-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-normal-module.stamp-tmp melt-stage1-warmelt-normal-module.stamp


#@ melt-build.tpl:382/390 time stamp for module
melt-stage1-warmelt-normal-module.stamp: melt-stage1/warmelt-normal.quicklybuilt.so; @true


#@ melt-build.tpl:386/391
################## debugnoline module warmelt-normal for melt-stage1
melt-stage1/warmelt-normal.debugnoline.so:   melt-stage1/warmelt-normal.c \
              $(wildcard melt-stage1/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/392
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normal



### the C source of melt-stage1 for warmelt-normatch melt-build.tpl:322/393

## the timestamp C header file  for warmelt-normatch melt-build.tpl:324/394
melt-stage1/warmelt-normatch+melttime.h: melt-stage1/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-normatch melt-build.tpl:327/395
melt-stage1/warmelt-normatch+meltdesc.c melt-stage1/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/396
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-normatch.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-normatch+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage1.args-tmp  warmelt-normatch+melt-stage1.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage1.args: ; cat warmelt-normatch+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/397
	@echo doing warmelt-normatch+melt-stage1  melt-build.tpl:357/398
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normatch+melt-stage1.args
	@ls -l melt-stage1/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-normatch.c melt-build.tpl:359/399 ; exit 1 )

#@ melt-build.tpl:361/400
################## quicklybuilt module warmelt-normatch for melt-stage1
melt-stage1/warmelt-normatch.quicklybuilt.so: melt-stage1/warmelt-normatch.c \
              $(wildcard melt-stage1/warmelt-normatch+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/401
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/402 \
	      MELTGEN_MODULENAME=warmelt-normatch \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/403
	$(MD5SUM) $@ > melt-stage1-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-normatch-module.stamp-tmp melt-stage1-warmelt-normatch-module.stamp


#@ melt-build.tpl:382/404 time stamp for module
melt-stage1-warmelt-normatch-module.stamp: melt-stage1/warmelt-normatch.quicklybuilt.so; @true


#@ melt-build.tpl:386/405
################## debugnoline module warmelt-normatch for melt-stage1
melt-stage1/warmelt-normatch.debugnoline.so:   melt-stage1/warmelt-normatch.c \
              $(wildcard melt-stage1/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/406
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-normatch



### the C source of melt-stage1 for warmelt-genobj melt-build.tpl:322/407

## the timestamp C header file  for warmelt-genobj melt-build.tpl:324/408
melt-stage1/warmelt-genobj+melttime.h: melt-stage1/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-genobj melt-build.tpl:327/409
melt-stage1/warmelt-genobj+meltdesc.c melt-stage1/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/410
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-genobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-genobj+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage1.args-tmp  warmelt-genobj+melt-stage1.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage1.args: ; cat warmelt-genobj+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/411
	@echo doing warmelt-genobj+melt-stage1  melt-build.tpl:357/412
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-genobj+melt-stage1.args
	@ls -l melt-stage1/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-genobj.c melt-build.tpl:359/413 ; exit 1 )

#@ melt-build.tpl:361/414
################## quicklybuilt module warmelt-genobj for melt-stage1
melt-stage1/warmelt-genobj.quicklybuilt.so: melt-stage1/warmelt-genobj.c \
              $(wildcard melt-stage1/warmelt-genobj+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/415
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/416 \
	      MELTGEN_MODULENAME=warmelt-genobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/417
	$(MD5SUM) $@ > melt-stage1-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-genobj-module.stamp-tmp melt-stage1-warmelt-genobj-module.stamp


#@ melt-build.tpl:382/418 time stamp for module
melt-stage1-warmelt-genobj-module.stamp: melt-stage1/warmelt-genobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/419
################## debugnoline module warmelt-genobj for melt-stage1
melt-stage1/warmelt-genobj.debugnoline.so:   melt-stage1/warmelt-genobj.c \
              $(wildcard melt-stage1/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/420
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-genobj



### the C source of melt-stage1 for warmelt-outobj melt-build.tpl:322/421

## the timestamp C header file  for warmelt-outobj melt-build.tpl:324/422
melt-stage1/warmelt-outobj+melttime.h: melt-stage1/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-outobj melt-build.tpl:327/423
melt-stage1/warmelt-outobj+meltdesc.c melt-stage1/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
       melt-stage1-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/424
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-outobj.$(MELT_ZERO_FLAVOR):\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-outobj+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage1.args-tmp  warmelt-outobj+melt-stage1.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage1.args: ; cat warmelt-outobj+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/425
	@echo doing warmelt-outobj+melt-stage1  melt-build.tpl:357/426
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-outobj+melt-stage1.args
	@ls -l melt-stage1/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-outobj.c melt-build.tpl:359/427 ; exit 1 )

#@ melt-build.tpl:361/428
################## quicklybuilt module warmelt-outobj for melt-stage1
melt-stage1/warmelt-outobj.quicklybuilt.so: melt-stage1/warmelt-outobj.c \
              $(wildcard melt-stage1/warmelt-outobj+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/429
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/430 \
	      MELTGEN_MODULENAME=warmelt-outobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/431
	$(MD5SUM) $@ > melt-stage1-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-outobj-module.stamp-tmp melt-stage1-warmelt-outobj-module.stamp


#@ melt-build.tpl:382/432 time stamp for module
melt-stage1-warmelt-outobj-module.stamp: melt-stage1/warmelt-outobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/433
################## debugnoline module warmelt-outobj for melt-stage1
melt-stage1/warmelt-outobj.debugnoline.so:   melt-stage1/warmelt-outobj.c \
              $(wildcard melt-stage1/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/434
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-outobj



### the C source of melt-stage1 for warmelt-modes melt-build.tpl:322/435

## the timestamp C header file  for warmelt-modes melt-build.tpl:324/436
melt-stage1/warmelt-modes+melttime.h: melt-stage1/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage1 for warmelt-modes melt-build.tpl:327/437
melt-stage1/warmelt-modes+meltdesc.c melt-stage1/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage1-directory.stamp \
     $(MELT_STAGE_ZERO)-fullstage.stamp $(MELT_STAGE_ZERO)/warmelt.modlis \
       melt-stage1-warmelt-first-module.stamp \
       melt-stage1-warmelt-base-module.stamp \
       melt-stage1-warmelt-debug-module.stamp \
       melt-stage1-warmelt-macro-module.stamp \
       melt-stage1-warmelt-normal-module.stamp \
       melt-stage1-warmelt-normatch-module.stamp \
       melt-stage1-warmelt-genobj-module.stamp \
       melt-stage1-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/438
	@echo generating $< for melt-stage1
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
$(MELT_STAGE_ZERO)/warmelt-modes.$(MELT_ZERO_FLAVOR) > warmelt-modes+melt-stage1.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage1):$(realpath $(MELT_STAGE_ZERO)):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage1/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage1.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage1.args-tmp  warmelt-modes+melt-stage1.args
	@echo; echo; echo -n  warmelt-modes+melt-stage1.args: ; cat warmelt-modes+melt-stage1.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/439
	@echo doing warmelt-modes+melt-stage1  melt-build.tpl:357/440
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-modes+melt-stage1.args
	@ls -l melt-stage1/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage1/warmelt-modes.c melt-build.tpl:359/441 ; exit 1 )

#@ melt-build.tpl:361/442
################## quicklybuilt module warmelt-modes for melt-stage1
melt-stage1/warmelt-modes.quicklybuilt.so: melt-stage1/warmelt-modes.c \
              $(wildcard melt-stage1/warmelt-modes+*.c)  $(MELT_STAGE_ZERO)-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/443
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/444 \
	      MELTGEN_MODULENAME=warmelt-modes \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/445
	$(MD5SUM) $@ > melt-stage1-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage1-warmelt-modes-module.stamp-tmp melt-stage1-warmelt-modes-module.stamp


#@ melt-build.tpl:382/446 time stamp for module
melt-stage1-warmelt-modes-module.stamp: melt-stage1/warmelt-modes.quicklybuilt.so; @true


#@ melt-build.tpl:386/447
################## debugnoline module warmelt-modes for melt-stage1
melt-stage1/warmelt-modes.debugnoline.so:   melt-stage1/warmelt-modes.c \
              $(wildcard melt-stage1/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/448
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage1/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage1)/warmelt-modes




#@ melt-build.tpl:403/449
## the module list in melt-stage1
melt-stage1/warmelt.modlis:  \
             melt-stage1/warmelt-first.quicklybuilt.so \
             melt-stage1/warmelt-base.quicklybuilt.so \
             melt-stage1/warmelt-debug.quicklybuilt.so \
             melt-stage1/warmelt-macro.quicklybuilt.so \
             melt-stage1/warmelt-normal.quicklybuilt.so \
             melt-stage1/warmelt-normatch.quicklybuilt.so \
             melt-stage1/warmelt-genobj.quicklybuilt.so \
             melt-stage1/warmelt-outobj.quicklybuilt.so \
             melt-stage1/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:415/450
melt-stage1/warmelt.debugnoline.modlis:  \
             melt-stage1/warmelt-first.debugnoline.so \
             melt-stage1/warmelt-base.debugnoline.so \
             melt-stage1/warmelt-debug.debugnoline.so \
             melt-stage1/warmelt-macro.debugnoline.so \
             melt-stage1/warmelt-normal.debugnoline.so \
             melt-stage1/warmelt-normatch.debugnoline.so \
             melt-stage1/warmelt-genobj.debugnoline.so \
             melt-stage1/warmelt-outobj.debugnoline.so \
             melt-stage1/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage1
#@ melt-build.tpl:427/451
melt-stage1-fullstage.stamp:  melt-run.h  melt-stage1/warmelt.modlis \
 melt-stage1-warmelt-first-module.stamp melt-stage1/warmelt-first.c \
 melt-stage1-warmelt-base-module.stamp melt-stage1/warmelt-base.c \
 melt-stage1-warmelt-debug-module.stamp melt-stage1/warmelt-debug.c \
 melt-stage1-warmelt-macro-module.stamp melt-stage1/warmelt-macro.c \
 melt-stage1-warmelt-normal-module.stamp melt-stage1/warmelt-normal.c \
 melt-stage1-warmelt-normatch-module.stamp melt-stage1/warmelt-normatch.c \
 melt-stage1-warmelt-genobj-module.stamp melt-stage1/warmelt-genobj.c \
 melt-stage1-warmelt-outobj-module.stamp melt-stage1/warmelt-outobj.c \
 melt-stage1-warmelt-modes-module.stamp melt-stage1/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-first.c $(wildcard melt-stage1/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-base.c $(wildcard melt-stage1/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-debug.c $(wildcard melt-stage1/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-macro.c $(wildcard melt-stage1/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-normal.c $(wildcard melt-stage1/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-normatch.c $(wildcard melt-stage1/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-genobj.c $(wildcard melt-stage1/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-outobj.c $(wildcard melt-stage1/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage1/warmelt-modes.c $(wildcard melt-stage1/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage1
#@ melt-build.tpl:438/452
.PHONY: warmelt1 warmelt1n
warmelt1: melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis
	@echo MELT build made $@
warmelt1n:  melt-stage1-fullstage.stamp melt-stage1/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ melt-build.tpl:445/453 melt-stage1 directory and stamp
melt-stage1:
	test -d  melt-stage1/ || mkdir melt-stage1 
	ls -ld $$PWD/melt-stage1 > melt-stage1-directory.stamp
melt-stage1-directory.stamp: melt-stage1 ; @true


### end of melt-stage1 melt-build.tpl:452/454 


#@  for melt-stage2 melt-build.tpl:312/455
#### rules for melt-stage2, previous melt-stage1


### the C source of melt-stage2 for warmelt-first melt-build.tpl:322/456

## the timestamp C header file  for warmelt-first melt-build.tpl:324/457
melt-stage2/warmelt-first+melttime.h: melt-stage2/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-first melt-build.tpl:327/458
melt-stage2/warmelt-first+meltdesc.c melt-stage2/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/459
	@echo generating $< for melt-stage2
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
melt-stage1/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-first+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage2.args-tmp  warmelt-first+melt-stage2.args
	@echo; echo; echo -n  warmelt-first+melt-stage2.args: ; cat warmelt-first+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/460
	@echo doing warmelt-first+melt-stage2  melt-build.tpl:357/461
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-first+melt-stage2.args
	@ls -l melt-stage2/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-first.c melt-build.tpl:359/462 ; exit 1 )

#@ melt-build.tpl:361/463
################## quicklybuilt module warmelt-first for melt-stage2
melt-stage2/warmelt-first.quicklybuilt.so: melt-stage2/warmelt-first.c \
              $(wildcard melt-stage2/warmelt-first+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/464
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/465 \
	      MELTGEN_MODULENAME=warmelt-first \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/466
	$(MD5SUM) $@ > melt-stage2-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-first-module.stamp-tmp melt-stage2-warmelt-first-module.stamp


#@ melt-build.tpl:382/467 time stamp for module
melt-stage2-warmelt-first-module.stamp: melt-stage2/warmelt-first.quicklybuilt.so; @true


#@ melt-build.tpl:386/468
################## debugnoline module warmelt-first for melt-stage2
melt-stage2/warmelt-first.debugnoline.so:   melt-stage2/warmelt-first.c \
              $(wildcard melt-stage2/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/469
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-first



### the C source of melt-stage2 for warmelt-base melt-build.tpl:322/470

## the timestamp C header file  for warmelt-base melt-build.tpl:324/471
melt-stage2/warmelt-base+melttime.h: melt-stage2/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-base melt-build.tpl:327/472
melt-stage2/warmelt-base+meltdesc.c melt-stage2/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/473
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage1/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-base+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage2.args-tmp  warmelt-base+melt-stage2.args
	@echo; echo; echo -n  warmelt-base+melt-stage2.args: ; cat warmelt-base+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/474
	@echo doing warmelt-base+melt-stage2  melt-build.tpl:357/475
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-base+melt-stage2.args
	@ls -l melt-stage2/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-base.c melt-build.tpl:359/476 ; exit 1 )

#@ melt-build.tpl:361/477
################## quicklybuilt module warmelt-base for melt-stage2
melt-stage2/warmelt-base.quicklybuilt.so: melt-stage2/warmelt-base.c \
              $(wildcard melt-stage2/warmelt-base+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/478
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/479 \
	      MELTGEN_MODULENAME=warmelt-base \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/480
	$(MD5SUM) $@ > melt-stage2-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-base-module.stamp-tmp melt-stage2-warmelt-base-module.stamp


#@ melt-build.tpl:382/481 time stamp for module
melt-stage2-warmelt-base-module.stamp: melt-stage2/warmelt-base.quicklybuilt.so; @true


#@ melt-build.tpl:386/482
################## debugnoline module warmelt-base for melt-stage2
melt-stage2/warmelt-base.debugnoline.so:   melt-stage2/warmelt-base.c \
              $(wildcard melt-stage2/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/483
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-base



### the C source of melt-stage2 for warmelt-debug melt-build.tpl:322/484

## the timestamp C header file  for warmelt-debug melt-build.tpl:324/485
melt-stage2/warmelt-debug+melttime.h: melt-stage2/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-debug melt-build.tpl:327/486
melt-stage2/warmelt-debug+meltdesc.c melt-stage2/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/487
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage1/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-debug+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage2.args-tmp  warmelt-debug+melt-stage2.args
	@echo; echo; echo -n  warmelt-debug+melt-stage2.args: ; cat warmelt-debug+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/488
	@echo doing warmelt-debug+melt-stage2  melt-build.tpl:357/489
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-debug+melt-stage2.args
	@ls -l melt-stage2/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-debug.c melt-build.tpl:359/490 ; exit 1 )

#@ melt-build.tpl:361/491
################## quicklybuilt module warmelt-debug for melt-stage2
melt-stage2/warmelt-debug.quicklybuilt.so: melt-stage2/warmelt-debug.c \
              $(wildcard melt-stage2/warmelt-debug+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/492
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/493 \
	      MELTGEN_MODULENAME=warmelt-debug \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/494
	$(MD5SUM) $@ > melt-stage2-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-debug-module.stamp-tmp melt-stage2-warmelt-debug-module.stamp


#@ melt-build.tpl:382/495 time stamp for module
melt-stage2-warmelt-debug-module.stamp: melt-stage2/warmelt-debug.quicklybuilt.so; @true


#@ melt-build.tpl:386/496
################## debugnoline module warmelt-debug for melt-stage2
melt-stage2/warmelt-debug.debugnoline.so:   melt-stage2/warmelt-debug.c \
              $(wildcard melt-stage2/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/497
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-debug



### the C source of melt-stage2 for warmelt-macro melt-build.tpl:322/498

## the timestamp C header file  for warmelt-macro melt-build.tpl:324/499
melt-stage2/warmelt-macro+melttime.h: melt-stage2/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-macro melt-build.tpl:327/500
melt-stage2/warmelt-macro+meltdesc.c melt-stage2/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/501
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage1/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-macro+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage2.args-tmp  warmelt-macro+melt-stage2.args
	@echo; echo; echo -n  warmelt-macro+melt-stage2.args: ; cat warmelt-macro+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/502
	@echo doing warmelt-macro+melt-stage2  melt-build.tpl:357/503
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-macro+melt-stage2.args
	@ls -l melt-stage2/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-macro.c melt-build.tpl:359/504 ; exit 1 )

#@ melt-build.tpl:361/505
################## quicklybuilt module warmelt-macro for melt-stage2
melt-stage2/warmelt-macro.quicklybuilt.so: melt-stage2/warmelt-macro.c \
              $(wildcard melt-stage2/warmelt-macro+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/506
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/507 \
	      MELTGEN_MODULENAME=warmelt-macro \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/508
	$(MD5SUM) $@ > melt-stage2-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-macro-module.stamp-tmp melt-stage2-warmelt-macro-module.stamp


#@ melt-build.tpl:382/509 time stamp for module
melt-stage2-warmelt-macro-module.stamp: melt-stage2/warmelt-macro.quicklybuilt.so; @true


#@ melt-build.tpl:386/510
################## debugnoline module warmelt-macro for melt-stage2
melt-stage2/warmelt-macro.debugnoline.so:   melt-stage2/warmelt-macro.c \
              $(wildcard melt-stage2/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/511
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-macro



### the C source of melt-stage2 for warmelt-normal melt-build.tpl:322/512

## the timestamp C header file  for warmelt-normal melt-build.tpl:324/513
melt-stage2/warmelt-normal+melttime.h: melt-stage2/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-normal melt-build.tpl:327/514
melt-stage2/warmelt-normal+meltdesc.c melt-stage2/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/515
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage1/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-normal+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage2.args-tmp  warmelt-normal+melt-stage2.args
	@echo; echo; echo -n  warmelt-normal+melt-stage2.args: ; cat warmelt-normal+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/516
	@echo doing warmelt-normal+melt-stage2  melt-build.tpl:357/517
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normal+melt-stage2.args
	@ls -l melt-stage2/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-normal.c melt-build.tpl:359/518 ; exit 1 )

#@ melt-build.tpl:361/519
################## quicklybuilt module warmelt-normal for melt-stage2
melt-stage2/warmelt-normal.quicklybuilt.so: melt-stage2/warmelt-normal.c \
              $(wildcard melt-stage2/warmelt-normal+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/520
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/521 \
	      MELTGEN_MODULENAME=warmelt-normal \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/522
	$(MD5SUM) $@ > melt-stage2-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-normal-module.stamp-tmp melt-stage2-warmelt-normal-module.stamp


#@ melt-build.tpl:382/523 time stamp for module
melt-stage2-warmelt-normal-module.stamp: melt-stage2/warmelt-normal.quicklybuilt.so; @true


#@ melt-build.tpl:386/524
################## debugnoline module warmelt-normal for melt-stage2
melt-stage2/warmelt-normal.debugnoline.so:   melt-stage2/warmelt-normal.c \
              $(wildcard melt-stage2/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/525
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normal



### the C source of melt-stage2 for warmelt-normatch melt-build.tpl:322/526

## the timestamp C header file  for warmelt-normatch melt-build.tpl:324/527
melt-stage2/warmelt-normatch+melttime.h: melt-stage2/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-normatch melt-build.tpl:327/528
melt-stage2/warmelt-normatch+meltdesc.c melt-stage2/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/529
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage1/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-normatch+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage2.args-tmp  warmelt-normatch+melt-stage2.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage2.args: ; cat warmelt-normatch+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/530
	@echo doing warmelt-normatch+melt-stage2  melt-build.tpl:357/531
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normatch+melt-stage2.args
	@ls -l melt-stage2/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-normatch.c melt-build.tpl:359/532 ; exit 1 )

#@ melt-build.tpl:361/533
################## quicklybuilt module warmelt-normatch for melt-stage2
melt-stage2/warmelt-normatch.quicklybuilt.so: melt-stage2/warmelt-normatch.c \
              $(wildcard melt-stage2/warmelt-normatch+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/534
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/535 \
	      MELTGEN_MODULENAME=warmelt-normatch \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/536
	$(MD5SUM) $@ > melt-stage2-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-normatch-module.stamp-tmp melt-stage2-warmelt-normatch-module.stamp


#@ melt-build.tpl:382/537 time stamp for module
melt-stage2-warmelt-normatch-module.stamp: melt-stage2/warmelt-normatch.quicklybuilt.so; @true


#@ melt-build.tpl:386/538
################## debugnoline module warmelt-normatch for melt-stage2
melt-stage2/warmelt-normatch.debugnoline.so:   melt-stage2/warmelt-normatch.c \
              $(wildcard melt-stage2/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/539
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-normatch



### the C source of melt-stage2 for warmelt-genobj melt-build.tpl:322/540

## the timestamp C header file  for warmelt-genobj melt-build.tpl:324/541
melt-stage2/warmelt-genobj+melttime.h: melt-stage2/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-genobj melt-build.tpl:327/542
melt-stage2/warmelt-genobj+meltdesc.c melt-stage2/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/543
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage1/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-genobj+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage2.args-tmp  warmelt-genobj+melt-stage2.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage2.args: ; cat warmelt-genobj+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/544
	@echo doing warmelt-genobj+melt-stage2  melt-build.tpl:357/545
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-genobj+melt-stage2.args
	@ls -l melt-stage2/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-genobj.c melt-build.tpl:359/546 ; exit 1 )

#@ melt-build.tpl:361/547
################## quicklybuilt module warmelt-genobj for melt-stage2
melt-stage2/warmelt-genobj.quicklybuilt.so: melt-stage2/warmelt-genobj.c \
              $(wildcard melt-stage2/warmelt-genobj+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/548
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/549 \
	      MELTGEN_MODULENAME=warmelt-genobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/550
	$(MD5SUM) $@ > melt-stage2-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-genobj-module.stamp-tmp melt-stage2-warmelt-genobj-module.stamp


#@ melt-build.tpl:382/551 time stamp for module
melt-stage2-warmelt-genobj-module.stamp: melt-stage2/warmelt-genobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/552
################## debugnoline module warmelt-genobj for melt-stage2
melt-stage2/warmelt-genobj.debugnoline.so:   melt-stage2/warmelt-genobj.c \
              $(wildcard melt-stage2/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/553
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-genobj



### the C source of melt-stage2 for warmelt-outobj melt-build.tpl:322/554

## the timestamp C header file  for warmelt-outobj melt-build.tpl:324/555
melt-stage2/warmelt-outobj+melttime.h: melt-stage2/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-outobj melt-build.tpl:327/556
melt-stage2/warmelt-outobj+meltdesc.c melt-stage2/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
       melt-stage2-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/557
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage1/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-outobj+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage2.args-tmp  warmelt-outobj+melt-stage2.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage2.args: ; cat warmelt-outobj+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/558
	@echo doing warmelt-outobj+melt-stage2  melt-build.tpl:357/559
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-outobj+melt-stage2.args
	@ls -l melt-stage2/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-outobj.c melt-build.tpl:359/560 ; exit 1 )

#@ melt-build.tpl:361/561
################## quicklybuilt module warmelt-outobj for melt-stage2
melt-stage2/warmelt-outobj.quicklybuilt.so: melt-stage2/warmelt-outobj.c \
              $(wildcard melt-stage2/warmelt-outobj+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/562
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/563 \
	      MELTGEN_MODULENAME=warmelt-outobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/564
	$(MD5SUM) $@ > melt-stage2-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-outobj-module.stamp-tmp melt-stage2-warmelt-outobj-module.stamp


#@ melt-build.tpl:382/565 time stamp for module
melt-stage2-warmelt-outobj-module.stamp: melt-stage2/warmelt-outobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/566
################## debugnoline module warmelt-outobj for melt-stage2
melt-stage2/warmelt-outobj.debugnoline.so:   melt-stage2/warmelt-outobj.c \
              $(wildcard melt-stage2/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/567
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-outobj



### the C source of melt-stage2 for warmelt-modes melt-build.tpl:322/568

## the timestamp C header file  for warmelt-modes melt-build.tpl:324/569
melt-stage2/warmelt-modes+melttime.h: melt-stage2/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage2 for warmelt-modes melt-build.tpl:327/570
melt-stage2/warmelt-modes+meltdesc.c melt-stage2/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage2-directory.stamp \
     melt-stage1-fullstage.stamp melt-stage1/warmelt.modlis \
       melt-stage2-warmelt-first-module.stamp \
       melt-stage2-warmelt-base-module.stamp \
       melt-stage2-warmelt-debug-module.stamp \
       melt-stage2-warmelt-macro-module.stamp \
       melt-stage2-warmelt-normal-module.stamp \
       melt-stage2-warmelt-normatch-module.stamp \
       melt-stage2-warmelt-genobj-module.stamp \
       melt-stage2-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/571
	@echo generating $< for melt-stage2
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage1/warmelt-modes.quicklybuilt > warmelt-modes+melt-stage2.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage2):$(realpath melt-stage1):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage2/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage2.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage2.args-tmp  warmelt-modes+melt-stage2.args
	@echo; echo; echo -n  warmelt-modes+melt-stage2.args: ; cat warmelt-modes+melt-stage2.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/572
	@echo doing warmelt-modes+melt-stage2  melt-build.tpl:357/573
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-modes+melt-stage2.args
	@ls -l melt-stage2/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage2/warmelt-modes.c melt-build.tpl:359/574 ; exit 1 )

#@ melt-build.tpl:361/575
################## quicklybuilt module warmelt-modes for melt-stage2
melt-stage2/warmelt-modes.quicklybuilt.so: melt-stage2/warmelt-modes.c \
              $(wildcard melt-stage2/warmelt-modes+*.c)  melt-stage1-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/576
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/577 \
	      MELTGEN_MODULENAME=warmelt-modes \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/578
	$(MD5SUM) $@ > melt-stage2-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage2-warmelt-modes-module.stamp-tmp melt-stage2-warmelt-modes-module.stamp


#@ melt-build.tpl:382/579 time stamp for module
melt-stage2-warmelt-modes-module.stamp: melt-stage2/warmelt-modes.quicklybuilt.so; @true


#@ melt-build.tpl:386/580
################## debugnoline module warmelt-modes for melt-stage2
melt-stage2/warmelt-modes.debugnoline.so:   melt-stage2/warmelt-modes.c \
              $(wildcard melt-stage2/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/581
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage2/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage2)/warmelt-modes




#@ melt-build.tpl:403/582
## the module list in melt-stage2
melt-stage2/warmelt.modlis:  \
             melt-stage2/warmelt-first.quicklybuilt.so \
             melt-stage2/warmelt-base.quicklybuilt.so \
             melt-stage2/warmelt-debug.quicklybuilt.so \
             melt-stage2/warmelt-macro.quicklybuilt.so \
             melt-stage2/warmelt-normal.quicklybuilt.so \
             melt-stage2/warmelt-normatch.quicklybuilt.so \
             melt-stage2/warmelt-genobj.quicklybuilt.so \
             melt-stage2/warmelt-outobj.quicklybuilt.so \
             melt-stage2/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:415/583
melt-stage2/warmelt.debugnoline.modlis:  \
             melt-stage2/warmelt-first.debugnoline.so \
             melt-stage2/warmelt-base.debugnoline.so \
             melt-stage2/warmelt-debug.debugnoline.so \
             melt-stage2/warmelt-macro.debugnoline.so \
             melt-stage2/warmelt-normal.debugnoline.so \
             melt-stage2/warmelt-normatch.debugnoline.so \
             melt-stage2/warmelt-genobj.debugnoline.so \
             melt-stage2/warmelt-outobj.debugnoline.so \
             melt-stage2/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage2
#@ melt-build.tpl:427/584
melt-stage2-fullstage.stamp:  melt-run.h  melt-stage2/warmelt.modlis \
 melt-stage2-warmelt-first-module.stamp melt-stage2/warmelt-first.c \
 melt-stage2-warmelt-base-module.stamp melt-stage2/warmelt-base.c \
 melt-stage2-warmelt-debug-module.stamp melt-stage2/warmelt-debug.c \
 melt-stage2-warmelt-macro-module.stamp melt-stage2/warmelt-macro.c \
 melt-stage2-warmelt-normal-module.stamp melt-stage2/warmelt-normal.c \
 melt-stage2-warmelt-normatch-module.stamp melt-stage2/warmelt-normatch.c \
 melt-stage2-warmelt-genobj-module.stamp melt-stage2/warmelt-genobj.c \
 melt-stage2-warmelt-outobj-module.stamp melt-stage2/warmelt-outobj.c \
 melt-stage2-warmelt-modes-module.stamp melt-stage2/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-first.c $(wildcard melt-stage2/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-base.c $(wildcard melt-stage2/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-debug.c $(wildcard melt-stage2/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-macro.c $(wildcard melt-stage2/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-normal.c $(wildcard melt-stage2/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-normatch.c $(wildcard melt-stage2/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-genobj.c $(wildcard melt-stage2/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-outobj.c $(wildcard melt-stage2/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage2/warmelt-modes.c $(wildcard melt-stage2/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage2
#@ melt-build.tpl:438/585
.PHONY: warmelt2 warmelt2n
warmelt2: melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis
	@echo MELT build made $@
warmelt2n:  melt-stage2-fullstage.stamp melt-stage2/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ melt-build.tpl:445/586 melt-stage2 directory and stamp
melt-stage2:
	test -d  melt-stage2/ || mkdir melt-stage2 
	ls -ld $$PWD/melt-stage2 > melt-stage2-directory.stamp
melt-stage2-directory.stamp: melt-stage2 ; @true


### end of melt-stage2 melt-build.tpl:452/587 


#@  for melt-stage3 melt-build.tpl:312/588
#### rules for melt-stage3, previous melt-stage2


### the C source of melt-stage3 for warmelt-first melt-build.tpl:322/589

## the timestamp C header file  for warmelt-first melt-build.tpl:324/590
melt-stage3/warmelt-first+melttime.h: melt-stage3/warmelt-first+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-first melt-build.tpl:327/591
melt-stage3/warmelt-first+meltdesc.c melt-stage3/warmelt-first.c:  \
     $(melt_make_source_dir)/warmelt-first.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
                                                        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/592
	@echo generating $< for melt-stage3
	@echo  $(MELTCCINIT1ARGS) $(meltarg_init)=\
melt-stage2/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-first+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-first $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-first+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-first+melt-stage3.args-tmp  warmelt-first+melt-stage3.args
	@echo; echo; echo -n  warmelt-first+melt-stage3.args: ; cat warmelt-first+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/593
	@echo doing warmelt-first+melt-stage3  melt-build.tpl:357/594
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-first+melt-stage3.args
	@ls -l melt-stage3/warmelt-first.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-first.c melt-build.tpl:359/595 ; exit 1 )

#@ melt-build.tpl:361/596
################## quicklybuilt module warmelt-first for melt-stage3
melt-stage3/warmelt-first.quicklybuilt.so: melt-stage3/warmelt-first.c \
              $(wildcard melt-stage3/warmelt-first+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/597
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/598 \
	      MELTGEN_MODULENAME=warmelt-first \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-first
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/599
	$(MD5SUM) $@ > melt-stage3-warmelt-first-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-first-module.stamp-tmp melt-stage3-warmelt-first-module.stamp


#@ melt-build.tpl:382/600 time stamp for module
melt-stage3-warmelt-first-module.stamp: melt-stage3/warmelt-first.quicklybuilt.so; @true


#@ melt-build.tpl:386/601
################## debugnoline module warmelt-first for melt-stage3
melt-stage3/warmelt-first.debugnoline.so:   melt-stage3/warmelt-first.c \
              $(wildcard melt-stage3/warmelt-first+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/602
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-first



### the C source of melt-stage3 for warmelt-base melt-build.tpl:322/603

## the timestamp C header file  for warmelt-base melt-build.tpl:324/604
melt-stage3/warmelt-base+melttime.h: melt-stage3/warmelt-base+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-base melt-build.tpl:327/605
melt-stage3/warmelt-base+meltdesc.c melt-stage3/warmelt-base.c:  \
     $(melt_make_source_dir)/warmelt-base.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
                                                  empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/606
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage2/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-base+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-base $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-base+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-base+melt-stage3.args-tmp  warmelt-base+melt-stage3.args
	@echo; echo; echo -n  warmelt-base+melt-stage3.args: ; cat warmelt-base+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/607
	@echo doing warmelt-base+melt-stage3  melt-build.tpl:357/608
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-base+melt-stage3.args
	@ls -l melt-stage3/warmelt-base.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-base.c melt-build.tpl:359/609 ; exit 1 )

#@ melt-build.tpl:361/610
################## quicklybuilt module warmelt-base for melt-stage3
melt-stage3/warmelt-base.quicklybuilt.so: melt-stage3/warmelt-base.c \
              $(wildcard melt-stage3/warmelt-base+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/611
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/612 \
	      MELTGEN_MODULENAME=warmelt-base \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-base
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/613
	$(MD5SUM) $@ > melt-stage3-warmelt-base-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-base-module.stamp-tmp melt-stage3-warmelt-base-module.stamp


#@ melt-build.tpl:382/614 time stamp for module
melt-stage3-warmelt-base-module.stamp: melt-stage3/warmelt-base.quicklybuilt.so; @true


#@ melt-build.tpl:386/615
################## debugnoline module warmelt-base for melt-stage3
melt-stage3/warmelt-base.debugnoline.so:   melt-stage3/warmelt-base.c \
              $(wildcard melt-stage3/warmelt-base+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/616
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-base



### the C source of melt-stage3 for warmelt-debug melt-build.tpl:322/617

## the timestamp C header file  for warmelt-debug melt-build.tpl:324/618
melt-stage3/warmelt-debug+melttime.h: melt-stage3/warmelt-debug+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-debug melt-build.tpl:327/619
melt-stage3/warmelt-debug+meltdesc.c melt-stage3/warmelt-debug.c:  \
     $(melt_make_source_dir)/warmelt-debug.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
                                            empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/620
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage2/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-debug+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-debug $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-debug+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-debug+melt-stage3.args-tmp  warmelt-debug+melt-stage3.args
	@echo; echo; echo -n  warmelt-debug+melt-stage3.args: ; cat warmelt-debug+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/621
	@echo doing warmelt-debug+melt-stage3  melt-build.tpl:357/622
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-debug+melt-stage3.args
	@ls -l melt-stage3/warmelt-debug.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-debug.c melt-build.tpl:359/623 ; exit 1 )

#@ melt-build.tpl:361/624
################## quicklybuilt module warmelt-debug for melt-stage3
melt-stage3/warmelt-debug.quicklybuilt.so: melt-stage3/warmelt-debug.c \
              $(wildcard melt-stage3/warmelt-debug+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/625
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/626 \
	      MELTGEN_MODULENAME=warmelt-debug \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-debug
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/627
	$(MD5SUM) $@ > melt-stage3-warmelt-debug-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-debug-module.stamp-tmp melt-stage3-warmelt-debug-module.stamp


#@ melt-build.tpl:382/628 time stamp for module
melt-stage3-warmelt-debug-module.stamp: melt-stage3/warmelt-debug.quicklybuilt.so; @true


#@ melt-build.tpl:386/629
################## debugnoline module warmelt-debug for melt-stage3
melt-stage3/warmelt-debug.debugnoline.so:   melt-stage3/warmelt-debug.c \
              $(wildcard melt-stage3/warmelt-debug+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/630
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-debug



### the C source of melt-stage3 for warmelt-macro melt-build.tpl:322/631

## the timestamp C header file  for warmelt-macro melt-build.tpl:324/632
melt-stage3/warmelt-macro+melttime.h: melt-stage3/warmelt-macro+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-macro melt-build.tpl:327/633
melt-stage3/warmelt-macro+meltdesc.c melt-stage3/warmelt-macro.c:  \
     $(melt_make_source_dir)/warmelt-macro.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
                                      empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/634
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage2/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-macro+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-macro $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-macro+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-macro+melt-stage3.args-tmp  warmelt-macro+melt-stage3.args
	@echo; echo; echo -n  warmelt-macro+melt-stage3.args: ; cat warmelt-macro+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/635
	@echo doing warmelt-macro+melt-stage3  melt-build.tpl:357/636
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-macro+melt-stage3.args
	@ls -l melt-stage3/warmelt-macro.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-macro.c melt-build.tpl:359/637 ; exit 1 )

#@ melt-build.tpl:361/638
################## quicklybuilt module warmelt-macro for melt-stage3
melt-stage3/warmelt-macro.quicklybuilt.so: melt-stage3/warmelt-macro.c \
              $(wildcard melt-stage3/warmelt-macro+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/639
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/640 \
	      MELTGEN_MODULENAME=warmelt-macro \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-macro
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/641
	$(MD5SUM) $@ > melt-stage3-warmelt-macro-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-macro-module.stamp-tmp melt-stage3-warmelt-macro-module.stamp


#@ melt-build.tpl:382/642 time stamp for module
melt-stage3-warmelt-macro-module.stamp: melt-stage3/warmelt-macro.quicklybuilt.so; @true


#@ melt-build.tpl:386/643
################## debugnoline module warmelt-macro for melt-stage3
melt-stage3/warmelt-macro.debugnoline.so:   melt-stage3/warmelt-macro.c \
              $(wildcard melt-stage3/warmelt-macro+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/644
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-macro



### the C source of melt-stage3 for warmelt-normal melt-build.tpl:322/645

## the timestamp C header file  for warmelt-normal melt-build.tpl:324/646
melt-stage3/warmelt-normal+melttime.h: melt-stage3/warmelt-normal+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-normal melt-build.tpl:327/647
melt-stage3/warmelt-normal+meltdesc.c melt-stage3/warmelt-normal.c:  \
     $(melt_make_source_dir)/warmelt-normal.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
        warmelt-predef.melt \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
                                empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/648
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage2/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-normal+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-normal $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normal+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-normal+melt-stage3.args-tmp  warmelt-normal+melt-stage3.args
	@echo; echo; echo -n  warmelt-normal+melt-stage3.args: ; cat warmelt-normal+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/649
	@echo doing warmelt-normal+melt-stage3  melt-build.tpl:357/650
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normal+melt-stage3.args
	@ls -l melt-stage3/warmelt-normal.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-normal.c melt-build.tpl:359/651 ; exit 1 )

#@ melt-build.tpl:361/652
################## quicklybuilt module warmelt-normal for melt-stage3
melt-stage3/warmelt-normal.quicklybuilt.so: melt-stage3/warmelt-normal.c \
              $(wildcard melt-stage3/warmelt-normal+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/653
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/654 \
	      MELTGEN_MODULENAME=warmelt-normal \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normal
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/655
	$(MD5SUM) $@ > melt-stage3-warmelt-normal-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-normal-module.stamp-tmp melt-stage3-warmelt-normal-module.stamp


#@ melt-build.tpl:382/656 time stamp for module
melt-stage3-warmelt-normal-module.stamp: melt-stage3/warmelt-normal.quicklybuilt.so; @true


#@ melt-build.tpl:386/657
################## debugnoline module warmelt-normal for melt-stage3
melt-stage3/warmelt-normal.debugnoline.so:   melt-stage3/warmelt-normal.c \
              $(wildcard melt-stage3/warmelt-normal+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/658
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normal



### the C source of melt-stage3 for warmelt-normatch melt-build.tpl:322/659

## the timestamp C header file  for warmelt-normatch melt-build.tpl:324/660
melt-stage3/warmelt-normatch+melttime.h: melt-stage3/warmelt-normatch+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-normatch melt-build.tpl:327/661
melt-stage3/warmelt-normatch+meltdesc.c melt-stage3/warmelt-normatch.c:  \
     $(melt_make_source_dir)/warmelt-normatch.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
                          empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/662
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage2/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-normatch+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-normatch $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-normatch+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-normatch+melt-stage3.args-tmp  warmelt-normatch+melt-stage3.args
	@echo; echo; echo -n  warmelt-normatch+melt-stage3.args: ; cat warmelt-normatch+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/663
	@echo doing warmelt-normatch+melt-stage3  melt-build.tpl:357/664
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normatch+melt-stage3.args
	@ls -l melt-stage3/warmelt-normatch.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-normatch.c melt-build.tpl:359/665 ; exit 1 )

#@ melt-build.tpl:361/666
################## quicklybuilt module warmelt-normatch for melt-stage3
melt-stage3/warmelt-normatch.quicklybuilt.so: melt-stage3/warmelt-normatch.c \
              $(wildcard melt-stage3/warmelt-normatch+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/667
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/668 \
	      MELTGEN_MODULENAME=warmelt-normatch \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normatch
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/669
	$(MD5SUM) $@ > melt-stage3-warmelt-normatch-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-normatch-module.stamp-tmp melt-stage3-warmelt-normatch-module.stamp


#@ melt-build.tpl:382/670 time stamp for module
melt-stage3-warmelt-normatch-module.stamp: melt-stage3/warmelt-normatch.quicklybuilt.so; @true


#@ melt-build.tpl:386/671
################## debugnoline module warmelt-normatch for melt-stage3
melt-stage3/warmelt-normatch.debugnoline.so:   melt-stage3/warmelt-normatch.c \
              $(wildcard melt-stage3/warmelt-normatch+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/672
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-normatch



### the C source of melt-stage3 for warmelt-genobj melt-build.tpl:322/673

## the timestamp C header file  for warmelt-genobj melt-build.tpl:324/674
melt-stage3/warmelt-genobj+melttime.h: melt-stage3/warmelt-genobj+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-genobj melt-build.tpl:327/675
melt-stage3/warmelt-genobj+meltdesc.c melt-stage3/warmelt-genobj.c:  \
     $(melt_make_source_dir)/warmelt-genobj.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
                    empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/676
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage2/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-genobj+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-genobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-genobj+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-genobj+melt-stage3.args-tmp  warmelt-genobj+melt-stage3.args
	@echo; echo; echo -n  warmelt-genobj+melt-stage3.args: ; cat warmelt-genobj+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/677
	@echo doing warmelt-genobj+melt-stage3  melt-build.tpl:357/678
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-genobj+melt-stage3.args
	@ls -l melt-stage3/warmelt-genobj.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-genobj.c melt-build.tpl:359/679 ; exit 1 )

#@ melt-build.tpl:361/680
################## quicklybuilt module warmelt-genobj for melt-stage3
melt-stage3/warmelt-genobj.quicklybuilt.so: melt-stage3/warmelt-genobj.c \
              $(wildcard melt-stage3/warmelt-genobj+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/681
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/682 \
	      MELTGEN_MODULENAME=warmelt-genobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-genobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/683
	$(MD5SUM) $@ > melt-stage3-warmelt-genobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-genobj-module.stamp-tmp melt-stage3-warmelt-genobj-module.stamp


#@ melt-build.tpl:382/684 time stamp for module
melt-stage3-warmelt-genobj-module.stamp: melt-stage3/warmelt-genobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/685
################## debugnoline module warmelt-genobj for melt-stage3
melt-stage3/warmelt-genobj.debugnoline.so:   melt-stage3/warmelt-genobj.c \
              $(wildcard melt-stage3/warmelt-genobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/686
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-genobj



### the C source of melt-stage3 for warmelt-outobj melt-build.tpl:322/687

## the timestamp C header file  for warmelt-outobj melt-build.tpl:324/688
melt-stage3/warmelt-outobj+melttime.h: melt-stage3/warmelt-outobj+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-outobj melt-build.tpl:327/689
melt-stage3/warmelt-outobj+meltdesc.c melt-stage3/warmelt-outobj.c:  \
     $(melt_make_source_dir)/warmelt-outobj.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
       melt-stage3-warmelt-genobj-module.stamp \
              empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/690
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage3/warmelt-genobj.quicklybuilt:\
melt-stage2/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-outobj+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-outobj $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-outobj+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-outobj+melt-stage3.args-tmp  warmelt-outobj+melt-stage3.args
	@echo; echo; echo -n  warmelt-outobj+melt-stage3.args: ; cat warmelt-outobj+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/691
	@echo doing warmelt-outobj+melt-stage3  melt-build.tpl:357/692
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-outobj+melt-stage3.args
	@ls -l melt-stage3/warmelt-outobj.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-outobj.c melt-build.tpl:359/693 ; exit 1 )

#@ melt-build.tpl:361/694
################## quicklybuilt module warmelt-outobj for melt-stage3
melt-stage3/warmelt-outobj.quicklybuilt.so: melt-stage3/warmelt-outobj.c \
              $(wildcard melt-stage3/warmelt-outobj+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/695
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/696 \
	      MELTGEN_MODULENAME=warmelt-outobj \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-outobj
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/697
	$(MD5SUM) $@ > melt-stage3-warmelt-outobj-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-outobj-module.stamp-tmp melt-stage3-warmelt-outobj-module.stamp


#@ melt-build.tpl:382/698 time stamp for module
melt-stage3-warmelt-outobj-module.stamp: melt-stage3/warmelt-outobj.quicklybuilt.so; @true


#@ melt-build.tpl:386/699
################## debugnoline module warmelt-outobj for melt-stage3
melt-stage3/warmelt-outobj.debugnoline.so:   melt-stage3/warmelt-outobj.c \
              $(wildcard melt-stage3/warmelt-outobj+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/700
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-outobj



### the C source of melt-stage3 for warmelt-modes melt-build.tpl:322/701

## the timestamp C header file  for warmelt-modes melt-build.tpl:324/702
melt-stage3/warmelt-modes+melttime.h: melt-stage3/warmelt-modes+meltdesc.c; @true

## the descriptive C of melt-stage3 for warmelt-modes melt-build.tpl:327/703
melt-stage3/warmelt-modes+meltdesc.c melt-stage3/warmelt-modes.c:  \
     $(melt_make_source_dir)/warmelt-modes.melt \
     melt-stage3-directory.stamp \
     melt-stage2-fullstage.stamp melt-stage2/warmelt.modlis \
       melt-stage3-warmelt-first-module.stamp \
       melt-stage3-warmelt-base-module.stamp \
       melt-stage3-warmelt-debug-module.stamp \
       melt-stage3-warmelt-macro-module.stamp \
       melt-stage3-warmelt-normal-module.stamp \
       melt-stage3-warmelt-normatch-module.stamp \
       melt-stage3-warmelt-genobj-module.stamp \
       melt-stage3-warmelt-outobj-module.stamp \
        empty-file-for-melt.c melt-run.h melt-runtime.h melt-predef.h \
              $(melt_make_cc1_dependency)
##  melt-build.tpl:341/704
	@echo generating $< for melt-stage3
	@echo  $(MELTCCFILE1ARGS) $(meltarg_init)=\
melt-stage3/warmelt-first.quicklybuilt:\
melt-stage3/warmelt-base.quicklybuilt:\
melt-stage3/warmelt-debug.quicklybuilt:\
melt-stage3/warmelt-macro.quicklybuilt:\
melt-stage3/warmelt-normal.quicklybuilt:\
melt-stage3/warmelt-normatch.quicklybuilt:\
melt-stage3/warmelt-genobj.quicklybuilt:\
melt-stage3/warmelt-outobj.quicklybuilt:\
melt-stage2/warmelt-modes.quicklybuilt > warmelt-modes+melt-stage3.args-tmp
	@echo $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	      $(meltarg_module_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath  $(melt_make_module_dir)) \
	      $(meltarg_source_path)=$(realpath .):$(realpath melt-stage3):$(realpath melt-stage2):$(realpath $(melt_make_source_dir)):$(realpath $(melt_make_source_dir)/generated):$(realpath $(melt_source_dir)) \
	      $(meltarg_output)=melt-stage3/warmelt-modes $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) \
	      empty-file-for-melt.c >> warmelt-modes+melt-stage3.args-tmp
	@$(melt_move_if_change)  warmelt-modes+melt-stage3.args-tmp  warmelt-modes+melt-stage3.args
	@echo; echo; echo -n  warmelt-modes+melt-stage3.args: ; cat warmelt-modes+melt-stage3.args ; echo; echo; echo "***** doing " $@  melt-build.tpl:356/705
	@echo doing warmelt-modes+melt-stage3  melt-build.tpl:357/706
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-modes+melt-stage3.args
	@ls -l melt-stage3/warmelt-modes.c  || ( echo "*@*MISSING "  melt-stage3/warmelt-modes.c melt-build.tpl:359/707 ; exit 1 )

#@ melt-build.tpl:361/708
################## quicklybuilt module warmelt-modes for melt-stage3
melt-stage3/warmelt-modes.quicklybuilt.so: melt-stage3/warmelt-modes.c \
              $(wildcard melt-stage3/warmelt-modes+*.c)  melt-stage2-fullstage.stamp \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:367/709
	+$(MELT_MAKE_MODULE) melt_module \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MAKEFROM=melt-build.tpl:371/710 \
	      MELTGEN_MODULENAME=warmelt-modes \
              GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-modes
	touch -c $@
	@echo '@@touched' $@  melt-build.tpl:377/711
	$(MD5SUM) $@ > melt-stage3-warmelt-modes-module.stamp-tmp
	$(melt_move_if_change) melt-stage3-warmelt-modes-module.stamp-tmp melt-stage3-warmelt-modes-module.stamp


#@ melt-build.tpl:382/712 time stamp for module
melt-stage3-warmelt-modes-module.stamp: melt-stage3/warmelt-modes.quicklybuilt.so; @true


#@ melt-build.tpl:386/713
################## debugnoline module warmelt-modes for melt-stage3
melt-stage3/warmelt-modes.debugnoline.so:   melt-stage3/warmelt-modes.c \
              $(wildcard melt-stage3/warmelt-modes+*.c) \
              melt-run.h melt-runtime.h melt-predef.h melt-workdir-directory.stamp \
              $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:392/714
	+$(MELT_MAKE_MODULE) melt_module_withoutline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
              GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-stage3/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=$(realpath melt-stage3)/warmelt-modes




#@ melt-build.tpl:403/715
## the module list in melt-stage3
melt-stage3/warmelt.modlis:  \
             melt-stage3/warmelt-first.quicklybuilt.so \
             melt-stage3/warmelt-base.quicklybuilt.so \
             melt-stage3/warmelt-debug.quicklybuilt.so \
             melt-stage3/warmelt-macro.quicklybuilt.so \
             melt-stage3/warmelt-normal.quicklybuilt.so \
             melt-stage3/warmelt-normatch.quicklybuilt.so \
             melt-stage3/warmelt-genobj.quicklybuilt.so \
             melt-stage3/warmelt-outobj.quicklybuilt.so \
             melt-stage3/warmelt-modes.quicklybuilt.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:415/716
melt-stage3/warmelt.debugnoline.modlis:  \
             melt-stage3/warmelt-first.debugnoline.so \
             melt-stage3/warmelt-base.debugnoline.so \
             melt-stage3/warmelt-debug.debugnoline.so \
             melt-stage3/warmelt-macro.debugnoline.so \
             melt-stage3/warmelt-normal.debugnoline.so \
             melt-stage3/warmelt-normatch.debugnoline.so \
             melt-stage3/warmelt-genobj.debugnoline.so \
             melt-stage3/warmelt-outobj.debugnoline.so \
             melt-stage3/warmelt-modes.debugnoline.so
	date  +"#$@ generated %F" > $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


## the stamp for melt-stage3
#@ melt-build.tpl:427/717
melt-stage3-fullstage.stamp:  melt-run.h  melt-stage3/warmelt.modlis \
 melt-stage3-warmelt-first-module.stamp melt-stage3/warmelt-first.c \
 melt-stage3-warmelt-base-module.stamp melt-stage3/warmelt-base.c \
 melt-stage3-warmelt-debug-module.stamp melt-stage3/warmelt-debug.c \
 melt-stage3-warmelt-macro-module.stamp melt-stage3/warmelt-macro.c \
 melt-stage3-warmelt-normal-module.stamp melt-stage3/warmelt-normal.c \
 melt-stage3-warmelt-normatch-module.stamp melt-stage3/warmelt-normatch.c \
 melt-stage3-warmelt-genobj-module.stamp melt-stage3/warmelt-genobj.c \
 melt-stage3-warmelt-outobj-module.stamp melt-stage3/warmelt-outobj.c \
 melt-stage3-warmelt-modes-module.stamp melt-stage3/warmelt-modes.c 
	echo "#$@ generated" > $@-tmp
	$(MD5SUM) melt-run.h >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-first.c $(wildcard melt-stage3/warmelt-first+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-base.c $(wildcard melt-stage3/warmelt-base+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-debug.c $(wildcard melt-stage3/warmelt-debug+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-macro.c $(wildcard melt-stage3/warmelt-macro+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-normal.c $(wildcard melt-stage3/warmelt-normal+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-normatch.c $(wildcard melt-stage3/warmelt-normatch+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-genobj.c $(wildcard melt-stage3/warmelt-genobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-outobj.c $(wildcard melt-stage3/warmelt-outobj+[0-9]*.c) < /dev/null >> $@-tmp
	$(MD5SUM) melt-stage3/warmelt-modes.c $(wildcard melt-stage3/warmelt-modes+[0-9]*.c) < /dev/null >> $@-tmp
	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


### phony targets for  melt-stage3
#@ melt-build.tpl:438/718
.PHONY: warmelt3 warmelt3n
warmelt3: melt-stage3-fullstage.stamp melt-stage3/warmelt.modlis
	@echo MELT build made $@
warmelt3n:  melt-stage3-fullstage.stamp melt-stage3/warmelt.debugnoline.modlis
	@echo MELT build made $@

#@ melt-build.tpl:445/719 melt-stage3 directory and stamp
melt-stage3:
	test -d  melt-stage3/ || mkdir melt-stage3 
	ls -ld $$PWD/melt-stage3 > melt-stage3-directory.stamp
melt-stage3-directory.stamp: melt-stage3 ; @true


### end of melt-stage3 melt-build.tpl:452/720 



#@ melt-build.tpl:456/721
######## last stage melt-stage3
MELT_LAST_STAGE=melt-stage3
WARMELT_LAST= warmelt3
WARMELT_LAST_STAGESTAMP= melt-stage3-fullstage.stamp
WARMELT_LAST_MODLIS= melt-stage3/warmelt.modlis



#@ melt-build.tpl:465/722
.PHONY: warmelt
warmelt: $(WARMELT_LAST)



#@ melt-build.tpl:471/723
####### final targets melt-build.tpl:472/724
.PHONY: all-melt melt-all-modules melt-all-sources melt-tiny-tests
all-melt: melt-workdir-directory.stamp melt-modules-directory.stamp melt-sources-directory.stamp \
   melt-all-modules melt-all-sources melt-tiny-tests

### the final module directory melt-build.tpl:477/725
melt-modules: 
	test -d melt-modules/ || mkdir  melt-modules/
	ls -ld $$PWD/melt-modules > melt-modules-directory.stamp
melt-modules-directory.stamp: melt-modules; @true

### the final source directory melt-build.tpl:483/726
melt-sources: 
	test -d melt-sources/ || mkdir  melt-sources/
	ls -ld $$PWD/melt-sources > melt-sources-directory.stamp
melt-sources-directory.stamp: melt-sources; @true


### all sources melt-build.tpl:490/727
melt-all-sources: $(WARMELT_LAST_MODLIS) $(WARMELT_LAST_STAGESTAMP) empty-file-for-melt.c \
    melt-run.h melt-runtime.h melt-predef.h melt-sources-directory.stamp \
    $(melt_make_cc1_dependency) \
      melt-sources/warmelt-first.melt \
    melt-sources/warmelt-first+melttime.h \
      melt-sources/warmelt-base.melt \
    melt-sources/warmelt-base+melttime.h \
      melt-sources/warmelt-debug.melt \
    melt-sources/warmelt-debug+melttime.h \
      melt-sources/warmelt-macro.melt \
    melt-sources/warmelt-macro+melttime.h \
      melt-sources/warmelt-normal.melt \
    melt-sources/warmelt-normal+melttime.h \
       melt-sources/warmelt-predef.melt \
      melt-sources/warmelt-normatch.melt \
    melt-sources/warmelt-normatch+melttime.h \
      melt-sources/warmelt-genobj.melt \
    melt-sources/warmelt-genobj+melttime.h \
      melt-sources/warmelt-outobj.melt \
    melt-sources/warmelt-outobj+melttime.h \
      melt-sources/warmelt-modes.melt \
    melt-sources/warmelt-modes+melttime.h \
  melt-sources/xtramelt-ana-base.melt \
    melt-sources/xtramelt-ana-base+melttime.h   \
  melt-sources/xtramelt-ana-tree.melt \
    melt-sources/xtramelt-ana-tree+melttime.h   \
  melt-sources/xtramelt-ana-gimple.melt \
    melt-sources/xtramelt-ana-gimple+melttime.h   \
  melt-sources/xtramelt-probe.melt \
    melt-sources/xtramelt-probe+melttime.h   \
  melt-sources/xtramelt-ana-simple.melt \
    melt-sources/xtramelt-ana-simple+melttime.h   \
  melt-sources/xtramelt-c-generator.melt \
    melt-sources/xtramelt-c-generator+melttime.h   \
  melt-sources/xtramelt-opengpu.melt \
    melt-sources/xtramelt-opengpu+melttime.h  


#### melt-sources translator files melt-build.tpl:502/728

#@ melt-build.tpl:504/729


## melt translator warmelt-first # 0 melt-build.tpl:507/730
melt-sources/warmelt-first.melt: $(melt_make_source_dir)/warmelt-first.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/731; ls -l $(melt_make_source_dir)/warmelt-first.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-first.melt warmelt-first.melt

### melt included files with (load ...) macro melt-build.tpl:512/732


# MELT translator warmelt-first in melt-sources/ timestamp melt-build.tpl:521/733
melt-sources/warmelt-first+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-first.c melt-sources/warmelt-first+meltdesc.c; @true

# MELT translator warmelt-first in melt-sources/ C files melt-build.tpl:525/734
melt-sources/warmelt-first.c melt-sources/warmelt-first+meltdesc.c: \
    melt-sources/warmelt-first.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/735
	@echo  $(MELTCCINIT1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-first empty-file-for-melt.c > warmelt-first+sources.args-tmp
	@$(melt_move_if_change) warmelt-first+sources.args-tmp warmelt-first+sources.args
	@echo; echo; echo; echo -n warmelt-first+sources.args: ; cat warmelt-first+sources.args ; echo "***** doing " $@ melt-build.tpl:541/736
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-first+sources.args



#@  base= warmelt-first melt-build.tpl:546/737
melt-modules/warmelt-first.optimized.so: melt-sources/warmelt-first.c \
      $(wildcard  melt-sources/warmelt-first+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/738
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first 

#@  base= warmelt-first melt-build.tpl:559/739
melt-modules/warmelt-first.debugnoline.so: melt-sources/warmelt-first.c \
   $(wildcard  melt-sources/warmelt-first+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/740
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first 

#@ melt-build.tpl:572/741
melt-modules/warmelt-first.quicklybuilt.so: melt-sources/warmelt-first.c \
    $(wildcard  melt-sources/warmelt-first+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/742
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-first \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-first \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-first

#@  warmelt-first melt-build.tpl:586/743

#@ melt-build.tpl:504/744


## melt translator warmelt-base # 1 melt-build.tpl:507/745
melt-sources/warmelt-base.melt: $(melt_make_source_dir)/warmelt-base.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/746; ls -l $(melt_make_source_dir)/warmelt-base.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-base.melt warmelt-base.melt

### melt included files with (load ...) macro melt-build.tpl:512/747


# MELT translator warmelt-base in melt-sources/ timestamp melt-build.tpl:521/748
melt-sources/warmelt-base+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-base.c melt-sources/warmelt-base+meltdesc.c; @true

# MELT translator warmelt-base in melt-sources/ C files melt-build.tpl:525/749
melt-sources/warmelt-base.c melt-sources/warmelt-base+meltdesc.c: \
    melt-sources/warmelt-base.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/750
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-base empty-file-for-melt.c > warmelt-base+sources.args-tmp
	@$(melt_move_if_change) warmelt-base+sources.args-tmp warmelt-base+sources.args
	@echo; echo; echo; echo -n warmelt-base+sources.args: ; cat warmelt-base+sources.args ; echo "***** doing " $@ melt-build.tpl:541/751
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-base+sources.args



#@  base= warmelt-base melt-build.tpl:546/752
melt-modules/warmelt-base.optimized.so: melt-sources/warmelt-base.c \
      $(wildcard  melt-sources/warmelt-base+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/753
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base 

#@  base= warmelt-base melt-build.tpl:559/754
melt-modules/warmelt-base.debugnoline.so: melt-sources/warmelt-base.c \
   $(wildcard  melt-sources/warmelt-base+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/755
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base 

#@ melt-build.tpl:572/756
melt-modules/warmelt-base.quicklybuilt.so: melt-sources/warmelt-base.c \
    $(wildcard  melt-sources/warmelt-base+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/757
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-base \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-base

#@  warmelt-base melt-build.tpl:586/758

#@ melt-build.tpl:504/759


## melt translator warmelt-debug # 2 melt-build.tpl:507/760
melt-sources/warmelt-debug.melt: $(melt_make_source_dir)/warmelt-debug.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/761; ls -l $(melt_make_source_dir)/warmelt-debug.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-debug.melt warmelt-debug.melt

### melt included files with (load ...) macro melt-build.tpl:512/762


# MELT translator warmelt-debug in melt-sources/ timestamp melt-build.tpl:521/763
melt-sources/warmelt-debug+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-debug.c melt-sources/warmelt-debug+meltdesc.c; @true

# MELT translator warmelt-debug in melt-sources/ C files melt-build.tpl:525/764
melt-sources/warmelt-debug.c melt-sources/warmelt-debug+meltdesc.c: \
    melt-sources/warmelt-debug.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/765
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-debug empty-file-for-melt.c > warmelt-debug+sources.args-tmp
	@$(melt_move_if_change) warmelt-debug+sources.args-tmp warmelt-debug+sources.args
	@echo; echo; echo; echo -n warmelt-debug+sources.args: ; cat warmelt-debug+sources.args ; echo "***** doing " $@ melt-build.tpl:541/766
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-debug+sources.args



#@  base= warmelt-debug melt-build.tpl:546/767
melt-modules/warmelt-debug.optimized.so: melt-sources/warmelt-debug.c \
      $(wildcard  melt-sources/warmelt-debug+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/768
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug 

#@  base= warmelt-debug melt-build.tpl:559/769
melt-modules/warmelt-debug.debugnoline.so: melt-sources/warmelt-debug.c \
   $(wildcard  melt-sources/warmelt-debug+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/770
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug 

#@ melt-build.tpl:572/771
melt-modules/warmelt-debug.quicklybuilt.so: melt-sources/warmelt-debug.c \
    $(wildcard  melt-sources/warmelt-debug+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/772
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-debug \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-debug \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-debug

#@  warmelt-debug melt-build.tpl:586/773

#@ melt-build.tpl:504/774


## melt translator warmelt-macro # 3 melt-build.tpl:507/775
melt-sources/warmelt-macro.melt: $(melt_make_source_dir)/warmelt-macro.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/776; ls -l $(melt_make_source_dir)/warmelt-macro.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-macro.melt warmelt-macro.melt

### melt included files with (load ...) macro melt-build.tpl:512/777


# MELT translator warmelt-macro in melt-sources/ timestamp melt-build.tpl:521/778
melt-sources/warmelt-macro+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-macro.c melt-sources/warmelt-macro+meltdesc.c; @true

# MELT translator warmelt-macro in melt-sources/ C files melt-build.tpl:525/779
melt-sources/warmelt-macro.c melt-sources/warmelt-macro+meltdesc.c: \
    melt-sources/warmelt-macro.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/780
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-macro empty-file-for-melt.c > warmelt-macro+sources.args-tmp
	@$(melt_move_if_change) warmelt-macro+sources.args-tmp warmelt-macro+sources.args
	@echo; echo; echo; echo -n warmelt-macro+sources.args: ; cat warmelt-macro+sources.args ; echo "***** doing " $@ melt-build.tpl:541/781
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-macro+sources.args



#@  base= warmelt-macro melt-build.tpl:546/782
melt-modules/warmelt-macro.optimized.so: melt-sources/warmelt-macro.c \
      $(wildcard  melt-sources/warmelt-macro+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/783
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro 

#@  base= warmelt-macro melt-build.tpl:559/784
melt-modules/warmelt-macro.debugnoline.so: melt-sources/warmelt-macro.c \
   $(wildcard  melt-sources/warmelt-macro+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/785
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro 

#@ melt-build.tpl:572/786
melt-modules/warmelt-macro.quicklybuilt.so: melt-sources/warmelt-macro.c \
    $(wildcard  melt-sources/warmelt-macro+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/787
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-macro \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-macro \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-macro

#@  warmelt-macro melt-build.tpl:586/788

#@ melt-build.tpl:504/789


## melt translator warmelt-normal # 4 melt-build.tpl:507/790
melt-sources/warmelt-normal.melt: $(melt_make_source_dir)/warmelt-normal.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/791; ls -l $(melt_make_source_dir)/warmelt-normal.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-normal.melt warmelt-normal.melt

### melt included files with (load ...) macro melt-build.tpl:512/792

# included warmelt-predef.melt melt-build.tpl:514/793
melt-sources/warmelt-predef.melt: warmelt-predef.melt melt-sources-directory.stamp
	rm -f melt-sources/warmelt-predef.melt*
	cp -v $< melt-sources/warmelt-predef.melt-tmp
	mv melt-sources/warmelt-predef.melt-tmp  melt-sources/warmelt-predef.melt


# MELT translator warmelt-normal in melt-sources/ timestamp melt-build.tpl:521/794
melt-sources/warmelt-normal+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-normal.c melt-sources/warmelt-normal+meltdesc.c; @true

# MELT translator warmelt-normal in melt-sources/ C files melt-build.tpl:525/795
melt-sources/warmelt-normal.c melt-sources/warmelt-normal+meltdesc.c: \
    melt-sources/warmelt-normal.melt  melt-sources-directory.stamp melt-sources/warmelt-predef.melt  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/796
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-normal empty-file-for-melt.c > warmelt-normal+sources.args-tmp
	@$(melt_move_if_change) warmelt-normal+sources.args-tmp warmelt-normal+sources.args
	@echo; echo; echo; echo -n warmelt-normal+sources.args: ; cat warmelt-normal+sources.args ; echo "***** doing " $@ melt-build.tpl:541/797
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normal+sources.args



#@  base= warmelt-normal melt-build.tpl:546/798
melt-modules/warmelt-normal.optimized.so: melt-sources/warmelt-normal.c \
      $(wildcard  melt-sources/warmelt-normal+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/799
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal 

#@  base= warmelt-normal melt-build.tpl:559/800
melt-modules/warmelt-normal.debugnoline.so: melt-sources/warmelt-normal.c \
   $(wildcard  melt-sources/warmelt-normal+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/801
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal 

#@ melt-build.tpl:572/802
melt-modules/warmelt-normal.quicklybuilt.so: melt-sources/warmelt-normal.c \
    $(wildcard  melt-sources/warmelt-normal+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/803
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normal \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normal \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-normal

#@  warmelt-normal melt-build.tpl:586/804

#@ melt-build.tpl:504/805


## melt translator warmelt-normatch # 5 melt-build.tpl:507/806
melt-sources/warmelt-normatch.melt: $(melt_make_source_dir)/warmelt-normatch.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/807; ls -l $(melt_make_source_dir)/warmelt-normatch.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-normatch.melt warmelt-normatch.melt

### melt included files with (load ...) macro melt-build.tpl:512/808


# MELT translator warmelt-normatch in melt-sources/ timestamp melt-build.tpl:521/809
melt-sources/warmelt-normatch+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-normatch.c melt-sources/warmelt-normatch+meltdesc.c; @true

# MELT translator warmelt-normatch in melt-sources/ C files melt-build.tpl:525/810
melt-sources/warmelt-normatch.c melt-sources/warmelt-normatch+meltdesc.c: \
    melt-sources/warmelt-normatch.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/811
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-normatch empty-file-for-melt.c > warmelt-normatch+sources.args-tmp
	@$(melt_move_if_change) warmelt-normatch+sources.args-tmp warmelt-normatch+sources.args
	@echo; echo; echo; echo -n warmelt-normatch+sources.args: ; cat warmelt-normatch+sources.args ; echo "***** doing " $@ melt-build.tpl:541/812
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-normatch+sources.args



#@  base= warmelt-normatch melt-build.tpl:546/813
melt-modules/warmelt-normatch.optimized.so: melt-sources/warmelt-normatch.c \
      $(wildcard  melt-sources/warmelt-normatch+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/814
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch 

#@  base= warmelt-normatch melt-build.tpl:559/815
melt-modules/warmelt-normatch.debugnoline.so: melt-sources/warmelt-normatch.c \
   $(wildcard  melt-sources/warmelt-normatch+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/816
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch 

#@ melt-build.tpl:572/817
melt-modules/warmelt-normatch.quicklybuilt.so: melt-sources/warmelt-normatch.c \
    $(wildcard  melt-sources/warmelt-normatch+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/818
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-normatch \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-normatch \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-normatch

#@  warmelt-normatch melt-build.tpl:586/819

#@ melt-build.tpl:504/820


## melt translator warmelt-genobj # 6 melt-build.tpl:507/821
melt-sources/warmelt-genobj.melt: $(melt_make_source_dir)/warmelt-genobj.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/822; ls -l $(melt_make_source_dir)/warmelt-genobj.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-genobj.melt warmelt-genobj.melt

### melt included files with (load ...) macro melt-build.tpl:512/823


# MELT translator warmelt-genobj in melt-sources/ timestamp melt-build.tpl:521/824
melt-sources/warmelt-genobj+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-genobj.c melt-sources/warmelt-genobj+meltdesc.c; @true

# MELT translator warmelt-genobj in melt-sources/ C files melt-build.tpl:525/825
melt-sources/warmelt-genobj.c melt-sources/warmelt-genobj+meltdesc.c: \
    melt-sources/warmelt-genobj.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/826
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-genobj empty-file-for-melt.c > warmelt-genobj+sources.args-tmp
	@$(melt_move_if_change) warmelt-genobj+sources.args-tmp warmelt-genobj+sources.args
	@echo; echo; echo; echo -n warmelt-genobj+sources.args: ; cat warmelt-genobj+sources.args ; echo "***** doing " $@ melt-build.tpl:541/827
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-genobj+sources.args



#@  base= warmelt-genobj melt-build.tpl:546/828
melt-modules/warmelt-genobj.optimized.so: melt-sources/warmelt-genobj.c \
      $(wildcard  melt-sources/warmelt-genobj+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/829
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj 

#@  base= warmelt-genobj melt-build.tpl:559/830
melt-modules/warmelt-genobj.debugnoline.so: melt-sources/warmelt-genobj.c \
   $(wildcard  melt-sources/warmelt-genobj+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/831
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj 

#@ melt-build.tpl:572/832
melt-modules/warmelt-genobj.quicklybuilt.so: melt-sources/warmelt-genobj.c \
    $(wildcard  melt-sources/warmelt-genobj+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/833
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-genobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-genobj \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-genobj

#@  warmelt-genobj melt-build.tpl:586/834

#@ melt-build.tpl:504/835


## melt translator warmelt-outobj # 7 melt-build.tpl:507/836
melt-sources/warmelt-outobj.melt: $(melt_make_source_dir)/warmelt-outobj.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/837; ls -l $(melt_make_source_dir)/warmelt-outobj.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-outobj.melt warmelt-outobj.melt

### melt included files with (load ...) macro melt-build.tpl:512/838


# MELT translator warmelt-outobj in melt-sources/ timestamp melt-build.tpl:521/839
melt-sources/warmelt-outobj+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-outobj.c melt-sources/warmelt-outobj+meltdesc.c; @true

# MELT translator warmelt-outobj in melt-sources/ C files melt-build.tpl:525/840
melt-sources/warmelt-outobj.c melt-sources/warmelt-outobj+meltdesc.c: \
    melt-sources/warmelt-outobj.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/841
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-outobj empty-file-for-melt.c > warmelt-outobj+sources.args-tmp
	@$(melt_move_if_change) warmelt-outobj+sources.args-tmp warmelt-outobj+sources.args
	@echo; echo; echo; echo -n warmelt-outobj+sources.args: ; cat warmelt-outobj+sources.args ; echo "***** doing " $@ melt-build.tpl:541/842
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-outobj+sources.args



#@  base= warmelt-outobj melt-build.tpl:546/843
melt-modules/warmelt-outobj.optimized.so: melt-sources/warmelt-outobj.c \
      $(wildcard  melt-sources/warmelt-outobj+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/844
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj 

#@  base= warmelt-outobj melt-build.tpl:559/845
melt-modules/warmelt-outobj.debugnoline.so: melt-sources/warmelt-outobj.c \
   $(wildcard  melt-sources/warmelt-outobj+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/846
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj 

#@ melt-build.tpl:572/847
melt-modules/warmelt-outobj.quicklybuilt.so: melt-sources/warmelt-outobj.c \
    $(wildcard  melt-sources/warmelt-outobj+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/848
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-outobj \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-outobj \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-outobj

#@  warmelt-outobj melt-build.tpl:586/849

#@ melt-build.tpl:504/850


## melt translator warmelt-modes # 8 melt-build.tpl:507/851
melt-sources/warmelt-modes.melt: $(melt_make_source_dir)/warmelt-modes.melt melt-sources-directory.stamp
	@echo  melt-build.tpl:509/852; ls -l $(melt_make_source_dir)/warmelt-modes.melt 
	cd melt-sources; $(LN_S) -v -f  $(realpath $(melt_make_source_dir))/warmelt-modes.melt warmelt-modes.melt

### melt included files with (load ...) macro melt-build.tpl:512/853


# MELT translator warmelt-modes in melt-sources/ timestamp melt-build.tpl:521/854
melt-sources/warmelt-modes+melttime.h: melt-sources-directory.stamp \
   melt-sources/warmelt-modes.c melt-sources/warmelt-modes+meltdesc.c; @true

# MELT translator warmelt-modes in melt-sources/ C files melt-build.tpl:525/855
melt-sources/warmelt-modes.c melt-sources/warmelt-modes+meltdesc.c: \
    melt-sources/warmelt-modes.melt  melt-sources-directory.stamp  \
                    $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:532/856
	@echo  $(MELTCCFILE1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-modules): \
	     $(meltarg_source_path)=$(realpath $(MELT_LAST_STAGE)):$(realpath melt-sources):$(realpath $(melt_source_dir)) \
	     $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	     $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_output)=melt-sources/warmelt-modes empty-file-for-melt.c > warmelt-modes+sources.args-tmp
	@$(melt_move_if_change) warmelt-modes+sources.args-tmp warmelt-modes+sources.args
	@echo; echo; echo; echo -n warmelt-modes+sources.args: ; cat warmelt-modes+sources.args ; echo "***** doing " $@ melt-build.tpl:541/857
	$(MELT_RUNNER) $(melt_make_cc1) @warmelt-modes+sources.args



#@  base= warmelt-modes melt-build.tpl:546/858
melt-modules/warmelt-modes.optimized.so: melt-sources/warmelt-modes.c \
      $(wildcard  melt-sources/warmelt-modes+*.c) \
      melt-modules-directory.stamp melt-sources-directory.stamp melt-workdir-directory.stamp \
      melt-run.h melt-runtime.h
	@echo doing $@  melt-build.tpl:551/859
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=optimized \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes 

#@  base= warmelt-modes melt-build.tpl:559/860
melt-modules/warmelt-modes.debugnoline.so: melt-sources/warmelt-modes.c \
   $(wildcard  melt-sources/warmelt-modes+*.c) \
   melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
   melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:564/861
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes 

#@ melt-build.tpl:572/862
melt-modules/warmelt-modes.quicklybuilt.so: melt-sources/warmelt-modes.c \
    $(wildcard  melt-sources/warmelt-modes+*.c) \
    melt-modules-directory.stamp melt-sources-directory.stamp  melt-workdir-directory.stamp \
    melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:577/863
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/warmelt-modes \
              GCCMELT_MODULE_BINARYBASE=melt-modules/warmelt-modes \
              GCCMELT_MODULE_WORKSPACE=melt-workdir 
# end translator warmelt-modes

#@  warmelt-modes melt-build.tpl:586/864


#@ melt-build.tpl:589/865


#@ melt-build.tpl:592/866
#### melt-sources warmelt-quicklybuilt is the sequence of translator files:
melt-sources/warmelt-quicklybuilt.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building quicklybuilt module list $@ melt-build.tpl:595/867
	date  +"# MELT warmelt-quicklybuilt list $@ generated %F" > $@-tmp
	echo "#  quicklybuilt translator files" >> $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:592/868
#### melt-sources warmelt-optimized is the sequence of translator files:
melt-sources/warmelt-optimized.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building optimized module list $@ melt-build.tpl:595/869
	date  +"# MELT warmelt-optimized list $@ generated %F" > $@-tmp
	echo "#  optimized translator files" >> $@-tmp
	echo warmelt-first.optimized >> $@-tmp
	echo warmelt-base.optimized >> $@-tmp
	echo warmelt-debug.optimized >> $@-tmp
	echo warmelt-macro.optimized >> $@-tmp
	echo warmelt-normal.optimized >> $@-tmp
	echo warmelt-normatch.optimized >> $@-tmp
	echo warmelt-genobj.optimized >> $@-tmp
	echo warmelt-outobj.optimized >> $@-tmp
	echo warmelt-modes.optimized >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:592/870
#### melt-sources warmelt-debugnoline is the sequence of translator files:
melt-sources/warmelt-debugnoline.modlis: melt-modules/warmelt-first.optimized.so  \
melt-modules/warmelt-base.optimized.so  \
melt-modules/warmelt-debug.optimized.so  \
melt-modules/warmelt-macro.optimized.so  \
melt-modules/warmelt-normal.optimized.so  \
melt-modules/warmelt-normatch.optimized.so  \
melt-modules/warmelt-genobj.optimized.so  \
melt-modules/warmelt-outobj.optimized.so  \
melt-modules/warmelt-modes.optimized.so 
	@echo building debugnoline module list $@ melt-build.tpl:595/871
	date  +"# MELT warmelt-debugnoline list $@ generated %F" > $@-tmp
	echo "#  debugnoline translator files" >> $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@



#### melt-sources application files



#@ melt-build.tpl:609/872
## melt application xtramelt-ana-base
melt-sources/xtramelt-ana-base.melt: $(melt_make_source_dir)/xtramelt-ana-base.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-base.melt


#@ melt-build.tpl:615/873
## melt application xtramelt-ana-base generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-base.c: \
   melt-sources/xtramelt-ana-base.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/874 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt: \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/875
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/876
	@echo doing $@  melt-build.tpl:641/877 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized: \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/878
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/879
## melt application xtramelt-ana-base various flavors of modules


## melt application xtramelt-ana-base flavor quicklybuilt  melt-build.tpl:657/880
melt-modules/xtramelt-ana-base.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/881
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ melt-build.tpl:670/882 xtramelt-ana-base.quicklybuilt

## melt application xtramelt-ana-base flavor optimized  melt-build.tpl:657/883
melt-modules/xtramelt-ana-base.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/884
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ melt-build.tpl:670/885 xtramelt-ana-base.optimized

## melt application xtramelt-ana-base flavor debugnoline  melt-build.tpl:657/886
melt-modules/xtramelt-ana-base.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-base.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-base+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/887
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-base \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-base 

#@ melt-build.tpl:670/888 xtramelt-ana-base.debugnoline

#@ melt-build.tpl:672/889

# end application xtramelt-ana-base

#@ melt-build.tpl:676/890


#@ melt-build.tpl:609/891
## melt application xtramelt-ana-tree
melt-sources/xtramelt-ana-tree.melt: $(melt_make_source_dir)/xtramelt-ana-tree.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-tree.melt


#@ melt-build.tpl:615/892
## melt application xtramelt-ana-tree generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-tree.c: \
   melt-sources/xtramelt-ana-tree.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/893 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/894
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/895
	@echo doing $@  melt-build.tpl:641/896 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/897
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/898
## melt application xtramelt-ana-tree various flavors of modules


## melt application xtramelt-ana-tree flavor quicklybuilt  melt-build.tpl:657/899
melt-modules/xtramelt-ana-tree.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/900
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ melt-build.tpl:670/901 xtramelt-ana-tree.quicklybuilt

## melt application xtramelt-ana-tree flavor optimized  melt-build.tpl:657/902
melt-modules/xtramelt-ana-tree.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/903
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ melt-build.tpl:670/904 xtramelt-ana-tree.optimized

## melt application xtramelt-ana-tree flavor debugnoline  melt-build.tpl:657/905
melt-modules/xtramelt-ana-tree.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-tree.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-tree+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/906
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-tree \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-tree 

#@ melt-build.tpl:670/907 xtramelt-ana-tree.debugnoline

#@ melt-build.tpl:672/908

# end application xtramelt-ana-tree

#@ melt-build.tpl:676/909


#@ melt-build.tpl:609/910
## melt application xtramelt-ana-gimple
melt-sources/xtramelt-ana-gimple.melt: $(melt_make_source_dir)/xtramelt-ana-gimple.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-gimple.melt


#@ melt-build.tpl:615/911
## melt application xtramelt-ana-gimple generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-gimple.c: \
   melt-sources/xtramelt-ana-gimple.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/912 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/913
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/914
	@echo doing $@  melt-build.tpl:641/915 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/916
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/917
## melt application xtramelt-ana-gimple various flavors of modules


## melt application xtramelt-ana-gimple flavor quicklybuilt  melt-build.tpl:657/918
melt-modules/xtramelt-ana-gimple.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/919
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ melt-build.tpl:670/920 xtramelt-ana-gimple.quicklybuilt

## melt application xtramelt-ana-gimple flavor optimized  melt-build.tpl:657/921
melt-modules/xtramelt-ana-gimple.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/922
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ melt-build.tpl:670/923 xtramelt-ana-gimple.optimized

## melt application xtramelt-ana-gimple flavor debugnoline  melt-build.tpl:657/924
melt-modules/xtramelt-ana-gimple.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-gimple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-gimple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/925
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-gimple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-gimple 

#@ melt-build.tpl:670/926 xtramelt-ana-gimple.debugnoline

#@ melt-build.tpl:672/927

# end application xtramelt-ana-gimple

#@ melt-build.tpl:676/928


#@ melt-build.tpl:609/929
## melt application xtramelt-probe
melt-sources/xtramelt-probe.melt: $(melt_make_source_dir)/xtramelt-probe.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-probe.melt


#@ melt-build.tpl:615/930
## melt application xtramelt-probe generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-probe.c: \
   melt-sources/xtramelt-probe.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/931 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/932
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/933
	@echo doing $@  melt-build.tpl:641/934 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/935
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/936
## melt application xtramelt-probe various flavors of modules


## melt application xtramelt-probe flavor quicklybuilt  melt-build.tpl:657/937
melt-modules/xtramelt-probe.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/938
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ melt-build.tpl:670/939 xtramelt-probe.quicklybuilt

## melt application xtramelt-probe flavor optimized  melt-build.tpl:657/940
melt-modules/xtramelt-probe.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/941
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ melt-build.tpl:670/942 xtramelt-probe.optimized

## melt application xtramelt-probe flavor debugnoline  melt-build.tpl:657/943
melt-modules/xtramelt-probe.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-probe.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-probe+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/944
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-probe \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-probe 

#@ melt-build.tpl:670/945 xtramelt-probe.debugnoline

#@ melt-build.tpl:672/946

# end application xtramelt-probe

#@ melt-build.tpl:676/947


#@ melt-build.tpl:609/948
## melt application xtramelt-ana-simple
melt-sources/xtramelt-ana-simple.melt: $(melt_make_source_dir)/xtramelt-ana-simple.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-ana-simple.melt


#@ melt-build.tpl:615/949
## melt application xtramelt-ana-simple generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-ana-simple.c: \
   melt-sources/xtramelt-ana-simple.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/950 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/951
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/952
	@echo doing $@  melt-build.tpl:641/953 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/954
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/955
## melt application xtramelt-ana-simple various flavors of modules


## melt application xtramelt-ana-simple flavor quicklybuilt  melt-build.tpl:657/956
melt-modules/xtramelt-ana-simple.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/957
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ melt-build.tpl:670/958 xtramelt-ana-simple.quicklybuilt

## melt application xtramelt-ana-simple flavor optimized  melt-build.tpl:657/959
melt-modules/xtramelt-ana-simple.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/960
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ melt-build.tpl:670/961 xtramelt-ana-simple.optimized

## melt application xtramelt-ana-simple flavor debugnoline  melt-build.tpl:657/962
melt-modules/xtramelt-ana-simple.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-ana-simple.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-ana-simple+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/963
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-ana-simple \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-ana-simple 

#@ melt-build.tpl:670/964 xtramelt-ana-simple.debugnoline

#@ melt-build.tpl:672/965

# end application xtramelt-ana-simple

#@ melt-build.tpl:676/966


#@ melt-build.tpl:609/967
## melt application xtramelt-c-generator
melt-sources/xtramelt-c-generator.melt: $(melt_make_source_dir)/xtramelt-c-generator.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-c-generator.melt


#@ melt-build.tpl:615/968
## melt application xtramelt-c-generator generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-c-generator.c: \
   melt-sources/xtramelt-c-generator.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/969 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/970
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/971
	@echo doing $@  melt-build.tpl:641/972 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/973
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/974
## melt application xtramelt-c-generator various flavors of modules


## melt application xtramelt-c-generator flavor quicklybuilt  melt-build.tpl:657/975
melt-modules/xtramelt-c-generator.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/976
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ melt-build.tpl:670/977 xtramelt-c-generator.quicklybuilt

## melt application xtramelt-c-generator flavor optimized  melt-build.tpl:657/978
melt-modules/xtramelt-c-generator.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/979
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ melt-build.tpl:670/980 xtramelt-c-generator.optimized

## melt application xtramelt-c-generator flavor debugnoline  melt-build.tpl:657/981
melt-modules/xtramelt-c-generator.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-c-generator.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-c-generator+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/982
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-c-generator \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-c-generator 

#@ melt-build.tpl:670/983 xtramelt-c-generator.debugnoline

#@ melt-build.tpl:672/984

# end application xtramelt-c-generator

#@ melt-build.tpl:676/985


#@ melt-build.tpl:609/986
## melt application xtramelt-opengpu
melt-sources/xtramelt-opengpu.melt: $(melt_make_source_dir)/xtramelt-opengpu.melt
	cd melt-sources; $(LN_S) -v -f $(realpath $^) xtramelt-opengpu.melt


#@ melt-build.tpl:615/987
## melt application xtramelt-opengpu generated files
## we translate them twice, first with a quicklybuilt, then with an optimized warmelt
## to exercise the optimized warmelt...
melt-sources/xtramelt-opengpu.c: \
   melt-sources/xtramelt-opengpu.melt \
   melt-sources/warmelt-quicklybuilt.modlis melt-sources/warmelt-optimized.modlis \
   melt-sources-directory.stamp \
  \
   $(MELT_TRANSLATOR_SOURCE) \
   $(WARMELT_LAST_STAGESTAMP) $(WARMELT_LAST_MODLIS) \
   empty-file-for-melt.c melt-run.h melt-runtime.h \
   $(melt_make_cc1_dependency)
	@echo doing $@  melt-build.tpl:629/988 with quicklybuilt warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-quicklybuilt:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple:xtramelt-c-generator \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-quickb.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-quickb.args-tmp $(notdir $(basename $@))-quickb.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-quickb.args: ; cat $(notdir $(basename $@))-quickb.args ; echo "***** doing " $@ melt-build.tpl:638/989
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-quickb.args
#@ melt-build.tpl:640/990
	@echo doing $@  melt-build.tpl:641/991 with optimized warmelt
	@echo 	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
             $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
	     $(meltarg_init)=@warmelt-optimized:xtramelt-ana-base:xtramelt-ana-tree:xtramelt-ana-gimple:xtramelt-probe:xtramelt-ana-simple:xtramelt-c-generator \
	     $(meltarg_output)=$(basename $@) empty-file-for-melt.c > $(notdir $(basename $@))-optim.args-tmp
	@$(melt_move_if_change) $(notdir $(basename $@))-optim.args-tmp $(notdir $(basename $@))-optim.args
	@echo; echo; echo; echo -n $(notdir $(basename $@))-optim.args: ; cat $(notdir $(basename $@))-optim.args ; echo "***** doing " $@ melt-build.tpl:650/992
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@))-optim.args

#@ melt-build.tpl:653/993
## melt application xtramelt-opengpu various flavors of modules


## melt application xtramelt-opengpu flavor quicklybuilt  melt-build.tpl:657/994
melt-modules/xtramelt-opengpu.quicklybuilt.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/995
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=quicklybuilt \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ melt-build.tpl:670/996 xtramelt-opengpu.quicklybuilt

## melt application xtramelt-opengpu flavor optimized  melt-build.tpl:657/997
melt-modules/xtramelt-opengpu.optimized.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/998
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=optimized \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ melt-build.tpl:670/999 xtramelt-opengpu.optimized

## melt application xtramelt-opengpu flavor debugnoline  melt-build.tpl:657/1000
melt-modules/xtramelt-opengpu.debugnoline.so: melt-sources-directory.stamp \
     melt-sources/xtramelt-opengpu.c melt-modules-directory.stamp  melt-workdir-directory.stamp \
     $(wildcard  melt-sources/xtramelt-opengpu+*.c) \
     melt-run.h melt-runtime.h 
	@echo doing $@  melt-build.tpl:662/1001
	+$(MELT_MAKE_MODULE) melt_module \
	      GCCMELT_MODULE_FLAVOR=debugnoline \
	      GCCMELT_CFLAGS="$(melt_cflags)" \
              GCCMELT_MODULE_WORKSPACE=melt-workdir \
	      GCCMELT_MODULE_SOURCEBASE=melt-sources/xtramelt-opengpu \
              GCCMELT_MODULE_BINARYBASE=melt-modules/xtramelt-opengpu 

#@ melt-build.tpl:670/1002 xtramelt-opengpu.debugnoline

#@ melt-build.tpl:672/1003

# end application xtramelt-opengpu

#@ melt-build.tpl:676/1004


################

#@ melt-build.tpl:681/1005
melt-sayhello.melt: $(melt_default_modules_list).modlis
	@date +'(code_chunk say%YM%mhello #{printf("hello_from_MELT on %c pid %%d\n", (int) getpid());}#)' > $@
#@ melt-build.tpl:684/1006

melt-tiny-tests: melt-sayhello.melt melt-modules melt-sources \
		melt-all-modules melt-all-sources \
		melt-default-modules-quicklybuilt.modlis melt-runtime.args \
		$(MELT_RUNTIME_C)
# test that a helloworld can be translated melt-build.tpl:690/1007
	@echo doing $@  melt-build.tpl:691/1008
	@echo	$(MELTCCAPPLICATION1ARGS) \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
       $(meltarg_output)=$(basename $<) empty-file-for-melt.c > $(basename $<).args-tmp
	@$(melt_move_if_change) $(basename $<).args-tmp $(basename $<).args
	@echo; echo; echo; echo -n $(basename $<).args: ; cat $(basename $<).args ; echo "***** doing " $(basename $<)  melt-build.tpl:699/1009
	$(MELT_RUNNER) $(melt_make_cc1) @$(basename $<).args
# test that a helloworld can be run melt-build.tpl:701/1010
	@echo	$(MELTCCRUNFILE1ARGS) $(meltarg_init)=@melt-default-modules-quicklybuilt \
	     $(meltarg_arg)=$<  -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) \
       $(meltarg_output)=$(basename $<) empty-file-for-melt.c > $(basename $<)-run.args-tmp
	@$(melt_move_if_change) $(basename $<)-run.args-tmp $(basename $<)-run.args
	@echo; echo; echo; echo -n $(basename $<)-run.args: ; cat $(basename $<)-run.args ; echo "***** doing " $(basename $<)-run  melt-build.tpl:709/1011
	$(MELT_RUNNER) $(melt_make_cc1) @$(basename $<)-run.args
# test that the melt-runtime follows MELT coding rules; this also tests
# a real MELT pass on real code, like our melt-runtime.c
# test melt-runtime melt-build.tpl:713/1012
	@echo  $(melt_make_cc1flags) >  meltframe.args-tmp
	@echo  $(meltarg_mode)=meltframe  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
              "$(meltarg_modulecflags)='$(melt_cflags)'" \
	      $(meltarg_tempdir)=. $(MELT_DEBUG) $(meltarg_init)=@melt-default-modules-quicklybuilt \
	     $(meltarg_module_path)=$(realpath melt-modules) \
	     $(meltarg_source_path)=$(realpath melt-sources) \
       $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_inhibitautobuild) >>  meltframe.args-tmp
	@echo -frandom-seed=$(shell $(MD5SUM) $< | cut -b-24) -o /dev/null >> meltframe.args-tmp
	@echo -Iinclude/ >> meltframe.args-tmp
	@if [ -d include-fixed ] ; then echo -Iinclude-fixed/  >> meltframe.args-tmp ; fi
	@echo  -O -Wno-shadow  >> meltframe.args-tmp
	@cat melt-runtime.args >> meltframe.args-tmp
	@$(melt_move_if_change) meltframe.args-tmp meltframe.args
	@echo; echo; echo; echo -n meltframe.args: ; cat meltframe.args ; echo "***** doing " meltframe  melt-build.tpl:729/1013
	$(MELT_RUNNER) $(melt_make_cc1) @meltframe.args


#@ melt-build.tpl:733/1014




################
#@ melt-build.tpl:739/1015
melt-all-modules:  melt-workdir \
    melt-modules/warmelt-first.optimized.so \
    melt-modules/warmelt-base.optimized.so \
    melt-modules/warmelt-debug.optimized.so \
    melt-modules/warmelt-macro.optimized.so \
    melt-modules/warmelt-normal.optimized.so \
    melt-modules/warmelt-normatch.optimized.so \
    melt-modules/warmelt-genobj.optimized.so \
    melt-modules/warmelt-outobj.optimized.so \
    melt-modules/warmelt-modes.optimized.so \
 \
    melt-modules/warmelt-first.quicklybuilt.so \
    melt-modules/warmelt-base.quicklybuilt.so \
    melt-modules/warmelt-debug.quicklybuilt.so \
    melt-modules/warmelt-macro.quicklybuilt.so \
    melt-modules/warmelt-normal.quicklybuilt.so \
    melt-modules/warmelt-normatch.quicklybuilt.so \
    melt-modules/warmelt-genobj.quicklybuilt.so \
    melt-modules/warmelt-outobj.quicklybuilt.so \
    melt-modules/warmelt-modes.quicklybuilt.so \
 \
    melt-modules/warmelt-first.debugnoline.so \
    melt-modules/warmelt-base.debugnoline.so \
    melt-modules/warmelt-debug.debugnoline.so \
    melt-modules/warmelt-macro.debugnoline.so \
    melt-modules/warmelt-normal.debugnoline.so \
    melt-modules/warmelt-normatch.debugnoline.so \
    melt-modules/warmelt-genobj.debugnoline.so \
    melt-modules/warmelt-outobj.debugnoline.so \
    melt-modules/warmelt-modes.debugnoline.so \
 \
    \
    melt-modules/xtramelt-ana-base.optimized.so \
    melt-modules/xtramelt-ana-tree.optimized.so \
    melt-modules/xtramelt-ana-gimple.optimized.so \
    melt-modules/xtramelt-probe.optimized.so \
    melt-modules/xtramelt-ana-simple.optimized.so \
    melt-modules/xtramelt-c-generator.optimized.so \
    melt-modules/xtramelt-opengpu.optimized.so \
 \
    melt-modules/xtramelt-ana-base.quicklybuilt.so \
    melt-modules/xtramelt-ana-tree.quicklybuilt.so \
    melt-modules/xtramelt-ana-gimple.quicklybuilt.so \
    melt-modules/xtramelt-probe.quicklybuilt.so \
    melt-modules/xtramelt-ana-simple.quicklybuilt.so \
    melt-modules/xtramelt-c-generator.quicklybuilt.so \
    melt-modules/xtramelt-opengpu.quicklybuilt.so \
 \
    melt-modules/xtramelt-ana-base.debugnoline.so \
    melt-modules/xtramelt-ana-tree.debugnoline.so \
    melt-modules/xtramelt-ana-gimple.debugnoline.so \
    melt-modules/xtramelt-probe.debugnoline.so \
    melt-modules/xtramelt-ana-simple.debugnoline.so \
    melt-modules/xtramelt-c-generator.debugnoline.so \
    melt-modules/xtramelt-opengpu.debugnoline.so \


$(melt_default_modules_list).modlis: melt-all-modules \
       $(melt_default_modules_list)-quicklybuilt.modlis \
       $(melt_default_modules_list)-optimized.modlis \
       $(melt_default_modules_list)-debugnoline.modlis
	cd $(dir $@) ; $(LN_S) -v -f $(melt_default_modules_list)-$(melt_default_variant).modlis  $(notdir $@)


#@ melt-build.tpl:762/1016
## MELT various variants of module lists


#@ melt-build.tpl:766/1017
### quicklybuilt default module list
$(melt_default_modules_list)-quicklybuilt.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.quicklybuilt.so)
	@echo building quicklybuilt module list $@
	date  +"# MELT module  quicklybuilt list $@ generated %F" > $@-tmp
	echo "#  quicklybuilt translator files" >> $@-tmp
	echo warmelt-first.quicklybuilt >> $@-tmp
	echo warmelt-base.quicklybuilt >> $@-tmp
	echo warmelt-debug.quicklybuilt >> $@-tmp
	echo warmelt-macro.quicklybuilt >> $@-tmp
	echo warmelt-normal.quicklybuilt >> $@-tmp
	echo warmelt-normatch.quicklybuilt >> $@-tmp
	echo warmelt-genobj.quicklybuilt >> $@-tmp
	echo warmelt-outobj.quicklybuilt >> $@-tmp
	echo warmelt-modes.quicklybuilt >> $@-tmp

	echo "#  quicklybuilt application files" >> $@-tmp
	echo xtramelt-ana-base.quicklybuilt >> $@-tmp
	echo xtramelt-ana-tree.quicklybuilt >> $@-tmp
	echo xtramelt-ana-gimple.quicklybuilt >> $@-tmp
	echo xtramelt-probe.quicklybuilt >> $@-tmp
	echo xtramelt-ana-simple.quicklybuilt >> $@-tmp
	echo xtramelt-c-generator.quicklybuilt >> $@-tmp
	echo xtramelt-opengpu.quicklybuilt >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:766/1018
### optimized default module list
$(melt_default_modules_list)-optimized.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.optimized.so)
	@echo building optimized module list $@
	date  +"# MELT module  optimized list $@ generated %F" > $@-tmp
	echo "#  optimized translator files" >> $@-tmp
	echo warmelt-first.optimized >> $@-tmp
	echo warmelt-base.optimized >> $@-tmp
	echo warmelt-debug.optimized >> $@-tmp
	echo warmelt-macro.optimized >> $@-tmp
	echo warmelt-normal.optimized >> $@-tmp
	echo warmelt-normatch.optimized >> $@-tmp
	echo warmelt-genobj.optimized >> $@-tmp
	echo warmelt-outobj.optimized >> $@-tmp
	echo warmelt-modes.optimized >> $@-tmp

	echo "#  optimized application files" >> $@-tmp
	echo xtramelt-ana-base.optimized >> $@-tmp
	echo xtramelt-ana-tree.optimized >> $@-tmp
	echo xtramelt-ana-gimple.optimized >> $@-tmp
	echo xtramelt-probe.optimized >> $@-tmp
	echo xtramelt-ana-simple.optimized >> $@-tmp
	echo xtramelt-c-generator.optimized >> $@-tmp
	echo xtramelt-opengpu.optimized >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@


#@ melt-build.tpl:766/1019
### debugnoline default module list
$(melt_default_modules_list)-debugnoline.modlis:  melt-all-modules  melt-modules/ $(wildcard melt-modules/*.debugnoline.so)
	@echo building debugnoline module list $@
	date  +"# MELT module  debugnoline list $@ generated %F" > $@-tmp
	echo "#  debugnoline translator files" >> $@-tmp
	echo warmelt-first.debugnoline >> $@-tmp
	echo warmelt-base.debugnoline >> $@-tmp
	echo warmelt-debug.debugnoline >> $@-tmp
	echo warmelt-macro.debugnoline >> $@-tmp
	echo warmelt-normal.debugnoline >> $@-tmp
	echo warmelt-normatch.debugnoline >> $@-tmp
	echo warmelt-genobj.debugnoline >> $@-tmp
	echo warmelt-outobj.debugnoline >> $@-tmp
	echo warmelt-modes.debugnoline >> $@-tmp

	echo "#  debugnoline application files" >> $@-tmp
	echo xtramelt-ana-base.debugnoline >> $@-tmp
	echo xtramelt-ana-tree.debugnoline >> $@-tmp
	echo xtramelt-ana-gimple.debugnoline >> $@-tmp
	echo xtramelt-probe.debugnoline >> $@-tmp
	echo xtramelt-ana-simple.debugnoline >> $@-tmp
	echo xtramelt-c-generator.debugnoline >> $@-tmp
	echo xtramelt-opengpu.debugnoline >> $@-tmp

	echo "# end $@" >> $@-tmp
	$(melt_move_if_change) $@-tmp $@



#@ melt-build.tpl:782/1020
### MELT upgrade
.PHONY: warmelt-upgrade-translator meltrun-generate


#@ melt-build.tpl:787/1021
####### generate the runtime support files meltrunsup.h meltrunsup-inc.c
meltrun-generate: $(WARMELT_LAST) $(WARMELT_LAST_MODLIS)  $(WARMELT_LAST_STAGESTAMP) empty-file-for-melt.c \
                   $(melt_make_cc1_dependency)
	@rm -f $(wildcard meltrunsup*)
	@echo $(melt_make_cc1flags) \
	      $(meltarg_mode)=runtypesupport  \
	      $(meltarg_workdir)=melt-workdir $(meltarg_genworklink) $(meltarg_bootstrapping)  $(MELT_DEBUG) \
	      $(meltarg_init)=@$(basename $(WARMELT_LAST_MODLIS)) \
	      $(meltarg_module_path)=$(MELT_LAST_STAGE):. \
	      $(meltarg_source_path)=$(MELT_LAST_STAGE):$(melt_source_dir):. \
	      $(meltarg_output)=meltrunsup  \
	      empty-file-for-melt.c > $(basename $@).args-tmp
	@$(melt_move_if_change) $(basename $@).args-tmp $(basename $@).args
	@echo; echo; echo; echo -n $(basename $@).args: ; cat $(basename $@).args ; echo "***** doing " $@
	 $(MELT_RUNNER) $(melt_make_cc1) @$(basename $@).args
	if [ -n "$(GCCMELTRUNGEN_DEST)" ]; then \
	   for f in $(GCCMELTRUNGEN_DEST)/meltrunsup*.[ch]; \
	     do mv $$f $$f.bak; \
	   done; \
	   cp -v meltrunsup*.[ch] "$(GCCMELTRUNGEN_DEST)" ; \
        fi
	ls -l meltrunsup*.[ch]


###### generate the translator files warmelt*.c
#@ melt-build.tpl:813/1022
warmelt-upgrade-translator: $(WARMELT_LAST) $(WARMELT_LAST_STAGESTAMP) meltrun-generate \
   $(MELT_LAST_STAGE)/warmelt-first.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-first+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-base.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-base+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-debug.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-debug+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-macro.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-macro+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-normal.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-normal+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-normatch.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-normatch+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-genobj.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-genobj+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-outobj.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-outobj+*.c)  \
   $(MELT_LAST_STAGE)/warmelt-modes.c \
         $(wildcard  $(MELT_LAST_STAGE)/warmelt-modes+*.c) 
	@echo upgrading the MELT translator
	@which unifdef > /dev/null || (echo missing unifdef for warmelt-upgrade-translator; exit 1)
	@which indent  > /dev/null || (echo missing indent for warmelt-upgrade-translator; exit 1)
	ls -l meltrunsup.h meltrunsup-inc.c 
	indent meltrunsup.h
	indent meltrunsup-inc.c
#@ melt-build.tpl:825/1023

#@ melt-build.tpl:827/1024
	@echo upgrading MELT translator warmelt-first
## dont indent the warmelt-first+meltdesc.c or warmelt-first+melttime.h ::: melt-build.tpl:829/1025
	cp $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-first+meltdesc.c > $(srcdir)/melt/generated/warmelt-first+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-first+melttime.h  $(MELT_LAST_STAGE)/warmelt-first+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-first+melttime.h > $(srcdir)/melt/generated/warmelt-first+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-first.c $(MELT_LAST_STAGE)/warmelt-first+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-first*.so $(MELT_STAGE_ZERO)/warmelt-first*.c
#@ melt-build.tpl:848/1026
#

#@ melt-build.tpl:827/1027
	@echo upgrading MELT translator warmelt-base
## dont indent the warmelt-base+meltdesc.c or warmelt-base+melttime.h ::: melt-build.tpl:829/1028
	cp $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-base+meltdesc.c > $(srcdir)/melt/generated/warmelt-base+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-base+melttime.h  $(MELT_LAST_STAGE)/warmelt-base+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-base+melttime.h > $(srcdir)/melt/generated/warmelt-base+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-base.c $(MELT_LAST_STAGE)/warmelt-base+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-base*.so $(MELT_STAGE_ZERO)/warmelt-base*.c
#@ melt-build.tpl:848/1029
#

#@ melt-build.tpl:827/1030
	@echo upgrading MELT translator warmelt-debug
## dont indent the warmelt-debug+meltdesc.c or warmelt-debug+melttime.h ::: melt-build.tpl:829/1031
	cp $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-debug+meltdesc.c > $(srcdir)/melt/generated/warmelt-debug+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-debug+melttime.h  $(MELT_LAST_STAGE)/warmelt-debug+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-debug+melttime.h > $(srcdir)/melt/generated/warmelt-debug+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-debug.c $(MELT_LAST_STAGE)/warmelt-debug+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-debug*.so $(MELT_STAGE_ZERO)/warmelt-debug*.c
#@ melt-build.tpl:848/1032
#

#@ melt-build.tpl:827/1033
	@echo upgrading MELT translator warmelt-macro
## dont indent the warmelt-macro+meltdesc.c or warmelt-macro+melttime.h ::: melt-build.tpl:829/1034
	cp $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-macro+meltdesc.c > $(srcdir)/melt/generated/warmelt-macro+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-macro+melttime.h  $(MELT_LAST_STAGE)/warmelt-macro+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-macro+melttime.h > $(srcdir)/melt/generated/warmelt-macro+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-macro.c $(MELT_LAST_STAGE)/warmelt-macro+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-macro*.so $(MELT_STAGE_ZERO)/warmelt-macro*.c
#@ melt-build.tpl:848/1035
#

#@ melt-build.tpl:827/1036
	@echo upgrading MELT translator warmelt-normal
## dont indent the warmelt-normal+meltdesc.c or warmelt-normal+melttime.h ::: melt-build.tpl:829/1037
	cp $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normal+meltdesc.c > $(srcdir)/melt/generated/warmelt-normal+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-normal+melttime.h  $(MELT_LAST_STAGE)/warmelt-normal+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normal+melttime.h > $(srcdir)/melt/generated/warmelt-normal+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-normal.c $(MELT_LAST_STAGE)/warmelt-normal+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-normal*.so $(MELT_STAGE_ZERO)/warmelt-normal*.c
#@ melt-build.tpl:848/1038
#

#@ melt-build.tpl:827/1039
	@echo upgrading MELT translator warmelt-normatch
## dont indent the warmelt-normatch+meltdesc.c or warmelt-normatch+melttime.h ::: melt-build.tpl:829/1040
	cp $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normatch+meltdesc.c > $(srcdir)/melt/generated/warmelt-normatch+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h  $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-normatch+melttime.h > $(srcdir)/melt/generated/warmelt-normatch+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-normatch.c $(MELT_LAST_STAGE)/warmelt-normatch+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-normatch*.so $(MELT_STAGE_ZERO)/warmelt-normatch*.c
#@ melt-build.tpl:848/1041
#

#@ melt-build.tpl:827/1042
	@echo upgrading MELT translator warmelt-genobj
## dont indent the warmelt-genobj+meltdesc.c or warmelt-genobj+melttime.h ::: melt-build.tpl:829/1043
	cp $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-genobj+meltdesc.c > $(srcdir)/melt/generated/warmelt-genobj+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h  $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-genobj+melttime.h > $(srcdir)/melt/generated/warmelt-genobj+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-genobj.c $(MELT_LAST_STAGE)/warmelt-genobj+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-genobj*.so $(MELT_STAGE_ZERO)/warmelt-genobj*.c
#@ melt-build.tpl:848/1044
#

#@ melt-build.tpl:827/1045
	@echo upgrading MELT translator warmelt-outobj
## dont indent the warmelt-outobj+meltdesc.c or warmelt-outobj+melttime.h ::: melt-build.tpl:829/1046
	cp $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-outobj+meltdesc.c > $(srcdir)/melt/generated/warmelt-outobj+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h  $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-outobj+melttime.h > $(srcdir)/melt/generated/warmelt-outobj+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-outobj.c $(MELT_LAST_STAGE)/warmelt-outobj+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-outobj*.so $(MELT_STAGE_ZERO)/warmelt-outobj*.c
#@ melt-build.tpl:848/1047
#

#@ melt-build.tpl:827/1048
	@echo upgrading MELT translator warmelt-modes
## dont indent the warmelt-modes+meltdesc.c or warmelt-modes+melttime.h ::: melt-build.tpl:829/1049
	cp $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c  $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-modes+meltdesc.c > $(srcdir)/melt/generated/warmelt-modes+meltdesc.c 
	cp $(MELT_LAST_STAGE)/warmelt-modes+melttime.h  $(MELT_LAST_STAGE)/warmelt-modes+melttime.h~; \
	sed s/$(MELT_LAST_STAGE)/MELT-STAGE-ZERO/g $(MELT_LAST_STAGE)/warmelt-modes+melttime.h > $(srcdir)/melt/generated/warmelt-modes+melttime.h 
	for f in $(MELT_LAST_STAGE)/warmelt-modes.c $(MELT_LAST_STAGE)/warmelt-modes+[0-9]*.c ; do \
	  bf=`basename $$f`; \
	  rm -f $(srcdir)/melt/generated/$$bf-tmp; \
          grep -v '^#line' < $$f \
            | unifdef -UMELTGCC_NOLINENUMBERING | indent \
                 > $(srcdir)/melt/generated/$$bf-tmp; \
	  ls -l $(srcdir)/melt/generated/$$bf-tmp; \
	  if [ -f $(srcdir)/melt/generated/$$bf ]; then \
             $(melt_move_if_change) $(srcdir)/melt/generated/$$bf $(srcdir)/melt/generated/$$bf~ ; \
	  fi ; \
	  $(melt_move_if_change) $(srcdir)/melt/generated/$$bf-tmp \
                     $(srcdir)/melt/generated/$$bf ; \
        done
	rm -f $(MELT_STAGE_ZERO)/warmelt-modes*.so $(MELT_STAGE_ZERO)/warmelt-modes*.c
#@ melt-build.tpl:848/1050
#

	cp -v meltrunsup*.[ch]   $(srcdir)/melt/generated/
#@ melt-build.tpl:852/1051





### Generated MELT documentation
#@ melt-build.tpl:859/1052
meltgendoc.texi: $(melt_default_modules_list).modlis \
                    melt-sources/warmelt-first.melt \
                    melt-sources/warmelt-base.melt \
                    melt-sources/warmelt-debug.melt \
                    melt-sources/warmelt-macro.melt \
                    melt-sources/warmelt-normal.melt \
                    melt-sources/warmelt-normatch.melt \
                    melt-sources/warmelt-genobj.melt \
                    melt-sources/warmelt-outobj.melt \
                    melt-sources/warmelt-modes.melt \
                    melt-sources/xtramelt-ana-base.melt \
                    melt-sources/xtramelt-ana-tree.melt \
                    melt-sources/xtramelt-ana-gimple.melt \
                    melt-sources/xtramelt-probe.melt \
                    melt-sources/xtramelt-ana-simple.melt \
                    melt-sources/xtramelt-c-generator.melt \
                    melt-sources/xtramelt-opengpu.melt \
                    empty-file-for-melt.c melt-run.h melt-runtime.h \
                    $(melt_make_cc1_dependency)
	echo $(melt_make_cc1flags) $(meltarg_mode)=makedoc  \
	      $(meltarg_makefile)=$(melt_make_module_makefile) \
	      $(meltarg_makecmd)=$(MAKE) \
	      $(meltarg_workdir)=melt-workdir  $(meltarg_genworklink) $(meltarg_bootstrapping)  $(MELT_DEBUG) \
	      $(meltarg_init)=@$(melt_default_modules_list) \
	      $(meltarg_module_path)=$(realpath melt-modules):. \
	      $(meltarg_source_path)=$(realpath melt-sources):. \
	      $(meltarg_output)=$(basename $@).texi  \
              $(meltarg_arglist)=warmelt-first.melt,warmelt-base.melt,warmelt-debug.melt,warmelt-macro.melt,warmelt-normal.melt,warmelt-normatch.melt,warmelt-genobj.melt,warmelt-outobj.melt,warmelt-modes.melt,\
xtramelt-ana-base.melt,xtramelt-ana-tree.melt,xtramelt-ana-gimple.melt,xtramelt-probe.melt,xtramelt-ana-simple.melt,xtramelt-c-generator.melt,xtramelt-opengpu.melt \
              empty-file-for-melt.c > $(notdir $(basename $@)).args-tmp
	$(melt_move_if_change) $(notdir $(basename $@)).args-tmp  $(notdir $(basename $@)).args
	@echo; echo; echo; echo -n $(notdir $(basename $@)).args: ; cat $(notdir $(basename $@)).args ; echo "***** doing " $@
	$(MELT_RUNNER) $(melt_make_cc1) @$(notdir $(basename $@)).args





### MELT cleanup  melt-build.tpl:884/1053
.PHONY: melt-clean
melt-clean:
	rm -rf *melt*.args melt-workdir melt-stage0-* melt-sayhello* \
               $(wildcard *melt-*.stamp) \
	       melt-run.h *melt*.o *melt*.so melt*~ meltgen*.texi melt-default* \
           melt-stage1  \
           melt-stage2  \
           melt-stage3  \
               melt-sources melt-modules

#@ melt-build.tpl:893/1054
## eof melt-build.mk generated from melt-build.tpl & melt-melt-build.def
