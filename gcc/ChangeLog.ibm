2016-05-17  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236325.
	* REVISION: Update subversion id.

	* doc/md.texi (Machine Constraints): Update for splat/xxspltib patches.
	* config/rs6000/constraints.md (wM constraint): Likewise.
	* config/rs6000/predicates.md (xxspltib_constant_split): Likewise.
	(xxspltib_constant_nosplit): Likewise.
	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Likewise.
	* config/rs6000/vsx.md (xxspltib_v16qi): Likewise.
	(vsx_mov<mode>_64bit): Likewise.
	(vsx_mov<mode>_32bit): Likewise.

2016-05-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<fsf submission for word splat/xxspltib>
	PR target/70915
	* config/rs6000/constraints.md (wE constraint): New constraint
	for a vector constant that can be loaded with XXSPLTIB.
	(wM constraint): New constraint for a vector constant of a 1's.
	(wS constraint): New constraint for a vector constant that can be
	loaded with XXSPLTIB and a vector sign extend instruction.
	* config/rs6000/predicates.md (xxspltib_constant_split): New
	predicates for wE/wS constraints.
	(xxspltib_constant_nosplit): Likewise.
	(easy_vector_constant): Add support for constants that can be
	loaded via XXSPLTIB.
	(all_ones_constant): New predicate for vector constant with all
	1's set.
	(splat_input_operand): Add support for ISA 3.0 word splat
	operations.
	* config/rs6000/rs6000-protos.h (xxspltib_constant_p): Add
	declaration.
	* config/rs6000/rs6000.c (xxspltib_constant_p): New function to
	return if a constant can be loaded with the ISA 3.0 XXSPLTIB
	instruction and possibly with a sign extension.
	(output_vec_const_move): Add support for XXSPLTIB. If we are
	loading up 0/-1 into Altivec registers, prefer using VSPLTISW
	instead of XXLXOR/XXLORC.
	(rs6000_expand_vector_init): Add support for ISA 3.0 word splat
	operations.
	(rs6000_legitimize_reload_address): Likewise.
	(rs6000_output_move_128bit): Use output_vec_const_move to emit
	constants.
	* config/rs6000/vsx.md (VSX_M): Add TImode (if -mvsx-timode) and
	combine VSX_M and VSX_M2 into one iterator.
	(VSX_M2): Likewise.
	(VSINT_84): New iterators for loading constants with XXSPLTIB.
	(VSINT_842): Likewise.
	(UNSPEC_VSX_SIGN_EXTEND): New UNSPEC.
	(xxspltib_v16qi): New insns to load up constants with the ISA 3.0
	XXSPLTIB instruction.
	(xxspltib_<mode>_nosplit): Likewise.
	(xxspltib_<mode>_split): New insn to load up constants with
	XXSPLTIB and a sign extend instruction.
	(vsx_mov<mode>): Replace single move that handled all vector types
	with separate 32-bit and 64-bit moves.  Combine the movti_<bit>
	moves (when -mvsx-timode is in effect) into the main vector
	moves.  Eliminate separate moves for <VSr> <VSa>, where the
	preferred register class (<VSr>) is listed first, and the
	secondary register class (<VSa>) is listed second with a '?' to
	discourage use.  Prefer loading 0/-1 in any VSX register for ISA
	3.0, and Altivec registers for ISA 2.06/2.07 (PR target/70915) so
	that if the register was involved in a slow operation, the
	clear/set operation does not wait for the slow operation to
	finish.  Adjust the length attributes for 32-bit mode.  Use
	rs6000_output_move_128bit and drop the use of the string
	instructions for 32-bit movti when -mvsx-timode is in effect.  Use
	spacing so that the alternatives and attributes don't generate
	long lines, and put things in columns, so that it is easier to
	match up the operands and attributes with the insn alternatives.
	(vsx_mov<mode>_64bit): Likewise.
	(vsx_mov<mode>_32bit): Likewise.
	(vsx_movti_64bit): Fold movti into normal vector moves.
	(vsx_movti_32bit): Likewise.
	(vsx_splat_<mode>, V4SI/V4SF modes): Add support for ISA 3.0 word
	spat instructions.
	(vsx_splat_v4si_internal): Likewise.
	(vsx_splat_v4sf_internal): Likewise.
	(vector fusion peepholes): Use VSX_M instead of VSX_M2.
	(vsx_sign_extend_qi_<mode>): New ISA 3.0 instructions to sign
	extend vector elements.
	(vsx_sign_extend_hi_<mode>): Likewise.
	(vsx_sign_extend_si_v2di): Likewise.
	* doc/md.texi (PowerPC constraints): Document wE, wM, and wS
	constraints.


2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236136.
	* REVISION: Update subversion id.

2016-05-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 235933.
	* REVISION: Update subversiond id.

2016-05-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_option_override_internal): Update
	code.

	* doc/invoke.texi (RS/6000 and PowerPC Options): Do not document
	-mpower9-dform-vector or -mpower9-dform-scalar.

	* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Do not add
	-mlra, -mvsx-timode or -mpower9-dform-vector.

	* config/rs6000/rs6000.opt (-mlra): Turn LRA into an option mask.
	(-mpower9-dform-scalar): Likewise.
	(-mpower9-dform-vector): Likewise.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Restore code
	to print LRA status.
	(rs6000_option_override_internal): Rework error messages to only
	mention -mpower9-dform and not -mpower9-dform-{scalar,vector}.
	Set -mpower9-dform-vector if -mlra and -mcpu=power9.
	(rs6000_opt_masks): Remove "LRA".

2016-05-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Don't set
	-mvsx-timode here.
	(ISA_3_0_MASKS_SERVER): Set -mvsx-timode -mlra.
	(POWERPC_MASKS): Replace -mno-lra with -mlra.

	* config/rs6000/rs6000.opt (-mlra): Rework.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Don't print
	LRA status, since it is now printed as an option mask.
	(rs6000_option_override_internal): Rework setting LRA.
	(legitimate_lo_sum_address_p): Fix a comment.
	(rs6000_opt_masks): Update -mlra.

2016-05-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* stor-layout.c (layout_type): Merge back changes made for adding
	__float128 complex support into the compiler.
	* fortran/trans-types.c (gfc_build_complex_type): Likewise.
	* config/rs6000/rs6000.c (rs6000_setup_reg_addr_masks): Likewise.
	(rs6000_preferred_reload_class): Likewise.
	(rs6000_complex_function_value): Likewise.
	* config/rs6000/rs6000.h (ALTIVEC_COMPLEX): Likewise.
	(ALTIVEC_ARG_MAX_RETURN): Likewise.

2016-04-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 235590.
	* REVISION: Update subversion id.

2016-04-18  Kelvin Nilsen  <kelvin@gcc.gnu.org>

	* doc/extend.texi: Add documentation for the vec_adu(),
	vec_adub(), vec_aduh(), and vec_aduw() built-ins.
	* config/rs6000/rs6000.h (MASK_P9_VECTOR): New macro definition.
	This change is redundant with a previously merged patch.
	(RS6000_BTM_P9_VECTOR): Correct error in previous definition of
	this macro.  This change is redundant with a previously merged patch.
	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Added
	three P9V_BUILTIN_VEC_VADU entries for three overloaded variants
	of the builtin_vec_vadu() function and P9V_BUILTIN_VEC_VADUB,
	P9V_BUILTIN_VEC_VADUH, and P9V_BUILTIN_VEC_VADUW entries for the
	builtin_vec_vadub(), builtin_vec_vaduh(), and builtin_vec_vaduw()
	functions.
	* config/rs6000/rs6000-builtin.def: Add macro expansions for
	__builtin_altivec_vadub, __builtin_altivec_vaduh, and
	__builtin_altivec_vaduw, and for overloaded functions
	__builtin_vec_vadu, __builtin_vec_vadub, __builtin_vec_vaduh, and
	__builtin_vec_vaduw.
	* config/rs6000/altivec.md (UNSPEC_VADU): New unspec constant.
	("vadu<mode>3"): New expand pattern.
	("*p9_vadu<mode>3"): New insn pattern.
	* config/rs6000/altivec.h (vec_adu): New macro definition.
	(vec_adub): New macro definition.
	(vec_aduh): New macro definition.
	(vec_aduw): new macro definition.

2016-04-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Rebase branch to subversion id 235167 after gcc-6-branch
	was split off.
	* REVISION: Update subversion id.

2016-04-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 235033 (last subversion id before gcc-6-branch
	created).
	* REVISION: Update subversion id.

2016-04-15  Kelvin Nilsen  <kelvin@gcc.gnu.org>

	* config/rs6000/rs6000.h (RS6000_BTM_COMMON): Add the
	RS6000_BTM_MODULO flag into the set of flags that are considered
	to be part of the common configuration.

2016-04-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_split_signbit): New function to
	split the signbit insns.

	* config/rs6000/rs6000.md (UNSPEC_SIGNBIT): Improve signbit
	built-in function support on 64-bit systems with direct move.  Add
	support for __float128 signbit.
	(SIGNBIT mode iterator): Likewise.
	(Fsignbit mode attribute): Likewise.
	(signbit<mode>2, iterator FLOAT128): Likewise.
	(signbit<mode>2, iterator SFDF): Likewise.
	(signbit<mode>2_dm): Likewise.
	(signbit_<u>di_<mode>2_dm): Likewise.
	(signbit<mode>2_dm2): Likewise.
	(inf<mode>2, iterator SFDF): Add support for isinf built-in
	function on 64-bit machines with direct move.
	(inf<mode>2, iterator FLOAT128): Likewise.

	* config/rs6000/rs6000.c (rs6000_split_signbit): Add declaration.

2016-04-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234995.
	* REVISION: Update subversion id.

2016-04-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234910.
	* REVISION: Update subversion id.

2016-04-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234884.
	* REVISION: Update subversion id.

2016-04-11  Kelvin Nilsen  <kelvin@gcc.gnu.org>

	* doc/extend.texi: Add documentation of the vec_slv and vec_srv
	builtin functions.
	* config/rs6000/altivec.h (vec_slv): New macro definition.
	(vec_srv): New macro definition.
	* config/rs6000/rs6000.h (MASK_P9_VECTOR): New macro definition.
	(RS6000_BTM_P9_VECTOR): Correct error in previous definition of
	this macro.
	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
	table entries for P9V_BUILTIN_VEC_VSLV and P9V_BUILTIN_VEC_VSRV.
	* config/rs6000/rs6000-builtin.def: Add macro expansions for
	"__builtin_altivec_vslv" and "__builtin_altivec_vslr" and overload
	entries for "__builtin_vec_vslv" and "__builtin_vec_vsrv"
	* config/rs6000/altivec.md (UNSPEC_VSLV): New unspec constant.
	(UNSPEC_VSRV): New unspec constant.
	("vslv") New insn pattern.
	("vsrv") New insn pattern.

2016-04-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* machmode.h (mode_complex): Add support to give the complex mode
	for a given mode.
	(GET_MODE_COMPLEX_MODE): Likewise.

	* stor-layout.c (layout_type): For COMPLEX_TYPE, use the mode
	stored by build_complex_type instead of trying to figure out the
	appropriate mode based on the size.

	* genmodes.c (struct mode_data): Add field for the complex type of
	the given type.
	(blank_mode): Likewise.
	(make_complex_modes): Remember the complex mode created in the
	base type.
	(emit_mode_complex): Write out the mode_complex array to map a
	type mode to the complex version.
	(emit_insn_modes_c): Likewise.

	* config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal): Add
	support for __float128 complex datatypes.
	(rs6000_hard_regno_mode_ok): Likewise.
	(rs6000_setup_reg_addr_masks): Likewise.
	(rs6000_complex_function_value): Likewise.

	* config/rs6000/rs6000.h (FLOAT128_IEEE_P): Add support for
	__float128 and __ibm128 complex.
	(FLOAT128_IBM_P): Likewise.
	(ALTIVEC_COMPLEX): Likewise.
	(ALTIVEC_ARG_MAX_RETURN): Likewise.

	* doc/extend.texi (Additional Floating Types): Document that
	-mfloat128 must be used to enable __float128.  Document complex
	__float128 and __ibm128 support.

2016-04-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/70589
	* config/rs6000/rs6000.c (rs6000_opt_masks): Disable using the
	target attribute and pragma from changing the -mfloat128
	and -mfloat128-hardware options.

	* doc/extend.texi (Additional Floating Types): Document PowerPC
	__float128 restrictions.

2016-03-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234598.
	* REVISION: Update subversion id.

2016-03-30  Kelvin Nilsen  <kelvin@gcc.gnu.org>

	* doc/extend.texi: Document __builtin_darn (void),
	__builtin_darn_raw (void), and __builtin_darn_32 (void) built-in
	functions.
	* config/rs6000/rs6000.c: Add #define RS6000_BUILTIN_0 and #undef
	RS6000_BUILTIN_0 directives to surround each occurrence of
	#include "rs6000-bultin.def".
	(rs6000_builtin_mask_calculate): Add in the RS6000_BTM_MODULO and
	RS6000_BTM_64BIT flags to the returned mask, depending on
	configuration.
	(def_builtin): Correct an error in the assignments made to the
	debugging variable attr_string.
	(rs6000_expand_builtin): Add support for no-operand built-in
	functions.
	(builtin_function_type): Remove fatal_error assertion that is no
	longer valid.
	(rs6000_common_init_builtins): Add support for no-operand built-in
	functions.
	* config/rs6000/altivec.h: Add macro definitions for darn,
	darn_32, and darn_raw.
	* config/rs6000/rs6000.h (RS6000_BTM_MODULO): New macro
	definition.
	(RS6000_BTC_PURE): Enhance comment associated with this macro
	definition.
	(RS6000_BTM_64BIT): New macro definition.
	* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_0): Introduce
	use and documentation of this new macro.
	(BU_B9_MISC_1): New macro definition.
	(BU_P9_64BIT_MISC_0): New macro definition.
	(BU_P9_MISC_0): New macro definition.
	("darn_32"): New builtin definition.
	("darn_raw"): New builtin definition.
	("darn"): New builtin.
	* config/rs6000/altivec.md (UNSPEC_DARN): New unspec constant.
	(UNSPEC_DARN_32): New unspec constant.
	(UNSPEC_DARN_RAW): New unspec constant.
	("darn_32): New instruction.
	("darn_raw"): New instruction.
	("darn"): New instruction.

2016-03-22  Kelvin Nilsen  <kelvin@gcc.gnu.org>

	* config/rs6000/altivec.md: (UNSPEC_VPERMR): New unspec constant.
        (*altivecvpermr_<mode>_internal): New insn.
	* config/rs6000/rs6000.c (rs6000_expand_vector_set): If
        !BYTES_BIG_ENDIAN and TARGET_P9_VECTOR, expand using template that
        translates into new xxpermr or vpermr instructions.
	(altivec_expand_vec_perm_le): if TARGET_P9_VECTOR, expand using
        template that translates into new xxpermr or vpermr instructions.

2016-03-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/altivec.md (altivec_vperm_<mode>_internal): Remove
	the fusion support.
	(altivec_vperm_v8hiv16qi): Likewise.
	(altivec_vperm_<mode>_uns): Likewise.
	(vec_permv16qi): Likewise.
	(vperm_v8hiv4si): Likewise.
	(vperm_v16qiv8hi): Likewise.

2016-03-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234194.
	* REVISION: Update subversion id.

2016-03-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 234152.
	* REVISION: Update subversion id.

	* config/rs6000/vsx.md (vsx_sign_extend_hi_<mode>): Do not provide
	a generator function until it is needed.
	(vsx_sign_extend_si_v2di): Rename, and turn off making a generator
	function.

	* config/rs6000/rs6000.md (floatsi<mode>2_lfiwax): Use wi
	constraint, instead of wj.  Combine alterantives for patterns that
	ultimately spilt the insns.
	(floatsi<mode>2_lfiwax_mem): Likewise.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(floatunssi<mode>2_lfiwzx): Likewise.
	(fix_trunc<mode>si2): Fix comment.
	(fix_trunc<mode>di2_fctidz): Use <Fv> instead of <Fa> to allow for
	either the int or floating point to be in an Altivec register.
	(fixuns_trunc<mode>di2_fctiduz): Likewise.

	PR target/70131
	* config/rs6000/rs6000.md (round32<mode>2_fprs): Do not do the
	optimization if we have direct move.
	(roundu32<mode>2_fprs): Likewise.

2016-03-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md (wE constraint): Vext* instructions
	require Altivec registers.
	* config/rs6000/predicates.md (easy_p9_constant_split): Likewise.
	(easy_vector_constant): Likewise.
	* config/rs6000/rs6000-protos.h (easy_p9_constant): Likewise.
	* config/rs6000/rs6000.c (easy_p9_constant): Likewise.
	(output_vec_const_move): Likewise.
	(rs6000_output_move_128bit): Likewise.
	* config/rs6000/vsx.md (vsx_mov<mode>_64bit): Likewise.
	(vsx_mov<mode>_32bit): Likewise.
	(vsx_movti_64bit): Likewise.
	(vsx_movti_32bit): Likewise.
	(vsx_sign_extend_qi_<mode>): Likewise.
	(vsx_sign_extend_hi_<mode>): Likewise.
	(vsx_sign_extend_si_<mode>): Likewise.
	(xxsplitb): Likewise.
	(ISA 3.0 easy constant splitter): Likewise.

	* config/rs6000/constraints.md (wE constraint): New constraint for
	ISA 3.0 easy constants.

	* config/rs6000/predicates.md (easy_p9_constant_split): New
	predicate for ISA 3.0 easy constants that need splitting.
	(easy_vector_constant): Add support for vector constant of all 1's
	and for ISA 3.0 easy constants.

	* config/rs6000/rs6000-protos.h (easy_p9_constant): Add
	declaration.

	* config/rs6000/rs6000.c (easy_p9_constant): New function to
	return if we can load up a vector constant with split immediate
	byte and vector sign extend instructions.
	(output_vec_const_move): Add support for easy ISA 3.0 vector
	constants and ISA 2.07 loading a vector with all 1's.
	(rs6000_output_move_128bit): Likewise.

	* config/rs6000/vsx.md (vsx_mov<mode>_64bit): Add support for new
	ISA 2.07 and 3.0 easy constants.
	(vsx_mov<mode>_32bit): Likewise.
	(vsx_movti_64bit): Likewise.
	(vsx_movti_32bit): Likewise.
	(vsx_sign_extend_qi_<mode>): ISA 3.0 vector sign extend support.
	(vsx_sign_extend_hi_<mode>): Likewise.
	(vsx_sign_extend_si_<mode>): Likewise.
	(xxsplitb): Generator for XXSPLITB instruction.
	(ISA 3.0 easy constant splitter): Split ISA 3.0 easy constants.

2016-03-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Add support
	for ISA 3.0 word splat instructions.
	* config/rs6000/vsx.md (vsx_splat_v4si): Likewise.
	(vsx_splat_v4sf): Likewise.

2016-03-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233919.
	* REVISION: Update subversion id.

2016-03-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (VEC_IP): Add support for vector
	versions of count trailing zeros and parity.
	(ctz<mode>2): Likewise.
	(parity<mode>2): Likewise.

	* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Turn on
	-mpower9-dform-vector by default for -mcpu=power9.

	* config/rs6000/rs6000-builtin.def (BU_P9V_AV_1): Add power9
	builtin support.
	(BU_P9V_AV_2): Likewise.
	(BU_P9V_AV_3): Likewise.
	(BU_P9V_AV_P): Likewise.
	(BU_P9V_VSX_1): Likewise.
	(BU_P9V_OVERLOAD_1): Likewise.
	(BU_P9V_OVERLOAD_2): Likewise.
	(BU_P9V_OVERLOAD_3): Likewise.
	(VCTZB): Add vector count trailing zero builtin functions.
	(VCTZH): Likewise.
	(VCTZW): Likewise.
	(VCTZD): Likewise.

	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add ISA
	3.0 vector count trailing zero built-in functions.

	* config/rs6000/rs6000.opt (-mlra): Mark option as undocumented.

	* config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Add
	support for ISA 3.0 vector count trailing zero built-in
	functions.
	(rs6000_invalid_builtin): Likewise.
	(rs6000_builtin_mask_names): Likewise.

	* config/rs6000/vsx.md (vsx_movti_32bit): Fix 2/29/2016 change to
	get the alternatives correct.

	* config/rs6000/rs6000.h (RS6000_BTM_P9_VECTOR): New macro for
	power9 built-in support.

	* config/rs6000/altivec.md (VParity): Add support for vector
	versions of count trailing zeros and parity.
	(VNEG): Add support for vnegd and vnegw.
	(p9_neg<mode>2): Likewise.
	(neg<mode>2): Add support for vnegd and vnegw.  Add support for
	negation of V2DImode.  Use xor to clear register instead of
	vsplitis.
	(p9v_ctz<mode>2): Add support for vector versions of count
	trailing zeros and parity.
	(p9v_parity<mode>2): Likewise.

	* config/rs6000/rs6000.md (wd attribute): Add V1TImode, TImode for
	vector parity.

	* config/rs6000/altivec.h (vec_vctz): Add count trailing zero
	vector defines.
	(vec_cntlz): Likewise.
	(vec_vctzb): Likewise.
	(vec_vctzd): Likewise.
	(vec_vctzh): Likewise.
	(vec_vctzw): Likewise.

	* doc/extend.texi (PowerPC AltiVec Built-in Functions): Document
	ISA 3.0 vector count trailing zeros built-in functions.

2016-02-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_debug_addr_mask): Add support for
	-mpower9-dform-vector.  Print more debug information if
	-mdebug=addr.
	(rs6000_setup_reg_addr_masks): Likewise.
	(offsettable_ok_by_alignment): Likewise.
	(rs6000_legitimate_offset_address_p): Likewise.
	(legitimate_lo_sum_address_p): Likewise.
	(rs6000_legitimize_address): Likewise.
	(rs6000_legitimize_reload_address): Likewise.
	(rs6000_legitimate_address_p): Likewise.
	(rs6000_secondary_reload_memory): Likewise.
	(rs6000_secondary_reload_inner): Likewise.
	(rs6000_preferred_reload_class): If a value can't go in vector
	registers, return NO_REGS if that class is asked for.  Add support
	for -mpower9-dform-vector.  If we haven't picked a register class
	yet, prefer VSX/FPR registers for vector and floating point types.
	(rs6000_emit_prologue): Add support for -mpower9-dform-vector.
	(rs6000_emit_epilogue): Likewise.

	* config/rs6000/vsx.md (p9_vecload_<mode>): Delete, fold into
	vsx_mov<mode>.
	(p9_vecstore_<mode>): Likewise.
	(vsx_mov<mode>): Split 128-bit VSX moves into 32-bit and 64-bit
	moves to get the length attributes correct.  Add support for
	-mpower9-dform-vector.
	(vsx_mov<mode>_64bit): Likewise.
	(vsx_mov<mode>_32bit): Likewise.
	(vsx_movti_64bit): Likewise.
	(vsx_movti_32bit): Likewise.

	* config/rs6000/constraints.md (wO constraint): New constraint for
	vector d-form (register + offset) addresses.

	* config/rs6000/predicates.md (vsx_quad_dform_memory_operand):
	Rename vsx_quad_memory_operand to vsx_quad_dform_memory_operand.
	(vsx_quad_memory_operand): Likewise.

2016-02-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_option_override_internal): If the
	user did -mno-lra, turn off default invocations of -mvsx-timode
	and -mpower9-dform-vector>.  If the user asked for the options
	explicitly issue a warning that these two options might have
	problems with reload.
	(rs6000_print_options_internal): Print -mdebug=reg options with
	wider columns.  Print all of the options, even those not
	selected.  Fix thinko in printing out built-in mask names.

2016-02-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233819.
	* REVISION: Update subversion id.

2016-02-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Make -mlra
	default for all cpus.
	(POWERPC_MASKS): Likewise.
	* config/rs6000/rs6000.opt (-mlra): Likewise.
	* config/rs6000/rs6000.c (rs6000_opt_masks): Likewise.

	* config/rs6000/rs6000.opt (-mlra): Convert -mlra into target bit
	instead of using a separate variable.
	* config/rs6000/rs6000.c (rs6000_lra_p): Likewise.
	(rs6000_opt_masks): Add -mlra as an option that is printed, but
	not available to be set.

	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Turn on
	the -mlra and -mvsx-timode options by default.
	(POWERPC_MASKS): Add -mlra.

2016-02-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233725.
	* REVISION: Update subversion id.

2016-02-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (quad_memory_operand): Rewrite to
	use quad_address_p.
	(vsx_quad_memory_operand): New predicate for VSX register + offset
	vector instructions added in ISA 3.0.

	* config/rs6000/rs6000-cpus.def (ISA_3_0_MASKS_SERVER): Split
	-mpower9-dform into -mpower9-dform-{scalar,vector}.
	(POWERPC_MASKS): Likewise.
	* config/rs6000/rs6000.opt (-mpower9-dform): Likewise.
	(-mpower9-dform-scalar): Likewise.
	(-mpower9-dform-vector): Likewise.

	* config/rs6000/rs6000-protos.h (quad_address_p): Add
	declaration.

	* config/rs6000/rs6000.c (mode_supports_vsx_dform_quad): New
	helper function for -mpower9-dform-vector support.
	(rs6000_debug_addr_mask): Add initial support for
	-mpower9-dform-vector.
	(rs6000_setup_reg_addr_masks): Don't allow small ints into FPR
	registers.  Add initial -mpower9-dform-vector support.
	(rs6000_init_hard_regno_mode_ok): Split -mpower9-dform into
	-mpower9-dform-{scalar,vector}.
	(rs6000_option_override_internal): Likewise.
	(quad_address_offset_p): Initial support for vector registers with
	register + offset addressing mode.
	(quad_address_p): Likewise.
	(rs6000_output_move_128bit): Likewise.
	(rs6000_emit_prologue): Widen offset field.
	(rs6000_opt_masks): Split -mpower9-dform into
	-mpower9-dform-{scalar,vector}.

	* doc/invoke.texi (RS/6000 and PowerPC Options):  Split
	-mpower9-dform into -mpower9-dform-{scalar,vector}.

2016-02-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233527.
	* REVISION: Update subversion id.

2016-02-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233147.
	* REVISION: Update subversion id.

2016-02-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 233120.
	* REVISION: Update subversion id.

2016-01-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 232906.
	* REVISION: Update subversion id.

2016-01-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (all_ones_constant): New predicate
	to recognize all 1's.
	(min_max_operator): Delete UMIN, UMAX since the only caller is for
	floating point comparison.
	(fpmask_comparison_operator): New predicate for comparisons that
	can generate a mask of all 0's or 1's.

	* config/rs6000/rs6000.c (print_operand): Add support for the ISA
	3.0 scalar min, max, and compare mask operations.
	(rs6000_emit_power9_minmax): Likewise.
	(rs6000_emit_power9_cmove): Likewise.
	(rs6000_emit_cmove): Likewise.

	* config/rs6000/rs6000.h (TARGET_MINMAX_SF): New macros to say
	whether we can generate floating point min/max.
	(TARGET_MINMAX_DF): Likewise.
	(PRINT_OPERAND_PUNCT_VALID_P): Add support for %@.

	* config/rs6000/rs6000.md (SF2): New iterator to simplify min/max
	support.
	(smax<mode>3): Rewrite generator to use SMAX or SMIN rtl.  Add
	support for ISA 3.0 min/max instructions that don't need
	-fno-trapping-math.
	(smax<mode>3_vsx): Likewise.
	(smax<mode>3_p9): Likewise.
	(smin<mode>3): Likewise.
	(smin<mode>3_vsx): Likewise.
	(smin<mode>3_p9): Likewise.
	(min/max splitters): Use new target tests.  Delete redundant
	min/max splitter.  If VSX, don't split.
	(movsfcc): Combine fp conditional move generators and fsel insns
	using SFDF and SFDF2 iterators.
	(movdfcc): Likewise.
	(mov<mode>cc): Likewise.
	(fselsfsf4): Likewise.
	(fselsfdf4): Likewise.
	(fseldfdf4): Likewise.
	(fseldfsf4): Likewise.
	(fsel<SFDF:mode><SFDF2:mode>4): Likewise.
	(mov<SFDF:mode><SFDF2:mode>cc_p9): Add support for ISA 3.0
	floating point conditional moves.
	(fpmask<mode>): Likewise.
	(xxsel<mode>): Likewise.

2016-01-21   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 232705
	* REVISION: New file, track merged subversion id.

2016-04-18   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 235167

