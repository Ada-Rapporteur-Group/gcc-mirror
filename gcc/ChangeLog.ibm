2017-03-27  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 246509.
	* REVISION: Update subversion id.

2017-03-27  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>

	Backport from trunk
	PR target/79449
	PR target/79170

	* gcc.dg/strncmp-2.c: New.  Test strncmp and memcmp builtin expansion
	for reading beyond a 4k boundary.
	* config/rs6000/rs6000.c (expand_block_compare): Make sure runtime
	boundary crossing check and subsequent code generation agree.
	* gcc.dg/memcmp-1.c: Improved to catch failures seen in PR 79170.
	* config/rs6000/altivec.md (*setb_internal): Rename to setb_signed.
	(setb_unsigned) New pattern for setb with CCUNS.
	* config/rs6000/rs6000.c (expand_block_compare): Use a different
	subfc./subfe sequence to avoid overflow problems.  Generate a
	shorter sequence with cmpld/setb for power9.
	* config/rs6000/rs6000.md (subf<mode>3_carry_dot2): Add a new pattern
	for generating subfc. instruction.
	(cmpstrsi): Add TARGET_POPCNTD predicate as the generate sequence
	now uses this instruction.
	* config/rs6000/rs6000-protos.h (expand_strn_compare): Add arg.
	* config/rs6000/rs6000.c (expand_strn_compare): Add ability to expand
	strcmp. Fix bug where comparison didn't stop with zero byte. Fix
	case where N arg is SIZE_MAX.
	* config/rs6000/rs6000.md (cmpstrnsi): Args to expand_strn_compare.
	(cmpstrsi): Add pattern.
	* gcc.dg/memcmp-1.c: New.
	* gcc.dg/strncmp-1.c: New.
	* config/rs6000/rs6000-protos.h (expand_strn_compare): Declare.
	* config/rs6000/rs6000.md (UNSPEC_CMPB): New unspec.
	(cmpb<mode>3): pattern for generating cmpb.
	(cmpstrnsi): pattern to expand strncmp ().
	* config/rs6000/rs6000.opt (mstring-compare-inline-limit): Add a new
	target option for controlling how much code inline expansion of
	strncmp() will be allowed to generate.
	* config/rs6000/rs6000.c (expand_strncmp_align_check): generate code
	for runtime page crossing check of strncmp () args.
	(expand_strn_compare): Function to do builtin expansion of strncmp ().
	* config/i386/i386.md (cmpstrnsi): New test to bail out if neither
	string input is a string constant.
	* builtins.c (expand_builtin_strncmp): Attempt expansion of strncmp
	via cmpstrnsi even if neither string is constant.

2017-03-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 246128.
	* REVISION: Update subversion id.

2017-01-10  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 244285.
	* REVISION: Update subversion id.

2017-01-10  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Back port from trunk
	2017-01-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/71977
	PR target/70568
	PR target/78823
	* config/rs6000/predicates.md (sf_subreg_operand): New predicate.
	(altivec_register_operand): Do not return true if the operand
	contains a SUBREG mixing SImode and SFmode.
	(vsx_register_operand): Likewise.
	(vsx_reg_sfsubreg_ok): New predicate.
	(vfloat_operand): Do not return true if the operand contains a
	SUBREG mixing SImode and SFmode.
	(vint_operand): Likewise.
	(vlogical_operand): Likewise.
	(gpc_reg_operand): Likewise.
	(int_reg_operand): Likewise.
	* config/rs6000/rs6000-protos.h (valid_sf_si_move): Add declaration.
	* config/rs6000/rs6000.c (valid_sf_si_move): New function to
	determine if a MOVSI or MOVSF operation contains SUBREGs that mix
	SImode and SFmode.
	(rs6000_emit_move_si_sf_subreg): New helper function.
	(rs6000_emit_move): Call rs6000_emit_move_si_sf_subreg to possbily
	fixup SUBREGs involving SImode and SFmode.
	* config/rs6000/vsx.md (SFBOOL_*): New constants that are operand
	numbers for the new peephole2 optimization.
	(peephole2 for SFmode unions): New peephole2 to optimize cases in
	the GLIBC math library that do AND/IOR/XOR operations on single
	precision floating point.
	* config/rs6000/rs6000.h (TARGET_NO_SF_SUBREG): New internal
	target macros to say whether we need to avoid SUBREGs mixing
	SImode and SFmode.
	(TARGET_ALLOW_SF_SUBREG): Likewise.
	* config/rs6000/rs6000.md (UNSPEC_SF_FROM_SI): New unspecs.
	(UNSPEC_SI_FROM_SF): Likewise.
	(iorxor): Change spacing.
	(and_ior_xor): New iterator for AND, IOR, and XOR.
	(movsi_from_sf): New insns for SImode/SFmode SUBREG support.
	(movdi_from_sf_zero_ext): Likewise.
	(mov<mode>_hardfloat, FMOVE32 iterator): Use register_operand
	instead of gpc_reg_operand.  Add SImode/SFmode SUBREG support.
	(movsf_from_si): New insn for SImode/SFmode SUBREG support.
	(fma<mode>4): Use gpc_reg_operand instead of register_operand.
	(fms<mode>4): Likewise.
	(fnma<mode>4): Likewise.
	(fnms<mode>4): Likewise.
	(nfma<mode>4): Likewise.
	(nfms<mode>4): Likewise.

	* config/rs6000/rs6000.h (TARGET_DIRECT_MOVE_64BIT): Define macro
	used by the above patch in a limited form.
	* config/rs6000/vsx.md (peephole2 for SFmode unions): Use DFmode
	for doing direct moves instead of DImode, since GCC 6.x does not
	support DImode in Altivec registers.

2016-12-15  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 243710.
	* REVISION: Update subversion id.

2016-12-13  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 243626.
	* REVISION: Update subversion id.

2016-12-05  Segher Boessenkool  <segher@kernel.crashing.org>

	Backport the swdiv improvement.

2016-12-05  Segher Boessenkool  <segher@kernel.crashing.org>

	Separate shrink-wrapping.

The rs6000.c patch needed a little adjustment: GCC 6 does not have
SAVE_MULTIPLE.  I regression tested this, everything passed (and a
few failures no longer trigger).

2016-12-05  Segher Boessenkool  <segher@kernel.crashing.org>

	Preparation for separate shrink-wrapping, step 2

2016-12-05  Segher Boessenkool  <segher@kernel.crashing.org>

	Preparation for separate shrink-wrapping, step 1

2016-12-01  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 243130.
	* REVISION: Update subversion id.

2016-12-01  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>

	Backport from mainline
	2016-09-23  Aaron Sawdey  <acsawdey@linux.vnet.ibm.com>

	* config/rs6000/rs6000.md (cmpmemsi): New define_expand.
	* config/rs6000/rs6000.c (expand_block_compare): New function used by
	cmpmemsi pattern to do builtin expansion of memcmp ().
	(compute_current_alignment): Add helper function for
	expand_block_compare used to compute alignment as the compare proceeds.
	(select_block_compare_mode): Used by expand_block_compare to select
	the mode used for reading the next chunk of bytes in the compare.
	(do_load_for_compare): Used by expand_block_compare to emit the load
	insns for the compare.
	(rs6000_emit_dot_insn): Moved this function to avoid a forward
	reference from expand_block_compare ().
	* config/rs6000/rs6000-protos.h (expand_block_compare): Add a
	prototype for this function.
	* config/rs6000/rs6000.opt (mblock-compare-inline-limit): Add a new
	target option for controlling how much code inline expansion of
	memcmp() will be allowed to generate.
	* config/rs6000/rs6000.h (TARGET_EFFICIENT_OVERLAPPING_UNALIGNED):
	Add macro to say we can efficiently handle overlapping unaligned
	loads.

2016-11-30  Pat Haugen  <pthaugen@us.ibm.com>

	Backport from mainline
	2016-09-13  Pat Haugen  <pthaugen@us.ibm.com>

	PR tree-optimization/77536
	PR rtl-optimization/68212
	* config/rs6000/rs6000.md (div->recip splitter): Remove
	optimize_insn_for_speed_p condition.

2016-11-07  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 241939.
	* REVISION: Update subversion id.

2016-10-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 240874.
	* REVISION: Update subversion id.

2016-08-22  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 239677.
	* REVISION: Update subversion id.

2016-08-10  Peter Bergner  <bergner@vnet.ibm.com>

	Merge up to 239331.
	* REVISION: Update subversion id.

2016-08-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 239155.
	* REVISION: Update subversion id.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238258.
	* REVISION: Update subversion id.

2016-06-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237401.
	* REVISION: Update subversion id.

2016-04-28   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 235611

