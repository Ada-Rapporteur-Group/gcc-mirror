/* This file contains the definitions and documentation for the
   coroutines builtins used in GCC.

   Copyright (C) 2018-2019 Free Software Foundation, Inc.

 Contributed by Iain Sandoe <iain@sandoe.co.uk> under contract to Facebook.

This file is part of GCC.

GCC is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free
Software Foundation; either version 3, or (at your option) any later
version.

GCC is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or
FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
for more details.

You should have received a copy of the GNU General Public License
along with GCC; see the file COPYING3.  If not see
<http://www.gnu.org/licenses/>.  */

/* Before including this file, you should define a macro:

     DEF_BUILTIN_STUB(ENUM, NAME)
     DEF_COROUTINE_BUILTIN (ENUM, NAME, TYPE, ATTRS)

   See builtins.def for details.
   The builtins are created used by library implementations of C++
   coroutines.  */

/* This has to come before all the coroutine builtins.  */
DEF_BUILTIN_STUB(BEGIN_COROUTINE_BUILTINS, (const char *)0)

DEF_COROUTINE_BUILTIN(BUILT_IN_CORO_PROMISE, "promise",
		      BT_FN_PTR_PTR_SIZE_BOOL, ATTR_CONST_NOTHROW_LEAF_LIST)

DEF_COROUTINE_BUILTIN(BUILT_IN_CORO_RESUME, "resume",
		      BT_FN_VOID_PTR, ATTR_NULL)

DEF_COROUTINE_BUILTIN(BUILT_IN_CORO_DESTROY, "destroy",
		      BT_FN_VOID_PTR, ATTR_NULL)

DEF_COROUTINE_BUILTIN(BUILT_IN_CORO_DONE, "done",
		      BT_FN_BOOL_PTR, ATTR_NOTHROW_LEAF_LIST)

DEF_COROUTINE_BUILTIN(BUILT_IN_CORO_NOOP, "noop",
		      BT_FN_PTR, ATTR_CONST_NOTHROW_LEAF_LIST)

/* Clang impl also defines these - but so far unused in this impl.
 size_t __builtin_coro_size,() nothrow
 void * __builtin_coro_frame() nothrow
 void * __builtin_coro_free(void *) nothrow
 void * __builtin_coro_id(const int, void *, void *, void *) nothrow
 bool __builtin_coro_alloc() nothrow
 void * __builtin_coro_begin(void *) nothrow
 bool __builtin_coro_end(void *, const bool) nothrow
 char __builtin_coro_suspend(const bool) nothrow
 bool __builtin_coro_param(void *, void *) nothrow
 */

/* This has to come after all the coroutine builtins.  */
DEF_BUILTIN_STUB(END_COROUTINE_BUILTINS, (const char *)0)
