2014-12-19  Andrew MacLeod  <amacleod@redhat.com>

	* tree-core.h (enum tree_index): Remove TI_* labels for types.
	(enum type_index): New. Move and rename TI_ to TPI_ for types. 
	(ttype, const_ttype): New.  Aliases for union tree_node.
	(struct tree_typed): Make type a ttype.
	(struct tree_type_common): Use ttype where appropriate, restructure
	names to make TREE_* macros work on a direct pointer.
	(integer_types, sizetype_tab): Array of ttype now.
	(global_types): New.  Vector for types that were in global_trees[].
	* tree.h 
	(error_type_node): New.  Error marking for types.
	(*_type_node): Refer to golbal_type not global_tree array.
	(ptrofftype_p): Make type parameter ttype.
	(wi::fits_to_tree_p, wi:: min_value, wi::max_value) Change type 
	parameter to const_ttype.
	* tree.c (global_types): Declare global vector of ttype.
	* tree-streamer.c (preload_common_nodes): Load types then trees.
	* lto/lto.c (read_cgraph_and_symbols): Register canonical types.
	* fold-const.h (fold_build2_stat_loc, fold_convert_loc): Change type
	parameter in prototype to ttype.
	* fold-const.c (fold_build2_stat_loc, fold_convert_loc): Change type
	parameter to ttype.
	* config/spu/spu.c (spu_builtin_types): Change vector elements to
	ttype.
	(spu_init_builtins): Use new tree_index TPI_ values rather than
	tree_index TI_ values.
	* ada/gcc-interface/gigi.h: (VECTOR_TYPE_P): Remove odd duplicate macro.

2014-12-19  Andrew MacLeod <amacleod@redhat.com>

	* builtins.c (fold_builtin_atomic_always_lock_free): Don't use ttype as
	a variable name.
	* config/sol2-c.c (solaris_pragma_align, solaris_pragma_init,
	solaris_pragma_fini): Likewise.
	* cp/decl.c (layout_var_decl): Likewise.
	* cp/error.c (dump_expr): Likewise.
	* except.c (output_ttype): Rename to output_tt.
	(output_one_function_exception_table): call output_tt.
	* lto-streamer-in.c (input_eh_regions): Don't use ttype as a variable
	name.  
	* lto-streamer-out.c (output_eh_regions): Likewise.
	* tree.c (build_type_attribute_qual_variant): Likewise.
	(build_type_attribute_variant): Likewise.

2014-12-19  Andrew MacLeod <amacleod@redhat.com>

	* ggc-page.c (extra_order_size_tab): Use tree_type_common.
	* lto/lto.c (mentions_vars_p_type): Use TYPE_BINFO_RAW.
	(compare_tree_sccs_1): Don't check for TS_TYPE_NON_COMMON.
	(lto_fixup_prevailing_decls): Use TYPE_BINFO_RAW.
	* lto-streamer-out.c (DFS_write_tree_body, hash_tree): Don't check for
	TS_TYPE_NON_COMMON.
	* tree-core.h (struct tree_type_common): Flatten other type struct
	fields into type_common.
	(tree_type_with_lang_specific, tree_type_non_common): Remove.
	(union tree_node): Remove type_with_lang_specific and type_non_common
	fields.
	* tree-streamer-in.c (lto_input_ts_type_non_common_tree_pointers):
	Fold into write_ts_type_common_tree_pointers.
	(streamer_write_tree_body): Don't handle type_non_common case.
	* tree-streamer.c (streamer_check_handled_ts_structures): Remove
	TS_TYPE_WITH_LANG_SPECIFIC and TS_TYPE_NON_COMMON cases.
	* tree.c (tree_node_structure_for_code): Return TS_TYPE_COMMON
	instead of TS_TYPE_NON_COMMON.
	(initialize_tree_contains_struct): Only handle TS_TYPE_COMMON.
	(tree_code_size, type_hash_canon): Use tree_type_common.
	* tree.h (MARK_TS_TYPE_WITH_LANG_SPECIFIC): Remove.
	(TYPE_LANG_SPECIFIC, TYPE_VALUES, TYPE_DOMAIN, TYPE_FIELDS,
	TYPE_CACHED_VALUES, TYPE_VALUES_RAW, TYPE_METHODS, TYPE_VFIELD,
	TYPE_METHOD_BASETYPE, TYPE_OFFSET_BASETYPE, TYPE_MAXVAL, TYPE_MINVAL,
	TYPE_NEXT_PTR_TO, TYPE_NEXT_REF_TO, TYPE_MIN_VALUE, TYPE_MAX_VALUE,
	TYPE_ARRAY_MAX_SIZE): Adjust access.
	(TYPE_BINFO_RAW): New macro.
	(TYPE_BINFO, TYPE_LANG_SLOT_1): Adjust access.
	* treestruct.def (TS_TYPE_WITH_LANG_SPECIFIC, TS_TYPE_NON_COMMON):
	Remove.

