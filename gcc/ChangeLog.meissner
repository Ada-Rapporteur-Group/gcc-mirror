========== Work081, patch #2

Allow power10/power9 to inline explicit power8 functions

The power8 fusion support was set automatically when -mcpu=power8 or
-mtune=power8 was used, and it was cleared for other cpu's.  However, if
you used the target attribute or target #pragma to change the default cpu
type or tuning, you would get an error that a target specifiction option
mismatch occurred.

This code moves the power8 fusion option and power8 fusion sign option
support from being option flags to being a separate option variables.
This means the code in can_inline_p will not complain about an option
mismatch.  If the user did not explicitly set these options, they will be
set automatically if we are tuning for power8.

2022-03-08   Michael Meissner  <meissner@linux.ibm.com>

gcc/
	PR target/102059
	* config/rs6000/rs6000-cpus.def (OTHER_FUSION_MASKS): Delete.
	(ISA_3_0_MASKS_SERVER): Don't clear the fusion masks.
	(POWERPC_MASKS): Remove OPTION_MASK_P8_FUSION.
	* config/rs6000/rs6000.cc (rs6000_option_override_internal):
	Change how power8 fusion options are set from being an option mask
	to being separate variables.
	(rs6000_opt_masks): Remove -mpower8-fusion and
	-mpower8-fusion-sign.
	* config/rs6000/rs6000.h (MASK_P8_FUSION): Delete.
	* config/rs6000/rs6000.opt (-mpower8-fusion): Change from being an
	option mask to being a separate variable.
	(-mpower8-fusion-sign): Likewise.

gcc/testsuite/
	PR target/102059
	* gcc.target/powerpc/pr102059-4.c: New test.

========== Work081, patch #1 was reverted.

========== Work081, creation

2022-03-08   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

