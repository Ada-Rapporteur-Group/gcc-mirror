2019-09-11  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (num_insns_constant_gpr): Add support for
	using PADDI to load 34-bit constants.
	(rs6000_rtx_costs): Treat PADDI like ADDI and ADDIS.
	* config/rs6000/rs6000.md (movdi_internal64): Add support to use
	PADDI to load up 34-bit integer constants.

2019-09-11  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/constraints.md (em): New constraint.
	* config/rs6000/predicates.md (non_prefixed_mem_operand): New
	predicate.
	(non_pcrel_mem_operand): New predicate.
	(reg_or_non_pcrel_operand): New predicate.
	* config/rs6000/rs6000-protos.h (make_memory_non_prefixed): New
	declaration.
	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): Add support
	for extracting a vector element from a prefixed address.
	(quad_address_p): Add support for prefixed addresses.
	(mem_operand_gpr): Add support for prefixed addresses.  Use the
	SIGNED_16BIT_OFFSET_EXTRA_P macro.
	(mem_operand_ds_form): Add support for prefixed addresses.  Use
	the SIGNED_16BIT_OFFSET_EXTRA_P macro.
	(rs6000_legitimate_offset_address_p): Add support for prefixed
	addresses.
	(rs6000_legitimate_address_p): Add support for prefixed
	addresses.
	(rs6000_mode_dependent_address): Add support for prefixed
	addresses.
	(rs6000_num_insns): New helper function.
	(rs6000_insn_cost): Don't count prefixed instructions as being
	slower than non-prefixed instructions due to the larger size.
	(make_memory_non_prefixed): New function.
	* config/rs6000/rs6000.md (mov<mode>_64bit_dm): Add support for
	prefixed addresses.
	(movtd_64bit_nodm): Add support for prefixed addresses.
	(stack_protect_setdi): Do not allow prefixed addresses in the main
	insn.  Allow indexed stores if the memory would have been
	prefixed.
	(stack_protect_testdi): Do not allow prefixed addresses in the
	main insn.  Allow indexed stores if the memory would have been
	prefixed.
	* config/rs6000/vsx.md (vsx_mov<mode>_64bit): Add support for
	prefixed addresses.
	(vsx_extract_<mode>_var, VSX_D iterator): Do not optimize
	extracting from a vector in memory addressed with a prefixed
	address.
	(vsx_extract_v4sf_var): Do not optimize extracting from a vector
	in memory addressed with a prefixed address.
	(vsx_extract_<mode>_var, VSX_EXTRACT_I iterator): Do not optimize
	extracting from a vector in memory addressed with a prefixed
	address.
	(vsx_extract_<mode>_<VS_scalar>mode_var): Do not optimize
	extracting from a vector in memory addressed with a prefixed
	address.
	* doc/md.texi (PowerPC constraints): Document 'em' constraint.

2019-09-11  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.md (mov<mode>_64bit_dm): Split alternative
	that combined setting a GPR to 0.0 and loading up a GPR from
	memory.  Change length to 8 instead of 12 for some alternatives.

2019-09-11  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (prefixed_load_p): New
	declaration.
	(prefixed_store_p): New declaration.
	(prefixed_paddi_p): New declaration.
	(rs6000_asm_output_opcode): New declaration.
	(rs6000_final_prescan_insn): Update calling signature.
	* config/rs6000/rs6000.c (reg_to_insn_form): New function,
	identify the insn_form of a hard register.
	(prefixed_load_p): New function, return true if insn is a prefixed
	load.
	(prefixed_store_p): New function, return true if insn is a
	prefixed store.
	(prefixed_paddi_p): New function, return true if insn is a prefixed
	add or load immediate.
	(next_insn_prefixed_p): New global state variable.
	(rs6000_final_prescan_insn): New function, record if insn is
	prefixed.
	(rs6000_asm_output_opcode): New function, emit leading 'p' if insn
	is prefixed.
	* config/rs6000/rs6000.h (FINAL_PRESCAN_INSN): New target hook.
	(ASM_OUTPUT_OPCODE): New target hook.
	* config/rs6000/rs6000.md (prefixed insn attribute): New insn
	attribute that says if the insn is prefixed.
	(prefixed_length insn attribute): New insn attribute.
	(non_prefixed_length insn attribute): New insn attribute.
	(length insn attribute): Set length based on whether the prefixed
	attribute is set.
	(pcrel_local_addr): Update insn to use the prefixed attribute.
	(pcrel_extern_addr): Update insn to use the prefixed attribute.

2019-09-11  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/predicates.md (pcrel_address): Delete old
	predicate, and re-implement with a new name.
	(pcrel_external_address): Delete old predicate, and re-implement.
	(prefixed_mem_operand): Delete old predicate.
	(pcrel_external_mem_operand): Delete.
	(pcrel_local_address): New predicate to replace pcrel_address.
	(pcrel_external_address): New implementation.
	(pcrel_local_or_external_address): New predicate.
	* config/rs6000/rs6000-protos.h (rs6000_prefixed_address_mode_p):
	Delete.
	(address_to_insn_form): New declaration.
	(address_is_prefixed): New static inline helper function.
	(address_is_pcrel_local_or_external): New static inline helper
	function.
	* config/rs6000/rs6000.c (rs6000_emit_move): Load up pc-relative
	local or external addresses.
	(print_operand_address): Use pcrel_local_or_external_address and
	add support for pc-relative external addresses.
	(mode_supports_prefixed_address_p): Delete, no longer used.
	(rs6000_prefixed_address_mode_p): Delete, replace with
	address_to_insn_form.
	(address_to_insn_form): New function to figure out the instruction
	format of an address.
	* config/rs6000/rs6000.md (enum insn_form): New enumaration.
	(pcrel_local_addr): New insn to load local pc-relative addresses.
	(pcrel_extern_addr): New insn to load external pc-relative
	addresses.

2019-09-11   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch subversion id 275653

