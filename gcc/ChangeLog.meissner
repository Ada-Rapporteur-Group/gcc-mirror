========== Work081, patch #5
Allow extendditi2 on power9

2022-03-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/
	PR target/103109
	* config/rs6000/vsx.md (extendditi2): Allow extendidti2 to run on
	a power9 system.

========== Work081, patch #4
Fix DImode to TImode sign extend issue

PR target/104868 had had an issue where my code that updated the DImode to
TImode sign extension for power10 failed.  In looking at the failure
message, the reason is when extendditi2 tries to split the insn, it
generates an insn that does not satisfy its constraints:

	(set (reg:V2DI 65 1)
	     (vec_duplicate:V2DI (reg:DI 0)))

The reason is vsx_splat_v2di does not allow GPR register 0 when the will
be generating a mtvsrdd instruction.  In the definition of the mtvsrdd
instruction, if the RA register is 0, it means clear the upper 64 bits of
the vector instead of moving register GPR 0 to those bits.

When I wrote the extendditi2 pattern, I forgot that mtvsrdd had that
behavior so I used a 'r' constraint instead of 'b'.  In the rare case
where the value is in GPR register 0, this split will fail.

This patch uses the right constraint for extendditi2.

2022-03-10   Michael Meissner  <meissner@linux.ibm.com>

gcc/
	PR target/104868
	* config/rs6000/vsx.md (extendditi2): Use a 'b' constraint when
	moving from a GPR register to an Altivec register.

========== Work081, patch #3

Make power8-fusion depend only on tuning for power8.

The power8 fusion support used to be set automatically when -mcpu=power8 or
-mtune=power8 was used, and it was cleared for other cpu's.  However, if you
used the target attribute or target #pragma to change the default cpu type or
tuning, you would get an error that a target specifiction option mismatch
occurred.

This code removes the -mpower8-fusion and -mpower8-fusion-sign options, and
only enables power8 fusion if we are tuning for a power8.  Power8 sign fusion
is only enabled if we are tuning for a power8 and we have -O3 option or
higher.

2022-03-09   Michael Meissner  <meissner@linux.ibm.com>

gcc/
	PR target/102059
	* config/rs6000/rs6000-cpus.def (OTHER_FUSION_MASKS): Delete.
	(ISA_3_0_MASKS_SERVER): Don't clear the fusion masks.
	(POWERPC_MASKS): Remove OPTION_MASK_P8_FUSION.
	* config/rs6000/rs6000.cc (rs6000_option_override_internal):
	Delete code that set the power8 fusion options automatically.
	(rs6000_opt_masks): Allow #pragma target and attribute target to set
	power8-fusion and power8-fusion-sign, but these no longer represent
	options that the user can set.
	(rs6000_print_options_internal): Skip printing nop options.
	* config/rs6000/rs6000.h (TARGET_P8_FUSION): New macro.
	(TARGET_P8_FUSION_SIGN): Likewise.
	(MASK_P8_FUSION): Delete.
	* config/rs6000/rs6000.opt (-mpower8-fusion): Recognize the option but
	ignore the no form and warn that the option was removed for the regular
	form.
	(-mpower8-fusion-sign): Likewise.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Delete -mpower8-fusion
	and -mpower8-fusion-sign.

gcc/testsuite/
	PR target/102059
	* gcc.dg/lto/pr102059-1_0.c: Remove -mno-power8-fusion.
	* gcc.dg/lto/pr102059-2_0.c: Likewise.
	* gcc.target/powerpc/pr102059-3.c: Likewise.
	* gcc.target/powerpc/pr102059-4.c: New test.

========== Work081, patch #2 was reverted

========== Work081, patch #1 was reverted.

========== Work081, creation

2022-03-08   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

