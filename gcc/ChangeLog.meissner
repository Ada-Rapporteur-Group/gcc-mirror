2019-08-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/linux64.h (TARGET_PREFIXED_ADDR_DEFAULT): On
	'future' systems, enable prefixed addressing by default.
	(TARGET_PCREL_DEFAULT): On 'future' systems, enable pc-relative
	addressing by default.
	* config/rs6000/rs6000-cpus.def (FUTURE_ADDRESS_MASKS): New macro
	of 'future' addressing masks.
	(OTHER_FUTURE_MASKS): Use FUTURE_ADDRESS_MASKS.
	* config/rs6000/rs6000.c (TARGET_PREFIXED_ADDR_DEFAULT): If not
	defined, don't enable prefixed addressing on 'future' systems.
	(TARGET_PCREL_DEFAULT): If not defined, don't enable pc-relative
	addressing on 'future' systems.
	(rs6000_debug_reg_global): Print TARGET_PREFIXED_ADDR_DEFAULT and
	TARGET_PCREL_DEFAULT.
	(rs6000_option_override_internal): Add checks for 32-bit systems
	and non ELFv2 systems trying to enable prefixed addressing.  If
	the target OS tm.h says it is safe to do, enable prefixed and
	pc-relative addressing.

2019-08-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/predicates.md (add_operand): Add support for the
	PADDI instruction.
	(non_add_cint_operand): Add support for the PADDI instruction.
	(lwa_operand): Add support for the PLWA instruction.
	(non_prefixed_mem_operand): New predicate.
	* config/rs6000/rs6000-protos.h (make_memory_non_prefixed): New
	declaration.
	* config/rs6000/rs6000.c (num_insns_constant_gpr): Add support for
	the PADDI instruction.
	(rs6000_adjust_vec_address): Add support for optimizing prefixed
	and pc-relative extracts with constant extraction elements.  Add a
	failure when we use pc-relative addressing and non-constant
	extraction elements.  Use SIGNED_16BIT_OFFSET_P.
	(quad_address_p): Add support for prefixed memory instructions.
	(mem_operand_gpr): Add support for prefixed memory instructions.
	Use SIGNED_16BIT_OFFSET_EXTRA_P.
	(mem_operand_ds_form): Add support for prefixed memory
	instructions.  Use SIGNED_16BIT_OFFSET_EXTRA_P.
	(rs6000_legitimate_offset_address_p): Add support for prefixed
	memory instructions.
	(rs6000_legitimate_address_p): Add support for prefixed memory
	instructions.
	(rs6000_mode_dependent_address): Add support for prefixed memory
	instructions.
	(make_memory_non_prefixed): New function.
	(prefixed_paddi_p): Fix thinkos in last patch.
	(rs6000_rtx_costs): Add support for the PADDI instruction.
	(rs6000_num_insns): Don't treat prefixed instructions as being
	slower because they have a larger length.
	(rs6000_insn_cost): Call rs6000_num_insns.
	* config/rs6000/rs6000.md (add<mode>3): Add support for the PADDI
	instruction.
	(movsi_low): Add support for the PADDI instruction.
	(movsi const int splitter): Add support for the PADDI
	instruction.
	(mov<mode>_64bit_dm): Add support for prefixed memory
	instructions. Split alternatives that had merged loading a
	constant with register moves.
	(movtd_64bit_nodm): Add support for prefixed memory instructions.
	(movdi_internal64): Add support for prefixed memory instructions.
	(movdi const int splitter): Add comment.
	(mov<mode>_ppc64): Add support for prefixed memory instructions.
	(stack_protect_setdi): Do not allow prefixed instructions.
	(stack_protect_testdi): Do not allow prefixed instructions.
	* config/rs6000/vsx.md (vsx_mov<mode>_64bit): Add support for
	prefixed memory instructions.

2019-08-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (prefixed_load_p): New
	declaration.
	(prefixed_store_p): New declaration.
	(prefixed_paddi_p): New declaration.
	(rs6000_asm_output_opcode): New declaration.
	(rs6000_final_prescan_insn): New declaration.
	* config/rs6000/rs6000.c (addr_mask_to_trad_insn): Rework to deal
	with things like _Complex __ibm128.
	(reg_to_trad_insn): New helper function.
	(prefixed_load_p): New function for prefixed memory.
	(prefixed_store_p): New function for prefixed memory.
	(prefixed_paddi_p): New function for prefixed memory.
	(next_insn_prefixed_p): New state static flag.
	(rs6000_final_prescan_insn): New function for prefixed memory.
	(rs6000_asm_output_opcode): New function for prifixed memory.
	* config/rs6000/rs6000.h (FINAL_PRESCAN_INSN): New target hook.
	(ASM_OUTPUT_OPCODE): New target hook.
	* config/rs6000/rs6000.md (prefixed RTL attribute): New attribute
	for prefixed memory support.
	(prefixed_length RTL attribute): New attribute for prefixed memory
	support.
	(non_prefixed_length RTL attribute): New attribute for prefixed
	memory support.
	(length RTL attribute): Use prefixed, prefixed_length, and
	non_prefixed_lengths to set the default instruction length.
	(pcrel_local_addr): Change to use the prefixed attribute.
	(pcrel_ext_addr): Change to use the prefixed attribute.

2019-08-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (FIRST_RELOAD_REG_CLASS): Delete.
	(LAST_RELOAD_REG_CLASS): Delete.
	(mode_uses_full_vector_reg): New helper function.
	(setup_reg_addr_masks_pre_incdec): New helper function.
	(setup_reg_addr_masks_gpr): New helper function.
	(setup_reg_addr_masks_fpr): New helper function.
	(setup_reg_addr_masks_altivec): New helper function.
	(rs6000_setup_reg_addr_masks): Move most of the code into the 3
	specific helper functions that deals with the specific address
	masks for GPRs, FPRs, and traditional Altivec registers.

2019-08-23  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/predicates.md (pcrel_local_address): Rename
	pcrel_address to pcrel_local_address.
	(pcrel_ext_address): Rename pcrel_external_address to
	pcrel_ext_address.
	(prefixed_mem_operand): Delete.
	(pcrel_external_mem_operand): Delete.
	* config/rs6000/rs6000-protos.h (rs6000_prefixed_address_mode_p):
	Delete.
	(trad_insn_type): New enumeration.
	(prefixed_local_addr_p): New declaration.
	* config/rs6000/rs6000.c (RELOAD_REG_ANY): Delete enum element.
	(reload_reg_map): Delete RELOAD_REG_ANY element.
	(addr_mask_type): Grow type to unsigned short.
	(RELOAD_REG_*): Add RELOAD_REG_DS_OFFSET mask.
	(struct rs6000_reg_addr): Add any_addr_mask and default_addr_mask
	fields.
	(mode_supports_pre_incdec_p): Use reg_addr[m].any_addr_mask
	field.
	(mode_supports_pre_modify_p): Use reg_addr[m].any_addr_mask
	field.
	(mode_supports_dq_form): Use reg_addr[m].any_addr_mask field.
	(rs6000_debug_addr_mask): Print out DS mask bit if -mcpu=future.
	(rs6000_debug_print_mode): Print the any_addr_mask and
	default_addr_mask fields.
	(rs6000_setup_reg_addr_masks): Mark where an offset instruction
	will need to use a DS offset.  Set up the any_addr_mask and
	default_addr_mask fields.
	(rs6000_emit_move): Emit code to load up pc-relative addresses if
	-mpcrel.
	(rs6000_secondary_reload_memory): Use any_addr_mask field.
	(print_operand_address): Handle both local and external
	pc-relative symbols.
	(mode_supports_prefixed_address_p): Delete.
	(rs6000_prefixed_address_mode_p): Delete.
	(addr_mask_to_trad_insn): New function.
	(prefixed_local_addr_p): New function that replaces the
	rs6000_prefixed_address_mode_p function.
	* config/rs6000/rs6000.md (pcrel_local_addr): New insn.
	(pcrel_ext_addr): New insn.

2019-08-23   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch subversion id 274861

