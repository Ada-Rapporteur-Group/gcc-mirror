==================== Branch work115, patch #1 ====================

Make load/cmp fusion know about prefixed loads.

The issue with the bug is the power10 load GPR + cmpi -1/0/1 fusion
optimization generates illegal assembler code.

Ultimately the code was dying because the fusion load + compare -1/0/1 patterns
did not handle the possibility that the load might be prefixed.

The main cause is the prefixed attribute did not consider that fused_load_cmpi
insns are essentially load instructions, and to check whether the load is
prefixed.

This code ensures that the prefixed attribute is correctly set for the fusion
load plus compare immediate insns combined instruction.  This means it will
split the insn before final is called, and the load instruction will use a
prefixed load.

The original patch by Aaron reworked the insns generated by genfusion.pl so
that they had constraints that limited the load to be YZ, which are constraints
that restrict the load to offsets that the non-prefixed LWA instruction can
handle.  I will submit that patch as a second patch.  However, just setting the
prefixed attribute correctly will correctly split the insns.

2023-03-23   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	PR target/105325
	* gcc/config/rs6000/rs6000.md (prefixed attribute): Add fused_load_cmpi
	instructions to the list of instructions that might have a prefixed load
	instruction.

gcc/testsuite/

	PR target/105325
	* g++.target/powerpc/pr105325.C: New test.

==================== Branch work115, baseline ====================

2023-03-23   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

