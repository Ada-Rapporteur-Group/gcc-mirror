2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_extract_<mode>_load0): Rename from
	vsx_extract_<mode>_load.
	(vsx_extract_<mode>_load1): Add insn to get the second element in
	a vector from memory.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_split_vec_extract_var): Add
	support for variable exraction from indirect or indexed memory.
	* config/rs6000/vsx.md (vsx_extract_<mode>_var): Likewise.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): Remove #if 0
	code.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	Add declaration.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Call
	vsx_extract_<mode>_var to handle variable extraction.
	(rs6000_split_vec_extract_var): New function to split variable
	extraction after reload.
	(rtx_is_swappable_p): Variable vector extracts are not swappable.

	* config/rs6000/vsx.md (UNSPEC_VSX_EXTRACT): New unspec.
	(vsx_extract_<mode>_var): New insn/split to handle variable
	vector extracts.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): #if out test
	against swap optimization.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238261.
	* REVISION: Update subversion id.

2016-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238127.
	* REVISION: Update subversion id.

2016-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md: Undo 7/6 changes.
	* config/rs6000/rs6000-protos: Likewise.
	* config/rs6000/rs6000.c: Likewise.
	* config/rs6000/vsx.md: Likewise.
	* config/rs6000/rs6000.h: Likewise.

	* doc/md.text: Likewise.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Move code
	to do variable extract here from the vsx.md insn.  Add future
	support for extracting other vector types.

	* config/rs6000/vsx.md (vsx_extract_<mode>, VSX_D case):
	Reformat.  Fixup constraint cases so that direct move can be
	generated.
	(vsx_vslo_<mode>): Move to later in the file.
	(vsx_extract_<mode>_variable): Move insn to
	rs6000_expand_vector_extract.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): Do not require
	-mupper-regs-df unless mode is V2DFmode.  Turn off for now if
	-moptimize-swaps on power8.

2016-07-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md (wA constraint): New constraint for
	vector extract that matches Altivec registers if -m64 and
	-mdirect-move.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Set up and
	debug wA constraint.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	(split_extract_reg_reg_var): Fix thinkos.  Add scalar store.
	(split_extract_memory): Likewise.
	(rs6000_split_vector_extract): Likewise.

	* config/rs6000/vsx.md (vsx_extract_<VSX_D:mode>_<P:mode>): Fix
	problems with constraints.  Add scalar store support.
	(vsx_extract_<mode>_const): Likewise.
	(vsx_vslo_<mode>): Likewise.
	(vsx_extract_<mode>_load): Delete, insn folded into the main
	vector extract support.
	(vsx_extract_<mode>_store): Likewise.

	* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Add wA
	constraint.

	* doc/md.texi (PowerPC constraints): Document wA constraint.

2016-07-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vector_extract): Add
	declaration.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Rework
	variable element extraction, and make it more general.
	(split_extract_reg_reg_const): Likewise.
	(split_extract_reg_reg_var): Likewise.
	(split_extract_memory): Likewise.
	(rs6000_split_vector_extract): Likewise.

	* config/rs6000/vsx.md (UNSPEC_VSX_EXTRACT): New unspec.
	(vsx_extract_<mode>, VSX_D case): Rewrite vector extraction code,
	to make it more general.
	(vsx_extract_<mode>_const): Likewise.
	(vsx_extract_<mode>_variable): Delete.

2016-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Use the RTL extract built-in code for 64-bit power8 and above to
	extract DImode/DFmode with a variable element number.  Use string
	pasting for warnings, instead of spliting a string across multiple
	lines.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change
	calling signature to take a RTX instead of an integer constant for
	element number.  Add support for variable extract from V2DImode
	and V2DFmode.
	(altivec_expand_vec_ext_builtin): Likewise.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): New macro to
	say whether all of the conditions are met to allow for the element
	number of vec_extract to be a variable.

	* config/rs6000/altivec.md (reduc_plus_scal_<mode>): Deal wtih
	rs6000_expand_vector_extract calling signature changes.
	* config/rs6000/vector.md (vec_extract<mode>): Likewise.
	* config/rs6000/rs6000-protos.h (rs6000_expand_vector_extract):
	Likewise.

	* config/rs6000/vsx.md (UNSPEC_VSX_VSLO): New unspec.
	(vsx_vslo_<mode>): New insns to generate VSLO to isolate the
	correct element if vec_extract element number is variable.
	(vsx_extract_<mode>_variable): New expanders to generate the
	appropriate code to support vec_extract element number being
	variable.

2016-06-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237888.
	* REVISION: Update subversion id.

2016-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237864.
	* REVISION: Update subversion id.

2016-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (VSX_EXTRACT_INSN): Delete.
	(vsx_extract_<mode>_di): Return xxextractuw or vextractu<wd>
	rather than using VSX_EXTRACT_INSN.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change
	TARGET_VEC_SELECT_ISA3 to TARGET_VEXTRACTUB.

	* config/rs6000/vsx.md (VSX_EXTRACT_PREDICATE): Rename from
	VSX_EXTRACT_ELEMENT.
	(VSX_EXTRACT_INSN): Mode attribute to give the instruction to use
	for the extracts.
	(VSX_EX): Mode attribute to give the constraint to use for vector
	extracts.
	(vsx_extract_<mode>, VSX_EXTRACT_I case): Add support to use
	XXEXTRACTUW for V4SI mode.  Fix subreg support.
	(vsx_extract_<mode>_di, VSX_EXTRACT_I case): Likewise.

	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Rename from
	TARGET_VEC_SELECT_ISA3.

2016-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (const_0_7_operand): New predicate,
	match 0..7.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
	support for ISA 3.0 vector extract instructions.

	* config/rs6000/vsx.md (VSX_EXTRACT_I): New iterator for ISA 3.0
	vector extract instructions.
	(VSX_EXTRACT_ELEMENT): New mode attribrute for the predicate to
	validate the integer constant in a vector extract operation.
	(vsx_extract_<mode>, VSX_EXTRACT_I case): Add support for ISA 3.0
	vector extract instructions.
	(vsx_extract_<mode>_di): Likewise.

	* config/rs6000/rs6000.h (TARGET_VEC_SELECT_ISA3): New target
	macro to define when we can optimize to use ISA 3.0 vector extract
	instructions.

	* config/rs6000/rs6000.md (stfiwx): Add support to generate
	STXSIWX if the DImode was allocated to an Altivec register.

	Merge up to 237826.
	* REVISION: Update subversion id.

2016-06-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237765.
	* REVISION: Update subversion id.

2016-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (p9_stxsi<wd>x): Support non indexed
	addresses with a split and clobber.

2016-06-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md 	(p9_stxsi<wd>zx): New insns to support ISA
	3.0 store byte and half-word integers from vector registers.
	* config/rs6000/rs6000.md (fix_trunc<SFDF:mode><QHI:mode>2): New
	expanders to support converting floating point and storing it to
	byte/half-word integer directly from the vector registers.
	(fixuns_trunc<SFDF:mode><QHI:mode>2): Likewise.

	Merge up to 237716.
	* REVISION: Update subversion id.

2016-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237668.
	* REVISION: Update subversion id.

2016-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237608.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237490.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_sign_extend_hi_<mode>): Enable
	generator.

	* config/rs6000/rs6000.md (FP_ISA3): New iterator for ISA 3.0
	vector load byte/half-word instructions.
	(ISA 3.0 byte/half-word peephole): Delete earlier attempt.
	(float<QHI:mode><FP_ISA3:mode>2): New insns to support ISA 3.0
	vector load byte/half-word instructions.
	(float<QHI:mode><FP_ISA3:mode>2_internal): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2_internal): Likewise.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<dimode patch #3>
	* config/rs6000/vsx.md (VSINT_84): Add DImode to enable loading
	DImode constants with XXSPLTIB in vector registers.
	(vsx_extract_<mode>, V2DImode/V2DFmode): Combine both
	vsx_extract_<mode>_internal{1,2} into a single insn that handles
	direct move (both ISA 2.07 and ISA 3.0 versions), and optimizes
	extraction of the element at the top of the register as a scalar
	value.
	(vsx_extract_<mode>_internal1): Likewise.
	(vsx_extract_<mode>_internal2): Likewise.
	* config/rs6000/constraints.md (wi constraint): Remove a comment
	about DImode not being allowed in Altivec registers.
	(wB constraint): New constraint for constants that can be
	generated in Altivec registers with VSPLTISW/VUPKHSW.
	* config/rs6000/predicates.md (xxspltib_constant_split): Update
	comments.
	(xxspltib_constant_nosplit): Likewise.
	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Add
	support for -mupper-regs-di to enable DImode to go into Altivec
	registers.
	(POWERPC_MASKS): Likewise.
	(power7 cpu): Likewise.
	* config/rs6000/rs6000.opt (-mupper-regs-di): Likewise.
	* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Add support
	for DImode being allowed in Altivec registers.  Update wi/wj
	constraints.  Set scalar_in_vmx_p flag.
	(rs6000_option_override_internal): Add checks for -mupper-regs-di.
	(xxspltib_constant_p): Allow CONST_INT's with VOIDmode.  Don't
	return true if we could use VSPLTISW/VUPKHSW instead of XXSPLTIB.
	(rs6000_opt_masks): Add -mupper-regs-di.
	* config/rs6000/rs6000.md (lfiwax): Update clobbers that don't use
	direct move to use wi and not wj.
	(lfiwzx): Likewise.
	(floatsi<mode>2_lfiwax_mem): Combine alternatives into a single
	alternative.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(fix_trunc<mode>di2_fctidz): Change second alternative to allow
	any VSX register, instead of just Altivec registers, to allow
	either operand to be an Altivec register or both.
	(fixuns_trunc<mode>di2_fctiduz): Likewise.
	(movdi_internal32): Add support for -mupper-regs-di.  Add support
	to load constants via XXSPLTIB or VSPLTISW.  Add spacing to allow
	the alternatives and attributes to be lined up to be easier to
	read.
	(movdi_internal64): Likewise.
	(64-bit DImode splitters): Change predicates to only split loading
	up GPR registers.  Add splits for using XXSPLTIB or VSPLTISW to
	load constants in ISA 3.0 or ISA 2.07 respectively.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-mupper-regs-di.  Update -mupper-regs-df and -mupper-regs-sf to
	mention -mcpu=power9 sets these options.
	* doc/md.texi (PowerPC and IBM RS6000 constraints): Document the
	wB constraint.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (UNSPEC_P9_MEMORY): New unspec.
	(p9_lxsi<wd>zx): New code to implement load bye/halfword to the
	vector registers on ISA 3.0.

	* config/rs6000/rs6000.md (ISA 3.0 peepholes): Add new peepholes
	to catch zero_extend of byte/half-word and converting it to
	floating point.

2016-06-14   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 237393

