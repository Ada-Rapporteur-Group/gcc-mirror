2019-12-17  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/linux64.h (PREFIXED_ADDR_SUPPORTED_BY_OS): Set to
	1 to enable prefixed addressing if -mcpu=future.
	(PCREL_SUPPORTED_BY_OS): Set to 1 to enable PC-relative addressing
	if -mcpu=future.
	* config/rs6000/rs6000-cpus.h (ISA_FUTURE_MASKS_SERVER): Do not
	enable -mprefixed-addr or -mpcrel by default.
	(ADDRESSING_FUTURE_MASKS): New macro.
	(OTHER_FUTURE_MASKS): Use ADDRESSING_FUTURE_MASKS.
	* config/rs6000/rs6000.c (PREFIXED_ADDR_SUPPORTED_BY_OS): Disable
	prefixed addressing unless the target OS tm.h says we should
	enable it.
	(PCREL_SUPPORTED_BY_OS): Disable PC-relative addressing unless the
	target OS tm.h says we should enable it.
	(rs6000_debug_reg_global): Print whether prefixed addressing and
	PC-relative addressing is enabled by default if -mcpu=future.
	(rs6000_option_override_internal): Move setting prefixed
	addressing and PC-relative addressing after the sub-target option
	handling is done.  Only enable prefixed addressing or PC-relative
	address on -mcpu=future system if the target OS says to enable
	it.  Disallow prefixed addressing on 32-bit systems or if the
	target object file is not ELF v2.

2019-12-17  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_reg_to_addr_mask): New helper
	function.
	(rs6000_adjust_vec_address): Add support for folding a constant
	offset of a vector extract of a vector accessed with PC-relative
	addressing into the offset of the load.

2019-12-17  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): Add support
	for the offset being 34-bits when -mcpu=future is used.

2019-12-17  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	Update calling signature.
	* config/rs6000/rs6000.c (rs6000_split_vec_extract_var): Add
	additional tmp base register argument.  If the memory is prefixed,
	put the address into the new tmp base register.
	* config/rs6000/vsx.md (vsx_extract_<mode>_var, VSX_D iterator):
	Add new temporary for loading up the address of prefixed memory
	operands.
	(vsx_extract_v4sf_var): Add new temporary for loading up the
	address of prefixed memory operands.
	(vsx_extract_<mode>_var, VSX_EXTRACT_I iterator): Add new
	temporary for loading up the address of prefixed memory operands.
	(vsx_extract_<mode>_<VS_scalar>mode_var): Add new temporary for
	loading up the address of prefixed memory operands.

2019-12-17  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	Update calling signature.
	* config/rs6000/rs6000.c (rs6000_split_vec_extract_var): Add
	additional tmp base register argument.  If the memory is prefixed,
	put the address into the new tmp base register.
	* config/rs6000/vsx.md (vsx_extract_<mode>_var, VSX_D iterator):
	Add new temporary for loading up the address of prefixed memory
	operands.
	(vsx_extract_v4sf_var): Add new temporary for loading up the
	address of prefixed memory operands.
	(vsx_extract_<mode>_var, VSX_EXTRACT_I iterator): Add new
	temporary for loading up the address of prefixed memory operands.
	(vsx_extract_<mode>_<VS_scalar>mode_var): Add new temporary for
	loading up the address of prefixed memory operands.

2019-12-17   Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/constraints.md (em constraint): New constraint for
	a valid memory address that is not prefixed.
	(ep constraint): New constraint for a valid memory address that is
	prefixed.
	* config/rs6000/predicates.md (prefixed_memory): Add more comments
	about the memory addresses that are allowed.  Rewrite the code to be
	similar to non_prefixed_memory.
	(non_prefixed_memory): New predicate to return true for
	traditional memory addresses that are not prefixed.
	* doc/md.texi (PowerPC constraints): Document the em and ep
	constraints.

2019-12-17   Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/predicates.md (cint34_operand): Use
	SIGNED_INTEGER_34BIT_P macro.
	* config/rs6000/rs6000.c (num_insns_constant_gpr): Use the
	SIGNED_INTEGER_16BIT_P and SIGNED_INTEGER_34BIT_P macros.
	(address_to_insn_form): Use the SIGNED_INTEGER_16BIT_P and
	SIGNED_INTEGER_34BIT_P macros.
	* config/rs6000/rs6000.h (SIGNED_INTEGER_NBIT_P): New macro.
	(SIGNED_INTEGER_16BIT_P): Rename SIGNED_16BIT_OFFSET_P to be
	SIGNED_INTEGER_34BIT_P.
	(SIGNED_INTEGER_34BIT_P): Rename SIGNED_34BIT_OFFSET_P to be
	SIGNED_INTEGER_34BIT_P.

2019-12-17   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch subversion id 279477

