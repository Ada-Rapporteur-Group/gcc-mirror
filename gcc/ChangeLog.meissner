work046.patch013:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (UNSPEC_XXSPLTID): Move to vsx.md and
	rename to UNSPEC_XXSPLTID.
	(xxspltidp_v2df): Move to vsx.md and re-implement.
	(xxspltidp_v2df_inst): Move to vsx.md and re-implement.
	* config/rs6000/constraints.md (eF): New constraint.
	* config/rs6000/predicates.md (easy_fp_constant): If we load the
	scalar constant with XXSPLTIDP, return true.
	(xxspltidp_operand): New predicate.
	(easy_vector_constant): If we can generate XXSPLTIDP, mark the
	vector constant as easy.
	* config/rs6000/rs6000-cpus.def (OTHER_POWER10_MASKS): Add
	-mxxspltidp support.
	(POWERPC_MASKS): Add -mxxspltidp support.
	* config/rs6000/rs6000-protos.h (xxspltidp_constant_p): New
	declaration.
	* config/rs6000/rs6000.c (rs6000_option_override_internal): Add
	-mxxspltidp support.
	(xxspltidp_constant_p): New function.
	(output_vec_const_move): Add support for XXSPLTIDP.
	(rs6000_opt_masks): Add -mxxspltidp support.
	(rs6000_emit_xxspltidp_v2df): Change function to implement the
	XXSPLTIDP instruction.
	* config/rs6000/rs6000.md (movsf_hardfloat): Add XXSPLTIDP
	support.
	(mov<mode>_hardfloat32, FMOVE64 iterator): Add XXSPLTIDP support.
	(mov<mode>_hardfloat64, FMOVE64 iterator): Add XXSPLTIDP support.
	* config/rs6000/rs6000.opt (-mxxspltidp): New switch.
	* config/rs6000/vsx.md (UNSPEC_XXSPLTIDP): Move here from
	altivec.md.  Rename it to UNSPEC_XXSPLTIDP to match the
	instruction.
	(vsx_mov<mode>_64bit): Add XXSPLTIDP support.
	(vsx_mov<mode>_32bit): Add XXSPLTIDP support.
	(XXSPLTIDP): New mode iterator.
	(xxspltidp_<mode>_internal1): New define_insn_and_split.
	(xxspltidp_<mode>_internal2): New define_insn.
	(xxspltidp_v2df): Move to vsx.md from altivec.md.  Re-implement to
	use the new constant format.

work046.patch011:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (UNSPEC_XXSPLTIW): Move to vsx.md.
	(xxspltiw_v4si): Move to vsx.md and re-implement.
	(xxspltiw_v4sf): Move to vsx.md and re-implement.
	(xxspltiw_v4sf_inst): Delete.
	* config/rs6000/constraints.md (eW): New constraint.
	* config/rs6000/predicates.md (xxspltiw_operand): New predicate.
	(easy_vector_constant): If we can generate XXSPLTIW, mark the
	vector constant as easy.
	* config/rs6000/rs6000-cpus.def (OTHER_POWER10_MASKS): Add
	-mxxspltiw support.
	(POWERPC_MASKS): Add -mxxspltiw support.
	* config/rs6000/rs6000-protos.h (xxspltiw_constant_p): New
	declaration.
	* config/rs6000/rs6000.c (rs6000_option_override_internal): Add
	-mxxspltiw support.
	(xxspltib_constant_p): If we can generate XXSPLTIW, don't generate
	XXSPLTIB and a vector extend instruction.
	(xxspltiw_constant_p): New function.
	(output_vec_const_move): Add support for XXSPLTIW.
	(rs6000_opt_masks): Add -mxxspltiw support.
	* config/rs6000/rs6000.opt (-mxxspltiw): New switch.
	* config/rs6000/vsx.md (UNSPEC_XXSPLTIW): Move here from
	altivec.md.
	(vsx_mov<mode>_64bit): Add XXSPLTIW support.
	(vsx_mov<mode>_32bit): Add XXSPLTIW support.
	(XXSPLTIW): New mode iterator.
	(xxspltiw_<mode>_internal1): New define_insn_and_split.
	(xxspltiw_<mode>_internal2): New define_insn.
	(xxspltiw_v4si): Move to vsx.md from altivec.md.  Re-implement to
	use the new constant format.
	(xxspltiw_v4sf): Move to vsx.md from altivec.md.  Re-implement to
	use the new constant format.

work046.patch010:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_const_f32_to_i32): Change
	return type to long.
	* config/rs6000/rs6000.c (rs6000_const_f32_to_i32): Change return
	type to long.

work046.patch009:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config.gcc (powerpc*-*-*, rs6000-*-*): Do not set
	LINK_OS_EXTRA_SPEC32 or LINK_OS_EXTRA_SPEC664 for the Advance
	Toolchain.

work046.patch007:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-builtin.def (BU_IBM128_2): Rename
	RS6000_BTM_IBM128 from RS6000_BTM_FLOAT128.
	* config/rs6000/rs6000-call.c (rs6000_invalid_builtin): Update
	error message for __ibm128 built-in functions.
	(rs6000_init_builtins): Create the __ibm128 keyword on older
	systems where long double uses the IBM extended double format,
	even if they don't support IEEE 128-bit floating point.
	* config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Rename
	RS6000_BTM_IBM128 from RS6000_BTM_FLOAT128.
	(rs6000_builtin_mask_names): Rename RS6000_BTM_IBM128 from
	RS6000_BTM_FLOAT128.
	* config/rs6000/rs6000.h (TARGET_IBM128): New macro.
	(RS6000_BTM_IBM128): Rename from RS6000_BTM_FLOAT128.
	(RS6000_BTM_COMMON): Rename RS6000_BTM_IBM128 from
	RS6000_BTM_FLOAT128.

work046.patch006:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If long
	double is IEEE-128 map the nanq built-in functions to the long
	double function, not the f128 function.

work046.patch002:
2021-04-07 Michael Meissner  <meissner@linux.ibm.com>

        * config/rs6000/rs6000.c (have_compare_and_set_mask): Add IEEE
        128-bit floating point types.
        * config/rs6000/rs6000.md (FPMASK): New iterator.
        (FPMASK2): New iterator.
        (Fv mode attribute): Add KFmode and TFmode.
        (mov<FPMASK:mode><FPMASK2:mode>cc_fpmask): Replace
        mov<SFDF:mode><SFDF2:mode>cc_p9.  Add IEEE 128-bit fp support.
        (mov<FPMASK:mode><FPMASK2:mode>cc_invert_fpmask): Replace
        mov<SFDF:mode><SFDF2:mode>cc_invert_p9.  Add IEEE 128-bit fp
        support.
        (fpmask<mode>): Add IEEE 128-bit fp support.  Enable generator to
        build te RTL.
        (xxsel<mode>): Add IEEE 128-bit fp support.  Enable generator to
        build te RTL.

work046.patch001:
2021-04-07  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_emit_minmax): Add support for ISA
	3.1 IEEE 128-bit floating point xsmaxcqp and xsmincqp instructions.
	* config/rs6000/rs60000.h (FLOAT128_MIN_MAX_FPMASK_P): New macro.
	* config/rs6000/rs6000.md (s<minmax><mode>3): Add support for the
	ISA 3.1 IEEE 128-bit minimum and maximum instructions.

2021-04-07   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

