==================== dmf001, patch #23

Make changes to make DMF002 branch merge easier.

2022-10-26   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/constraints.md: Make various changes made in DMF002
	branch to make cherry picking changes easier.
	* config/rs6000/mma.md: Likewise.
	* config/rs6000/predicates.md: Likewise.
	* config/rs6000/rs6000-c.cc: Likewise.
	* config/rs6000/rs6000-call.cc: Likewise.
	* config/rs6000/rs6000-cpus.def: Likewise.
	* config/rs6000/rs6000.cc: Likewise.
	* config/rs6000/rs6000.h: Likewise.
	* config/rs6000/rs6000.md: Likewise.
	* config/rs6000/rs6000.opt: Likewise.

==================== dmf001, patch #22

Adjust -mlagen again.

2022-10-20   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_file_start): Define just plagen, not
	plagen1, plagen2, or plagen3.
	* config/rs6000/rs6000.md (plagendi3_nora): Generate plagen, not
	plagen1, plagen2, or plagen3.
	(plagendi3): Likewise.
	(plagendi3_noshift): Likewise.

==================== dmf001, patch #21

Adjust -mlagen.

2022-10-19   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_file_start): Change the macros for
	lagen and plagen so they are the same size as the new instruction.
	Obviously, you won't be able to run the program.
	* config/rs6000/rs6000.md (lagendi3): Remove early clobber.

==================== dmf001, patch #20

Add -mlagen.

2022-10-19   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-cpus.def (POWERPC_MASKS): Add -mlagen.
	* config/rs6000/rs6000.cc (rs6000_file_start): Add macros for lagen.
	(rs6000_opt_masks): Add lagen.
	* config/rs6000/rs6000.md (lagendi3): New insn for -mlagen support.
	(plagendi3_nora): Likewise.
	(plagendi3): Likewise.
	(plagendi3_noshift): Likewise.
	* config/rs6000/rs6000.opt (-mlagen): New option.

==================== dmf001, patch #19

Add mangling for __dmr.

2022-10-18   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_mangle_type): Add mangling for __dmr.

==================== dmf001, patch #18

Add Dwarf support for DMR registers.

2022-10-18   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_memory_move_cost): Tweak last change.
	(rs6000_debugger_regno): Add support for DMF registers.

==================== dmf001, patch #17

Update DMR move costs.

2022-10-18   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (rs6000_secondary_reload_memory): Account for
	extra instructions needed to load/store DMF registers using VSX
	registers.
	(rs6000_dmf_register_move_cost): New helper function.
	(rs6000_register_move_cost): Add costs for moving DMF registers.
	(rs6000_memory_move_cost): Add support for DMF registers.

==================== dmf001, patch #16

Add initial __dmr support.

2022-10-18   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (UNSPEC_DMF_INSERT512_UPPER): New unspec.
	(UNSPEC_DMF_INSERT512_LOWER): Likewise.
	(UNSPEC_DMF_EXTRACT512): Likewise.
	(UNSPEC_DMR_RELOAD_FROM_MEMORY): Likewise.
	(UNSPEC_DMR_RELOAD_TO_MEMORY): Likewise.
	(movtdo): New expander and define_insn_and_split.
	(movtdo_insert512_upper): New insn.
	(movtdo_insert512_lower): Likewise.
	(movtdo_extract512): Likewise.
	(reload_dmf_from_memory): Likewise.
	(reload_dmf_to_memory): Likewise.
	* config/rs6000/rs6000-builtin.cc (rs6000_type_string): Add __dmr
	support.
	(rs6000_init_builtins): Likewise.
	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Enable
	TDOmode in DMF registers.
	(rs6000_init_hard_regno_mode_ok): Add __dmr support.
	(rs6000_secondary_reload_memory): Likewise.
	(rs6000_secondary_reload_simple_move): Likewise.

==================== dmf001, patch #15

Initial support for __dmr type.

2022-10-17   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-call.cc (rs6000_return_in_memory): TDOmode needs
	to be returned in memory.
	(rs6000_function_arg): TDOmode can't be passed in a register.
	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Relax
	XOmode requirement that the register number must be divisible by 4 if
	-mdmf.  Add support for TDOmode registers.
	(rs6000_modes_tieable_p): Reorder tests for TDOmode.
	(rs6000_setup_reg_addr_masks): Allow TDOmode in DMR registers.
	(reg_offset_addressing_ok_p): Allow loading/storing TDOmode values with
	offset instructions.
	(rs6000_split_multireg_move): Update comment.
	(rs6000_invalid_conversion): Likewise.
	* config/rs6000/rs6000.h (VECTOR_ALIGNMENT_P): TDOmode has 512 bit
	alignment.
	(rs6000_builtin_type_index): Add support for dmr type node and pointer
	to dmr type node.
	(dmr_type_node): Likewise.
	(ptr_dmr_type_node): Likewise.

==================== dmf001, patch #14

Update comment.

2022-10-17   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (movxo): Update comment.

==================== dmf001, patch #13

Use DMF names instead of MMF for instructions.

2022-10-14   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (vvi4i4i8_insn): New int attribute.
	(avvi4i4i8_insn): Likewise.
	(vvi4i4i2_insn): Likewise.
	(avvi4i4i2_insn): Likewise.
	(vvi4i4_insn): Likewise.
	(avvi4i4_insn): Likewise.
	(pvi4i2_insn): Likewise.
	(apvi4i2_insn): Likewise.
	(vvi4i4i4_insn): Likewise.
	(avvi4i4i4_insn): Likewise.
	(mma_<vv>): On DMF systems, emit the DMF instruction name instead of the
	MMF instruction name.
	(mma_<avv>): Likewise.
	(mma_<pv>): Likewise.
	(mma_<apv>): Likewise.
	(mma_<vvi4i4i8>): Likewise.
	(mma_<avvi4i4i8>): Likewise.
	(mma_<vvi4i4i2>): Likewise.
	(mma_<avvi4i4i2>): Likewise.
	(mma_<vvi4i4>): Likewise.
	(mma_<avvi4i4>): Likewise.
	(mma_<pvi4i2>): Likewise.
	(mma_<apvi4i2>): Likewise.
	(mma_<vvi4i4i4>"): Likewise.
	(mma_<avvi4i4i4>): Likewise.

==================== dmf001, patch #12

Document wD constraint.

2022-10-14   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* doc/md.texi (PowerPC constraints): Document the wD constraint.

==================== dmf001, patch #11

Change mma_fpr to not_dmf.

2022-10-14   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (mma_<vv>): Use isa attribute 'not_dmf' instead
	of 'mma_fpr'.
	(mma_<avv>): Likewise.
	(mma_<pv>): Likewise.
	(mma_<apv>): Likewise.
	(mma_<vvi4i4i8>): Likewise.
	(mma_<avvi4i4i8>): Likewise.
	(mma_<vvi4i4i2>): Likewise.
	(mma_<avvi4i4i2>): Likewise.
	(mma_<vvi4i4>): Likewise.
	(mma_<avvi4i4>): Likewise.
	(mma_<pvi4i2>): Likewise.
	(mma_<apvi4i2>): Likewise.
	(mma_<vvi4i4i4>"): Likewise.
	(mma_<avvi4i4i4>): Likewise.
	* config/rs6000/rs6000.md (isa attribute): Rename mma_fpr to not_dmf.
	(enabled attribute): Likewise.

==================== dmf001, patch #10, patch reverted.

==================== dmf001, patch #9

Use MMA instruction instead of the renamed DMF instruction.

2022-10-13   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (vvi4i4i8_dmf): Delete.
	(avvi4i4i8_dmf): Likewise.
	(vvi4i4i2_dmf): Likewise.
	(avvi4i4i2_dmf): Likewise.
	(vvi4i4_dmf): Likewise.
	(avvi4i4_dmf): Likewise.
	(pvi4i2_dmf): Likewise.
	(apvi4i2_dmf): Likewise.
	(vvi4i4i4_dmf): Likewise.
	(avvi4i4i4_dmf): Likewise.
	(mma_<vv>): Use MMA instruction instead of the renamed DMF
	instruction.
	(mma_<avv>): Likewise.
	(mma_<pv>): Likewise.
	(mma_<apv>): Likewise.
	(mma_<vvi4i4i8>): Likewise.
	(mma_<avvi4i4i8>): Likewise.
	(mma_<vvi4i4i2>): Likewise.
	(mma_<avvi4i4i2>): Likewise.
	(mma_<vvi4i4>): Likewise.
	(mma_<avvi4i4>): Likewise.
	(mma_<pvi4i2>): Likewise.
	(mma_<apvi4i2>): Likewise.
	(mma_<vvi4i4i4>): Likewise.
	(mma_<avvi4i4i4>): Likewise.
	* config/rs6000/rs6000.cc (print_operand): Rework %A error message.

==================== dmf001, patch #8

Switch to DMF syntax and DMR for all MMA operations.

2022-10-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (vvi4i4i8_dmf): New int attribute.
	(avvi4i4i8_dmf): Likewise.
	(vvi4i4i2_dmf): Likewise.
	(avvi4i4i2_dmf): Likewise.
	(vvi4i4_dmf): Likewise.
	(avvi4i4_dmf): Likewise.
	(pvi4i2_dmf): Likewise.
	(apvi4i2_dmf): Likewise.
	(vvi4i4i4_dmf): Likewise.
	(avvi4i4i4_dmf): Likewise.
	(movxo_dmf): Spell dmxxextfmdr512 correctly.
	(mma_assemble_acc_dmf): Likewise.
	(mma_disassemble_acc_dmf): Likewise.
	(mma_<acc>): Change from using fpr_reg_operand in expand to just
	register_operand.  Limit insn to just non-DMF case.
	(mma_xxsetaccz): Break into 2 insns, depending on non-DMF vs. DMF.
	(mma_xxsetaccz_p10): Rename from mma_xxsetaccz.
	(mma_xxsetaccz_dmf): Use normal UNSPEC for DMF, not UNSPEC_VOLATILE.
	(mma_<vv>): Add support for running on DMF systems, generating the DMF
	instruction and using the DMF accumulator.
	(mma_<avv>): Likewise.
	(mma_<pv>): Likewise.
	(mma_<apv>): Likewise.
	(mma_<vvi4i4i8>): Likewise.
	(mma_<avvi4i4i8>): Likewise.
	(mma_<vvi4i4i2>): Likewise.
	(mma_<avvi4i4i2>): Likewise.
	(mma_<vvi4i4>): Likewise.
	(mma_<avvi4i4): Likewise.
	(mma_<pvi4i2>): Likewise.
	(mma_<apvi4i2): Likewise.
	(mma_<vvi4i4i4>): Likewise.
	(mma_<avvi4i4i4>): Likewise.

==================== dmf001, patch #7

Implement DMF mma_assemble_acc and mma_disassemble_acc

2022-10-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (UNSPEC_MMA_ASSEMBLE_ACC_DMF): New unspec.
	(movxo_dmf): Use 'mma' type, not 'vecmove'.
	(mma_assemble_acc): Split handling for non-DMF and DMF usage.
	(mma_assemble_acc_p10): Rename from mma_assemble_acc to handle non-DMF
	case.
	(mma_assemble_acc_dmf): Build the accumulator from two vector pairs.
	(mma_disassemble_acc_p10): Rename from mma_disassemble_acc to handle non-DMF
	case.
	(mma_disassemble_acc_dmf): Implement on DMF to use dmxxexttdmr256.

==================== dmf001, patch #6

Add accumulator_operand.

2022-10-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/predicates.md (accumulator_operand): New predicate.

==================== dmf001, patch #5

Make %A warn about not using accumulators.

2022-10-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000.cc (print_operand): Under -mdmf, for output
          modifier %A, make sure the argument is an accumulator.

==================== dmf001, patch #4

Fix dmxxextdmr512 order.

2022-10-11   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (movxo_dmf): Updat operand order.

==================== dmf001, patch #3

Add initial DMR register support for XOmode.

2022-10-10   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/mma.md (movxo_p10): Rename from movxo, and limit its use
	to non-DMF systems.
	(movxo_dmf): New insn.
	(mma_<acc>): NOP prime/de-prime usage when -mdmf is used.
	* config/rs6000/rs6000.cc (rs6000_hard_regno_mode_ok_uncached): Allow
	XOmode in DMR registers or Altivec registers if -mdmf.
	(rs6000_setup_reg_addr_masks): Add support to allow TDOmode in DMF
	registers, and also in Altivec registers if -mdmf.  TDOmode registers
	can do offset addressing but not indexed addressing.
	(rs6000_init_hard_regno_mode_ok): Add support for TDOmode.
	(reg_offset_addressing_ok_p): Likewise.
	(rs6000_emit_move): Warn about using SUBREGs with TDOmode.
	(rs6000_preferred_reload_class): DMF registers can't be loaded or
	stored.  With -mdmf, XOmode can go in Altivec registers.  TDOmode needs
	to use VSX registers for load/store.
	(rs6000_compute_pressure_classes): Add DMF registers to the pressure
	classses.
	(rs6000_split_multireg_move): If -mdmf, we don't need to prime or
	de-prime the acculators.  Add initial support for TDOmode.
	(rs6000_invalid_conversion): Warn about converting __dmr types.
	* config/rs6000/rs6000.h (DMF_REG_CLASS_P): New macro.

==================== dmf001, patch #2

Add initial DMR register support.

2022-10-07   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/constraints.md (wD): New constraint.
	* config/rs6000/predicates.md (dmf_operand): New predicate.
	* config/rs6000/rs6000-modes.def (TDOmode): New opaque mode.
	* config/rs6000/rs6000.cc (rs6000_reg_type): Add support for DMF
	registers.
	(rs6000_reload_reg_type): Likewise.
	(LAST_RELOAD_REG_CLASS): Likewise.
	(reload_reg_map): Likewise.
	(addr_mask_type): Grow to 16 bits.
	(RELOAD_REG_NO_MEMORY): New RELOAD_REG macro.
	(rs6000_reg_names): Add DMR registers.
	(alt_reg_names): Likewise.
	(rs6000_hard_regno_nregs_internal): Add support for DMF registers.
	(rs6000_hard_regno_mode_ok_uncached): Likewise.
	(rs6000_modes_tieable_p): Likewise.
	(rs6000_debug_addr_mask): Likewise.
	(rs6000_debug_reg_global): Likewise.
	(rs6000_setup_reg_addr_masks): Likewise.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	* config/rs6000/rs6000.h (UNITS_PER_DMF_WORD): New macro.
	(FIRST_PSEUDO_REGISTER): Add support for DMF registers.
	(FIXED_REGISTERS): Likewise.
	(CALL_REALLY_USED_REGISTERS): Likewise.
	(REG_ALLOC_ORDER): Likewise.
	(DMF_REGNO_P): New macro.
	(enum reg_class): Likewise.
	(REG_CLASS_NAMES): Likewise.
	(REG_CLASS_CONTENTS): Likewise.
	(REGISTER_NAMES): Likewise.
	(ADDITIONAL_REGISTER_NAMES): Likewise.
	* config/rs6000/rs6000.md (FIRST_DMF_REGNO): New constant.
	(LAST_DMF_REGNO): New constant.
	(isa attribute): Add dmf and mma_fpr attributes.
	(enabled attribute): Add support for dmf and mma_fpr attributes.

==================== dmf001, patch #1

Add -mcpu=future/-mdmf instrastructure.

2022-10-07   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	* config/rs6000/rs6000-c.cc (rs6000_target_modify_macros): Define
	__DMF__ if dmf support is enabled.
	* config/rs6000/rs6000-cpus.def (ISA_FUTURE_MASKS): New macro.
	(POWERPC_MASKS): Add -mblock-ops-vector-pair and -mdmf.
	(future cpu): Add -mcpu=future and -mtune=future support.
	* config/rs6000/rs6000-opts.h (processor_type): Add PROCESSOR_FUTURE.
	* config/rs6000/rs6000-tables.op: Regenerate.
	* config/rs6000/rs6000.cc (rs6000_option_override_internal): Add
	-mcpu=future and -mtune=future support, but for now make them mostly
	equivalent to power10.  Add -mdmf checking.
	(rs6000_machine_from_flags): Likewise.
	(rs6000_reassociation_width): Likewise.
	(rs6000_adjust_cost): Likewise.
	(rs6000_issue_rate): Likewise.
	(rs6000_sched_reorder): Likewise.
	(rs6000_sched_reorder2): Likewise.
	(rs6000_register_move_cost): Likewise.
	(rs6000_opt_masks): Add -mdmf.
	* config/rs6000/rs6000.h (ASM_CPU_SPEC): Add -mcpu=future support.
	* config/rs6000/rs6000.md (cpu attribute): Add future.
	(isa attribute): Add dmf.
	(enabled attribute): Likewise.
	* config/rs6000/rs6000.opt (-mdmf): New option.

==================== dmf001, base line

2022-10-06   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

