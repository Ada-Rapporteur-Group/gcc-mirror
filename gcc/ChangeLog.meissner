2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-call.c (altivec_overloaded_builtins): Add
	built-in functions for long double built-ins that use IEEE
	128-bit.
	(rs6000_expand_builtin): Change the KF IEEE 128-bit comparison
	insns to TF if long double is IEEE 128-bit.
	* config/rs6000/rs6000-builtin.def (scalar_extract_exptf): Add
	support for long double being IEEE 128-bit built-in functions.
	(scalar_extract_sigtf): Likewise.
	(scalar_test_neg_tf): Likewise.
	(scalar_insert_exp_tf): Likewise.
	(scalar_insert_exp_tfp): Likewise.
	(scalar_cmp_exp_tf_gt): Likewise.
	(scalar_cmp_exp_tf_lt): Likewise.
	(scalar_cmp_exp_tf_eq): Likewise.
	(scalar_cmp_exp_tf_unordered): Likewise.
	(scalar_test_data_class_tf): Likewise.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_invalid_binary_op): Update error
	messages about mixing IBM long double and IEEE 128-bit.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Map the old
	'q' built-in functions into long double if long double is IEEE
	128-bit.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_mangle_decl_assembler_name): Add
	support for mapping built-in function names for long double
	built-in functions if long double is IEEE 128-bit.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (init_float128_ieee): Use __mulkc3x and
	__divkc3x if long double is IEEE 128-bit.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	PR target/81594
	* config/rs6000/predicates.md (ds_form_memory): New predicate.
	* config/rs6000/vsx.md (concatv2di_store): New insn.
	(dupv2di_store): New insn.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (emit_fp_min_max_insn): Update comment.
	(emit_fp_cmove_with_mask_xxsel): Update comment.
	(rs6000_emit_cmove): Add support for IEEE 128-bit min, max, and
	comparisons on ISA 3.1.
	(rs6000_emit_minmax): Add support for IEEE 128-bit min/max on ISA
	3.1.
	* config/rs6000/rs6000.md (s<minmax><mode>3, IEEE128 iterator):
	New insns for IEEE 128-bit min/max.
	(mov<mode>cc, IEEE128 iterator): New insns for IEEE 128-bit
	conditional move.
	(mov<mode>cc_future, IEEE128 iterator): New insns for IEEE 128-bit
	conditional move.
	(mov<mode>cc_invert_future, IEEE128 iterator): New insns for IEEE
	128-bit conditional move.
	(fpmask<mode>, IEEE128 iterator): New insns for IEEE 128-bit
	conditional move.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (emit_fp_min_max_insn): Rename
	rs6000_emit_p9_fp_minmax.
	(emit_fp_cmove_with_mask_xxsel): Rename rs6000_emit_p9_fp_cmove.
	(rs6000_emit_cmove): Update to use renamed functions.

2020-06-30  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.md (bswaphi2_reg): Generate the BRH
	instruction on ISA 3.1.
	(bswapsi2_reg): Generate the BRW instruction on ISA 3.1.
	(bswapdi2): Rename bswapdi2_xxbrd to bswapdi2_brd.
	(bswapdi2_brd): Rename from bswapdi2_xxbrd.  Generate the BRD
	instruction on ISA 3.1.

2020-06-29   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

