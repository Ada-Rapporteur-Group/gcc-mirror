2016-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<rework patch #4>
	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Add support for optimizing vec_extract on vector float, vector
	int, vector short, and vector char, with either constant or
	variable elements.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
	support for vec_extract with variable or constant elements for
	vector float, vector int, vector short, or vector char vectors.
	* config/rs6000/vsx.md (vsx_xscvspdp_scalar2): Use ww constraint
	instead of f to allow SFmode in Altivec registers.
	(vsx_extract_v4sf): Use ww constraint instead of f to allow SFmode
	in Altivec registers.  Remove alternative for 0 element that would
	not work on little endian, instead allowing any supported integer
	constant.  Use {} for C++ code, not "{ ... }".
	(sx_extract_v4sf_load): Optimize vec_extracts of V4SFmode if the
	vector happens to be in memory for both constant and variable
	elements.
	(vsx_extract_v4sf_var): Add support for variable vec_extract
	element numbers.
	(vsx_extract_<mode>, VSX_EXTRACT_I iterator): Change
	vsx_extract_<mode> to be a define_expand, which can handle either
	ISA 2.07 or ISA 3.0 vec_extracts.  Rename old ISA 3.0 insn to
	vsx_extract_<mode>_p9.
	(vsx_extract_<mode>_p9, VSX_EXTRACT_I iterator): Likewise.
	(vsx_extract_<mode>_p8, VSX_EXTRACT_I iterator): New insn to
	support vec_extracts for small integer vectors on 64-bit ISA 2.07
	systems.
	(vsx_extract_<mode>_load, VSX_EXTRACT_I iterator): Optimize
	vec_extracts of small integer vectors if the vector happens to be
	in memory for both constant and variable elements.
	(vsx_extract_<mode>_var): Optimize vec_extracts of small integer
	vectors if the element is variable on 64-bit ISA 2.07 systems.

2016-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<rework patch #3>
	* config/rs6000/rs6000-protos.h (rs6000_adjust_vec_address): New
	declaration.
	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): New function
	to adjust a vector memory address to point to one of its
	elements.
	(rs6000_split_vec_extract_var): Handle variable vec_extract coming
	from a memory location by calling rs6000_split_vec_extract_var.
	* config/rs6000/vsx.md (vsx_extract_<mode>_load, VSX_D iterator):
	Rework to load either vector element from memory, or to load a
	variable vector element.
	(vsx_extract_<mode>_var): Add constraints to allow variable
	extracts from memory.

2016-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<rework patch #2>
	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	New declaration.
	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Add support for vec_extract of vector double or vector long having
	a variable element number on 64-bit ISA 2.07 systems or newer.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract):
	Likewise.
	(rs6000_split_vec_extract_var): New function to split a
	vec_extract built-in function with variable element number.
	(rtx_is_swappable_p): Variable vec_extracts and shifts are not
	swappable.
	* config/rs6000/vsx.md (UNSPEC_VSX_VSLO): New unspec.
	(UNSPEC_VSX_EXTRACT): Likewise.
	(vsx_extract_<mode>, VSX_D iterator): Fix constraints to allow
	direct move instructions to be generated on 64-bit ISA 2.07
	systems and newer, and to take advantage of the ISA 3.0 MFVSRLD
	instruction.
	(vsx_vslo_<mode>): New insn to do VSLO on V2DFmode and V2DImode
	arguments for vec_extract variable element.
	(vsx_extract_<mode>_var, VSX_D iterator): New insn to support
	vec_extract with variable element on V2DFmode and V2DImode
	vectors.
	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Remove
	-mupper-regs-df requirement, since it isn't needed.
	(TARGET_DIRECT_MOVE_64BIT): New macro to say whether we can
	do direct moves on 64-bit systems, which allows optimization of
	vec_extract on 64-bit ISA 2.07 systems and newer.

2016-07-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* gcc/config/rs6000/vector.md: Undo patches 2-4.
	* gcc/config/rs6000/rs6000-protos.h: Likewise.
	* gcc/config/rs6000/rs6000.c: Likewise.
	* gcc/config/rs6000/vsx.md: Likewise.
	* gcc/config/rs6000/altivec.md: Likewise.

2016-07-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Add support for optimizing vec_extract on vector float, vector
	int, vector short, and vector char, with either constant or
	variable elements.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
	support for vec_extract with variable or constant elements for
	vector float, vector int, vector short, or vector char vectors.
	* config/rs6000/vsx.md (vsx_xscvspdp_scalar2): Use ww constraint
	instead of f to allow SFmode in Altivec registers.
	(vsx_extract_v4sf): Use ww constraint instead of f to allow SFmode
	in Altivec registers.  Remove alternative for 0 element that would
	not work on little endian, instead allowing any supported integer
	constant.  Use {} for C++ code, not "{ ... }".
	(sx_extract_v4sf_load): Optimize vec_extracts of V4SFmode if the
	vector happens to be in memory for both constant and variable
	elements.
	(vsx_extract_v4sf_var): Add support for variable vec_extract
	element numbers.
	(vsx_extract_<mode>, VSX_EXTRACT_I iterator): Change
	vsx_extract_<mode> to be a define_expand, which can handle either
	ISA 2.07 or ISA 3.0 vec_extracts.  Rename old ISA 3.0 insn to
	vsx_extract_<mode>_p9.
	(vsx_extract_<mode>_p9, VSX_EXTRACT_I iterator): Likewise.
	(vsx_extract_<mode>_p8, VSX_EXTRACT_I iterator): New insn to
	support vec_extracts for small integer vectors on 64-bit ISA 2.07
	systems.
	(vsx_extract_<mode>_load, VSX_EXTRACT_I iterator): Optimize
	vec_extracts of small integer vectors if the vector happens to be
	in memory for both constant and variable elements.
	(vsx_extract_<mode>_var): Optimize vec_extracts of small integer
	vectors if the element is variable on 64-bit ISA 2.07 systems.

2016-07-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_adjust_vec_address): New
	declaration.
	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): New function
	to adjust a vector memory address to point to one of its
	elements.
	(rs6000_split_vec_extract_var): Handle variable vec_extract coming
	from a memory location by calling rs6000_split_vec_extract_var.
	* config/rs6000/vsx.md (vsx_extract_<mode>_load, VSX_D iterator):
	Rework to load either vector element from memory, or to load a
	variable vector element.
	(vsx_extract_<mode>_var): Add constraints to allow variable
	extracts from memory.

2016-07-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	New declaration.
	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Add support for vec_extract of vector double or vector long having
	a variable element number on 64-bit ISA 2.07 systems or newer.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract):
	Likewise.
	(rs6000_split_vec_extract_var): New function to split a
	vec_extract built-in function with variable element number.
	(rtx_is_swappable_p): Variable vec_extracts and shifts are not
	swappable.
	* config/rs6000/vsx.md (UNSPEC_VSX_VSLO): New unspecs.
	(UNSPEC_VSX_EXTRACT): Likewise.
	(vsx_extract_<mode>, VSX_D iterator): Fix constraints to allow
	direct move instructions to be generated on 64-bit ISA 2.07
	systems and newer, and to take advantage of the ISA 3.0 MFVSRLD
	instruction.
	(vsx_vslo_<mode>): New insn to do VSLO on V2DFmode and V2DImode
	arguments for vec_extract variable element.
	(vsx_extract_<mode>_var, VSX_D iterator): New insn to support
	vec_extract with variable element on V2DFmode and V2DImode
	vectors.
	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Remove
	-mupper-regs-df requirement, since it isn't needed.
	(VEC_EXTRACT_OPTIMIZE_P): New macro to say whether we can optmize
	vec_extract on 64-bit ISA 2.07 systems and newer.

2016-07-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (vec_extract<mode>): Change the calling
	signature of rs6000_expand_vector_extract so that the element
	number is a RTX instead of a constant integer.
	* config/rs6000/rs6000-protos.h (rs6000_expand_vector_extract):
	Likewise.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Likewise.
	(altivec_expand_vec_ext_builtin): Likewise.
	* config/rs6000/altivec.md (reduc_plus_scal_<mode>): Likewise.
	* config/rs6000/vsx.md (vsx_extract_<mode>): Fix spelling of the
	MFVSRLD instruction.

2016-07-26   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 238769

