2019-12-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/linux64.h (PREFIXED_ADDR_SUPPORTED_BY_OS): Set to
	1 to enable prefixed addressing if -mcpu=future.
	(PCREL_SUPPORTED_BY_OS): Set to 1 to enable PC-relative addressing
	if -mcpu=future.
	* config/rs6000/rs6000-cpus.h (ISA_FUTURE_MASKS_SERVER): Do not
	enable -mprefixed-addr or -mpcrel by default.
	(ADDRESSING_FUTURE_MASKS): New macro.
	(OTHER_FUTURE_MASKS): Use ADDRESSING_FUTURE_MASKS.
	* config/rs6000/rs6000.c (PREFIXED_ADDR_SUPPORTED_BY_OS): Disable
	prefixed addressing unless the target OS tm.h says we should
	enable it.
	(PCREL_SUPPORTED_BY_OS): Disable PC-relative addressing unless the
	target OS tm.h says we should enable it.
	(rs6000_debug_reg_global): Print whether prefixed addressing and
	PC-relative addressing is enabled by default if -mcpu=future.
	(rs6000_option_override_internal): Move setting prefixed
	addressing and PC-relative addressing after the sub-target option
	handling is done.  Only enable prefixed addressing or PC-relative
	address on -mcpu=future system if the target OS says to enable
	it.  Disallow prefixed addressing on 32-bit systems or if the
	target object file is not ELF v2.

2019-12-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_reg_to_addr_mask): New helper
	function to identify the address mask of a hard register.
	(rs6000_adjust_vec_address): If we have a PC-relative address and
	a constant vector element number, fold the element number into the
	PC-relative address.

2019-12-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/constraints.md (Q constraint): Update
	documentation.
	* doc/md.tet (PowerPC constraints): Update 'Q' constraint
	documentation.

2019-12-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/vsx.md (vsx_extract_<mode>_var, VSX_D iterator):
	Use 'Q' for memory constraints because we need to do an X-FORM
	load with the variable index.
	(vsx_extract_v4sf_var): Use 'Q' for memory constraints because we
	need to do an X-FORM load with the variable index.
	(vsx_extract_<mode>_var, VSX_EXTRACT_I iterator):Use 'Q' for
	memory constraints because we need to do an X-FORM load with the
	variable index.
	(vsx_extract_<mode>_<VS_scalar>mode_var): Use 'Q' for memory
	constraints because we need to do an X-FORM load with the variable
	index.

2019-12-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): Add support
	for the offset being 34-bits when -mcpu=future is used.

2019-12-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): Add
	assertion to make sure that we don't load an address into a
	temporary that is already used.
	(rs6000_split_vec_extract_var): Do not overwrite the element when
	masking it.  Use the base register temporary instead.

2019-12-18   Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/predicates.md (cint34_operand): Use
	SIGNED_INTEGER_34BIT_P macro.
	* config/rs6000/rs6000.c (num_insns_constant_gpr): Use the
	SIGNED_INTEGER_16BIT_P and SIGNED_INTEGER_34BIT_P macros.
	(address_to_insn_form): Use the SIGNED_INTEGER_16BIT_P and
	SIGNED_INTEGER_34BIT_P macros.
	* config/rs6000/rs6000.h (SIGNED_INTEGER_NBIT_P): New macro.
	(SIGNED_INTEGER_16BIT_P): Rename SIGNED_16BIT_OFFSET_P to be
	SIGNED_INTEGER_34BIT_P.
	(SIGNED_INTEGER_34BIT_P): Rename SIGNED_34BIT_OFFSET_P to be
	SIGNED_INTEGER_34BIT_P.

2019-12-18   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch subversion id 279546
