2015-09-09  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 227594.
	* REVISION: Update subversion id.

2015-09-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #9>
	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Add
	-mfloat128.

2015-09-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7>
	* config/rs6000/rs6000-cpus.h (POWERPC_MASKS): Add -mfloat128.

	* config/rs6000/rs6000.opt (-mfloat128): Change IEEE 128-bit
	switches from -mfloat128-none and -mfloat128-software to
	-mfloat128 and -mno-float128.
	(-mfloat128-): Delete.
	(float128_type_t): Delete.

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define new
	macros to identify if __float128 is available, and whether long
	double is IBM extended double or IEEE 128-bit floating point.

	* config/rs6000/rs6000.c (rs6000_c_mode_for_suffix): Define 'q'
	and 'Q' as the suffixes for __float128 constants.
	(TARGET_C_MODE_FOR_SUFFIX): Likewise.
	(rs6000_hard_regno_mode_ok): Remove tests disallowing IEEE 128-bit
	floating point modes from GPRs if not -mfloat128.
	(rs6000_debug_reg_global): Delete debug support for
	-mfloat128-software and -mfloat128-none.
	(rs6000_setup_reg_addr_masks): IEEE 128-bit in floating point is
	not suitable for auto increment or decrement.
	(rs6000_init_hard_regno_mode_ok): Enable VSX constraints and
	addressing for IEEE 128-bit floating point in VSX registers.
	(rs6000_option_override_internal): Update test for __float128
	support.
	(rs6000_gen_le_vsx_permute): Add support for -mfloat128.
	(init_cumulative_args): Likewise.
	(rs6000_function_arg): Likewise.
	(rs6000_arg_partial_bytes): Likewise.
	(rs6000_init_builtins): Rework __float128 support.
	(init_float128_ibm): Add __float128 support. Split support into
	separate functions for IEEE 128-bit floating point and IBM
	extended double support.
	(init_float128_ieee): Likewise.
	(rs6000_init_libfuncs): Likewise.
	(rs6000_mangle_type): Add __float128 mangling support.
	(rs6000_scalar_mode_supported_p): Rework __float128 support.
	(rs6000_opt_masks): Add -mfloat128 support.
	(chain_contains_only_swaps): Use ALTIVEC_OR_VSX_VECTOR_MODE
	instead of VECTOR_MODE_P in order to treat IEEE1 28-bit floating
	point in VSX registers like vector types, and treat it like a
	128-bit integer.
	(mark_swaps_for_removal): Likewise.
	(rs6000_analyze_swaps): Likewise.

	* config/rs6000/rs6000.h (ALTIVEC_VECTOR_MODE): Include __float128
	modes as 'vector' modes.
	(MODES_TIEABLE_P): Move checking for vector modes above scalar
	floating point, so that __float128 types tie with vector types.
	(struct rs6000_args): Add libcall field for __float128 support
	functions.

	* config/rs6000/rs6000-opts.h (enum float128_type_t): Delete,
	switch to -mfloat128 and -mno-float128 from -mfloat128-software
	and -mfloat128-none.

	* doc/extend.texi (additional floating types): Document PowerPC
	use of __float128 and __ibm128 types.

	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-mfloat128 and -mno-float128.

2015-09-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch from subversion id 227539.
	* REVISION: New file, track subversion id.

