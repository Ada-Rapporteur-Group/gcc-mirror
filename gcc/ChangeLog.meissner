2013-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 200542.
	* REVISION: Update subversion id.

2013-06-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 200470.
	* REVISION: Update subversion id.

2013-06-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (VEC_R): Move reload insns to
	rs6000.md.  Delete VEC_R iterator.
	(reload_<VEC_R:mode>_<P:mptrsize>_store): Likewise.
	(reload_<VEC_R:mode>_<P:mptrsize>_load): Likewise.
	(vec_reload_and_plus_<mptrsize>): Likewise.
	(vec_reload_and_reg_<mptrsize>): Likewise.

	* config/rs6000/rs6000.opt (-mgeneral-addr-int): New debug
	switches for enabling general addresses before reload.
	(-mgeneral-addr-float): Likewise.
	(-mgeneral-addr-vector): Likewise.

	* config/rs6000/rs6000.c (rs6000_addr_mask_type): Move reload
	helper INSN fields into reg_addr structure.  Add data to describe
	the valid data addressing modes for each type in GPRs, FPRs,
	altivec and VSX registers.  Add support for enabling general
	addresses before reload.
	(struct rs6000_reg_addr): Likewise.
	(reg_addr): Likewise.
	(rs6000_vector_reload): Delete old stand-alone arrays for reload
	helpers that are now in the rs6000_reg_addr structure.
	(reload_fpr_gpr): Likewise.
	(reload_gpr_vsx): Likewise.
	(reload_vsx_gpr): Likewise.
	(ADDR_VALID_GPR): Define bits to describe the various address
	modes available.
	(ADDR_VALID_FPR): Likewise.
	(ADDR_VALID_AV): Likewise.
	(ADDR_VALID_VSX): Likewise.
	(ADDR_VALID_MASK): Likewise.
	(ADDR_UPDATE_GPR): Likewise.
	(ADDR_UPDATE_FPR): Likewise.
	(ADDR_UPDATE_MASK): Likewise.
	(ADDR_MULTIPLE_GPR): Likewise.
	(ADDR_MULTIPLE_FPR): Likewise.
	(ADDR_MULTIPLE_AV): Likewise.
	(ADDR_MULTIPLE_VSX): Likewise.
	(ADDR_MULTIPLE_MASK): Likewise.
	(ADDR_INDEXED_GPR): Likewise.
	(ADDR_INDEXED_FPR): Likewise.
	(ADDR_INDEXED_AV): Likewise.
	(ADDR_INDEXED_VSX): Likewise.
	(ADDR_INDEXED_MASK): Likewise.
	(ADDR_GPR_MASK): Likewise.
	(ADDR_FPR_MASK): Likewise.
	(ADDR_AV_MASK): Likewise.
	(ADDR_VSX_MASK): Likewise.
	(rs6000_debug_reg_global): If -mdebug=reg, print valid addressing
	modes.  Print if -mgeneral-addr-{int,float,scalar} used.
	(rs6000_init_address_modes): Setup tables for the valid address
	modes.  Setup reload helper INSNS for secondary reload.
	(rs6000_init_direct_move): Setup tables for direct move support.
	(rs6000_init_hard_regno_mode_ok): Move code for setting up direct
	move and reload helper INSNS to rs6000_init_address_modes and
	rs6000_init_direct_move.  Call those functions.  Use ssize_t
	instead of int on loop iterators.
	(rs6000_option_override_internal): Set -mgeneral-addr-vector if VSX
	and it wasn't set by the user.
	(reg_offset_addressing_ok_p): Add strict argument.  Change all
	callers.  If before reload, and general addressing is enabled for
	the mode, allow offset and indexed addresses all of the time.
	(rs6000_legitimate_offset_address_p): Likewise.
	(avoiding_indexed_address_p): Likewise.
	(rs6000_legitimize_address): Likewise.
	(rs6000_debug_legitimize_reload_address): Likewise.
	(rs6000_legitimate_address_p): Use reg_addr tables to see if the
	mode supports PRE_INC/PRE_DEC/PRE_MODIFY.  Allow more general
	addresses for TImode.
	(rs6000_secondary_reload): Move rs6000_vector_reload array into
	reg_addr.
	(rs6000_output_move_128bit): Do not use %y on ls/stq
	instructions.

	* config/rs6000/rs6000.md (RELOAD): Move vector reload helper
	functions from vector.md to rs6000.md.  Make them more general,
	and support for scalar types.
	(reload_<RELOAD:mode>_<P:mptrsize>_store): Likewise.
	(reload_<RELOAD:mode>_<P:mptrsize>_load): Likewise.
	(vec_reload_and_plus_<mptrsize>): Likewise.
	(vec_reload_and_reg_<mptrsize>): Likewise.

2013-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 200307.
	* REVISION: Update subversion id.

2013-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 200268.
	* REVISION: Update subversion id.

2013-06-19  Michael Meissner  <meissner@linux.vnet.ibm.com>

	(prefix patch)
	* configure.ac (--with-extra-prefix=): Add configure time switches
	to add additional prefix directories for the compiler to search for
	extra executables, startfiles, and directories to add to the list
	of shared library locations.
	(--with-extra-exec-prefix=): Likewise.
	(--with-extra-include-prefix=): Likewise.
	(--with-extra-startfile-prefix=): Likewise.
	(--with-extra-rpath-prefix=): Likewise.
	* configure: Regenerate.

	* doc/install.texi (--with-extra-prefix=): Document new configure
	switches.
	(--with-extra-exec-prefix=): Likewise.
	(--with-extra-include-prefix=): Likewise.
	(--with-extra-startfile-prefix=): Likewise.
	(--with-extra-rpath-prefix=): Likewise.

	* gcc.c (LINK_RPATH_DIRS_SPEC): Add support for configuration time
	additional executable, startfile, include, and shared library
	location prefixes.  Add %find-dynamic-linker(), %extra-rpath-dirs(),
	%extra-cpu-dirs() as spec functions.
	(LINK_COMMAND_SPEC): Likewise.
	(CONFIGURE_INCLUDE_PREFIX): Likewise.
	(CONFIGURE_STARTFILE_PREFIX): Likewise.
	(configure_include_prefix): Likewise.
	(configure_startfile_prefix): Likewise.
	(configure_exec_prefix): Likewise.
	(static_spec_functions): Likewise.
	(IS_STD_DIR): Likewise.
	(config_rpath): Likewise.
	(build_rpath_or_cpu_dirs): Likewise.
	(get_rpath_dirs): Likewise.
	(extra_rpath_dirs_spec_function): Likewsie.
	(extra_cpu_dirs_spec_function): Likewise.
	(find_dynamic_linker_spec_function): Likewise.
	(add_multiple_prefix): New function that is like add_prefix, but
	splits the prefix at PATH_SEPARATOR.
	(process_command): Simplify processing COMPILER_PATH, LPATH, and
	LIBRARY_PATH_ENV environment variables by using the function
	add_multiple_prefix to do the splitting of the separate prefixes.
	Add support for the configuration switch to add new executable,
	startfile, include, and shared library prefixes.

	* gcc.h (extra_cpu_dirs_spec_function): Add declaration.

	* config.in (CONFIGURE_EXEC_PREFIX): Add defines for the configure
	switches to add executable, startfile, include, and shared library
	configuration directories.
	(CONFIGURE_INCLUDE_PREFIX): Likewise.
	(CONFIGURE_STARTFILE_PREFIX): Likewise.
	(CONFIGURE_RPATH_PREFIX): Likewise.

	* config/rs6000/x-rs6000 (driver-rs6000.o): Add $(GCC_H)
	dependency.

	* config/rs6000/linux64.h (GLIBC_DYNAMIC_LINKER32): If
	--with-extra-startfile-prefix or --with-extra-prefix was used, use
	%find-dynamic-linker() to find the dynamic linker in the startfile
	prefixes.
	(GLIBC_DYNAMIC_LINKER64): Likewise.
	(LINUX_EXTRA_STATIC_LIBDIRS64): Likewise.
	(LINK_OS_LINUX_SPEC32): Likewise.
	(LINK_OS_LINUX_SPEC64): Likewise.
	* config/rs6000/rs6000.h (EXTRA_SPEC_FUNCTIONS): Likewise.
	(LOCAL_CPU_EXTR_SPEC_FUNCTIONS): Likewise.
	* config/rs6000/sysv4.h (GLIBC_DYNAMIC_LINKER): Likewise.
	(LINUX_EXTRA_STATIC_LIBDIRS32): Likewise.
	(LINK_OS_LINUX_SPEC): Likewise.
	(rs6000_extra_static_libdirs): Likewise.
	(SUBTARGET_EXTRA_SPEC_FUNCTIONS): Likewise.

	* config/rs6000/driver-rs6000.c (toplevel): Include gcc.h.
	(rs6000_extra_static_libdirs): If we have extra configure
	startfile prefixes, look for a machine specific file as a
	subdirectory in the startfile prefixes if the user used
	-mcpu=<xxx>.

2013-06-19  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch from subversion id 200216.
	* REVISION: New file.
