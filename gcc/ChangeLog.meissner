2013-11-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 204363.
	* REVISION: Update subversion id.

	* config/rs6000/rs6000.c (reg_addr): Delete 10/30 reload_const
	changes.
	(rs6000_debug_print_mode): Likewise.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	(rs6000_secondary_reload_constant): Likewise.
	(rs6000_secondary_reload): Likewise.

	* config/rs6000/rs6000.md (mov<mode>_hardfloat32): Drop support of
	non-zero floating point constants if we have floating point
	registers.
	(mov<mode>_hardfloat64): Likewise.
	(reload_<SFDF:mode>_<P:mptrsize>_const): Delete 10/30 reload_const
	changes.

2013-10-31  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 204267.
	* REVISION: Update subversion id.

2013-10-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (reg_addr): Add reload_const field for
	recording helper function to reload constants.  Also add
	scalar_in_vmx_p field to simplify tests when SF/DFmode can go into
	Altivec registers.
	(rs6000_debug_print_mode): Likewise.
	(rs6000_hard_regno_mode_ok): Likewise.
	(rs6000_setup_reg_addr_masks): Likewise.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	(rs6000_preferred_reload_class): Likewise.
	(rs6000_secondary_reload_toc_costs): New function for secondary
	reload to figure out how much TOC addressing costs.
	(rs6000_secondary_reload_memory): Change calling sequence to
	return extra costs as an argument instead of through a pointer.
	Return negative if the insn is not in the form that is handled.
	(rs6000_secondary_reload_constant): New secondary reload helper
	for moving a floating point constant to a register.
	(rs6000_secondary_reload): Change rs6000_secondary_reload_memory
	calling sequence, and call rs6000_secondary_reload_constant.
	(rs6000_secondary_reload_new): Add preliminary support for
	SYMBOL_REF, LABEL_REF, and CONST.
	(print_operand): Use fatal_insn temporarily.

	* config/rs6000/rs6000.md (cmp<mode>_fpr): Don't use %x<n> for
	condition code register.
	(extendsfdf2_fpr): Use wu constraint, not wv.
	(copysign<mode>3_fcpsgn): Use <Fvsx>, not <VSs>.
	(movdi_internal64): Put spaces in the constraints to make it
	easier to debug.  Use wg constraint, not wa.  Don't use ws
	constraint on DImode.
	(toc_nosplit<mode>): Initial support for TOC operations to support
	DF/SFmode in Altivec registers.
	(reload_<SFDF:mode>_<P:mptrsize>_const): New reload helper
	functions for loading floating point constants to Altivec
	registers.

2013-10-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (VSX_REG_CLASS_P): Move VSX_REG_CLASS_P
	here from rs6000.h, so we can use reg_class_to_reg_type to simply
	testing which reg classes are VSX related.  Add GPR_REG_CLASS_P to
	recognize GENERAL_REGS & BASE_REGS.  Change code that tests for
	either GENERAL_REGS or BASE_REGS to use GPR_REG_CLASS_P.
	(GPR_REG_CLASS_P): Likewise.
	(rs6000_secondary_reload_memory): Likewise.
	(rs6000_secondary_reload): Likewise.
	(rs6000_secondary_reload_gpr): Likewise.
	(rs6000_secondary_reload_class): Likewise.
	(rs6000_preferred_reload_class): Group all constant processing
	under a if (CONSTANT_P (...)) test.

	* config/rs6000/rs6000.h (VSX_REG_CLASS_P): Move to rs6000.c.

2013-10-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203983.
	* REVISION: Update subversion number.

	* config/rs6000/rs6000.md (mov<mode>_hardfloat64): Make
	constraints easier to debug.
	(movdi_internal64): Likewise.

	* config/rs6000/rs6000.c (RELOAD_REG_AND_M16): New address mask
	for whether Altivec load/stores are supported.  Initialize it on
	vector types in the Altivec registers.
	(rs6000_debug_print_mode): Likewise.
	(rs6000_setup_reg_addr_masks):
	(rs6000_secondary_reload_memory): Print more information with
	-mdebug=addr.
	(rs6000_secondary_reload_new): Preliminary new secondary reload
	support.
	(rs6000_secondary_reload_inner): Likewise.

2013-10-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (VEC_R): Delete, move reload patterns to
	rs6000.md.
	(reload_<VEC_R:mode>_<P:mptrsize>_store): Likewise.
	(reload_<VEC_R:mode>_<P:mptrsize>_load): Likewise.

	* config/rs6000/rs6000-protos.h (merge_peephole2_move_p): New
	declaration.

	* config/rs6000/rs6000.c (struct rs6000_reg_addr): Add temporary
	field for testing new reload support.
	(rs6000_init_hard_regno_mode_ok): #if out code setting DFmode to
	use VSX addressing if -mupper-regs-df.
	(rs6000_init_hard_regno_mode_ok): Drop testing -mvsx and
	-mpower8-vector for -mupper-regs-{df,sf}.  Set tempoary
	new_reload_p flag for SF/DF mode.  Drop setting SDmode for reload
	support in 32 bit.
	(merge_peephole2_move_p): New function to determine if two moves
	can be merged together in the peephole2 pass.  Don't allow
	load/stores to the floating point registers to be combined with
	moves to the Altivec registers for addresses with offsets.
	(rs6000_secondary_reload_memory): New function to determine if we
	need a secondary reload for modes that have reload helper
	functions.
	(rs6000_secondary_reload): Call rs6000_secondary_reload_memory.
	(rs6000_preferred_reload_class): For scalar addresses with offsets
	being loaded into VSX registers, prefer FPR registers instead.
	(rs6000_secondary_reload_class): Remove code that tried to
	restrict scalar loads to FPR registers here, use the preferred
	reload class for this.

	* config/rs6000/vsx.md (vsx_xscvdpspn): Add support for
	-mupper-regs-sf.
	(vsx_xscvspdpn): Likewise.
	(vsx_xscvdpspn_scalar): Likewise.

	* config/rs6000/rs6000.md (RELOAD): Move setting reload helper
	insn functions here from vector.md.
	(reload_<RELOAD:mode>_<P:mptrsize>_store): Likewise.
	(reload_<RELOAD:mode>_<P:mptrsize>_load): Likewise.
	(SF/DF move/move peephole2): Combine peephole2s that combine moves
	for SF/DF to use an iterator.  Call merge_peephole2_move_p to
	validate the move.

2013-10-17  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203792.
	* REVISION: Update subversion id.

2013-10-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203569.
	* REVISION: Update subversion id.

2013-10-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203459.
	* REVISION: Update subversion id.

	* config/rs6000/rs6000.c (rs6000_init_hard_regno_mode_ok): Don't
	set reload functions for DD/SDmode.  Only set reload functions for
	SFmode if -mupper-regs-sf.
	(rs6000_option_override_internal): Require -mvsx if
	-mupper-regs-df.  Require -mpower8-vector if -mupper-regs-sf.
	(rs6000_secondary_reload): Add done flag.

	PR target/58673
	* config/rs6000/rs6000.c (rs6000_legitimate_address_p): Only
	restrict TImode addresses to single indirect registers if both
	-mquad-memory and -mvsx-timode are used.
	(rs6000_output_move_128bit): Use quad_load_store_p to determine if
	we should emit load/store quad.  Remove using %y for quad memory
	addresses.

	* config/rs6000/rs6000.md (mov<mode>_ppc64, TI/PTImode): Add
	constraints to allow load/store quad on machines where TImode is
	not allowed in VSX registers.

2013-10-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203283.
	* REVISION: Update subversion id.

2013-10-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (FIRST_RELOAD_REG_CLASS): Define so we
	can iterate over GPR, FPR, and Altivec reload register classes and
	skip the ANY field.
	(LAST_RELOAD_REG_CLASS): Likewise.
	(rs6000_debug_print_mode): Print whether offset addresses are
	allowed.
	(rs6000_setup_reg_addr_masks): Don't allow update forms if scalar
	floating point can occupy the Altivec registers.  Restrict SD
	addressing to just REG+REG if LFIWZX and STFIWZX are available.
	Only set valid bit if mode can really go in the reload register
	class.

2013-10-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (enum rs6000_reload_reg_type): Add new
	fields to the reg_addr array that describes the valid addressing
	mode for any register, general purpose registers, floating point
	registers, and Altivec registers.
	(struct reload_reg_map_type): Likewise.
	(reload_reg_map_type): Likewise.
	(RELOAD_REG_VALID): Likewise.
	(RELOAD_REG_MULTIPLE): Likewise.
	(RELOAD_REG_INDEXED): Likewise.
	(RELOAD_REG_OFFSET): Likewise.
	(RELOAD_REG_PRE_INCDEC): Likewise.
	(RELOAD_REG_PRE_MODIFY): Likewise.
	(reg_addr): Likewise.
	(mode_supports_pre_incdec_p): New helper functions to say whether
	a given mode supports PRE_INC, PRE_DEC, and PRE_MODIFY.
	(mode_supports_pre_modify_p): Likewise.
	(rs6000_debug_vector_unit): Rearrange the -mdebug=reg output to
	print the valid address mode bits for each mode.
	(rs6000_debug_print_mode): Likewise.
	(rs6000_debug_reg_global): Likewise.
	(rs6000_setup_reg_addr_masks): New function to set up the address
	mask bits for each type.
	(rs6000_init_hard_regno_mode_ok): Use memset to clear arrays.
	Call rs6000_setup_reg_addr_masks to set up the address mask bits.
	(rs6000_legitimate_address_p): Use mode_supports_pre_incdec_p and
	mode_supports_pre_modify_p to determine if PRE_INC, PRE_DEC, and
	PRE_MODIFY are supported.
	(rs6000_print_options_internal): Tweak the debug output slightly.

2013-10-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 203166.  Includes all changes through 9/26.
	* REVISION: Update subversion id.

2013-09-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch from subversion id 202787.
	* REVISION: New file, track subversion id.

