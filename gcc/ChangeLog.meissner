==================== work106, patch #4 ====================

PR target/107299: Update IEEE 128-bit types in PowerPC libgcc.

This patch updates the IEEE 128-bit types in libgcc.

At the moment, we cannot build GCC when the target uses IEEE 128-bit long
doubles, such as building the compiler for a native Fedora 36 system.  The
build dies when it is trying to build the _mulkc3.c and _divkc3 modules.

This patch changes the IEEE 128-bit type (TFtype) in the IEEE 128-bit support
to use either _Float128 or long double.  Previously we would use the __float128
type.  In addition, the TCtype will use the same type along with _Complex.

While it is desirable to ultimately have __float128 and _Float128 use the same
internal type and mode within GCC, at present if you use the option
-mabi=ieeelongdouble, the __float128 type will use the long double type.  We
get an internal compiler error if we combine the signbitf128 built-in with a
long double type.

I've gone through several iterations of trying to fix this within GCC, and
there are various problems that have come up.  I developed this alternative
patch that changes libgcc so that it does not tickle the issue.  I hope we can
fix the compiler at some point, but right now, this is preventing people on
Fedora 36 systems from building compilers where the default long double is IEEE
128-bit.

I changed the three functions that deal with complex multiply and complex divide
support (_mulkc3, _divkc3, and float128-ifunc) to always be compiled with IEEE
128-bit long double.  This is to be type correct, and avoid mismatch declaration
errors from the compiler.

2023-01-18   Michael Meissner  <meissner@linux.ibm.com>

	PR target/107299
	* config/rs6000/_divkc3.c (top level): Require that long double is IEEE
	128-bit.
	(COPYSIGN): Use long double built-in.
	(INFINITY): Likewise.
	(FABS): Likewise.
	(RBIG): Use TFmode constants, not KFmode.
	(RMIN): Likewise.
	(RMIN2): Likewise.
	(RMINSCAL): Likewise.
	(RMAX2): Likewise.
	* config/rs6000/_mulkc3.c (top level): Require that long double is IEEE
	128-bit.
	(COPYSIGN): Use long double built-in.
	(INFINITY): Likewise.
	* config/rs6000/quad-float128.h (TF): Remove definition.
	(TFtype): New macro, use _Float128 or long double.
	(TCtype): Change to macro, use _Complex _Float128 or _Complex long
	double.
	(__mulkc3_sw): Only declare if long double is IEEE 128-bit.
	(__divkc3_sw): Likewise.
	(__mulkc3_hw): Likewise.
	(__divkc3_hw): Likewise.
	(__mulkc3): Likewise.
	(__divkc3): Likewise.
	* config/rs6000/t-rs6000 (fp128_cmuldiv): Add support to build IEEE
	128-bit complex multiply/divide with explicit IEEE-128 long double.
	(fp128_cmuldiv_static_obj): Likewise.
	(fp128_cmuldiv_shared_obj): Likewise.
	(fp128_cmuldiv_obj): Likewise.
	(fp128_ppc_funcs): Likewise.
	(FP128_CFLAGS_CMULDIV): Likewise.
	* config/rs6000/t-rs6000-hw (fp128_hardfp_src): Delete, unused.
	(fp128_cmuldiv_funcs): Add support to build IEEE 128-bit complex
	multiply/divide with explicit IEEE-128 long double.
	(fp128_cmuldiv_static_obj): Likewise.
	(fp128_cmuldiv_shared_obj): Likewise.
	(fp128_cmuldiv_obj): Likewise.
	(fp128_hw_funcs): Likewise.
	(fp128_ifunc_funcs): Delete, unused.
	(fp128_ifunc_src): Likewise.
	* libgcc2.h (TFtype): Allow md files to override this.
	(TCtype): Likewise.
	* soft-fp/quad.h (TFtype): Likewise.

==================== work106, patch #3 was reverted ====================

==================== work106, patch #2 was reverted ====================

==================== work106, patch #1 was reverted ====================

==================== work106, branch head ====================

2023-01-12   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

