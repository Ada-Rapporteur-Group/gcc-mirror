work042.patch019:
2021-03-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (xxspltiw_v8hi): New insn.
	* config/rs6000/rs6000.c (xxspltiw_constant_p): Add support for
	V8HImode constants.
	(output_vec_const_move): Add support for V8HImode constants.
	(rs6000_expand_vector_init): Use VEC_DUPLICATE for identical
	vector V8HI constants.

work042.patch018:
2021-03-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (UNSPEC_XXSPLTIW): Delete.
	(xxspltiw_v4sf): Rewrite to use VEC_DUPLICATE.
	(xxspltiw_v4sf_inst): Delete.
	* config/rs6000/rs6000.c (xxspltiw_constant_p): Add V4SFmode
	support.
	(output_vec_const_move): Add support for V4SFmode constants.
	(rs6000_expand_vector_init): If we have XXSPLTIW, use
	VEC_DUPLICATE to create a vector of SF constants that are all the
	same.

work042.patch015:
2021-03-19  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (xxspltiw_v4si): Rewrite to use
	vec_duplicate.
	* config/rs6000/predicates.md (easy_vector_constant): Add support
	for constants we can create with XXSPLTIW.
	* config/rs6000/rs6000-protos.h (xxspltiw_constant_p): New
	declaration.
	* config/rs6000/rs6000.c (xxspltiw_constant_p): New function.
	(xxspltib_constant_p): If we can generate XXSPLTIW don't return
	true for generating XXSPLTIB and extend operations.
	(output_vec_const_move): Add support for generating XXSPLTIW for
	V4SI moves.
	(rs6000_expand_vector_init): Add support for generating XXSPLTIW
	for V4SI moves.

work042.patch014:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (xxspltiw_v4si): Use vecperm
	attribute.
	(xxspltiw_v4sf_inst): Use vecperm attribute.
	(xxspltidp_v2df_inst): Use vecperm attribute.
	(xxsplti32dx_v4si_inst): Use vecperm attribute.
	(xxsplti32dx_v4sf_inst): Use vecperm attribute.

work042.patch013:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/altivec.md (xxspltiw_v4si): Set prefixed and
	prefixed_prepend_p attributes.
	(xxspltiw_v4sf): Set prefixed and prefixed_prepend_p attributes.
	(xxspltidp_v2df): Set prefixed and prefixed_prepend_p attributes.
	(xxsplti32dx_v4si): Set prefixed and prefixed_prepend_p
	attributes.
	(xxsplti32dx_v4sf): Set prefixed and prefixed_prepend_p
	attributes.
	* config/rs6000/rs6000.c (rs6000_final_prescan_insn): If the
	prefixed_prepend_p attribute is no, do not add a leading 'p'.
	* config/rs6000/rs6000.md (prefixed_prepend_p): New attribute.

work042.patch012:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_const_f32_to_i32): Change
	return type to long.
	* config/rs6000/rs6000.c (rs6000_const_f32_to_i32): Change return
	type to long.

work042.patch011:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config.gcc (powerpc*-*-*, rs6000-*-*): Do not set
	LINK_OS_EXTRA_SPEC32 or LINK_OS_EXTRA_SPEC664 for the Advance
	Toolchain.

work042.patch010:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): If long
	double is IEEE-128 map the nanq built-in functions to the long
	double function, not the f128 function.

work042.patch008:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000-builtin.def (BU_IBM128_2): Rename
	RS6000_BTM_IBM128 from RS6000_BTM_FLOAT128.
	* config/rs6000/rs6000-call.c (rs6000_invalid_builtin): Update
	error message for __ibm128 built-in functions.
	(rs6000_init_builtins): Create the __ibm128 keyword on older
	systems where long double uses the IBM extended double format,
	even if they don't support IEEE 128-bit floating point.
	* config/rs6000/rs6000.c (rs6000_builtin_mask_calculate): Rename
	RS6000_BTM_IBM128 from RS6000_BTM_FLOAT128.
	(rs6000_builtin_mask_names): Rename RS6000_BTM_IBM128 from
	RS6000_BTM_FLOAT128.
	* config/rs6000/rs6000.h (TARGET_IBM128): New macro.
	(RS6000_BTM_IBM128): Rename from RS6000_BTM_FLOAT128.
	(RS6000_BTM_COMMON): Rename RS6000_BTM_IBM128 from
	RS6000_BTM_FLOAT128.

work042.patch004:
2021-03-18 Michael Meissner  <meissner@linux.ibm.com>

        * config/rs6000/rs6000.c (have_compare_and_set_mask): Add IEEE
        128-bit floating point types.
        * config/rs6000/rs6000.md (FPMASK): New iterator.
        (FPMASK2): New iterator.
        (Fv mode attribute): Add KFmode and TFmode.
        (mov<FPMASK:mode><FPMASK2:mode>cc_fpmask): Replace
        mov<SFDF:mode><SFDF2:mode>cc_p9.  Add IEEE 128-bit fp support.
        (mov<FPMASK:mode><FPMASK2:mode>cc_invert_fpmask): Replace
        mov<SFDF:mode><SFDF2:mode>cc_invert_p9.  Add IEEE 128-bit fp
        support.
        (fpmask<mode>): Add IEEE 128-bit fp support.  Enable generator to
        build te RTL.
        (xxsel<mode>): Add IEEE 128-bit fp support.  Enable generator to
        build te RTL.

work042.patch003:
2021-03-18  Michael Meissner  <meissner@linux.ibm.com>

	* config/rs6000/rs6000.c (rs6000_emit_minmax): Add support for ISA
	3.1 IEEE 128-bit floating point xsmaxcqp and xsmincqp instructions.
	* config/rs6000/rs60000.h (FLOAT128_MIN_MAX_FPMASK_P): New macro.
	* config/rs6000/rs6000.md (s<minmax><mode>3): Add support for the
	ISA 3.1 IEEE 128-bit minimum and maximum instructions.

2021-03-18   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

