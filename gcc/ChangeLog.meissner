2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7k>
	* config/rs6000/rs6000.c (TARGET_INVALID_BINARY_OP): Do not allow
	inter-mixing of IEEE 128-bit floating point with IBM extended
	double floating point.
	(rs6000_invalid_binary_op): Likewise.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7j>
	* config/rs6000/rs6000.c (TARGET_C_MODE_FOR_SUFFIX): Define 'q'
	and 'Q' as the suffix to use for IEEE 128-bit floating point
	constants with -mfloat128.
	(rs6000_c_mode_for_suffix): Likewise.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7i>
	* config/rs6000/rs6000.c (rs6000_generate_compare): For IEEE
	128-bit floating point comparisons, call the unordered comparison
	function instead of the ordered comparison function.
	(rs6000_expand_float128_convert): Deal with operands that are
	memory operands. Restructure the code to use a switch statement on
	the mode. Add support for TFmode defaulting to either IBM extended
	double or IEEE 128-bit floating point. If the underlying types are
	the same, use a move instead of a conversion function.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7h>
	* config/rs6000/rs6000.c (rs6000_init_libfuncs): Split libfunc
	setup into 3 functions: init_float128_ibm, init_float128_ieee, and
	rs6000_init_libfuncs. If -mfloat128, add IFmode functions for all
	of the traditional names that TFmode uses for handling IEEE
	extended double. If -mfloat128, add KFmode functions for all of
	the emulation functions. If -mabi=ieeelongdouble and -mfloat128,
	make TFmode use the same emulation functions as KFmode.
	(init_float128_ibm): Likewise.
	(init_float128_ieee): Likewise.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7g>
	* config/rs6000/rs6000.c (init_cumulative_args): Initialize
	libcall field in CUMULATIVE_ARGS.
	(rs6000_function_arg): Treat library functions as if they had
	prototypes to prevent IEEE 128-bit support functions from passing
	arguments in both GPRs and vector registers.
	(rs6000_arg_partial_bytes): Likewise.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7f>
	* config/rs6000/predicates.md (reg_or_indexed_operand): Allow
	SUBREGs.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7e>
	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	__FLOAT128__ if -mfloat128. Define __LONG_DOUBLE_IEEE128__ if long
	double is IEEE 128-bit. Define __LONG_DOUBLE_IBM128__ if long
	double is IBM extended double.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7d>
	* config/rs6000/rs6000.opt (-mfloat128-*): Delete old
	-mfloat128-none and -mfloat128-software switches, and replace it
	with a binary -mfloat128 switch.
	(-mfloat128): Likewise.

	* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Allow
	128-bit floating point types in GPRs, even if the appropriate
	option enabling the type was not used.
	(rs6000_debug_reg_global): Remove -mfloat128-{software,none}
	debugging.
	(rs6000_setup_reg_addr_masks): Do not allow pre-increment and
	pre-decrement on IEEE 128-bit floating point values.
	(rs6000_init_hard_regno_mode_ok): Change test for whether TFmode
	is IEEE 128-bit floating point.
	(rs6000_init_hard_regno_mode_ok): Add reload handlers for IEEE
	128-bit floating point types that can go in vector registers.
	(rs6000_option_override_internal): Change -mfloat128-none and
	-mfloat128-software to -mfloat128, and move code to be near other
	VSX option handling.
	(rs6000_option_override_internal): Disable -mfloat128 if we don't
	have the Altivec ABI.
	(rs6000_init_builtins): Don't make TFmode use either IFmode or
	KFmode floating point nodes. Instead, have three separate nodes.
	(rs6000_scalar_mode_supported_p): Add support for IFmode to allow
	eventually moving the long double default to IEEE 128-bit floating
	point.
	(rs6000_opt_masks): Add -mfloat128.
	(struct rs6000_opt_var): Fix typo.

2015-10-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<patch #7c>
	* config/rs6000/rs6000.h (ALTIVEC_VECTOR_MODE): Add IEEE 128-bit
	floating point modes that can go in vector registers.
	(MODES_TIEABLE_P): Move tests for vector modes before tests for
	scalar floating point, so that IEEE 128-bit floating point that
	can go in vector registers bind with vectors and not FP.
	(struct rs6000_args): Add libcall field.

2015-10-22   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 229181

