==================== work106, patch #6 ====================

PR target/107299: Fix build issue when long double is IEEE 128-bit

This patch updates the IEEE 128-bit types used in libgcc.

At the moment, we cannot build GCC when the target uses IEEE 128-bit long
doubles, such as building the compiler for a native Fedora 36 system.  The
build dies when it is trying to build the _mulkc3.c and _divkc3 modules.

This patch creates special types for declaring complex IEEE 128-bit multiply and
divide support to use either _Float128 or long double, depending on whether long
double is IBM or IEEE.

It also uses the correct built-in functions in the libgcc complex IEEE 128-bit
multiply and divide support.  This fixes the problems when long double types are
used with explicit f128 built-in functions.

While it is desirable to ultimately have __float128 and _Float128 use the same
internal type and mode within GCC, at present if you use the option
-mabi=ieeelongdouble, the __float128 type will use the long double type and not
the _Float128 type.  We get an internal compiler error if we combine the
signbitf128 built-in with a long double type.

I've gone through several iterations of trying to fix this within GCC, and
there are various problems that have come up.  I developed this alternative
patch that changes libgcc so that it does not tickle the issue.  I hope we can
fix the compiler at some point, but right now, this is preventing people on
Fedora 36 systems from building compilers where the default long double is IEEE
128-bit.

I changed the three functions that deal with complex multiply and complex divide
support (_mulkc3, _divkc3, and float128-ifunc) to always be compiled with IEEE
128-bit long double.  This is to be type correct, and avoid mismatch declaration
errors from the compiler.

2023-01-18   Michael Meissner  <meissner@linux.ibm.com>

	PR target/107299
	* config/rs6000/_divkc3.c (COPYSIGN): Use the correct built-in based on
	whether long double is IBM or IEEE.
	(INFINITY): Likewise.
	(FABS): Likewise.
	(__divkc3): Use either _Float128 or long double for the types to match
	whether long double is IBM or IEEE.
	* config/rs6000/_mulkc3.c (COPYSIGN): Use the correct built-in based on
	whether long double is IBM or IEEE.
	(INFINITY): Likewise.
	(__mulkc3): Use either _Float128 or long double for the types to match
	whether long double is IBM or IEEE.
	* config/rs6000/float128-ifunc.c (__mulkc3): Use either _Float128 or
	long double for the types to match whether long double is IBM or IEEE.
	(__divkc3): Likewise.
	* config/rs6000/quad-float128.h (TC): Define to switch complex IEEE
	128-bit type in machine independent code via mode attribute.
	(TFtype_cmuldiv): New macro.
	(TCtype_cmuldiv): Likewise.
	(__mulkc3_sw): Use TFtype_cmuldiv and TCtype_cmuldiv.
	(__divkc3_sw): Likewise.
	(__mulkc3_hw): Likewise.
	(__divkc3_hw): Likewise.
	(__mulkc3): Likewise.
	(__divkc3): Likewise.

==================== work106, patch #5 was reverted ====================

==================== work106, patch #4 was reverted ====================

==================== work106, patch #3 was reverted ====================

==================== work106, patch #2 was reverted ====================

==================== work106, patch #1 was reverted ====================

==================== work106, branch head ====================

2023-01-12   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

