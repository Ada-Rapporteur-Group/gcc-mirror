2013-11-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md (wi constraint): New constraint for
	holding DImode in FP/VSX registers.
	(wy constraint): Clarify documentation.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Add new wi
	constraint for holding DImode in FP/VSX registers.  Clarify
	documentation for ww, wy constraints.
	(rs6000_init_hard_regno_mode_ok): Likewise.

	* config/rs6000/vsx.md (VSr mode attribute): Use ww constraint
	everywhere a SFmode can be used with a VSX instruction.  Use wi
	constraint everywhere a DImode can be used in a FPR or VSX
	register.  Do not use wa constraint for DFmode, SFmode, DImode,
	only use ws/ww/wi as appropriate since lra can abort if a register
	class is used that the mode cannot occupy.  Update comments.  Add
	VSj2 mode attribute for the desired register class appropriate to
	the integer side of float/int conversions.  Add VSj3 mode
	attribute for any register class appropriate to the integer side
	of float/int conversions.
	(VSj2): Likewise.
	(VSj3): Likewise.
	(VSr4): Likewise.
	(VSr5): Likewise.
	(vsx_tdiv<mode>3_internal): Likewise.
	(vsx_tsqrt<mode>2_internal): Likewise.
	(vsx_float<VSi><mode>2): Likewise.
	(vsx_floatuns<VSi><mode>2): Likewise.
	(vsx_fix_trunc<mode><VSi>2): Likewise.
	(vsx_fixuns_trunc<mode><VSi>2): Likewise.
	(vsx_x<VSv>r<VSs>i): Likewise.
	(vsx_b2trunc<mode>2): Likewise.
	(vsx_floor<mode>2): Likewise.
	(vsx_<VS_spdp_insn>): Likewise.
	(vsx_xscvspdp): Likewise.
	(vsx_xscvdpsp_scalar): Likewise.
	(vsx_xscvspdp_scalar2): Likewise.
	(vsx_xscvdpspn_scalar): Likewise.
	(vsx_xscvspdpn_directmove): Likewise.
	(vsx_xvcvspuxds): Likewise.
	(vsx_concat_<mode>): Likewise.
	(vsx_extract_<mode>): Likewise.
	(vsx_extract_<mode>_zero): Likewise.
	(vsx_extract_v4sf): Likewise.
	(vsx_splat_<mode>): Likewise.
	(vsx_reduc_<VEC_reduc_name>_v2df_scalar): Likewise.
	(vsx_reduc_<VEC_reduc_name>_v4sf_scalar): Likewise.

	* config/rs6000/rs6000.h (enum rs6000_reg_class_enum): Add
	RS6000_CONSTRAINT_wi.

	* config/rs6000/rs0600.md (rreg): Update comments.  Use ww
	constraint for SFmode that uses VSX instructions, wu constraint
	for SFmode load/stores to Altivec registers, wv for DFmode
	load/stores to Altivec registers, wi constraint for DImode in
	FP/VSX registers.  New mode attribute rreg3 to select on wu/wv
	constraints.
	(rreg2 mode attribute): Likewise.
	(rreg3 mode attribute): Likewise.
	(lfiwax): Likewise.
	(floatsi<mode>2_lfiwax_mem): Likewise.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(fctiwuz_<mode>): Restrict to FPR registers.

	* lra-constraints.c (lra_constraints): Improve debugging by using
	fatal_insn to dump the insn instead of calling internal_error.

	* doc/md.texi (PowerPC and IBM RS6000): Document new wi
	constraint.  Update wy constraint documentation.

2013-11-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/59054
	* config/rs6000/rs6000.md (movdi_internal32): Eliminate
	constraints that would allow DImode into the traditional Altivec
	registers, but cause undesirable code generation when loading 0 as
	a constant.
	(movdi_internal64): Likewise.

2013-11-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* fortran/f95-lang.c: Merge in changes from 204372 to fix the
	build.

	* config/rs6000/vector.md (VEC_R): Delete, move vector reload
	insns to rs6000.md.
	(reload_<VEC_R:mode>_<P:mptrsize>_store): Likewise.
	(reload_<VEC_R:mode>_<P:mptrsize>_load): Likewise.

	* config/rs6000/rs6000-protos.h (merge_peephole2_move_p): Add
	declaration.

	* config/rs6000/rs6000.d (VSX_REG_CLASS_P): Move here from
	rs6000.h and re-implement it to use the reg_class_to_reg_type
	array.
	(GPR_REG_CLASS_P): New macro to identify register classes that map
	into GPRs.
	(RELOAD_REG_AND_M16): New mask to say that Altivec AND -16 can be
	done on Altivec registers.
	(struct rs6000_reg_addr): Add scalar_in_vmx_p field to simplify
	tests for SF/DF in Altivec registers.  Add new_reload_p field to
	identify data types using the new reload interface.
	(rs6000_hard_regno_mode_ok): Likewise.
	(rs6000_debug_print_mode): Add support for RELOAD_REG_AND_M16, and
	scalar_in_vmx_p,/new_reload_p fields.
	(rs6000_setup_reg_addr_masks): Simplify SF/DF tests with
	scalar_in_vmx_p field.
	(rs6000_init_hard_regno_mode_ok): Disable setting VSX memory mode
	for DFmode if -mupper-regs-df.  Know that -mupper-regs-df depends
	on VSX, and -mupper-regs-sf depends on -mpower8-vector.
	(rs6000_option_override_internal): Require -mupper-regs-df set
	-mvsx, and -mupper-regs-sf set -mpower8-vector.
	(merge_peephole2_move_p): New test to prevent peephole2 from
	merging a SF/DF load with offsets with a move to an Altivec
	register, which does not have load with offsets.
	(rs6000_secondary_reload_toc_costs): New function to return the
	appropriate costs for doing a TOC load under different options.
	(rs6000_secondary_reload_memory): Determine if reload of a memory
	needs special secondary reload support.
	(rs6000_secondary_reload): Rework code to make it easier to add
	new secondary reload tests.  Test for secondary reload needing to
	deal with loads of Altivec registers with memory addresses
	containing offsets.  Simplify some tests to use GPR_REG_CLASS_P.
	(rs6000_secondary_reload_new): New function to handle new
	secondary reloads of memory addresses.
	(rs6000_secondary_reload_gpr): Use GPR_REG_CLASS_P.
	(rs6000_preferred_reload_class): If scalar floating constant,
	prefer traditional floating point registers over VSX registers.
	(print_operand): Use fatal_insn to print out the insn, instead of
	calling operand_output_lossage.

	* config/rs6000/vsx.md (vsx_xscvdpspn): Fix up constraints not to
	use wa for scalar types.  Use ws for DF, wy for SF, and wf for
	V4SF.

	* config/rs6000/rs6000.h (VSX_REG_CLASS_P): Delete, move to
	rs6000.c.

	* config/rs6000/rs6000.md (UNSPEC_TOC_NOSPLIT): Add unspec to
	keep TOC code generated by secondary reload together until after
	reload.
	(cmp<mode>_fpr): Do not use %x<n> for a condition code register.
	(extendsfdf2_fpr): Use wu constraint for SFmode, not wv.
	(copysign<mode>3_fcpsgn): Use correct mode attribute in moving
	insn from vsx.md to rs6000.md.
	(mov<mode>_hardfloat32): On systems with floating point registers,
	don't allow any constant except 0.0 to be loaded into GPR
	registers.  Temporarily line up constraints for easier debugging.
	(mov<mode>_hardfloat64): Likewise.
	(movdi_internal64): Don't allow DImode into Altivec registers for
	now.
	(peephole2 for SF/DF moves): Combine peepholes using a mode
	iterator, and call merge_peephole2_move_p to make sure we don't
	merge a load with an offset to an Altivec register.
	(toc_nosplit<mode>): New insn to keep TOC references together
	during reload with secondary reload hooks.
	(reload_<RELOAD:mode>_<P:mptrsize>_store): Move secondary reload
	insns here from vector, and expand their use to scalar data
	types.
	(reload_<RELOAD:mode>_<P:mptrsize>_load): Likewise.

	Clone branch from subversion id 204363.
	* REVISION: New file, track subversion id.
