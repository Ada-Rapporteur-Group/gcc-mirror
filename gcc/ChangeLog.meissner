2016-06-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237765.
	* REVISION: Update subversion id.

2016-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (p9_stxsi<wd>x): Support non indexed
	addresses with a split and clobber.

2016-06-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md 	(p9_stxsi<wd>zx): New insns to support ISA
	3.0 store byte and half-word integers from vector registers.
	* config/rs6000/rs6000.md (fix_trunc<SFDF:mode><QHI:mode>2): New
	expanders to support converting floating point and storing it to
	byte/half-word integer directly from the vector registers.
	(fixuns_trunc<SFDF:mode><QHI:mode>2): Likewise.

	Merge up to 237716.
	* REVISION: Update subversion id.

2016-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237668.
	* REVISION: Update subversion id.

2016-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237608.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237490.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_sign_extend_hi_<mode>): Enable
	generator.

	* config/rs6000/rs6000.md (FP_ISA3): New iterator for ISA 3.0
	vector load byte/half-word instructions.
	(ISA 3.0 byte/half-word peephole): Delete earlier attempt.
	(float<QHI:mode><FP_ISA3:mode>2): New insns to support ISA 3.0
	vector load byte/half-word instructions.
	(float<QHI:mode><FP_ISA3:mode>2_internal): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2_internal): Likewise.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<dimode patch #3>
	* config/rs6000/vsx.md (VSINT_84): Add DImode to enable loading
	DImode constants with XXSPLTIB in vector registers.
	(vsx_extract_<mode>, V2DImode/V2DFmode): Combine both
	vsx_extract_<mode>_internal{1,2} into a single insn that handles
	direct move (both ISA 2.07 and ISA 3.0 versions), and optimizes
	extraction of the element at the top of the register as a scalar
	value.
	(vsx_extract_<mode>_internal1): Likewise.
	(vsx_extract_<mode>_internal2): Likewise.
	* config/rs6000/constraints.md (wi constraint): Remove a comment
	about DImode not being allowed in Altivec registers.
	(wB constraint): New constraint for constants that can be
	generated in Altivec registers with VSPLTISW/VUPKHSW.
	* config/rs6000/predicates.md (xxspltib_constant_split): Update
	comments.
	(xxspltib_constant_nosplit): Likewise.
	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Add
	support for -mupper-regs-di to enable DImode to go into Altivec
	registers.
	(POWERPC_MASKS): Likewise.
	(power7 cpu): Likewise.
	* config/rs6000/rs6000.opt (-mupper-regs-di): Likewise.
	* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Add support
	for DImode being allowed in Altivec registers.  Update wi/wj
	constraints.  Set scalar_in_vmx_p flag.
	(rs6000_option_override_internal): Add checks for -mupper-regs-di.
	(xxspltib_constant_p): Allow CONST_INT's with VOIDmode.  Don't
	return true if we could use VSPLTISW/VUPKHSW instead of XXSPLTIB.
	(rs6000_opt_masks): Add -mupper-regs-di.
	* config/rs6000/rs6000.md (lfiwax): Update clobbers that don't use
	direct move to use wi and not wj.
	(lfiwzx): Likewise.
	(floatsi<mode>2_lfiwax_mem): Combine alternatives into a single
	alternative.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(fix_trunc<mode>di2_fctidz): Change second alternative to allow
	any VSX register, instead of just Altivec registers, to allow
	either operand to be an Altivec register or both.
	(fixuns_trunc<mode>di2_fctiduz): Likewise.
	(movdi_internal32): Add support for -mupper-regs-di.  Add support
	to load constants via XXSPLTIB or VSPLTISW.  Add spacing to allow
	the alternatives and attributes to be lined up to be easier to
	read.
	(movdi_internal64): Likewise.
	(64-bit DImode splitters): Change predicates to only split loading
	up GPR registers.  Add splits for using XXSPLTIB or VSPLTISW to
	load constants in ISA 3.0 or ISA 2.07 respectively.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-mupper-regs-di.  Update -mupper-regs-df and -mupper-regs-sf to
	mention -mcpu=power9 sets these options.
	* doc/md.texi (PowerPC and IBM RS6000 constraints): Document the
	wB constraint.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (UNSPEC_P9_MEMORY): New unspec.
	(p9_lxsi<wd>zx): New code to implement load bye/halfword to the
	vector registers on ISA 3.0.

	* config/rs6000/rs6000.md (ISA 3.0 peepholes): Add new peepholes
	to catch zero_extend of byte/half-word and converting it to
	floating point.

2016-06-14   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 237393

