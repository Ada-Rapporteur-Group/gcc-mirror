2011-08-16  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Version deleted, still available in tree as subverison id 177803.

	* tree.h (toplevel): Include builtin-funcs.h instead of
	builtins.def.
	* builtins.c (toplevel): Ditto.

	* configure.ac (md_builtin_attrs_def): New configure variable
	passed to the Makefile to hold machine dependent builtin
	includes.
	(md_builtin_funcs_def): Ditto.
	(md_builtin_types_def): Ditto.
	* config.gcc (md_builtin_types_def): Ditto.
	(md_builtin_funcs_def): Ditto.
	(md_builtin_types_def): Ditto.
	(powerpc*, rs6000*): Add rs6000 builtin includes.

	* configure: Regenerate.

	* Makefile.in (BUILTINS_DEF): Delete.
	(BUILTIN_FUNCS_DEF): New macro to allow backend to define new
	builtins.
	(BUILTIN_ATTRS_DEF): Ditto.
	(BUILTIN_TYPES_DEF): Ditto.
	(BUILTIN_FUNCS_H): Ditto.
	(BUILTIN_ATTRS_H): Ditto.
	(BUILTIN_FUNCS_H): Ditto.
	(builtin-attrs.h): New include file that includes the standard and
	machine dependent builtins.
	(builtin-funcs.h): Ditto.
	(builtin-types.h): Ditto.
	(c-family/c-common.o): Change dependencies to allow backend to
	define new builtins.
	(mostlyclean): Delete generated builtin include files.

	* doc/tm.texi (TARGET_BUILTIN_ATTRS_INIT): New target hook.
	(TARGET_BUILTIN_TYPES_INIT): Ditto.
	* doc/tm.texi.in (TARGET_BUILTIN_ATTRS_INIT): Ditto.
	(TARGET_BUILTIN_TYPES_INIT): Ditto.
	* target.def (builtin_attrs_init): Ditto.
	(builtin_types_init): Ditto.

	* config/rs6000/rs6000-builtin-attrs.def: Stub file for now.
	* config/rs6000/rs6000-builtin-funcs.def: Ditto.

	* config/rs6000/rs6000-builtin-types.def: Add rs6000 builtin
	types.

	* config/rs6000.c (rs6000_builtin_attrs_init): New target hook for
	initialize builtin types and attributes.  Move in type handling
	from rs6000_init_builtins.
	(rs6000_builtin_types_init): Ditto.
	(TARGET_BUILTIN_ATTRS_INIT): Define.
	(TARGET_BUILTIN_TYPES_INIT): Ditto.
	(rs6000_init_builtins): Move type initialization to
	rs6000_builtin_types_init.

2011-08-16  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177785.
	* REVISION: Update subversion id.

2011-08-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177764.
	* REVISION: Update subversion id.

2011-08-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-builtin.def (RS6000_BUILTIN_ARGS): New
	macros to encode types within the macros, so that we can process
	the builtins as a single table, instead of being spread out over
	several different functions.  Start converting the Altivec add
	functions to the new scheme.
	(RS6000_BUILTIN_ARG0): Ditto.
	(RS6000_BUILTIN_ARG1): Ditto.
	(RS6000_BUILTIN_ARG2): Ditto.
	(RS6000_BUILTIN_ARG2): Ditto.
	(RS6000_BUILTIN_ARG3): Ditto.

	* config/rs6000/rs6000.c (rs6000_builtin_decls_init): New static
	array to record the builtin functions that have been created, even
	if the current machine does not support the function.
	(builtin_info): New array to hold all of the information for
	creating builtin functions.
	(builtin_classify): Delete, merge into builtin_info.
	(def_builtin): Use builtin_info instead of builtin_classify.
	(bdesc_2arg): Remove Altivec add functions moved over to the new
	format.
	(rs6000_expand_builtin): Add support for generating builtin
	functions from a table.
	(rs6000_create_builtin): New function, create a builtin function
	from the table of builtins.
	(rs6000_table_init_builtins): New function to create the builtins
	that are in the builtin table.

	* config/rs6000/rs6000.h (enum rs6000_btmask): Masks of the
	various conditions for creating builtins.
	(enum rs6000_btc): Add typedef.
	(enum rs6000_builtin_type_index): Ditto.
	(enum rs6000_builtins): Define RS6000_BUILTIN_ARGS for new builtin
	handling.
	(RS6000_BTI_NONE): New name for no type provided.
	(RS6000_BTI_NOT_OPAQUE): Map into RS6000_BTI_NONE.

2011-08-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Version deleted, but available in tree.
	* config/rs6000/rs6000.c (rs6000_init_builtins): Split into two
	parts, rs6000_init_builtins that is meant to be called only once,
	and rs6000_init_builtins_inner that is called multiple times to
	initialize new builtins as the user changes the machine with
	target attributes/pragmas.  Split out the altivec builtins init
	into 5 separate functions.  Move common types to the
	rs6000_builtin_types array.
	(rs6000_init_builtins_inner): Ditto.
	(altivec_types_init_builtins): Ditto.
	(altivec_predicate_init_builtins): Ditto.
	(altivec_abs_init_builtins): Ditto.
	(altivec_cell_init_builtins): Ditto.
	(vsx_init_builtins): Ditto.
	(rs6000_common_init_builtins): Ditto.
	(legitimate_indirect_address_p): Remove inline, since
	predicates.md has calls to it.

	* config/rs6000/rs6000.h (RS6000_BTI_*): Add more bultin types to
	allow altivec, vsx, and cell builtins to be initialized at
	different times.

2011-08-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177676.
	* REVISION: Update subversion id.

	* config/rs6000/rs6000.opt (-mmovmisalign-int-float): New switch.

	* config/rs6000/vector.md (vec_realign_load_<mode>): Add support
	for -mmovmisalign-int-float, instead of using the existing
	-mallow-movmisalign.

2011-08-10  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_secondary_reload): Fix tests to
	allow VSX to generate lvx/stvx under the right conditions.

	* config/rs6000/vector.md (vec_realign_load_<mode>): If misaligned
	moves are allowed, don't provide realigned loads for V4SF and V4SI
	vectors.

	* config/rs6000/rs6000.c (rs6000_secondary_reload_inner): If we
	aren't asking for an Altivec register, allocate an extra GPR
	register if we see AND & -16.

	* doc/invoke.texi (RS/6000 and PowerPC Options): Delete 8/8 and
	8/2 changes.
	* config/rs6000/rs6000.opt: Ditto.
	* config/rs6000/vector.md: Ditto.

2011-08-09  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_builtin_vectorization_cost): Make
	permutes a little more expensive on power7.
	(rs6000_preferred_simd_mode): Eliminate TARGET_VSX test, since
	TARGET_ALTIVEC will always be set when VSX is set.
	(rs6000_legitimize_reload_address): Support VSX addresses with AND
	-16 in them, and fall back to Altivec loads and stores.
	(rs6000_legitimate_address_p): Ditto.
	(rs6000_secondary_reload): Ditto.
	(rs6000_secondary_reload_inner): Ditto.
	(print_operand): Ditto.

	* config/rs6000/vsx.md (vsx_mov<mode>): Fix cut+paste error for
	using Altivec lvx.

	Merge up to 177605.
	* REVISION: Update subversion id.

2011-08-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* doc/invoke.texi (RS/6000 and PowerPC Options): Delete
	-mvsx-vector-64bit-to-32bit and -munaligned-vector.

	* config/rs6000/rs6000.opt (-munaligned-vector): Delete.
	(-mvsx-vector-64bit-to-32bit): Ditto.

	* config/rs6000/vector.md (vec_realign_load_<mode>): Delete
	-munaligned-vector switch.
	(vec_pack_trunk_v2df): Delete -mvector-convert-64bit-to-32bit.
	(vec_pack_sfix_trunc_v2df): Ditto.
	(vec_pack_ufix_trunc_v2df): Ditto.

2011-08-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177467.
	* REVISION: Update subversion id.

2011-08-04  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177413.
	* REVISION: Update subversion id.

2011-08-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 177287.
	* REVISION: Update subversion id.

2011-08-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-msave-toc-indirect, which previously was an undocumented debug
	switch.  Add -munaligned-vector, -mnvsx-vector-32bit-to-64bit,
	-mvsx-vector-64bit-to-32bit switches.

	* config/rs6000/rs6000.md (vec_pack_trunc_v2df): Add conditions on
	-mvsx-vector-64bit-to-32bit and -mvsx-vector-32bit-to-64bit.
	(vec_pack_sfix_trunc_v2df): Ditto.
	(vec_pack_ufix_trunc_v2df): Ditto.
	(vec_pack_ufix_trunc_v2df): Ditto.
	(vec_unpacks_lo_v4sf): Ditto.
	(vec_unpacks_float_hi_v4s): Ditto.
	(vec_unpacks_float_lo_v4s): Ditto.
	(vec_unpacku_float_hi_v4s): Ditto.
	(vec_unpacku_float_lo_v4s): Ditto.
	(vec_realign_load_<mode>): Add condition on -munalgined-vector.

	* config/rs6000/rs6000.opt (-mvector-convert-32bit-to-64bit): New
	switch to control whether the compiler does 32<->64 bit conversions.
	(-mvector-convert-64bit-to-32bit): Ditto.
	(-munaligned-vector): New switch to control whether we lvsr/vperm
	to do unaligned vectors, or do the loop in scalar mode.
	(-msave-toc-indirect): Add documentation.

2011-08-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Create branch, cloned from trunk, revision 177200.
	* REVISION: New file.

