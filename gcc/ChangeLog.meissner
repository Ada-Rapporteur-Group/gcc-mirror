==================== Branch work121, rebase up to 5/12/2023 ====================

==================== Branch work121, patch #5 ====================

PR target/105325: Fix memory constraints for power10 fusion

This patch applies stricter predicates and constraints for LD and LWA
instructions with power10 fusion.  These instructions are DS-form instructions,
which means that the bottom 2 bits of the address must be 0.  In the past, we
did not use the stricter predicates and constraints, and if the user used the
-fstack-protector option, it would generate a non-prefixed load instruction
whose offset was too big if the stack is large.

This patch has been tested on:

    * Little endian power9 with both IEEE and IBM long double
    * Little endian power10
    * Big endian power8 using both 32-bit and 64-bit code generation.

Can I check this into the master branch?  Assuming I can check this in, I will
also commit to the active GCC branches after a burn-in period.

2023-05-10   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	PR target/105325
	* config/rs6000/genfusion.pl (print_ld_cmpi_p10): Use "YZ" constraints
	for DS-form loads.  Set the sign_extend attribute for loads that do sign
	extension.  Use the lwa_operand predicate for the LWA instruction.
	* config/rs6000/fusion.md: Regenerate.

gcc/testsuite/

	PR target/105325
	* g++.target/powerpc/pr105325.C: New test.
	* gcc.target/powerpc/fusion-p10-ldcmpi.c: Adjust insn counts.

==================== Branch work121, patch #4 ====================

PR target/105325, Rewrite genfusion.pl's gen_ld_cmpi_p10 function.

This patch rewrites the gen_ld_cmpi_p10 function in genfusion.pl to be clearer.
The resulting fusion.md file that this patch generates is exactly the same
output that the previous version of genfusion.pl generated.  The next patch in
this series will fix PR target/105325 (provide correct predicates and
constraints for power10 fusion of load and compare immediate).

This patch has been tested on:

    * Little endian power9 with both IEEE and IBM long double
    * Little endian power10
    * Big endian power8 using both 32-bit and 64-bit code generation.

Can I check this into the master branch?  Assuming I can check this in, I will
also commit to the active GCC branches after a burn-in period.

2023-05-10   Michael Meissner  <meissner@linux.ibm.com>

gcc/

	PR target/105325
	* config/rs6000/genfusion.pl (mode_to_ldst_char): Delete.
	(print_ld_cmpi_p10): New function, split off from gen_ld_cmpi_p10.
	(gen_ld_cmpi_p10): Rewrite completely.

==================== Branch work121, patch #3 was reverted ====================

==================== Branch work121, patch #2 was reverted ====================

==================== Branch work121, patch #1 was reverted ====================

==================== Branch work121, baseline ====================

2023-05-08   Michael Meissner  <meissner@linux.ibm.com>

	Clone branch

