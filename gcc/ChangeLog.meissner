2014-03-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_int128_builtin_fixup): Add
	declaration.

	* config/rs0600/rs6000-builtin.def (VADDCUQ_V2DI): Add V2DImode
	versions of the int128 binary builtin support in case
	-mno-vsx-timode is in effect.
	(VADDUQM_V2DI): Likewise.
	(VBPERMQ_V2DI): Likewise.
	(VSUBCUQ_V2DI): Likewise.
	(VSUBUQM_V2DI): Likewise.
	(VADDEUQM_V2DI): Likewise.
	(VADDECUQ_V2DI): Likewise.
	(VSUBEUQM_V2DI): Likewise.
	(VSUBECUQ_V2DI): Likewise.

	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add
	V2DImode versions of int128 builtin functions.

	* config/rs6000/rs6000.c (rs6000_int128_builtin_fixup): New fixup
	function to convert types of int128 builtin functions to V2DI if
	-mno-vsx-timode is in effect.

	* config/rs6000/rs6000.h (TARGET_VADDUQM): Don't key off of
	-mvsx-timode.

	* config/rs6000/altivec.md (VINT128): Add V2DImode versions of the
	int128 bit builtins to be created.  If -mno-vsx-timode, convert
	the arguments from TImode to V2DImode.
	(altivec_vadduqm): Likewise.
	(altivec_vaddcuq): Likewise.
	(altivec_vbpermq): Likewise.
	(altivec_vaddeuqm): Likewise.
	(altivec_vaddecuq): Likewise.
	(altivec_vsubeuqm): Likewise.
	(altivec_vsubecuq): Likewise.
	(altivec_vsubuqm): Likewise.
	(altivec_vsubcuq): Likewise.

2014-02-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Turn off
	-mvsx-timode for now.

2014-02-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 208206.
	* REVISION: Update subversion id.

2014-02-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_option_override_internal): Make
	-mvsx-timode 64-bit only.
	(reg_offset_addressing_ok_p): Undo previoius changes allowing
	reg+offset addressing for TImode if TImode is allowed in VSX
	registers.
	(rs6000_legitimize_reload_address): Likewise.
	(rs6000_legitimate_address_p): Likewise.
	(rs6000_emit_move): Likewise.

	* config/rs6000/vsx.md (vsx_movti_32bit): Delete, no longer used.
	* config/rs6000/altivec.md (altivec_movti): Likewise.

2014-02-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Delete debug
	tracing for V2TI.
	(rs6000_init_hard_regno_mode_ok): Fix inadvertent typo.
	(const_vector_elt_as_int): Restore original code.
	(reg_offset_addressing_ok_p): Remove code that restricted TImode
	from using reg+offset addressing if -mvsx-timode.
	(rs6000_legitimize_reload_address): Likewise.
	(rs6000_legitimate_address_p): Likewise.
	(rs6000_emit_move): Likewise.

	* configure/rs6000/vsx.md (vsx_movti_ppc64): Drop PTImode
	support.  Rename back to vsx_movti_ppc64.

2014-02-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_move_128bit_ok_p): Add
	declaration.
	(rs6000_split_128bit_ok_p): Likewise.

	* config/rs6000/rs6000.c (rs6000_move_128bit_ok_p): New functions
	to specify whether a 128-bit move is valid, and whether a 128-bit
	move needs to be split.
	(rs6000_split_128bit_ok_p): Likewise.

	* config/rs6000/vsx.md (vsx_movti_64bit): Rework pattern, cloning
	it from the non-VSX version, and adding specific constraints for
	TImode in VSX registers.

	* config/rs6000/rs6000.md (mov<mode>_ppc64, TI/PTImode): Use
	rs6000_move_128bit_ok_p to access whether a TI/PTImode move is
	valid.
	(movti/movpti splitters): Use rs6000_split_128bit_ok_p to
	determine if it is ok to split a 128-bit move.  Remove direct_move
	test, since 128-bit direct moves need an extra register, and won't
	use this splitter.

2014-02-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md (VEC_L): Undo 2014-02-18 changes on
	branch, delete V1TImode type.
	(VEC_M): Likewise.
	(VEC_N): Likewise.
	(VEC_R): Likewise.
	(VEC_base): Likewise.
	* config/rs6000/rs6000-modes.def (V1TImode): Likewise.
	(V2TImode): Likewise.
	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Likewise.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	(rs6000_preferred_simd_mode): Likewise.
	(const_vector_elt_as_int): Likewise.
	(vspltis_constant): Likewise.
	(easy_altivec_constant): Likewise.
	(output_vec_const_move): Likewise.
	(reg_offset_addressing_ok_p): Likewise.
	(rs6000_const_vec): Likewise.
	(rs6000_emit_move): Likewise.

	* doc/extend.texi (PowerPC AltiVec/VSX Built-in Functions):
	Document new 128-bit arithmetic builtins for ISA 2.07.

	* config/rs6000/rs6000-builtin.def (BU_P8V_AV_3): New macros for
	3 argument ISA 2.07 builtin functions.  Add both the normal
	__builtin_altivec_ builtin and the overloaded __builtin_vec_
	name.
	(BU_P8V_OVERLOAD_3): Likewise.
	(VADDCUQ): Add 128-bit integer arithmetic builtins for ISA 2.07.
	(VADDUQM): Likewise.
	(VSUBCUQ): Likewise.
	(VSUBUQM): Likewise.
	(VADDEUQM): Likewise.
	(VADDECUQ): Likewise.
	(VSUBEUQM): Likewise.
	(VSUBECUQ): Likewise.
	* config/rs6000/vsx.md (VSX_L): Likewise.
	(VSX_M): Likewise.
	(VSX_M2): Likewise.
	(VSm): Likewise.
	(VSs): Likewise.
	(VSr): Likewise.
	(VSv): Likewise.
	(VS_scalar): Likewise.
	(VS_double): Likewise.
	* config/rs6000/altivec.md (VM): Likewise.
	(VM2): Likewise.
	(VI_char): Likewise.
	(VI_unit): Likewise.

	* config/rs6000/rs6000-c.c (altivec_overloaded_builtins): Add in
	overloaded 128-bit integer builtin functions for both signed and
	unsigned 128-bit integer support.  Add in vector bit permute
	instruction.

	* config/rs6000/rs6000.c (rs6000_init_builtins): Initialize rs6000
	data structures for 128-bit integer types.

	* config/rs6000/rs6000.h (TARGET_VADDUQM): New macro to say
	whether we can do the 128-bit integer arithmetic instructions.
	(enum rs6000_builtin_type_index): Add fields for 128-bit signed
	and unsigned integer types.
	(intTI_type_internal_node): Likewise.
	(uintTI_type_internal_node): Likewise.
	* config/rs6000/rs6000.md (FMOVE128_GPR): Likewise.
	(BOOL_128): Likewise.
	(BOOL_REGS_OUTPUT): Likewise.
	(BOOL_REGS_OP1): Likewise.
	(BOOL_REGS_OP2): Likewise.
	(BOOL_REGS_UNARY): Likewise.
	(BOOL_REGS_AND_CR0): Likewise.

	* config/rs6000/altivec.md (UNSPEC_VADDUQM): New unspec's for
	128-bit integer arithmetic instructions.
	(UNSPEC_VADDCUQ): Likewise.
	(UNSPEC_VADDEUQM): Likewise.
	(UNSPEC_VADDECUQ): Likewise.
	(UNSPEC_VSUBUQM): Likewise.
	(UNSPEC_VSUBCUQ): Likewise.
	(UNSPEC_VSUBEUQM): Likewise.
	(UNSPEC_VSUBECUQ): Likewise.
	(UNSPEC_VBPERMQ): Likewise.
	(altivec_vadduqm): New insns for support of 128-bit integer
	arithmetic instructions.
	(altivec_vaddcuq): Likewise.
	(altivec_vaddeuqm): Likewise.
	(altivec_vaddecuq): Likewise.
	(altivec_vsubuqm): Likewise.
	(altivec_vsubcuq): Likewise.
	(altivec_vsubeuqm): Likewise.
	(altivec_vsubecuq): Likewise.
	(altivec_vbpermq): Likewise.

	* config/rs6000/altivec.h (vec_vaddcuq): Define user names for the
	128-bit integer arithmetic builtins.
	(vec_vadduqm): Likewise.
	(vec_vaddecuq): Likewise.
	(vec_vaddeuqm): Likewise.
	(vec_vbpermq): Likewise.
	(vec_vsubecuq): Likewise.
	(vec_vsubeuqm): Likewise.
	(vec_vsubcuq): Likewise.
	(vec_vsubuqm): Likewise.

2014-02-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 207860.
	* REVISION: Update subversion id.

	* config/rs6000/vector.md (VEC_L): Add V1TImode for 'vector
	__int128_t' to implement RFC 2247, 128-bit integer arithmetic.
	This provides for moves, logical operations, and reload support
	functions.
	(VEC_M): Likewise.
	(VEC_N): Likewise.
	(VEC_R): Likewise.
	(VEC_base): Likewise.

	* config/rs6000/rs6000-modes.def (V1TImode): Define vector
	versions of TImode.
	(V2TImode): Likewise.

	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Re-enable
	-mvsx-timode for power7 and above.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): If
	-mdebug=reg, add debug support for V1TImode and V2TImode.
	(rs6000_init_hard_regno_mode_ok): Set up to allow V1TImode in VSX
	registers, and add basic reload support.
	(rs6000_preferred_simd_mode): Add support for V1TImode.
	(const_vector_elt_as_int): Likewise.
	(vsplitis_constant): Likewise.
	(easy_altivec_constant): Likewise.
	(output_vec_const_move): Likewise.
	(rs6000_const_vec): Likewise.
	(rs6000_emit_move): Likewise.

	* config/rs6000/vsx.md (VSX_L): Add V1TImode to basic VSX type
	mode iterators.
	(VSX_M): Likewise.
	(VSX_M2): Likewise.
	(VSm): Likewise.
	(VSs): Likewise.
	(VSr): Likewise.
	(VSv): Likewise.
	(VS_scalar): Likewise.
	(VS_double): Likewise.

	* config/rs6000/altivec.md (VM): Add V1TImode to basic Altivec
	type mode iterators.
	(VM2): Likewise.
	(VI_unit): Likewise.

	* config/rs6000/rs6000.md (FMOVE128_GPR): Add V1TImode to 128-bit
	vector mode iterator.
	(BOOL_128): Add V1TImode.
	(BOOL_REGS_OUTPUT): Likewise.
	(BOOL_REGS_OP1): Likewise.
	(BOOL_REGS_OP2): Likewise.
	(BOOL_REGS_UNARY): Likewise.
	(BOOL_REGS_AND_CR0): Likewise.

2014-02-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch from subversion id 207735.
	* REVISION: New file, track subversion id.

