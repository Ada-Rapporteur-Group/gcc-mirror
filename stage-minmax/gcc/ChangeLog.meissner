2016-05-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<fsf submission>
	* config/rs6000/rs6000.c (rs6000_emit_p9_fp_minmax): New function
	for ISA 3.0 min/max support.
	(rs6000_emit_p9_fp_cmove): New function for ISA 3.0 floating point
	conditional move support.
	(rs6000_emit_cmove): Call rs6000_emit_p9_fp_minmax and
	rs6000_emit_p9_fp_cmove if the ISA 3.0 instructions are
	available.
	* config/rs6000/rs6000.md (SFDF2): New iterator to allow doing
	conditional moves there the comparison type is different from move
	type.
	(fp_minmax): New code iterator for smin/smax.
	(minmax): New code attributes for min/max.
	(SMINMAX): Likewise.
	(smax<mode>3): Combine min, max insns into one insn using the
	fp_minmax code iterator.  Add support for ISA 3.0 min/max
	instructions that don't need -ffast-math.
	(s<minmax><mode>3): Likewise.
	(smax<mode>3_vsx): Likewise.
	(smin<mode>3): Likewise.
	(s<minmax><mode>3_vsx): Likewise.
	(smin<mode>3_vsx): Likewise.
	(pre-VSX min/max splitter): Likewise.
	(s<minmax><mode>3_fpr): Likewise.
	(movsfcc): Rewrite floating point conditional moves to combine
	SFmode/DFmode into a single insn.
	(mov<mode>cc): Likewise.
	(movdfcc): Likewise.
	(fselsfsf4): Combine FSEL cases into a single insn, using SFDF and
	SFDF2 iterators to handle all combinations.
	(fseldfsf4): Likewise.
	(fsel<SFDF:mode><SFDF2:mode>4): Likewise.
	(fseldfdf4): Likewise.
	(fselsfdf4): Likewise.
	(mov<SFDF:mode><SFDF2:mode>cc_p9): Add support for the ISA 3.0
	comparison instructions that set a 0/-1 mask, and use it for
	floating point conditional move via XXSEL.
	(fpmask<mode>): Likewise.
	(xxsel<mode>): Likewise.
	* config/rs6000/predicates.md (min_max_operator): Delete, no
	longer used.
	(fpmask_comparison_operaton): New insn for ISA 3.0 comparison
	instructions that generate a 0/-1 mask for use with XXSEL.
	* config/rs6000/rs6000.h (TARGET_MINMAX_SF): New helper macros to
	say whether floating point min/max is available, either through
	FSEL, ISA 2.06 min/max, and ISA 3.0 min/max instrucitons.
	(TARGET_MINMAX_DF): Likewise.

2016-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236740.
	* REVISION: Update subversion id.

2016-05-25  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (min_max_operator): Delete, no
	longer used.

	* config/rs6000/rs6000.c (print_operand): Delete %@ support.
	* config/rs6000/rs6000.h (PRINT_OPERAND_PUNCT_VALID_P): Likewise.

	* config/rs6000/rs6000.md (s<minmax><mode>3_vsx): Rework min/max
	support.  Delete support for including FLOAT_EXTEND from SFmode to
	DFmode.
	(s<minmax>dfsf3_vsx_1): Likewise.
	(s<minmax>dfsf3_vsx_2): Likewise.
	(s<minmax>dfsf3_vsx_3): Likewise.
	(s<minmax>dfsf3_vsx_4): Likewise.
	(s<minmax><mode>3_fpr): Rewrite to use minmax iterator.

2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236682.
	* REVISION: Update subversion id.

2016-05-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236663.
	* REVISION: Update subversion id.

2016-05-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236600.
	* REVISION: Update subversion id.

2016-05-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236527.
	* REVISION: Update subversion id.

2016-05-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236398.
	* REVISION: Update subversion id.

2016-05-17  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236325.
	* REVISION: Update subversion id.

2016-05-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236136.
	* REVISION: Update subversion id.

2016-05-10  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 236097.
	* REVISION: Update subversion id.

2016-05-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<fsf submission>
	* config/rs6000/predicates.md (all_ones_constant): New predicate
	to recognize a vector/integer constant that is all 1's.
	(min_max_operator): Don't match umin or umax, since it is only
	used for floating point min/maxes.
	(fpmask_comparison_operator): New predicate for returning true if
	a comparison operator can generate -1/0 mask.
	* config/rs6000/rs6000.c (print_operand): Add support for ISA 3.0
	floating point min/max instructions.
	(rs6000_emit_power9_minmax): New function to generate ISA 3.0
	XSMAXCDP and XSMINCDP instructions.
	(rs6000_emit_power9_cmove): New function to generate ISA 3.0
	XSCMP{EQ,GE,GT,NE}DP instructions and XXSEL to speed up floating
	point conditional moves.
	(rs6000_emit_cmove): Add support for ISA 3.0 floating point
	condition moves and min/max instructions.
	* config/rs6000/rs6000.h (TARGET_MINMAX_SF): New target macros to
	say whether the machine has floating point min/maxes that can be
	generated directly.
	(TARGET_MINMAX_DF): Likewise.
	(PRINT_OPERAND_PUNCT_VALID_P): Add '@' for ISA 3.0 min/max.
	* config/rs6000/rs6000.md (SFDF2): New iterator to allow mixed
	mode floating point conditional moves.
	(fp_minmax): New code iterator for ISA 3.0 min/max support.
	(minmax): New code attributes for ISA 3.0 min/max support.
	(MINMAX): Likewise.
	(smax<mode>3): Rework floating point min/max to be a combined insn
	using code iterators for min and max. Add support for ISA 3.0
	min/max instructions.
	(s<minmax><mode>3): Likewise.
	(smax<mode>3_vsx): Likewise.
	(s<minmax><mode>3_vsx): Likewise.
	(smin<mode>3): Likewise.
	(smin<mode>3_vsx): Likewise.
	(*s<minmax>dfsf3_vsx_1): Add support for min/max where one or both
	operands are float that are promoted to double.
	(s<minmax>dfsf3_vsx_2): Likewise.
	(s<minmax>dfsf3_vsx_3): Likewise.
	(s<minmax>dfsf3_vsx_4): Likewise.
	(min/max splitter, non-VSX): Use TARGET_MINMAX_<MODE>.
	(SF conditional move splitter): Merge SF and DF insns for
	generating conditional move into one insn.
	(movsfcc): Likewise.
	(mov<mode>cc): Likewise.
	(fselsfsf4): Merge SF/DF conditional move variants into one insn
	that handles different types for comparison and move.
	(fseldfsf4): Likewise.
	(DF conditional move splitter): Likewise.
	(movdfcc): Likewise.
	(fseldfdf4): Likewise.
	(fselsfdf4): Likewise.
	(mov<SFDF:mode><SFDF2:mode>cc_p9): New floating point conditional
	move support for ISA 3.0.
	(fpmask<mode>): Likewise.
	(xxsel<mode>): Likewise.
	(lfiwax): Correct scratch constraint to be wi, since we don't
	require direct move support.
	(lfiwzx): Likewise.
	(floatsi<mode>2_lfiwax_mem): Combine alternatives into a single
	alternative.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(fix_trunc<mode>si2): Fix comment.
	(fix_trunc<mode>di2_fctidz): Allow any VSX register instead of
	Altivec register as the second alternative.
	(fixuns_trunc<mode>di2_fctiduz): Likewise.

2016-05-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 235831.
	* REVISION: Update subversion id.

2016-05-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 235794.
	* REVISION: Update subversion id.

2016-05-02   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 235776

