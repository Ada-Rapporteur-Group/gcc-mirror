# Copyright (c) Microsoft Corporation.

# MIT License

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: fetch-rebase-test

# Run this workflow every week
on:
  schedule:
    - cron: "0 8 * * 0"
  workflow_dispatch:

jobs:    
  fetch-rebase-build:
    runs-on: ubuntu-18.04
    outputs:
      config: ${{ steps.printNoSecretJson.outputs.noSecretConfigJson }}
      matrixTestSet: ${{ steps.printGCCTestSet.outputs.testSet }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          lfs: true
          ref: current 
    
      - name: Setup Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
        
      # Install requests package which is used in downloadBuildArtifact.py 
      - name: Pip Install Requests
        run: |
          python -m pip install requests
        shell: bash

      # Print the chunked set of GCC tests we'd like to run in a matrix later
      - name: Print GCC test set
        id: printGCCTestSet
        uses: ./.github/actions/print-gcc-testset

      - uses: ./.github/actions/rebase-gcc-master
      
        # Setup config
      - name: Setup config
        id: setupconfig
        run: |
          chmod +x .github/scripts/gccWorkflow.py
          echo "$PYTHONPATH"
          export PYTHONPATH=${PYTHONPATH}:${PWD}/.github/scripts
          echo "$PYTHONPATH"
          echo "${GITHUB_CONTEXT}"
          python -c 'import sys; from gccWorkflow import *; GccWorkflow.Init(sys.argv[1], sys.argv[2], True)' "${GITHUB_CONTEXT}" "${GITHUB_TOKEN}"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build GCC
        uses: ./.github/actions/build-composite
        with: 
          configjson: ${{ steps.setupconfig.outputs.configJson }}

      - name: Move objdir to be in repo so it can be uploaded
        run: mv ../objdir objdir

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: gccBuild
          path: objdir

      # This should be the last step on this machine since it will clear out fields in the config json
      - name: Print No Secret Json
        id: printNoSecretJson
        run: |
          chmod +x .github/scripts/config.py
          export PYTHONPATH=${PYTHONPATH}:${PWD}/.github/scripts
          python -c 'import sys; from config import *; Config.PrintNoSecretConfigJsonFromJson(sys.argv[1])' "${CONFIG_JSON}"
        shell: bash
        env:
          CONFIG_JSON: ${{ steps.setupconfig.outputs.configJson }}

  fetch-rebase-test: 
    needs: fetch-rebase-build
    strategy:
      matrix: ${{fromJSON(needs.fetch-rebase-build.outputs.matrixTestSet)}}
      # Avoid cancelling other matrix chunks even if one fails
      fail-fast: false        
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          lfs: true
          ref: current 

      - name: Setup Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
        
      # Install requests package which is used in downloadBuildArtifact.py 
      - name: Pip Install Requests
        run: |
          python -m pip install requests
        shell: bash
        
      - name: Rebase to latest upstream GCC master
        uses: ./.github/actions/rebase-gcc-master

      - name: Download gccBuild from fetch-rebase-build step
        uses: actions/download-artifact@v2
        with:
          name: gccBuild
          path: objdir

      - name: Move objdir up one directory
        run: mv objdir ../objdir
        
      # build.yaml creates the gccBuild artifact
      - name: Run GCC tests
        uses: ./.github/actions/test-composite
        with: 
          configjson: ${{needs.fetch-rebase-build.outputs.config}}
          testSet: ${{ matrix.testSet }}
          githubtoken: ${{ secrets.GITHUB_TOKEN }}
          buildDownloaded: True

      - name: Move objdir to be in repo so logs inside can be uploaded
        run: mv ../objdir objdir

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.testSet }}_logs
          path: objdir/logs