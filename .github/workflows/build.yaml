# Copyright (c) Microsoft Corporation.

# MIT License

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

# This needs to match the string returned in GetGccBuildName() in common.py
name: build

# Run this workflow on every new commit and pull request
on: 
  push:
    branches:
      - current
      - 'releases/**'
      - gcc-9.1.0
  pull_request:
    branches:
      - current
      - 'releases/**'
      - gcc-9.1.0
  workflow_dispatch:

jobs:    
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          lfs: true

      - name: Setup Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
        
      # Install requests package which is used in downloadBuildArtifact.py 
      - name: Pip Install Requests
        run: python -m pip install requests
        shell: bash

      # Setup config
      - name: Setup config
        id: setupconfig
        run: |
          chmod +x .github/scripts/gccWorkflow.py
          echo "$PYTHONPATH"
          export PYTHONPATH=${PYTHONPATH}:${PWD}/.github/scripts
          echo "$PYTHONPATH"
          echo "${GITHUB_CONTEXT}"
          python -c 'import sys; from gccWorkflow import *; GccWorkflow.Init(sys.argv[1], sys.argv[2], True)' "${GITHUB_CONTEXT}" "${GITHUB_TOKEN}"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build GCC
        uses: ./.github/actions/build-composite
        with: 
          configjson: ${{ steps.setupconfig.outputs.configJson }}

      - name: Compress and archive objdir so that it can be uploaded
        run: tar -czf objdir.tar.gz ../objdir

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: gccBuild
          path: objdir.tar.gz
