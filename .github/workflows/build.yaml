# This needs to match the string returned in GetGccBuildName() in common.py
name: build

# Run this workflow on every new commit and pull request
on: 
  push:
    branches:
      - current
      - 'releases/**'
      - gcc-9.1.0
  pull_request:
    branches:
      - current
      - 'releases/**'
      - gcc-9.1.0
  workflow_dispatch:

jobs:    
  build:
    runs-on: ubuntu-18.04
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          submodules: recursive
          lfs: true

      - name: Setup Python 3.7
        uses: actions/setup-python@v1
        with:
          python-version: 3.7
        
      # Install requests package which is used in downloadBuildArtifact.py 
      - name: Pip Install Requests
        run: python -m pip install requests
        shell: bash

      # Setup config
      - name: Setup config
        id: setupconfig
        run: |
          chmod +x .github/scripts/gccWorkflow.py
          echo "$PYTHONPATH"
          export PYTHONPATH=${PYTHONPATH}:${PWD}/.github/scripts
          echo "$PYTHONPATH"
          echo "${GITHUB_CONTEXT}"
          python -c 'import sys; from gccWorkflow import *; GccWorkflow.Init(sys.argv[1], sys.argv[2], True)' "${GITHUB_CONTEXT}" "${GITHUB_TOKEN}"
        shell: bash
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build GCC
        uses: ./.github/actions/build-composite
        with: 
          configjson: ${{ steps.setupconfig.outputs.configJson }}

      - name: Move objdir to be in repo so it can be uploaded
        run: mv ../objdir objdir

      - name: Upload build output
        uses: actions/upload-artifact@v2
        with:
          name: gccBuild
          path: objdir
