2016-04-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_split_signbit): Use offset of 0
	for SF/DFmode memory references.

	* config/rs6000/rs6000.md (signbit<mode>2, FLOAT128 iterator):
	Tweak code slightly.

2016-04-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to pre-gcc7 branch, 234996 (based on trunk svn id
	234995).
	* REVISION: Update subversion id.

2016-04-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_split_signbit): Make sure shift
	gets the DImode value, and not original floating point type.

	* config/rs6000/rs6000.md (signbit<mode>): Fix line length.
	(signbit<mode>2_dm): Eliminate alternative to use same input and
	output. Update type attribute.
	(signbit_<u>di_<mode>2_dm): Likewise.

2016-04-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge in changes on pre-gcc7 branch, subversion id 234912.
	* REVISION: Update subversion id.

2016-04-08  Michael Meissner  <meissner@linux.vnet.ibm.com>

	PR target/70589
	* config/rs6000/rs6000.c (rs6000_opt_masks): Disable using the
	target attribute and pragma from changing the -mfloat128
	and -mfloat128-hardware options.

	* doc/extend.texi (Additional Floating Types): Document PowerPC
	__float128 restrictions.

2016-04-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.md (isinf<mode>2): Add support for isinf on
	64-bit systems with direct move.

2016-04-01  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_signbit): Add
	declaration.

	* config/rs6000/rs6000.c (rs6000_split_signbit): Optimize the
	signbit built-in function on 64-bit systems with direct move.

	* config/rs6000/rs6000.md (UNSPEC_SIGNBIT): Optimize the
	signbit built-in function on 64-bit systems with direct move.
	(SIGNBIT mode iterator): Likewise.
	(Fsignbit mode attribute): Likewise.
	(signbit<mode>2): Likewise.
	(signbit<mode>2_dm): Likewise.
	(signbit<mode>2_dm2): Likewise.
	(signbit_<u>di_<mode>2_dm): Likewise.

2016-03-31  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal):
	Rework 3/30 change so we don't break passing/returning structs
	containing _Complex char/short/int.

2016-03-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to pre-gcc7, subversion id 234601, which is based on trun
	subversion id 234598.
	* REVISION:

2016-03-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal): Add
	support for complex __float128.
	(rs6000_hard_regno_mode_ok): Likewise.
	(rs6000_setup_reg_addr_masks): Likewise.
	(rs6000_complex_function_value): Likewise.

	* config/rs6000/rs6000.h (FLOAT128_IEEE_P): Add complex __float128
	and complex __ibm128 support.
	(FLOAT128_IBM_P): Likewise.
	(ALTIVEC_COMPLEX): Likewise.
	(ALTIVEC_ARG_MAX_RETURN): Likewise.

	* doc/extend.texi (Additional Floating Types): Document complex
	__float128 and __ibm128 support.

2016-03-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* machmode.h (mode_complex): Add support to give the complex mode
	for a given mode.
	(GET_MODE_COMPLEX_MODE): Likewise.

	* stor-layout.c (layout_type): For COMPLEX_TYPE, use the mode
	stored by build_complex_type instead of trying to figure out the
	appropriate mode based on the size.

	* genmodes.c (struct mode_data): Add field for the complex type of
	the given type.
	(blank_mode): Likewise.
	(make_complex_modes): Remember the complex mode created in the
	base type.
	(emit_mode_complex): Write out the mode_complex array to map a
	type mode to the complex version.
	(emit_insn_modes_c): Likewise.

2016-03-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone pre-gcc7 branch, svn id 234468, (pre-gcc7 based on trunk 233409)
	* REVISION: Update for ieee branch.

