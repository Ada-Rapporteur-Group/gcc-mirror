// Copyright 2010 The Go Authors. All rights reserved.
// Use of this source code is governed by a BSD-style
// license that can be found in the LICENSE file.

package runtime
#include "go-type.h"
#include "interface.h"
#define nil NULL

typedef _Bool bool;
typedef struct __go_type_descriptor descriptor;
typedef struct __go_interface interface;

func ifaceI2I2(inter *descriptor, i *interface) (ret *interface, ok bool) {
	ret = __go_convert_interface(inter, i, &ok);
}

func ifaceI2T2P(inter *descriptor, i *interface) (ret *void, ok bool) {
	if (i != nil && __go_type_descriptors_equal(inter, i->__type_descriptor)) {
		ret = i->__object;
		ok = 1;
	} else {
		ret = nil;
		ok = 0;
	}
}

func ifaceI2T2(inter *descriptor, i *interface, ret *void) (ok bool) {
	if (i != nil && __go_type_descriptors_equal(inter, i->__type_descriptor)) {
		__builtin_memcpy(ret, i->__object, inter->__size);
		ok = 1;
	} else {
		__builtin_memset(ret, 0, inter->__size);
		ok = 0;
	}
}
