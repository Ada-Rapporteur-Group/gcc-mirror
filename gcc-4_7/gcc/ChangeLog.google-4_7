2012-08-17   Cary Coutant  <ccoutant@google.com>

	* dwarf2out.c (is_class_die): Remove function.
	(add_pubname): Call class_scope_p instead.

2012-08-17   Xinliang David Li  <davidxl@google.com>

	cgraphunit.c (is_backend_entered_p): New function.

2012-08-14  Han Shen  <shenhan@google.com>
	Backport from mainline.

	2012-05-01  Richard Earnshaw  <rearnsha@arm.com>

	    * arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_DEFAULT): Avoid ifdef
	    comparing enumeration values.  Update comments.

	2012-04-26  Michael Hope  <michael.hope@linaro.org>
		    Richard Earnshaw  <rearnsha@arm.com>

	    * config/arm/linux-eabi.h (GLIBC_DYNAMIC_LINKER_SOFT_FLOAT): Define.
	    (GLIBC_DYNAMIC_LINKER_HARD_FLOAT): Define.
	    (GLIBC_DYNAMIC_LINKER_DEFAULT): Define.
	    (GLIBC_DYNAMIC_LINKER): Redefine to use the hard float path.

2012-08-13   Easwaran Raman  <eraman@google.com>
	Backport the following patches from trunk to add support for Intel
	Transactional Memory Instructions support (Google ref b/6496405):
	r185218, r185223, r187051, r187084.

	r185218,r185223:
	2012-02-12  Kirill Yukhin  <kirill.yukhin@intel.com>
		* doc/invoke.texi: Document -mrtm option.
		* common/config/i386/i386-common.c (OPTION_MASK_ISA_RTM_SET):
		New.
		(OPTION_MASK_ISA_RTM_UNSET): Ditto.
		(ix86_handle_option): Handle OPT_mrtm.
		* config.gcc (i[34567]86-*-*): Add rtmintrin.h and
		xtestintrin.h.
		(x86_64-*-*): Ditto.
		* i386-builtin-types.def (INT_FTYPE_VOID): New.
		* config/i386/i386-c.c (ix86_target_macros_internal): Define
		__RTM__ if needed.
		(ix86_target_string): Define -mrtm option.
		(PTA_RTM): New.
		(ix86_option_override_internal): Extend "corei7-avx" with
		RTM option. Handle new option.
		(ix86_valid_target_attribute_inner_p): Add OPT_mrtm.
		(ix86_builtins): Add IX86_BUILTIN_XBEGIN, IX86_BUILTIN_XEND,
		IX86_BUILTIN_XTEST.
		(bdesc_special_args): Ditto.
		(ix86_init_mmx_sse_builtins): Add IX86_BUILTIN_XABORT.
		(ix86_expand_special_args_builtin): Handle new built-in type.
		(ix86_expand_builtin): Handle XABORT instruction.
		* config/i386/i386.h (TARGET_RTM): New.
		* config/i386/i386.md (UNSPECV_XBEGIN): New.
		(UNSPECV_XEND): Ditto.
		(UNSPECV_XABORT): Ditto.
		(UNSPECV_XTEST): Ditto.
		(xbegin): Ditto.
		(xbegin_1): Ditto.
		(xend): Ditto.
		(xabort): Ditto
		(xtest): Ditto.
		(xtest_1): Ditto.
		* config/i386/i386.opt (mrtm): New.
		* config/i386/immintrin.h: Include rtmintrin.h and
		xtestintrin.h.
		* config/i386/rtmintrin.h: New header.
		* config/i386/xtestintrin.h: Ditto.

	r187051:
	2012-05-02  Kirill Yukhin  <kirill.yukhin@intel.com>
		    Andi Kleen <ak@linux.intel.com>

		* coretypes (MEMMODEL_MASK): New.
		* builtins.c (get_memmodel): Add val. Call target.memmodel_check
		and return new variable.
		(expand_builtin_atomic_exchange):  Mask memmodel values.
		(expand_builtin_atomic_compare_exchange): Ditto.
		(expand_builtin_atomic_load): Ditto.
		(expand_builtin_atomic_store): Ditto.
		(expand_builtin_atomic_clear): Ditto.
		* doc/extend.texi: Mention port-dependent memory model flags.
		* config/i386/cpuid.h (bit_HLE): New.
		* config/i386/driver-i386.c (host_detect_local_cpu): Detect
		HLE support.
		* config/i386/i386-protos.h (ix86_generate_hle_prefix): New.
		* config/i386/i386-c.c (ix86_target_macros_internal): Set
		HLE defines.
		(ix86_target_string)<-mhle>: New.
		(ix86_valid_target_attribute_inner_p)<OPT_mhle>: Ditto.
		* config/i386/i386.c (ix86_target_string)<OPTION_MASK_ISA_HLE>:
		New.
		(ix86_valid_target_attribute_inner_p)<OPT_mhle>: Ditto.
		(ix86_option_override_internal)<PTA_HLE>: New switch, set it
		enabled for generic, generic64 and core-avx2.
		(ix86_print_operand): Generate HLE lock prefixes.
		(ix86_memmodel_check): New.
		(TARGET_MEMMODEL_CHECK): Ditto.
		* config/i386/i386.h (OPTION_ISA_HLE): Ditto.
		(IX86_HLE_ACQUIRE): Ditto.
		(IX86_HLE_RELEASE): Ditto.
		* config/i386/i386.h (ix86_generate_hle_prefix): Ditto.
		* config/i386/i386.opt (mhle): Ditto.
		* config/i386/sync.md(atomic_compare_and_swap<mode>): Pass
		success model to instruction emitter.
		(atomic_fetch_add<mode>): Ditto.
		(atomic_exchange<mode>): Ditto.
		(atomic_add<mode>): Ditto.
		(atomic_sub<mode>): Ditto.
		(atomic_<code><mode>): Ditto.
		(*atomic_compare_and_swap_doubledi_pic): Ditto.
		(atomic_compare_and_swap_single<mode>): Define and use argument
		for success model.
		(atomic_compare_and_swap_double<mode>): Ditto.
		* configure.ac: Check if assembler support HLE prefixes.
		* configure: Regenerate.
		* config.in: Ditto.

	r187084:
	2012-05-03  Jakub Jelinek  <jakub@redhat.com>
		PR target/53194
		* config/i386/i386-c.c (ix86_target_macros_internal): Don't
		define __ATOMIC_HLE_* macros here.
		(ix86_target_macros): But here, using cpp_define_formatted.


2012-08-13  Xinliang David Li  <davidxl@google.com>

	Google ref/6911651
	* tree-ssa.c (warn_uninitialized_vars): Guard
	possibly uninitialized warning under
	-Wmaybe-uninitialized

2012-08-09   Cary Coutant  <ccoutant@google.com>

	* tree-diagnostic.c (maybe_unwind_expanded_macro_loc): Check for
	discriminator.
	* diagnostic.c (diagnostic_report_current_module): Likewise.

2012-08-09   Cary Coutant  <ccoutant@google.com>

    Backport of pending upstream patch.

	* dwarf2out.c (clone_as_declaration): Copy DW_AT_abstract_origin
	attribute.
	(generate_skeleton_bottom_up): Remove DW_AT_object_pointer attribute
	from original DIE.
	(clone_tree_hash): Rename to ...
	(clone_tree_partial): ... this; change callers.  Copy
	DW_TAG_subprogram DIEs as declarations.

2012-08-07  Cary Coutant  <ccoutant@google.com>

    Backport r190190 from trunk.

	* cgraphunit.c (assemble_thunk): Add source line info.
	* final.c (final): Check for non-null cfg pointer.

2012-08-01  Dehao Chen  <dehao@google.com>

	Backport r190015 from trunk:

	2012-07-31  Dehao Chen  <dehao@google.com>
	* predict.c (tree_estimate_probability_driver): Normalize the
	loop when initializing the loop optimizer.

2012-07-26   Cary Coutant  <ccoutant@google.com>

	* dwarf2out.c (dwo_id_placeholder): Delete.
	(output_skeleton_debug_sections): Don't write dwo_id here.
	(dwarf2out_finish): Compute dwo_id and write it to both comp units.

2012-07-25  Cary Coutant  <ccoutant@google.com>

    Backport pending upstream patch to output DW_AT_high_pc as a constant
    instead of a relocated address.  This significantly reduces the number
    of entries used in the .debug_addr table with -gfission.

    2012-04-27  Mark Wielaard  <mjw@redhat.com>

	* dwarf2out.h (enum dw_val_class): Add dw_val_class_high_pc.
	* dwarf2out.c (dw_val_equal_p): Handle dw_val_class_high_pc.
	(add_AT_low_high_pc): New function.
	(AT_lbl): Handle dw_val_class_high_pc.
	(print_die): Likewise.
	(attr_checksum): Likewise.
	(attr_checksum_ordered): Likewise.
	(same_dw_val_p): Likewise.
	(size_of_die): Likewise.
	(value_format): Likewise.
	(output_die): Likewise.
	(gen_subprogram_die): Use add_AT_low_high_pc.
	(add_high_low_attributes): Likewise.
	(dwarf2out_finish): Likewise.

2012-07-25  Teresa Johnson  <tejohnson@google.com>

	Backport the following patches from trunk to ensure that
	"andw $0xff, $reg" is always converted to a zero extend
	to avoid LCP stalls on core2/corei7 (b/6615073):
	r184891, r186839, r186979, r186993, r188630, r188634, r188648

	r184891:
	2012-03-04  Uros Bizjak  <ubizjak@gmail.com>
        * config/i386/constraints.md (Ya): New internal constraint.
        * config/i386/i386.md (zero_extendsidi2): Remove expansion.
        (*zero_extendsidi2_rex64): Add x,x alternative.
        (*zero_extendsidi2): Ditto.  Add o,0 alternative.
        Remove flags reg clobber.  Adjust corresponding splits.
        (zero_extend<mode>si2): Macroize expander from zero_extendhisi2 and
        zero_extendqisi2 expanders using SWI12 mode iterator.
        (zero_extend<mode>si2_and): Macroize insn from
        zero_extendhisi2_and and zero_extendqisi2_and.  Merge corresponding
        splitters.
        (*zero_extend<mode>si2):  Macroize insn from
        *zero_extendhisi2_movzbl and *zero_extendqisi2_movzbl.
        (*zero_extend*2_movzbl_and): Remove insn patterns.
        (zero_extendqihi2_and): Merge corresponding splitter.
        (*zero_extendqihi2): Rename from *zero_extendqihi2_movzbl.
        (*zero_extend*2_movzbl_and): Remove insn patterns.
        (*anddi_1): Split TYPE_IMOVX instructions.
        (*andsi_1): Use Ya for alternative 2.  Split TYPE_IMOVX instructions.
        (*andhi_1): Ditto.
        (and->zext splitter): Add splitter pattern.
        (zero extend with andsi3 splitter): Adjust zero_extend pattern.

	r186839:
	2012-04-25  Jakub Jelinek  <jakub@redhat.com>
        PR target/53110
        * config/i386/i386.md (and<mode>3): For andq $0xffffffff, reg
        instead expand it as zero extension.

	r186979:
	2012-04-30  Uros Bizjak  <ubizjak@gmail.com>
        * config/i386/i386.md (and<mode>3): Expand masking operations with
        0xff, 0xffff or 0xffffffff immediates to corresponding zero_extend RTX.
        (and splitter): Split to DImode zero_extend RTX for DImode operand[0].

	r186993:
	2012-04-30  Uros Bizjak  <ubizjak@gmail.com>
	* config/i386/i386.md (and<mode>3): Change runtime operand mode checks
        to compile-time "mode == <MODE>mode" checks.
        (and splitter): Ditto.

	r188630:
	2012-06-14  Uros Bizjak  <ubizjak@gmail.com>
        * config/i386/i386.md (*zero_extendsidi2): Remove x,x alternative.
        (*zero_extendsidi2_rex64): Ditto.  Remove isa attribute.

	r188634:
	2012-06-14  Uros Bizjak  <ubizjak@gmail.com>
	Fix my previous commit to:
        * config/i386/i386.md (*zero_extendsidi2): Remove x,x alternative.
        (*zero_extendsidi2_rex64): Ditto.  Remove isa attribute.

	r188648:
	2012-06-14  Uros Bizjak  <ubizjak@gmail.com>
       (*zero_extendsidi2_rex64): Remove isa attribute.

2012-07-25  Cary Coutant  <ccoutant@google.com>

    	* common.opt (-gfission): Alias for -gsplit-dwarf.
    	(-gno-fission): Alias for -gno-split-dwarf.

2012-07-25   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 189718.

2012-07-24  Cary Coutant  <ccoutant@google.com>

    Backport pending Fission patch at http://codereview.appspot.com/6305113.
    
    2012-07-18  Sterling Augustine <saugustine@google.com>
                Cary Coutant <ccoutant@google.com>
    
    	* common.opt (gno-split-dwarf, gsplit-dwarf): New switches.
    	* doc/invoke.texi (Debugging Options): Document them.
    	* opts.c (finish_options): Make gsplit-dwarf imply -gpubnames.
    	* dwarf2out.h (dw_val_struct): New field val_index.
    	* dwarf2out.c (debug_skeleton_info_section,
    	debug_skeleton_abbrev_section, debug_addr_section,
    	debug_skeleton_line_section, debug_str_offsets_section): New sections.
    	(indirect_string_node): Add index field.
    	(dw_loc_list_node): Add begin_index field.
    	(dw_addr_op, new_addr_loc_descr, AT_index, set_AT_index,
    	add_addr_table_entry, remove_addr_table_entry, output_range_list_offset,
    	output_loc_list_offset, output_attr_index_or_value,
    	remove_loc_list_addr_table_entries, output_die_abbrevs,
    	add_top_level_skeleton_die_attrs, get_skeleton_type_unit,
    	output_skeleton_debug_sections, output_index_strings,
    	output_addr_table, index_location_lists): New functions.
    	(DEBUG_DWO_INFO_SECTION, DEBUG_DWO_ABBREV_SECTION, DEBUG_ADDR_SECTION,
    	DEBUG_NORM_MACINFO_SECTION, DEBUG_DWO_MACINFO_SECTION,
    	DEBUG_DWO_LINE_SECTION, DEBUG_DWO_LOC_SECTION,
    	DEBUG_NORM_STR_OFFSETS_SECTION, DEBUG_DWO_STR_SECTION,
    	DEBUG_MACRO_SECTION_FLAGS, DEBUG_SKELETON_LINE_SECTION_LABEL,
    	DEBUG_SKELETON_INFO_SECTION_LABEL, DEBUG_SKELETON_ABBREV_SECTION_LABEL,
    	DEBUG_ADDR_SECTIN_LABEL, SKELETON_COMP_DIE_ABBREV,
    	SKELETON_TYPE_DIE_ABBREV): New defines.
    	(DEBUG_MACINFO_SECTION, DEBUG_MACRO_SECTION, DEBUG_STR_SECTION
    	DEBUG_STR_SECTION_FLAGS): Adjust definitions.
    	(TEXT_SECTION_LABEL, COLD_TEXT_SECTION_LABEL, DEBUG_INFO_SECTION_LABEL,
    	DEBUG_ABBREV_SECTION_LABEL, DEBUG_LOC_SECTION_LABEL,
    	DEBUG_RANGES_SECTION_LABEL, DEBUG_MACINFO_SECTION_LABEL,
    	DEBUG_MACRO_SECTION_LABEL): Adjust indentation.
    	(debug_skeleton_info_section_label, debug_skeleton_abbrev_section_label,
    	debug_addr_section_label, debug_skeleton_line_section_label,
    	dw_id_placeholder): New	global variables.
    	(add_AT_lbl_id): Add force_direct parameter.  Adjust calls throughout
    	file.  Handle dwarf_split_debug_info.
    	(add_AT_addr). Likewise.  Initialize val_index_field.
    	(add_AT_range_list): Add force parameter.  Adjust calls throughout file.
    	Initialize val_index field.
    	(add_ranges_by_labels): Add and handle force_direct parameter.  Adjust
    	calls throughout file.
    	(size_of_die): New variable form.  Handle dwarf_split_debug_info and
    	call AT_index.
    	(value_format): Use AT_class instead of calling val_class directly.
    	Handle DW_FORM_addr and dw_val_class_lbl_id appropriately for
    	dwarf_split_debug_info and AT_index.
    	(output_abbrev_section): Move most code to new function
    	output_die_abbrevs.
    	(output_loc_list): Handle dwarf_split_debug_info by using
    	DW_LLE_start_length_entry and DW_LLE_end_of_list_entry.
    	(output_die): Call output_attr_index_or_value, output_range_list_offset,
    	Fix format string.  Check val_str->form directly to avoid side effect.
    	(add_pubtype): Fix indention.
    	(output_comdat_type_unit): Handle dwarf_split_debug_info.
    	(output_pubnames): Likewise.
    	(output_aranges): Likewise.
    	(output_mac_info): Likewise.
    	(output_line_info): New parameter prologue_only.  Adjust calls
    	throughout file.
    	(mem_loc_descriptor): Call new_addr_loc_descr.
    	(loc_descriptor): Likewise.
    	(add_const_value_attribute): Likewise.
    	(loc_list_from_tree): Replace first_op and second_op with tls_op.
    	Update associated logic.  Call new_addr_loc_descr.
    	(dwarf2out_init): Handle dwarf_split_debug_info.  Initialize
    	debug_skeleton_info_section, debug_skeleton_abbrev_section,
    	debug_addr_section, debug_skeleton_line_section,
    	debug_str_offsets_section, debug_skeleton_info_section_label,
    	debug_skeleton_abbrev_section_label, debug_addr_section_label and
    	debug_skeleton_line_section_label.  Use DEBUG_MACRO_SECTION_FLAGS.
    	(new_loc_descr, build_cfa_loc, add_AT_flag, add_AT_int, add_AT_unsigned,
    	add_AT_double, add_AT_vec, add_AT_data8, add_AT_string, add_AT_die_ref,
    	add_AT_fde_ref, add_AT_loc, add_AT_loc_list, add_AT_file,
    	add_AT_vms_delta, add_AT_lineptr, add_AT_macptr, add_AT_offset):
    	Initialize val_index field.
    	(size_of_loc_descr, output_loc_operands, output_loc_operands_raw,
    	resolve_addr_in_expression, hash_loc_operands):	Handle
    	DW_OP_GNU_addr_index and DW_OP_GNU_const_index.
    	(compare_loc_operands):  Likewise.  Adjust assertion.
    	(AT_string_form): Handle dwarf_split_debug_info.
    	(resolve_addr): New local variable l.  Check val_index.  Call
    	remove_addr_table_entry and remove_loc_list_addr_table_entries.
    	(dwarf2out_finish): Handle dwarf_split_debug_info.  New variable
    	main_comp_unit_die.  Call index_location_lists, add_AT_data8,
    	add_AT_lineptr, output_skeleton_debug_sections, output_addr_table.  Move
    	call to	ASM_GENERATE_INTERNAL_LABEL to dwarf2out_init.  Call
    	ASM_OUTPUT_LABEL for debug_skeleton_line_section_label and
    	debug_addr_section_label.  Adjust comment.
    	* gcc.c (replace_extension_spec_func):  New function.
    	(ASM_FINAL_SPEC): Adjust.  Fix related comments.
    	(check_live_switch): Likewise.
    
2012-07-24  Xinliang David Li  <davidxl@google.com>

	* diagnostic.c (diagnostic_initialize): Initialize
	new field.
	(diagnostic_report_diagnostic): Honor -Wforce-warnings.
	* diagnostic.h: New field.
	* opts.c (common_handle_option): Handle new option.
	* coverage.c (get_da_file_name): Handle new option.
	* common.opt: New options.

2012-07-24  Cary Coutant  <ccoutant@google.com>
    
    Backport Fission patches from trunk at r188195, r188857, r189084,
    r189094, and r189392.
    
    2012-06-29   Cary Coutant  <ccoutant@google.com>
    
    	* dwarf2out.c (add_pubname_string): Don't check for want_pubnames.
    	(gen_subprogram_die): Don't add pubname if want_pubnames is false.
    	(gen_variable_die): Likewise.
    	(gen_namespace_die): Likewise.
    
    2012-06-29  Sterling Augustine  <saugustine@google.com>
    
    	* dwarf2out.c (add_pubname): Add comment.
    	(add_pubtype): Fix indentation.
    	(gen_enumeration_type_die): Likewise.
    
    2012-06-21   Sterling Augustine  <saugustine@google.com>
    		 Cary Coutant  <ccoutant@google.com>
    
    	* dwarf2out.c (is_cu_die, is_namespace_die, is_class_die,
    	add_AT_pubnames, add_enumerator_pubname, want_pubnames): New functions.
    	(comdat_type_struct): New field 'skeleton_die'.
    	(breakout_comdat_types): Update it.
    	(add_pubname): Rework logic.  Call is_class_die, is_cu_die and
    	is_namespace_die.  Fix minor style violation.  Call want_pubnames.
    	(add_pubname_string): Call want_pubnames.
    	(add_pubtype): Rework logic for calculating type name.  Call
    	is_namespace_die.  Call want_pubnames.
    	(output_pubnames): Move conditional logic deciding when to produce the
    	section from dwarf2out_finish.  Use new skeleton_die field.
    	(base_type_die): Call add_pubtype.
    	(gen_enumeration_type_die): Unconditionally call add_pubtype.
    	(gen_subprogram_die): Adjust calls to add_pubname.
    	(gen_namespace_die): Call add_pubname_string.
    	(dwarf2out_finish): Call add_AT_pubnames; Move logic on when to
    	produce pubnames and pubtypes sections to output_pubnames.
    	* common.opt: New option '-gpubnames'.
    	* doc/invoke.texi: Document it.
    
2012-07-19  Easwaran Raman  <eraman@google.com>

	* params.def (HOT_BB_COUNT_FRACTION): Set default to 60000.

2012-07-19  Rong Xu  <xur@google.com>

	Backport r189691 from google_main.
	* gcc/gcov-io.h (GCOV_TAG_MODULE_INFO): tag needs to be
	 an odd number in each active level.

2012-07-10  Xinliang David Li  <davidxl@google.com>

	Backport r189413 from trunk
	* doc/invoke.texi: New option documented.
	* flag-types.h: New enum type.
	* gimplify.c (gimplify_bind_expr): Control
	clobber generation with new option.
	(gimplify_target_expr): Ditto.
	common.opt: New option.

2012-07-10  Xinliang David Li  <davidxl@google.com>

	* Revert r189107

2012-07-01  Xinliang David Li  <davidxl@google.com>

	* common.opt: -ftemp-reuse-stack option.
	* gimplify.c (gimplify_target_expr): Check new flag.

2012-06-29  Xinliang David Li  <davidxl@google.com>

	* coverage.c (coverage_init): Initialize dyn-ipa
	paramater decls.
	* tree-profile.c (init_comdat_decl): New function.
	(tree_init_dyn_ipa_paramters): Ditto.

2012-06-27  Dehao Chen  <dehao@google.com>

	Backport from trunk r188981.
	* tree-inline.c: (expand_call_inline): Ensure that lexical block's
	source location is consistant with the call stmt.

2012-06-21   Diego Novillo  <dnovillo@google.com>

	Merge from trunk rev 188808.

2012-06-15   Cary Coutant  <ccoutant@google.com>

    Revert Fission patches r182490, r182891, r183042, and r183320.
    This will clear the way to backport the final patches from trunk.

    r182490:

	2011-12-19  Sterling Augustine <saugustine@google.com>

	    * dwarf2out.c (DEBUG_PUBNAMES_SECTION_LABEL,
	    DEBUG_PUBTYPES_SECTION_LABEL): Define.
	    (debug_pubnames_section_label, debug_pubtypes_section_label):
	    Declare.
	    (is_namespace_die, is_class_die): New functions.
	    (add_enumerator_pubname): New function.
	    (add_pubname): Call is_namespace_die, is_cu_die, and is_class_die in
	    conditional.
	    (add_pubtype): Call is_namespace_die. Rework name calculation.  Call
	    type_tag, lang_hooks.dwarf_name and add_enumerator_pubname.
	    (output_pubnames): Output debug_pubnames_section_label or
	    debug_pubtypes_section_label.
	    (base_type_die): Call add_pubtype.
	    (gen_namespace_die): Call add_pubname_string and lang_hooks.dwarf_name.
	    (dwarf2_out_init): Generate debug_pubnames_section_label and
	    debug_pubtypes_section_label.
	    (pubtypes_section_empty): New function.
	    (dwarf2_out_finish): Call add_AT_lineptr if pubnames or pubtypes is
	    non-empty.  When dealing with pubnames, change assertion to conditional.
	    Call pubtypes_section_empty.  Likewise when dealing with pubtypes.
	    Move code checking for empty section to...
	    (pubtypes_section_empty): Here.
	    * target.def: Switch boolean to enable pubnames and pubtypes.

    r182891:

	2012-01-04   Sterling Augustine  <saugustine@google.com>

	    * dwarf2out.c (add_pubname): Move conditional clause from outer to
	    inner if-statement.
	    (dwarf2out_finish): Fix conditions to output DW_AT_GNU_pubnames and
	    DW_AT_GNU_pubtypes.  Move decision to output pubnames and pubtypes from
	    here...
	    (output_pubnames): ...to here.
	    (pubtypes_section_empty): Delete unused function.

    r183042:

	2012-01-09   Sterling Augustine  <saugustine@google.com>

	    * dwarf2out.c (output_pubnames): Add check for info_section_emitted.

    r183320:

	2012-01-19   Sterling Augustine  <saugustine@google.com>

	    * dwarf2out.c (break_out_comdat_types): Add DW_AT_GNU_pubnames and
	    DW_AT_GNU_pubtypes attributes.

2012-06-15   Easwaran Raman  <eraman@google.com>
  Cherrypick r188675 from trunk.
	2012-06-15  Easwaran Raman  <eraman@google.com>
		* passes.c (init_optimization_passes): Remove pass_call_cdce
		from its current position and insert after pass_dce.

2012-06-09   Xinliang Davidl Li  <davidxl@google.com>

	l-ipo.c (pop_module_scope): Stop timer after
	pending decl handling.

2012-06-09   Xinliang Davidl Li  <davidxl@google.com>

	c-family/c-opts.c (lipo_max_mem_reached):  Scale up
	memory allocated to acount for optimizer uses.
	params.def: tune up max lipo mem parameter to 2.8G.

2012-06-07   Easwaran Raman  <eraman@google.com>
  Backport r179412 from google/gcc-4_6 branch.
	2011-09-30  Easwaran Raman  <eraman@google.com>

		* tree-profile.c (gcov_sample_counter_decl): Add GTY marker.
		(gcov_sampling_rate_decl): Likewise.
		(add_sampling_to_edge_counters): Do not free
		instrumentation_to_be_sampled.
		(cleanup_instrumentation_sampling): New function.
		(tree_profiling): Call cleanup_instrumentation_sampling at the end.

2012-06-07  Teresa Johnson  <tejohnson@google.com>

	Backport from google/main r188308.
	2012-06-07  Teresa Johnson  <tejohnson@google.com>

	* doc/invoke.texi: Rename -fripa-peel-size-limit
        and -fripa-unroll-size-limit to -fpeel-codesize-limit and
        -funroll-codesize-limit, respectively. Remove
        codesize-hotness-threshold param and add unrollpeel-hotness-threshold
        param.
	* gcov-io.c (gcov_write_summary): Write new summary info.
	(gcov_read_summary): Read new summary info.
	* gcov-io.h (GCOV_TAG_SUMMARY_LENGTH): Update for new summary info.
        (struct gcov_ctr_summary): Add new summary info: num_hot_counters.
	* loop-unroll.c (limit_code_size): Renamed to
        code_size_limit_factor.
	(code_size_limit_factor): Renamed from limit_code size. Update to
        use new summary info and refine for very hot loops.
	(decide_unrolling_and_peeling): Remove call to limit_code_size.
        (decide_unroll_runtime_iterations): Call code_size_limit_factor
        to control the unroll factor.
	(decide_peel_simple, decide_unroll_stupid): Ditto.
	* coverage.c (read_counts_file): Propagate new summary info.
	* common.opt: Rename -fripa-peel-size-limit
        and -fripa-unroll-size-limit to -fpeel-codesize-limit and
        -funroll-codesize-limit, respectively.
	* tree-optimize.c (cgraph_codesize_estimate): Remove.
	(compute_codesize_estimate): Remove.
	(execute_cleanup_cfg_post_optimizing): Remove call to
        compute_codesize_estimate.
	* params.def (PARAM_UNROLLPEEL_CODESIZE_THRESHOLD): Remove.
        (PARAM_UNROLLPEEL_HOTNESS_THRESHOLD): Add.
	* gcov-dump.c (tag_summary): Dump new summary info.

2012-06-07  Dehao Chen  <dehao@google.com>

	* gcc/cgraph.c (cgraph_node): Add attribute to function decl.
	* gcc/opts-global.c (add_attribute_pattern): New function.
	(pattern_match_function_attributes): New function.
	(handle_common_deferred_options): Handle new options.
	* gcc/opts.c (common_handle_option): Handle new options.
	* gcc/opts.h (handle_common_deferred_options): New function.
	* gcc/common.opt (ffunction_attribute_list): New option.

2012-06-06   Diego Novillo  <dnovillo@google.com>

  Cherry pick rev 188207.

      2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>
      
	    PR c++/53524
	    * doc/invoke.texi (Wenum-compare): Update documentation.
      
      /cp
      2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>
      
	    PR c++/53524
	    * call.c (build_conditional_expr_1): Use OPT_Wenum_compare
	    to control enumeral mismatch in conditional expression too.
      
      /testsuite
      2012-06-04  Paolo Carlini  <paolo.carlini@oracle.com>
      
	    PR c++/53524
	    * g++.dg/warn/Wenum-compare-no-2: New.

2012-06-06   Xinliang David Li  <davidxl@google.com>

	coverage.c (coverage_finish): Do not remove gcda file with
	-frandom-seed option -- this recovers the compiler behavior
	before gcc4_7.


2012-06-05   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 188095 (minus rev 187877).

2012-06-02  Xinliang David Li  <davidxl@google.com>

	l-ipo.c (promote_static_var_func): Promoted static variables from
	primary modules should be marked as externally visible and being
	prevailing def to avoid being localized again later.


2012-06-02   Easwaran Raman  <eraman@google.com>

	* gcc/ipa-inline.c (want_early_inline_function_p): Boost early
	inlining of comdats. Allow more tuning by using params.
	* gcc/params.def (PARAM_EARLY_INLINING_INSNS_NON_LEAF): New param.
	(PARAM_EARLY_INLINING_INSNS_ANY): Likewise.
	(PARAM_EARLY_INLINING_INSNS_COMDAT): Likewise.

2012-05-30  Dehao Chen  <dehao@google.com>

	* predict.c (predict_extra_loop_exit): New function to predict for
	extra loop exits resulted from short-circuit conditions.

2012-05-24   Rong Xu  <xur@google.com>

	* l-ipo.c (create_unique_name): Make temp names demanglable.

2012-05-21   Easwaran Raman  <eraman@google.com>

	* gcc/basic-block.h (maybe_hot_count_p): New declaration.
	* gcc/cgraph.c (dump_cgraph_node): Dump max_bb_count.
	(cgraph_clone_node): Update max_bb_count.
	* gcc/cgraph.h (cgraph_node): Add new field max_bb_count.
	* gcc/cgraphbuild.c (rebuild_cgraph_edges): Compute max_bb_count.
	* gcc/cgraphunit.c (cgraph_copy_node_for_versioning): Copy max_bb_count.
	* gcc/ipa-inline-transform.c (inline_call): Update max_bb_count of
	the function to which this callsite is eventually inlined to.
	* gcc/ipa-inline.c (edge_hot_enough_p): New function.
	(want_inline_small_function_p): Call edge_hot_enough_p instead
	of cgraph_maybe_hot_edge_p.
	* gcc/params.def (PARAM_INLINE_FUNCTION_OVERHEAD_SIZE): New param.
	* gcc/predict.c (maybe_hot_count_p): Make it non static.
	* gcc/testsuite/gcc.dg/tree-prof/inliner-1.c: Add option
	--param inline-hot-caller=0.
	* gcc/testsuite/gcc.dg/tree-prof/lipo/inliner-1_0.c: Likewise.

2012-05-18   Teresa Johnson  <tejohnson@google.com>

	Backport from google/main r187660:
	2012-05-18   Teresa Johnson  <tejohnson@google.com>

	* doc/invoke.texi: Update the documentation with new params.
	* loop-unroll.c (loop_has_FP_comp): Remove function.
	(max_unroll_with_branches): New function.
	(decide_unroll_constant_iterations, decide_unroll_runtime_iterations):
        Add heuristic to avoid increasing branch mispredicts when unrolling.
	(limit_code_size, decide_peel_simple, decide_unroll_stupid): Retrieve
        number of branches from niter_desc instead of via function that walks
        loop.
	* loop-iv.c (get_simple_loop_desc): Invoke new analyze_loop_insns
        function, and add guards to enable this function to work for the
        outermost loop.
	* cfgloop.c (insn_has_fp_set, analyze_loop_insns): New functions.
        (num_loop_branches): Remove.
	* cfgloop.h (struct niter_desc): Added new fields to cache additional
        loop analysis information.
        (num_loop_branches): Remove.
	(analyze_loop_insns): Declare.
	* params.def (PARAM_MIN_ITER_UNROLL_WITH_BRANCHES): New param.
        (PARAM_UNROLL_OUTER_LOOP_BRANCH_BUDGET): Ditto.

2012-05-16  Sriraman Tallam  <tmsriram@google.com>

	Port from google/gcc-4_6 
	r177289, r177308, r179104, r179289, r179303, r179404, r182447
	
	* doc/invoke.texi: Document -freorder-functions=*
	* cgraphbuild.c (remove_cgraph_callee_edges): Preserve
	callgraph till pass_final.
	* configure: Regenerate.
	* final.c (dump_cgraph_profiles): New function.
	(rest_of_handle_final): Call dumping of cgraph profiles in
	.gnu.text.callgraph sections.
	* gcc.c (LINK_COMMAND_SPEC): Process -freorder-functions=
	(set_func_reorder_linker_plugin_spec): New function.
	(main): Call function reorder plugin.
	* testsuite/lib/target-supports-dg.exp
	(dg-require-section-exclude): New proc.
	(dg-require-linker-function-reordering-plugin): New proc.
	* testsuite/lib/target-supports.exp
	(check_section_exclude_available): New proc.
	(check_linker_function_reordering_plugin_supported): New proc.
	* testsuite/g++.dg/tree-prof/callgraph-profiles.C: New test.
	* config.in: undef FRPLUGINSONAME
	* opts.c
	* configure.ac (FRPLUGINSONAME): Define 
	* common.opt (fcallgraph-profiles-sections): Remove.
	(freorder-functions=): New option.
	* tree-optimize.c (gate_all_optimizations): Mark last cleanup of
	callgraph.
	* config.host: Set function reordering plugin.
	* params.def (PARAM_NOTE_CGRAPH_SECTION_EDGE_THRESHOLD): Remove.
	(PARAM_GNU_CGRAPH_SECTION_EDGE_THRESHOLD): Add.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* tree-profile.c (add_sampling_wrapper): Call
	add_referenced_var for sampling related variables.
	(gimple_init_instrumentation_sampling): Do not
	call varpool_finalize for external decls.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* cgraph.c (cgraph_set_call_stmt): Resolve target
	to the real target in LIPO mode.
	(cgraph_create_virtual_clone): Ditto.

2012-05-16  Xinliang David Li  <davidxl@google.com>

	* c-family/c-opts.c (is_parsing_done_p): New function.
	* cp/semantics.c (cp_clear_constexpr_hashtable): Ditto.
	* cp/decl2.c (cp_clear_defered_fns): Clear constexpr hash.
	* cp/mangle.c (mangle_decl): Save decl for binding clearing.
	* cp/cp-tree.h: New prototype declaration.
	* l-ipo.c: New prototype declaration.


2012-05-15   Teresa Johnson  <tejohnson@google.com>

	Backport from google/main r187536:
	2012-05-15   Teresa Johnson  <tejohnson@google.com>

	* doc/invoke.texi (profile-generate-sampling-period): Rename
	from profile-generate-sampling-rate.
	* tree-profile.c (gcov_sampling_period_decl): Rename from
	gcov_sampling_rate_decl.
	(gcov_has_sampling_decl): New variable.
	(insert_if_then, add_sampling_wrapper): Rename variables from "*rate*"
	to "*period*".
	(gimple_init_instrumentation_sampling): Ditto, and add handling
	for gcov_has_sampling_decl.
	* params.def (profile-generate-sampling-period): Rename
	from profile-generate-sampling-rate.

2012-05-15   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 187362.

2012-05-14  Xinliang David Li  <davidxl@google.com>

	* cgraphbuild.c (record_reference_to_real_target_from_alias):
	New function.
	(mark_address): Record reference to the resolved target node
	in LIPO mode. Also record reference to alias's real target.
	(rebuild_cgraph_edges): As above.
	* cgraph.c (cgraph_clone_edge): Create cgraph edge for
	indirect call inlining edge properly.
	* l-ipo.c (cgraph_lipo_get_resolved_node_1): Do not force
	creating cgraph node.
	(fixup_reference_list): New function.
	(varpool_do_link): Fix up initializer's references to functions
	after linking.

2012-05-09  Teresa Johnson  <tejohnson@google.com>

	Backport from trunk r187297:
	2012-05-08   Teresa Johnson  <tejohnson@google.com>

	* gcov-io.h (__gcov_reset, __gcov_dump): Declare.
	* doc/gcov.texi: Add note on using __gcov_reset and __gcov_dump.

2012-05-08  Xinliang David Li  <davidxl@google.com>

	Fix issue 6457844

	* ipa-inline-transform.c (inline_call): When
	fixing up cgraph edge callees which are aliases,
	find the real resolved alias target in LIPO mode.
	* cgraphunit.c (cgraph_redirect_edge_call_stmt_to_callee):
	Remove unnecssary check in LIPO mode.
	* ipa-inline.c (inline_small_functions): Compute
	max_count properly by considering indirect edges.



2012-05-08  Xinliang David Li  <davidxl@google.com>

	Fix issue 6461583

	* profile.c (instrument_values): Skip static ctor/dtors
	for ic counter allocation to match instrumentation.
	* tree-profile.c (gimple_gen_ic_profiler): Remove
	unnecessary guard in FDO mode.

2012-05-03  Dehao Chen  <dehao@google.com>

	Backport r185949 from google-main.

	2012-03-29  Dehao Chen  <dehao@google.com>

		* predict.c (predict_iv_comparison): Add the comparison of
		induction variable against its initial value.

2012-05-01   Rong Xu  <xur@google.com>

	Backport r187028 from google-main.

	2012-05-01   Rong Xu  <xur@google.com>

		* gcc/cp/rtti.c (get_tinfo_decl): generate tinfo for aux 
		modules in LIPO.

2012-04-25   Diego Novillo  <dnovillo@google.com>

	Add better commit message for recent merge.

2012-04-25   Diego Novillo  <dnovillo@google.com>

	Merge from gcc-4_7-branch rev 186721.

2012-04-20  Xinliang David Li  <davidxl@google.com>

	Backport r186622 from trunk
	* tree-ssa-copy.c (propagate_tree_value_into_stmt): Use
	update_call_from_tree when propagating into a call.


	* varasm.c (alias_target_node_exist_p): New function.
	(finish_alias_1): Use the new function in LIPO mode.

2012-04-12  Xinliang David Li  <davidxl@google.com>

	* cgraphbuild.c (rebuild_cgraph_edges): Add ipa reference from
	an alias node to its body node (post LIPO linking one) to avoid
	the body being eliminated.
	* varasm.c (finish_aliases_1): Do not emit error for an alias
	which is artificial in LIPO mode -- it exists but can not be
	found.

2012-04-11  Teresa Johnson  <tejohnson@google.com>

	Revert r182254 since it is subsumed by r186332.

2012-04-11   Teresa Johnson  <tejohnson@google.com>

	Backport r186176 from trunk.

	2012-04-05  Teresa Johnson  <tejohnson@google.com>
		    H.J. Lu  <hongjiu.lu@intel.com>

	* config/i386/i386.h (ix86_tune_indices): Add
	X86_TUNE_LCP_STALL.
	* config/i386/i386.md (move immediate to memory peephole2):
	Add cases for HImode move when LCP stall avoidance is needed.
	* config/i386/i386.c (initial_ix86_tune_features): Initialize
	X86_TUNE_LCP_STALL entry.

2012-04-10  Xinliang David Li  <davidxl@google.com>

	* mversn-dispatch.c (builtin_dispatch_ipa_clone): returns
	TODO flags when there are changes.
	(do_convert_builtin_dispatch): Ditto.

2012-04-09  Xinliang David Li  <davidxl@google.com>

	Fix b/6300341: LIPO profile-gen ICEs 

	* coverage.c (converage_dc_end_function): Properly initialize
	the fn_decl and ctr_data field of the coverage_data.

2012-03-07  Sriraman Tallam  <tmsriram@google.com>

	Backport from google/main rev 185083

	        * config/i386/i386.c (build_struct_with_one_bit_fields): New function.
	        (make_var_decl): New function.
	        (get_field_from_struct): New function.
	        (fold_builtin_target): New function.
	        (ix86_fold_builtin): New function.
	        (ix86_expand_builtin): Expand new builtins by folding them.
	        (make_platform_builtin): New functions.
	        (ix86_init_platform_type_builtins): Make the new builtins.
	        (ix86_init_builtins): Make new builtins to detect CPU type.
	        (TARGET_FOLD_BUILTIN): New macro.
	        (IX86_BUILTIN_CPU_SUPPORTS_CMOV): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_MMX): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_POPCOUNT): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE2): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE3): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSSE3): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE4_1): New enum value.
	        (IX86_BUILTIN_CPU_SUPPORTS_SSE4_2): New enum value.
	        (IX86_BUILTIN_CPU_INIT): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMD): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_ATOM): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_CORE2): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_NEHALEM): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_WESTMERE): New enum value.
	        (IX86_BUILTIN_CPU_IS_INTEL_COREI7_SANDYBRIDGE): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_BARCELONA): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_SHANGHAI): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM10_ISTANBUL): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM15H_BDVER1): New enum value.
	        (IX86_BUILTIN_CPU_IS_AMDFAM15H_BDVER2): New enum value.
	        * config/i386/i386-builtin-types.def: New function type.
	        * testsuite/gcc.target/builtin_target.c: New testcase.

2012-03-07  Diego Novillo  <dnovillo@google.com>

	Merge from google/main rev 184996.

2012-02-26  Ollie Wild  <aaw@google.com>

	* BASE-VER: Change to 4.7.x-google.

2012-02-23   Diego Novillo  <dnovillo@google.com>

	* BASE-VER: Change to 4.7.0-google.
	* DEV-PHASE: Change to prerelease.
