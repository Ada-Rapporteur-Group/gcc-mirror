2017-07-20  Nathan Sidwell  <nathan@acm.org>

	All conv ops on one slot.
	gcc/cp/
	* class.c (add_method): Put conversion ops on a single slot.
	* name-lookup.c (lookup_all_conversions): Only examine single
	slot.
	* search.c (lookup_conversion_operator): Examine single slot in
	detail to pull out requested conversions.
	(lookup_conversions_r): Lose tmp/non-tmpl distinction. All ops on
	one slot.
	(lookup_conversions): Likewise.

	gcc/cp/
	* call.c (add_candidates): Move decls to initialization.  Don't
	use !!.

	Merge trunk r250380.

2017-07-19  Nathan Sidwell  <nathan@acm.org>

	Merge trunk r250344.

2017-07-18  Nathan Sidwell  <nathan@acm.org>

	gcc/cp/
	* search.c (lookup_conversion_operator): Return overloads not
	index.
	(lookup_fnfields_idx_nolazy): Absorb into ...
	(lookup_fnfields_slot_nolazy): ... this.
	(lookup_fnfields_1): Absorb into ...
	(lookup_fnfields_slot): ... this.

	Merge trunk r250313.

	Rename TYPE_{MIN,MAX}VAL to TYPE_{MIN,MAX}VAL_RAW.
	gcc/c/
	* c-parser.c (c_parser_array_notation): Use TYPE_{MIN,MAX}_VALUE.
	gcc/c-family/
	* c-warn.c (warn_for_memset): Use TYPE_{MIN,MAX}_VALUE.
	gcc/cp/
	* cp-array-notation.c (build_array_notation_ref): Use
	TYPE_{MIN,MAX}_VALUE.
	* cp-tree.h (PACK_EXPANSION_PARAMETER_PACKS,
	PACK_EXPANSION_EXTRA_ARGS): Use TYPE_{MIN,MAX}VAL_RAW.
	fortran/
	* trans.c (gfc_build_array_ref): Use TYPE_{MIN,MAX}_VALUE.
	lto/
	* lto.c (mentions_vars_p_type): Use TYPE_{MIN,MAX}VAL_RAW.
	(compare_tree_sccs_1): Likewise.  Don't check BINFO directly.
	(lto_fixup_prevailing_decls): Use TYPE_{MIN,MAX}VAL_RAW.
	gcc/
	* tree.h (TYPE_MINVAL, TYPE_MAXVAL): Rename to ...
	(TYPE_MINVAL_RAW, TYPE_MAXVAL_RAW): ... these.
	* lto-streamer-out.c (DFS::DFS_write_tree_body): Use
	TYPE_{MIN,MAX}VAL_RAW.  Don't process BINFO directly.
	(hash_tree): Likewise.
	* tree-parloops.c (try_transform_to_exit_first_loop_alt): Use
	TYPE_MAX_VALUE.
	* tree-streamer-in.c (lto_input_ts_type_non_common_tree_pointers):
	Use TYPE_{MIN,MAX}VAL_RAW.  Don't process BINFO directly.
	* tree-streamer-out.c (write_ts_type_non_common_tree_pointers):
	Likewise.
	* tree.c (free_lang_data_in_type): Use switch, cleanup.
	(find_decls_types_r): Use TYPE_{MIN,MAX}VAL_RAW.  Don't process
	BINFO directly.
	(verify_type): Use TYPE_{MIN,MAX}VAL_RAW.  Move BINFO checking
	into RECORD check.
	objc/
	* objc-act.h (CLASS_NST_METHODS, CLASS_CLS_METHODS): Use
	TYPE_{MIN,MAX}VAL_RAW.

2017-07-17  Nathan Sidwell  <nathan@acm.org>

	Remove special ctor/dtor slots
	gcc/cp/
	* cp-tree.h (CLASSTYPE_CONSTRUCTOR_SLOT,
	CLASSTYPE_DESTRUCTOR_SLOT): Delete.
	(CLASSTYPE_FIRST_CONVERSION_SLOT): Set to zero.
	* class.c (add_method): cdtors do not have specia slots.
	* search.c (lookup_fnfields_idx_nolazy): Likewise.
	(look_for_overrides_here): Use lookup_fnfields_slot.

	Replace lang_type::sorted_fields with lang_type::bindings.
	(from c++modules branch)
	gcc/cp/
	* cp-tree.h (struct lang_type): Replace sorted_fields with
	bindings map.
	(CLASSTYPE_CONSTRUCTORS, CLASSTYPE_DESTRUCTOR): Use
	lookup_fnfields_slot_nolazy.
	(CLASSTYPE_SORTED_FIELDS): Replace with ...
	(CLASSTYPE_BINDINGS): ... this.
	(type_has_user_declared_move_constructor,
	type_has_user_declared_move_assign): Delete, replace with:
	(classtype_has_user_move_assign_or_ctor_p): ... this.
	(insert_late_enum_def_into_classtype_sorted_fields): Delete.
	(lookup_all_conversions): Delete.
	* decl.c (finish_enum_value_list): Use
	insert_late_enum_def_bindings.
	* method.c (maybe_explain_implicit_delete): Use
	classtype_has_user_move_assign_or_ctor_p.
	(lazily_declare_fn): Likewise.
	* class.c (maybe_warn_about_overly_private_class): Ignore
	copy/move ctors.
	(type_has_user_declared_move_constructor,
	type_has_user_declared_move_assign): Delete, replace with:
	(classtype_has_user_move_assign_or_ctor_p): ... this.
	(count_fields, add_fields_to_record_type,
	add_enum_fields_to_record_type, sorted_fields_type_new,
	create_classtype_sorted_fields,
	insert_late_enum_def_into_classtype_sorted_fields): Move to ...
	* name-lookup.c: ... here.
	(add_class_member, add_class_members, set_class_bindings): New.
	(lookup_class_member): New.  Broken out of ...
	* search.c (lookup_field_1): ... here.  Call it.
	(lookup_fnfields_idx_nolazy): Look directly at method_vec.
	(lookup_fnfields_slot_nolazy): Don't complete the type.
	(lookup_all_conversions): Move to name-lookup.c
	* semantics.c (classtype_has_nothrow_assign_or_copy_p): Use
	lookup_fnfields_slot always.
	* tree.c (type_has_nontrivial_copy_init): Use
	classtype_has_user_move_assign_or_ctor_p.
	* name-lookup.h (lookup_class_member,
	set_class_bindings, insert_late_enum_def_binsings,
	lookup_all_conversions): Declare.
	* pt.c (check_explicit_specialization): Use lookup_fnfields_slot.
	* ptree.c (cxx_print_type): Delete sorted-fields.
	gcc/c-family/
	* c-common.h (field_decl_cmp, resort_sorted_fields): Delete.
	(struct sorted_fields_type): Move to c-lang.h.
	* c-common.c (field_decl_cmp, resort_data,
	resort_field_decl_cmp): Move to c-decl.c.
	* c-ada-spec.c (decl_sloc): Ignore builtin fields.
	gcc/c/
	* c-decl.c (field_decl_cmp, resort_data,
	resort_field_decl_cmp): Moved from c-common.c
	* c-lang.h (struct sorted_fields_type): Moved from c-common.h.

2017-07-12  Nathan Sidwell  <nathan@acm.org>

	gcc/
	* tree-core.h (struct tree_type_non_common): Rename binfo to
	lang_1.
	* tree.h (TYPE_BINFO): Move to maxval field.
	(TYPE_LANG_SLOT_1): Allow any type.
	gcc/lto/
	* lto.c (mentions_vars_p_type, lto_fixup_prevailing_decls): Use
	TYPE_LANG_SLOT_1, not binfo.

2017-07-11  Nathan Sidwell  <nathan@acm.org>

	gcc/
	* tree.h (TYPE_METHODS): Delete.
	* tree.c (free_lang_data_in_type): Stitch out member functions and
	templates from TYPE_FIELDS.
	(build_distinct_type_copy, verify_type_variant,
	verify_type): Member fns are on TYPE_FIELDS.
	* tree-dump.c (dequeue_and_dump): No TYPE_METHODS.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	* dbxout.c (dbxout_type_fields): Member fns are on TYPE_FIELDS.
	(dbxout_type_method_1, dbxout_type_methods): Delete.
	(dbxout_type_fn_member): New, constructed from previous.
	(dbxout_type): No TYPE_METHODS scan.
	* dwarf2out.c (gen_member_die): Member fns are on TYPE_FIELDS.
	* function.c (use_register_for_decl): Always ignore register for
	class types when not optimizing.
	* ipa-devirt.c (odr_types_equivalent_p): Delete TYPE_METHODS scan.
	gcc/c-family/
	* c-ada-spec.c (is_tagged_type, has_nontrivial_methods,
	dump_ada_template, print_ada_methods,
	print_ada_declaration): Member fns are on TYPE_FIELDS.
	gcc/cp/
	* class.c (maybe_warn_about_overly_private_class,
	finish_struct_methods, one_inheriting_sig, count_fields,
	add_fields_to_record_type, check_field_decls, check_methods,
	clone_function_decl, set_method_tm_attributes,
	finalize_literal_type_property, check_bases_and_members,
	create_vtable_ptr, determine_key_method,
	unreverse_member_declarations, finish_struct,
	add_vcall_offset_vtbl_entries_1): Member fns are on TYPE_FIELDS.
	* decl.c (fixup_anonymous_aggr): Likewise.
	* decl2.c (reset_type_linkage_2): Likewise.
	* method.c (after_nsdmi_defaulted_late_checks,
	lazily_declare_fn): Likewise.
	* optimize.c (maybe_thunk_body, maybe_clone_body): Likewise.
	* pt.c (instantiate_class_template_1, tsubst_expr,
	do_type_instantiation, instantiate_pending_templates): Likewise.
	* search.c (lookup_field_1): Likewise.
	* semantics.c (finish_member_declaration,
	finish_omp_declare_simd_methods): Likewise.
	gcc/objc/
	* objc-runtime-shared-support.c (build_ivar_list_initializer):
	Don't presume first item is a FIELD_DECL.
	libcc1/
	* libcp1plugin.cc (plugin_build_decl): Member fns are on TYPE_FIELDS.
	gcc/testsuite/
	* g++.dg/ext/anon-struct6.C: Adjust diag.
	* g++.old-deja/g++.other/anon4.C: Adjust diag.

	gcc/cp/
	* decl2.c (mark_used): Reformat.
	* pt.c (instantiate_class_member): Delete.

2017-07-05  Nathan Sidwell  <nathan@acm.org>

	gcc/
	* tree.h (TYPE_METHODS): Delete.
	* tree.c (free_lang_data_in_type): Stitch out member functions and
	templates from TYPE_FIELDS.
	(build_distinct_type_copy, verify_type_variant,
	verify_type): Member fns are on TYPE_FIELDS.
	* tree-dump.c (dequeue_and_dump): No TYPE_METHODS.
	* tree-pretty-print.c (dump_generic_node): Likewise.
	* dbxout.c (dbxout_type_fields): Member fns are on TYPE_FIELDS.
	(dbxout_type_method_1, dbxout_type_methods): Delete.
	(dbxout_type_fn_member): New, constructed from previous.
	(dbxout_type): No TYPE_METHODS scan.
	* dwarf2out.c (gen_member_die): Member fns are on TYPE_FIELDS.
	* function.c (use_register_for_decl): Always ignore register for
	class types when not optimizing.
	* ipa-devirt.c (odr_types_equivalent_p): Delete TYPE_METHODS scan.
	gcc/c-family/
	* c-ada-spec.c (is_tagged_type, has_nontrivial_methods,
	dump_ada_template, print_ada_methods,
	print_ada_declaration): Member fns are on TYPE_FIELDS.
	gcc/cp/
	* class.c (maybe_warn_about_overly_private_class,
	finish_struct_methods, one_inheriting_sig, count_fields,
	add_fields_to_record_type, check_field_decls, check_methods,
	clone_function_decl, set_method_tm_attributes,
	finalize_literal_type_property, check_bases_and_members,
	create_vtable_ptr, determine_key_method,
	unreverse_member_declarations, finish_struct,
	add_vcall_offset_vtbl_entries_1): Member fns are on TYPE_FIELDS.
	* decl.c (fixup_anonymous_aggr): Likewise.
	* decl2.c (reset_type_linkage_2): Likewise.
	* method.c (after_nsdmi_defaulted_late_checks,
	lazily_declare_fn): Likewise.
	* optimize.c (maybe_thunk_body, maybe_clone_body): Likewise.
	* pt.c (instantiate_class_template_1, tsubst_expr,
	do_type_instantiation, instantiate_pending_templates): Likewise.
	* search.c (lookup_field_1): Likewise.
	* semantics.c (finish_member_declaration,
	finish_omp_declare_simd_methods): Likewise.
	libcc1/
	* libcp1plugin.cc (plugin_build_decl): Member fns are on TYPE_FIELDS.
	gcc/testsuite/
	* g++.dg/ext/anon-struct6.C: Adjust diag.
	* g++.old-deja/g++.other/anon4.C: Adjust diag.

	gcc/cp/
	* decl2.c (mark_used): Reformat.
	* pt.c (instantiate_class_member): Delete.

	Branch creation from trunk:250000
	Use this Changelog for all branch changes, including merges.

Local Variables:
mode: change-log
change-log-default-name: "ChangeLog.name-lookup"
End:
