2013-06-01  Andrew Sutton  <andrew.n.sutton@gmail.com>
	* gcc/system.h (cstdlib): Include <cstdlib> to avoid poisoned
	declaration errors.
	* gcc/c-family/common.c (c_common_r): Added __is_same_as intrinsic,
	removed previous, unused intrinsics.
	* gcc/c-family/common.h (rid): Added RID_IS_SAME_AS.
	* gcc/cp/parser.c (take): New.
	(cp_requires_clause): New.
	(cp_requires_clause_opt): New.
	(cp_rule): New.
	(cp_parser_optional_if_token): New.
        (cp_parser_optional_if_not_token): New.
        (cp_parser_optional_if_keyword): New.
	(cp_parser_decl_specifier_seq): Parse 'concept' as a declspec.
	(cp_parser_type_parameter): Parse constrained template template parms.
	(cp_parser_member_specification_opt): Parse member constraints after
	the declaration, not before.
	(cp_parser_template_declaration_after_exp): Rewrote parsing for
	template requirements
	(cp_parser_late_parsing_for_member): Re-push the current template 
	requirements when late-parsing member definitions.
	* gcc/cp/decl.c (check_concept_fn): New.
	(grokfndecl): Semantics for concept declspec.
	(grokdeclarator): Semantics for concept declspec.
	(xref_tag_1): Update to new interface.
	* gcc/cp/constraint.cc (make_constraints): New.
	* gcc/cp/cp-objcp-common.c (cp_tree_size): Add case for constraint_info.
	* gcc/cp/cp-tree.h (require): New.
	(tree_template_info): Add a field for constraint info.
	(tree_constraint_info): New.
	(constraint_info_p): New.
	(template_info_p): New.
	(CI_SPELLING): New.
	(CI_REQUIREMENTS): New.
	(CI_ASSUMPTIONS): New.
	(TI_CONSTRAINT): New.
	(TI_SPELLING): New.
	(TI_REQUIREMENTS): New.
	(TI_ASSUMPTIONS): New.
	(DECL_TEMPLATE_CONSTRAINT): New.
	(CLASSTYPE_TEMPLATE_CONSTRAINT): New.
	(ENUM_TEMPLATE_CONSTRAINT): New.
	(TEMPLATE_TEMPLATE_PARM_TEMPLATE_CONSTRAINT): New.
	(TYPE_TEMPLATE_CONSTRAINT): New.
	(cp_tree_node_structure_enum): Added entry for constraint info.
	(lang_tree_node): Added entry for constraint info.
	(lang_decl_base): Added bit for concept declarations.
	(DECL_DECLARED_CONCEPT_P): New.
	(cp_decl_spec): Added ds_concept declaration specifier.
	* gcc/cp/Make-lang.in (logic.o): New target.
	* gcc/cp/semantics.c (finish_template_requirements): Rewrite.
	* gcc/cp/logic.cc: New
	* gcc/cp-tree.def (CONSTRAINT_INFO): New node.
	* gcc/cp/pt.c (current_template_args): Make non-static.
	(redeclare_class_template): Take constraints as a 3rd argument

2013-04-01  Andrew Sutton  <andrew.n.sutton@gmail.com>
	
	* gcc/cp/Make-lang.in: Add constraints.o target.
	* gcc/cp/cp-tree.h (substitute_template_parameters): Declare.
	(instantiate_requirements): Declare.
	(conjoin_requirements): Declare.
	(disjoin_requirements): Declare.
	(reduce_requirements): Declare.
	* gcc/cp/pt.c (substitute_template_parameters): Define.
	(instantiate_requirements): Define.
	* gcc/cp/pt.c (finish_template_requirements): Call
	reduce_requirements to get constraints.
	* gcc/cp/parser.c (cp_parser_type_parameter): Restore saved
	constraints after parsing template template parameter decl.
	* gcc/cp/constraints.cc: New.

2013-03-11  Andrew Sutton  <andrew.n.sutton@gmail.com>
	* gcc/cp/Make-lang.in: Add constraint.c
	* gcc/cp/constraint.c: New
	(conjoin_requirements): New
	(disjoin_requirements): New
	(requirement_reduction): New class
	(reduce_requirements): New
	* gcc/cp/cp-tree.h (reduce_requrements): New
	(conjoin_requirements): New
	(disjoin_requirements): New
	* gcc/cp/cp-tree.h (finish_template_template_parm) Comments.
	* gcc/cp/semantics.c (finish_template_requirements) Start
	working with requirements.


2013-03-01  Andrew Sutton  <andrew.n.sutton@gmail.com>

	* gcc/cp/cp-tree.h (saved_scope): Add template requirements.
	(finish_template_requirements): Declare
	* gcc/cp/parser.c (cp_parser_template_requirement_opt): Declare.
	(cp_parser_template_declaration): Document grammar extensions.
	(cp_parser_type_parameter): Parse requirements for template
	template parameters.
	(cp_parser_member_declaration): Parse requirements for
	members of class templates.
	(cp_parser_template_requirement_opt): Define.
	(cp_parser_template_declaration_after_exp): Parse requirements
	for template declarations.
	* gcc/cp/semantics.c (finish_template_requirements): Define.
	* gcc/cp/lex.c (cxx_init): Enable concepts by default.

2013-03-01  Gabriel Dos Reis  <gdr@integrable-solutions.net>

	* lex.c (flag_concepts): Revert left over declaration.

2013-03-01  Gabriel Dos Reis  <gdr@integrable-solutions.net>

	* gcc/c-family/c-common.c (cxx_dialect): Set C++11 as default.
	* gcc/c-family/c.opt(flag_concepts): Add.
	* gcc/cp/lex.c (flag_concepts): New.  Enabled concept support by
	default.

2013-02-28  Andrew Sutton  <andrew.n.sutton@gmail.com>

	* gcc/c-family/c-common.h (rid): New resreserved words for concepts.
	* gcc/c-family/c-common.c (c_common_reswords): Definitions thereof.
	* gcc/doc/extend.texi (write_symbol): Initial concept docs.
