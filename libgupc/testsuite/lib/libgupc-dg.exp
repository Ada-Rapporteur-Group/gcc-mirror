proc libgupc-dg-test { prog do_what extra_tool_flags } {
    return [gcc-dg-test-1 libgupc_target_compile $prog $do_what $extra_tool_flags]
}

proc libgupc-dg-prune { system text } {
    return [gcc-dg-prune $system $text]
}

# Check for portals runtime
set upc_portals [check_no_compiler_messages portals object {
    #include "config.h"
    #ifndef GUPCR_PORTALS_RUNTIME
    #  error UPC runtime is not configured for Portals4
    #endif
  } ]

# Check if YOD is supported for UPC program launching
set upc_runtime_yod [check_no_compiler_messages yod object {
    #include "config.h"
    #ifndef GUPCR_JOB_LAUNCHER_YOD
    #  error YOD is not supported
    #endif
    } ]

# Find YOD if portals runtime is used
if { $upc_portals } {
    # YOD or SLURM?
    if { $upc_runtime_yod } {
        set env_var YOD
        set run_var yod
    } else {
        set env_var "SRUN"
        set run_var "srun"
    }
    # Environment variable set?
    if { [info exists ::env($env_var)] } {
        set upc_run_cmd $::env($env_var)
    } else {
        # Find run command on the exec path
        set path [split $::env(PATH) ":"]
        foreach d $path {
	    set upc_run_cmd [file join $d "$run_var"]
            verbose "UPC checking for $env_var: $run_var in dir: $d" 2
            if [file executable $upc_run_cmd] {
	        break
	    }
        }
        if { [string compare $upc_run_cmd ""] == 0 } {
	    error "UPC: Portals4 run command ($run_var) cannot be found."
        }
        verbose "UPC using run command: $upc_run_cmd" 2
    }
}

# libgupc_load -- wrapper around default libupc_load to pass an extra
# argument for dynamic threads UPC tests.
# For the Portals4 based runtime, use a job scheduler to execute tests.

if { [info procs libgupc_load] != [list] \
     && [info procs prev_libgupc_load] == [list] } {
    rename libgupc_load prev_libgupc_load

    proc libgupc_load { program args } {
        global upc_portals
        global upc_run_arguments
	global upc_run_cmd

        if { $upc_portals } {
	    set args [concat $upc_run_arguments $program $args]
            set program $upc_run_cmd
	} else {
            set args [concat $upc_run_arguments $args]
        }

	return [prev_libgupc_load $program $args]
    }
}
