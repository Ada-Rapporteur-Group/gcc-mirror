2018-06-04  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/simd-1.c: New test.

2018-05-23  Jakub Jelinek  <jakub@redhat.com>

	* configure.ac (HAVE_UNAME, HAVE_GETHOSTNAME, HAVE_GETPID): Add
	new tests.
	* configure.tgt: Add -DUSING_INITIAL_EXEC_TLS to XCFLAGS for Linux.
	* Makefile.am (libgomp_la_SOURCES): Add affinity-fmt.c.
	* libgomp.map (OMP_5.0): Export omp_{capture,display}_affinity{,_},
	and omp_[gs]et_affinity_format{,_}.
	* libgomp.h (gomp_display_affinity_var, gomp_affinity_format_var,
	gomp_affinity_format_len): Declare.
	(GOMP_NEEDS_THREAD_HANDLE): Define if needed.
	(struct gomp_thread): Add handle field if GOMP_NEEDS_THREAD_HANDLE is
	defined.
	(gomp_display_affinity_place): Declare.
	(gomp_set_affinity_format, gomp_display_string): Likewise.
	(gomp_thread_handle): New typedef.
	(gomp_display_affinity, gomp_display_affinity_thread): Declare.
	(gomp_thread_self, gomp_thread_to_pthread_t): New inline functions.
	* affinity-fmt.c: New file.
	* affinity.c (gomp_display_affinity_place): New function.
	* config/linux/affinity.c (gomp_display_affinity_place): New function.
	* env.c (gomp_display_affinity_var, gomp_affinity_format_var,
	gomp_affinity_format_len): New variables.
	(handle_omp_display_env): Print OMP_DISPLAY_AFFINITY and
	OMP_AFFINITY_FORMAT.
	(initialize_env): Handle OMP_DISPLAY_AFFINITY and OMP_AFFINITY_FORMAT
	env vars.
	* fortran.c: Include stdio.h and string.h.
	(omp_set_affinity_format_, omp_get_affinity_format_,
	omp_display_affinity_, omp_capture_affinity_): New functions.
	* omp.h.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): Declare.
	* omp_lib.f90.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): Add new interfaces.
	* omp_lib.h.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): New externs.
	* team.c (struct gomp_thread_start_data): Add handle field.
	(gomp_team_start): Handle OMP_DISPLAY_AFFINITY env var.
	* configure: Regenerated.
	* config.h.in: Regenerated.
	* Makefile.in: Regenerated.
	* testsuite/libgomp.c-c++-common/display-affinity-1.c: New test.
	* testsuite/libgomp.fortran/display-affinity-1.f90: New test.

2018-05-07  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/depend-mutexinout-1.c: New test.
	* testsuite/libgomp.c-c++-common/depend-mutexinout-2.c: New test.

2018-05-04  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/cancel-for-2.c (foo): Use cancel modifier
	in some cases.

	* omp.h.in (enum omp_lock_hint_t): Renamed to ...
	(enum omp_sync_hint_t): ... this.  Define omp_sync_hint_*
	enumerators using numbers and omp_lock_hint_* as their aliases.
	(omp_lock_hint_t): New typedef.  Rename to ...
	(omp_sync_hint_t): ... this.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): Use
	omp_sync_hint_t instead of omp_lock_hint_t.

2017-06-29  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/for-2.h: If CONDNE macro is defined, define
	a different N(test), don't define N(f0) to N(f14), but instead define
	N(f20) to N(f34) using != comparisons.
	* testsuite/libgomp.c/for-4.c: Use dg-additional-options.
	* testsuite/libgomp.c/for-7.c: New test.
	* testsuite/libgomp.c/for-8.c: New test.
	* testsuite/libgomp.c/for-9.c: New test.
	* testsuite/libgomp.c/for-10.c: New test.
	* testsuite/libgomp.c/for-11.c: New test.
	* testsuite/libgomp.c/for-12.c: New test.
	* testsuite/libgomp.c/for-13.c: New test.
	* testsuite/libgomp.c++/for-12.C: Remove dg-options.
	* testsuite/libgomp.c++/for-15.C: New test.
	* testsuite/libgomp.c++/for-16.C: New test.
	* testsuite/libgomp.c++/for-17.C: New test.
	* testsuite/libgomp.c++/for-18.C: New test.
	* testsuite/libgomp.c++/for-19.C: New test.
	* testsuite/libgomp.c++/for-20.C: New test.
	* testsuite/libgomp.c++/for-21.C: New test.
	* testsuite/libgomp.c++/for-22.C: New test.
	* testsuite/libgomp.c++/for-23.C: New test.

2017-06-12  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_target_is_present, omp_target_disassociate_ptr):
	Change first argument from void * to const void *.
	(omp_target_memcpy, omp_target_memcpy_rect): Change second argument
	from void * to const void *.
	(omp_target_associate_ptr): Change first and second arguments from
	void * to const void *.
	* target.c (omp_target_is_present, omp_target_disassociate_ptr):
	Change ptr argument from void * to const void *.
	(omp_target_memcpy): Change src argument from void * to const void *.
	(omp_target_memcpy_rect): Likewise.
	(omp_target_memcpy_rect_worker): Likewise.  Use const char * casts
	instead of char * where needed.
	(omp_target_associate_ptr): Change host_ptr and device_ptr arguments
	from void * to const void *.

Copyright (C) 2017-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
