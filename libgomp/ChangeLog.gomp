2015-06-12  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_lock_hint_t): New type.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	prototypes.
	* omp_lib.f90.in (omp_lock_hint_kind): New kind parameter.
	(omp_lock_hint_none, omp_lock_hint_uncontended,
	omp_lock_hint_contended, omp_lock_hint_nonspeculative,
	omp_lock_hint_speculative): New parameters.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	interfaces.
	* omp_lib.h.in (omp_lock_hint_kind): New kind parameter.
	(omp_lock_hint_none, omp_lock_hint_uncontended,
	omp_lock_hint_contended, omp_lock_hint_nonspeculative,
	omp_lock_hint_speculative): New parameters.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	external procedures.

2015-06-11  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h (struct gomp_task_icv): Rename
	run_sched_modifier field to run_sched_chunk_size.
	* env.c (gomp_global_icv): Adjust initializer.
	(parse_schedule): Adjust for the field renaming.
	(omp_set_schedule, omp_get_schedule): Likewise.
	Rename modifier argument to chunk_size.
	* omp_lib.f90.in (omp_set_schedule, omp_get_schedule):
	Rename modifier argument to chunk_size.
	* loop_ull.c (GOMP_loop_ull_runtime_start,
	GOMP_loop_ull_ordered_runtime_start): Adjust for the field renaming.
	* loop.c (GOMP_loop_runtime_start, GOMP_loop_ordered_runtime_start,
	GOMP_parallel_loop_runtime_start, GOMP_parallel_loop_runtime):
	Likewise.
	* fortran.c (omp_set_schedule_, omp_set_schedule_8_,
	omp_get_schedule_, omp_get_schedule_8_): Rename
	modifier argument to chunk_size.
	* libgomp.texi (omp_set_schedule, omp_get_schedule): Likewise.

2015-06-10  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/reduction-7.c: New test.
	* testsuite/libgomp.c/reduction-8.c: New test.
	* testsuite/libgomp.c/reduction-9.c: New test.
	* testsuite/libgomp.c/reduction-10.c: New test.
	* testsuite/libgomp.c++/taskloop-5.C (foo): Wrap #pragma omp
	parallel bodies into #pragma omp single.
	* testsuite/libgomp.c++/reduction-5.C: New test.
	* testsuite/libgomp.c++/reduction-6.C: New test.
	* testsuite/libgomp.c++/reduction-7.C: New test.
	* testsuite/libgomp.c++/reduction-8.C: New test.
	* testsuite/libgomp.c++/reduction-9.C: New test.
	* testsuite/libgomp.c++/reduction-10.C: New test.

2015-06-03  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/member-1.C (A::m1): Add tests for
	reductions.
	* testsuite/libgomp.c++/member-2.C (A<Q>::m1): Likewise.

2015-06-02  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/taskloop-5.C: New test.
	* testsuite/libgomp.c++/member-1.C: New test.
	* testsuite/libgomp.c++/member-2.C: New test.

2015-05-27  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/ctor-13.C: New test.
	* testsuite/libgomp.c++/simd14.C: New test.
	* testsuite/libgomp.c++/reference-1.C: New test.

2015-05-26  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/for-12.C: New test.
	* testsuite/libgomp.c++/taskloop-1.C: New test.
	* testsuite/libgomp.c++/taskloop-2.C: New test.
	* testsuite/libgomp.c++/taskloop-3.C: New test.
	* testsuite/libgomp.c++/taskloop-4.C: New test.

2015-05-21  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/taskloop-4.c: New test.

	* libgomp.map (GOMP_4.1): Export GOMP_taskloop and GOMP_taskloop_ull.
	* task.c: Include gomp-constants.h.  Include taskloop.c twice
	with appropriate macros.
	(GOMP_task): Use GOMP_TASK_FLAG_* defines instead of hardcoded
	constants.
	* taskloop.c: New file.
	* testsuite/libgomp.c/for-4.c: New test.
	* testsuite/libgomp.c/taskloop-1.c: New test.
	* testsuite/libgomp.c/taskloop-2.c: New test.
	* testsuite/libgomp.c/taskloop-3.c: New test.

2015-04-29  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_get_max_task_priority): New prototype.
	* omp_lib.h.in (omp_get_max_task_priority): New extern.
	* omp_lib.f90.in (omp_get_max_task_priority): New interface.
	* fortran.c (omp_get_max_task_priority_): New function.
	(omp_get_max_task_priority): Add ialias_redirect.
	* libgomp.map (OMP_4.1): Export omp_get_max_task_priority
	and omp_get_max_task_priority_.
	* env.c (gomp_max_task_priority_var): New variable.
	(handle_omp_display_env): Print OMP_MAX_TASK_PRIORITY.
	(initialize_env): Handle OMP_MAX_TASK_PRIORITY env var.
	(omp_get_max_task_priority): New function.

Copyright (C) 2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
