2018-10-18  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/master-combined-1.c: New test.
	* testsuite/libgomp.c-c++-common/taskloop-reduction-3.c: New test.
	* testsuite/libgomp.c-c++-common/taskloop-reduction-4.c: New test.

2018-10-16  Jakub Jelinek  <jakub@redhat.com>

	* task.c (GOMP_taskgroup_reduction_register): Add ialias.
	* taskloop.c (GOMP_taskloop): Handle GOMP_TASK_FLAG_REDUCTION flag
	by calling GOMP_taskgroup_reduction_register.
	* libgomp_g.h: Include gstdint.h.
	(GOMP_taskgroup_reduction_register,
	GOMP_taskgroup_reduction_unregister, GOMP_task_reduction_remap): New
	prototypes.
	* testsuite/libgomp.c-c++-common/taskloop-reduction-1.c: New test.
	* testsuite/libgomp.c-c++-common/taskloop-reduction-2.c: New test.
	* testsuite/libgomp.c++/taskloop-reduction-1.C: New test.
	* testsuite/libgomp.c++/taskloop-reduction-2.C: New test.
	* testsuite/libgomp.c++/taskloop-reduction-3.C: New test.
	* testsuite/libgomp.c++/taskloop-reduction-4.C: New test.
	* testsuite/libgomp.c++/task-reduction-4.C (foo): Turn into function
	template, replace all int occurences with the template parameter T.
	(test): Likewise.

2018-10-10  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/task-reduction-5.c (size_t): New
	typedef.
	(bar): Use it instead of __SIZE_TYPE__ directly.
	(foo): Likewise.  Use (~(size_t) 0) instead of __SIZE_MAX__.
	* testsuite/libgomp.c/task-reduction-1.c: New test.
	* testsuite/libgomp.c++/task-reduction-7.C: New test.

2018-10-09  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/task-reduction-5.c: Add further test
	to verify the array bound var can be changed in taskgroup.

2018-10-08  Jakub Jelinek  <jakub@redhat.com>

	* task.c (GOMP_taskgroup_reduction_register): If team is NULL, create
	implicit team with 1 thread and call GOMP_taskgroup_start again.  Don't
	mix declarations with statements.
	* team.c (gomp_team_end): Determine nesting by thr->ts.level != 0
	rather than thr->ts.team != NULL.
	* testsuite/libgomp.c-c++-common/task-reduction-4.c: New test.

	* testsuite/libgomp.c-c++-common/task-reduction-5.c: New test.

	* env.c (gomp_affinity_format_var): Use %i instead of %T and
	%A instead of %a.
	* affinity-fmt.c (affinity_types): Change short forms h to H,
	a to A, A to a and T to i.  Change long forms thread_level to
	nesting_level and thread_identifier to native_thread_id.  Add
	team_num/t and num_teams/T entries.
	(gomp_display_affinity): Adjust for the above changes.
	* testsuite/libgomp.c-c++-common/display-affinity-1.c: Likewise.
	Add test also for %{team_num}, %{num_teams}, %t and %T.
	* testsuite/libgomp.fortran/display-affinity-1.f90: Likewise.

2018-09-27  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/task-reduction-5.C (main): Add forgotten
	checks.
	* testsuite/libgomp.c++/task-reduction-6.C: New test.

	* configure.ac: Check for aligned_alloc, posix_memalign, memalign
	and _aligned_malloc.
	* libgomp.h (gomp_aligned_alloc, gomp_aligned_free): New prototypes.
	(struct gomp_taskgroup): Add reductions field.
	* libgomp.map (GOMP_5.0): Export GOMP_taskgroup_reduction_register,
	GOMP_taskgroup_reduction_unregister and GOMP_task_reduction_remap.
	* task.c (GOMP_taskgroup_start): Initialize taskgroup->reductions.
	(GOMP_taskgroup_reduction_register,
	GOMP_taskgroup_reduction_unregister, GOMP_task_reduction_remap): New
	functions.
	* alloc.c (gomp_aligned_alloc, gomp_aligned_free): New functions.
	* configure: Regenerated.
	* config.h.in: Regenerated.
	* testsuite/libgomp.c-c++-common/task-reduction-1.c: New test.
	* testsuite/libgomp.c-c++-common/task-reduction-2.c: New test.
	* testsuite/libgomp.c-c++-common/task-reduction-3.c: New test.
	* testsuite/libgomp.c++/task-reduction-1.C: New test.
	* testsuite/libgomp.c++/task-reduction-2.C: New test.
	* testsuite/libgomp.c++/task-reduction-3.C: New test.
	* testsuite/libgomp.c++/task-reduction-4.C: New test.
	* testsuite/libgomp.c++/task-reduction-5.C: New test.

2018-08-02  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/depend-iterator-1.c: Add tests for
	unsigned iterators, add gaps in between different arr2 bits.
	* testsuite/libgomp.c++/depend-iterator-1.C: Likewise.

2018-08-01  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/depend-iterator-1.c (main): Separate
	dependence modifier from type with comma instead of colon.
	* testsuite/libgomp.c-c++-common/depend-iterator-2.c (foo): Likewise.
	* testsuite/libgomp.c-c++-common/depobj-1.c (dep, dep2, dep3,
	antidep): Add depobj: to depend clauses without dependence type.
	* testsuite/libgomp.c++/depend-iterator-1.C (bar, baz): Separate
	dependence modifier from type with comma instead of colon.
	* testsuite/libgomp.c++/depobj-1.C (dep, dep2, dep3, antidep): Add
	depobj: to depend clauses without dependence type.

2018-07-27  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.map (OMP_5.0): Export omp_pause_resource{,_all}{,_}.
	* omp.h.in (omp_pause_resource_t): New typedef.
	(omp_pause_resource, omp_pause_resource_all): New prototypes.
	* omp_lib.f90.in (omp_pause_resource_kind, omp_pause_soft,
	omp_pause_hard): New parameters.
	(omp_pause_resource, omp_pause_resource_all): New interfaces.
	* omp_lib.h.in (omp_pause_resource_kind, omp_pause_soft,
	omp_pause_hard): New parameters.
	(omp_pause_resource, omp_pause_resource_all): New externals.
	* libgomp.h (gomp_pause_host): New prototype.
	* team.c (gomp_thread_attr): Remove comment.
	(gomp_thread_start): Call pthread_detach.
	(gomp_free_pool_helper): Likewise.
	(gomp_team_start): Don't call pthread_attr_setdetachstate.
	(gomp_pause_pool_helper, gomp_pause_host): New functions.
	* target.c (omp_pause_resource, omp_pause_resource_all): New functions.
	* env.c (initialize_env): Don't call pthread_attr_setdetachstate.
	* fortran.c (omp_pause_resource, omp_pause_resource_all): Add
	ialias_redirect.
	(omp_pause_resource_, omp_pause_resource_all_): New functions.
	* config/nvptx/team.c (gomp_pause_host): New function.
	* config/nvptx/target.c (omp_pause_resource, omp_pause_resource_all):
	New functions.
	* testsuite/libgomp.c-c++-common/pause-1.c: New test.
	* testsuite/libgomp.c-c++-common/pause-2.c: New test.

2018-07-25  Jakub Jelinek  <jakub@redhat.com>

	* Makefile.am (libgomp_la_SOURCES): Add teams.c.
	* libgomp_g.h (GOMP_teams_reg): New prototype.
	* libgomp.map (GOMP_5.0): Export GOMP_teams_reg.
	* icv-device.c (omp_get_num_teams, omp_get_team_num): Move these
	functions to ...
	* teams.c: ... here.  New file.
	* config/nvptx/icv-device.c (omp_get_num_teams, omp_get_team_num):
	Move these functions to ...
	* config/nvptx/teams.c: ... here.  New file.
	* testsuite/libgomp.c++/for-16.C: New test.
	* testsuite/libgomp.c++/for-26.C: New test.
	* testsuite/libgomp.c-c++-common/for-14.c: New test.
	* testsuite/libgomp.c-c++-common/for-15.c: New test.
	* testsuite/libgomp.c-c++-common/pr66199-10.c: New test.
	* testsuite/libgomp.c-c++-common/pr66199-11.c: New test.
	* testsuite/libgomp.c-c++-common/pr66199-12.c: New test.
	* testsuite/libgomp.c-c++-common/pr66199-13.c: New test.
	* testsuite/libgomp.c-c++-common/pr66199-14.c: New test.
	* testsuite/libgomp.c/teams-1.c: New test.
	* testsuite/libgomp.c/teams-2.c: New test.
	* testsuite/libgomp.c/thread-limit-5.c: New test.
	* testsuite/libgomp.c/thread-limit-4.c: New test.
	* Makefile.in: Regenerated.

2018-07-18  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/for-23.C: New test.
	* testsuite/libgomp.c++/for-24.C: New test.
	* testsuite/libgomp.c++/for-25.C: New test.

2018-06-28  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_depend_t): New typedef.
	* task.c (gomp_task_handle_depend): Handle new depend array format
	in addition to the old.  Handle mutexinoutset kinds the same as
	inout for now, handle unspecified kinds.
	(gomp_task_maybe_wait_for_dependencies): Likewise.
	(gomp_create_target_task): Handle new depend array format count in
	addition to the old.
	(GOMP_task): Likewise.  Adjust function comment.
	* testsuite/libgomp.c-c++-common/depend-iterator-2.c: New test.
	* testsuite/libgomp.c-c++-common/depobj-1.c: New test.
	* testsuite/libgomp.c++/depend-1.C: New test.
	* testsuite/libgomp.c++/depobj-1.C: New test.

2018-06-19  Jakub Jelinek  <jakub@redhat.com>

	* libgomp_g.h (GOMP_taskwait_depend): Add prototype.
	* task.c (GOMP_taskwait_depend): New function.
	(gomp_task_maybe_wait_for_dependencies): Fix a function comment typo.
	* libgomp.map (GOMP_5.0): Export GOMP_taskwait_depend.
	* testsuite/libgomp.c-c++-common/taskwait-depend-1.c: New test.

2018-06-13  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/depend-iterator-1.c: New test.
	* testsuite/libgomp.c++/depend-iterator-1.C: New test.

2018-06-04  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/simd-1.c: New test.

2018-05-23  Jakub Jelinek  <jakub@redhat.com>

	* configure.ac (HAVE_UNAME, HAVE_GETHOSTNAME, HAVE_GETPID): Add
	new tests.
	* configure.tgt: Add -DUSING_INITIAL_EXEC_TLS to XCFLAGS for Linux.
	* Makefile.am (libgomp_la_SOURCES): Add affinity-fmt.c.
	* libgomp.map (OMP_5.0): Export omp_{capture,display}_affinity{,_},
	and omp_[gs]et_affinity_format{,_}.
	* libgomp.h (gomp_display_affinity_var, gomp_affinity_format_var,
	gomp_affinity_format_len): Declare.
	(GOMP_NEEDS_THREAD_HANDLE): Define if needed.
	(struct gomp_thread): Add handle field if GOMP_NEEDS_THREAD_HANDLE is
	defined.
	(gomp_display_affinity_place): Declare.
	(gomp_set_affinity_format, gomp_display_string): Likewise.
	(gomp_thread_handle): New typedef.
	(gomp_display_affinity, gomp_display_affinity_thread): Declare.
	(gomp_thread_self, gomp_thread_to_pthread_t): New inline functions.
	* affinity-fmt.c: New file.
	* affinity.c (gomp_display_affinity_place): New function.
	* config/linux/affinity.c (gomp_display_affinity_place): New function.
	* env.c (gomp_display_affinity_var, gomp_affinity_format_var,
	gomp_affinity_format_len): New variables.
	(handle_omp_display_env): Print OMP_DISPLAY_AFFINITY and
	OMP_AFFINITY_FORMAT.
	(initialize_env): Handle OMP_DISPLAY_AFFINITY and OMP_AFFINITY_FORMAT
	env vars.
	* fortran.c: Include stdio.h and string.h.
	(omp_set_affinity_format_, omp_get_affinity_format_,
	omp_display_affinity_, omp_capture_affinity_): New functions.
	* omp.h.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): Declare.
	* omp_lib.f90.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): Add new interfaces.
	* omp_lib.h.in (omp_set_affinity_format, omp_get_affinity_format,
	omp_display_affinity, omp_capture_affinity): New externs.
	* team.c (struct gomp_thread_start_data): Add handle field.
	(gomp_team_start): Handle OMP_DISPLAY_AFFINITY env var.
	* configure: Regenerated.
	* config.h.in: Regenerated.
	* Makefile.in: Regenerated.
	* testsuite/libgomp.c-c++-common/display-affinity-1.c: New test.
	* testsuite/libgomp.fortran/display-affinity-1.f90: New test.

2018-05-07  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c-c++-common/depend-mutexinout-1.c: New test.
	* testsuite/libgomp.c-c++-common/depend-mutexinout-2.c: New test.

2018-05-04  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/cancel-for-2.c (foo): Use cancel modifier
	in some cases.

	* omp.h.in (enum omp_lock_hint_t): Renamed to ...
	(enum omp_sync_hint_t): ... this.  Define omp_sync_hint_*
	enumerators using numbers and omp_lock_hint_* as their aliases.
	(omp_lock_hint_t): New typedef.  Rename to ...
	(omp_sync_hint_t): ... this.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): Use
	omp_sync_hint_t instead of omp_lock_hint_t.

2017-06-29  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/for-2.h: If CONDNE macro is defined, define
	a different N(test), don't define N(f0) to N(f14), but instead define
	N(f20) to N(f34) using != comparisons.
	* testsuite/libgomp.c/for-4.c: Use dg-additional-options.
	* testsuite/libgomp.c/for-7.c: New test.
	* testsuite/libgomp.c/for-8.c: New test.
	* testsuite/libgomp.c/for-9.c: New test.
	* testsuite/libgomp.c/for-10.c: New test.
	* testsuite/libgomp.c/for-11.c: New test.
	* testsuite/libgomp.c/for-12.c: New test.
	* testsuite/libgomp.c/for-13.c: New test.
	* testsuite/libgomp.c++/for-12.C: Remove dg-options.
	* testsuite/libgomp.c++/for-15.C: New test.
	* testsuite/libgomp.c++/for-16.C: New test.
	* testsuite/libgomp.c++/for-17.C: New test.
	* testsuite/libgomp.c++/for-18.C: New test.
	* testsuite/libgomp.c++/for-19.C: New test.
	* testsuite/libgomp.c++/for-20.C: New test.
	* testsuite/libgomp.c++/for-21.C: New test.
	* testsuite/libgomp.c++/for-22.C: New test.
	* testsuite/libgomp.c++/for-23.C: New test.

2017-06-12  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_target_is_present, omp_target_disassociate_ptr):
	Change first argument from void * to const void *.
	(omp_target_memcpy, omp_target_memcpy_rect): Change second argument
	from void * to const void *.
	(omp_target_associate_ptr): Change first and second arguments from
	void * to const void *.
	* target.c (omp_target_is_present, omp_target_disassociate_ptr):
	Change ptr argument from void * to const void *.
	(omp_target_memcpy): Change src argument from void * to const void *.
	(omp_target_memcpy_rect): Likewise.
	(omp_target_memcpy_rect_worker): Likewise.  Use const char * casts
	instead of char * where needed.
	(omp_target_associate_ptr): Change host_ptr and device_ptr arguments
	from void * to const void *.

Copyright (C) 2017-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
