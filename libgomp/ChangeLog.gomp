2015-08-28  Aldy Hernandez  <aldyh@redhat.com>

	* libgomp.h: Document gomp_task_depend_entry, gomp_task,
	gomp_taskgroup.
	* task.c (gomp_task_run_pre): Add comments.
	(gomp_task_run_post_handle_dependers): Same.
	(GOMP_taskwait): Same.

2015-08-27  Aldy Hernandez  <aldyh@redhat.com>

	* libgomp.h (enum gomp_task_kind): Comment fields.
	(struct gomp_task): Comment some fields.
	* task.c (GOMP_task): Add comments.
	Rename GOMP_TASK_IFFALSE to GOMP_TASK_UNDEFERRED.
	(gomp_task_run_pre): Add comments.
	(GOMP_taskgroup_start): Rename GOMP_TASK_IFFALSE to
	GOMP_TASK_UNDEFERRED.
	* taskloop.c (GOMP_taskloop): Same.

2015-08-25  Aldy Hernandez  <aldyh@redhat.com>

	* libgomp.h (struct gomp_task_depend_entry): Add comment.
	* task.c (gomp_clear_parent): Document function.
	(GOMP_task): Same.
	(gomp_task_run_pre): Add comments.
	(gomp_task_run_post_handle_dependers): Same.
	(gomp_task_run_post_remove_parent): Same.
	(gomp_task_run_post_remove_taskgroup): Same.
	(GOMP_taskwait): Same.
	(gomp_task_maybe_wait_for_dependencies): Same.

2015-07-31  Jakub Jelinek  <jakub@redhat.com>

	* target.c (gomp_map_fields_existing): New function.
	(gomp_map_vars): Handle GOMP_MAP_STRUCT.
	* testsuite/libgomp.c/target-21.c: New test.

2015-07-31  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.h (enum gomp_map_vars_kind): New.
	(gomp_map_vars): Change type of the argument from bool to enum
	gomp_map_vars_kind.
	* oacc-mem.c (acc_map_data, present_create_copy,
	gomp_acc_insert_pointer): Pass GOMP_MAP_VARS_OPENACC instead of false to
	gomp_map_vars.
	* oacc-parallel.c (GOACC_parallel, GOACC_data_start): Likewise.
	* target.c (gomp_map_vars_existing): Fix target address for 'always to'
	array sections.
	(gomp_map_vars): Change type of the argument from bool to enum
	gomp_map_vars_kind, fixup its usage.  Set tgt->refcount to 0 if called
	from GOMP_target_enter_exit_data.  Free tgt if called from
	GOMP_target_enter_exit_data and nothing has been mapped.
	(gomp_unmap_vars): Decrement k->refcount when it is 1 and
	k->async_refcount is 0.
	(gomp_offload_image_to_device): Set tgt's refcount to infinity.
	(GOMP_target, GOMP_target_41): Pass GOMP_MAP_VARS_TARGET instead of true
	to gomp_map_vars.
	(gomp_target_data_fallback, GOMP_target_data, GOMP_target_data_41): Pass
	GOMP_MAP_VARS_DATA instead of false to gomp_map_vars.
	(gomp_exit_data): New static function.
	(GOMP_target_enter_exit_data): Support mapping/unmapping.
	* testsuite/libgomp.c/target-11.c: Extend for testing 'always to' array
	sections.
	* testsuite/libgomp.c/target-20.c: New test.

2015-07-30  Ilya Verbin  <ilya.verbin@intel.com>

	* testsuite/lib/libgomp.exp
	(check_effective_target_offload_device_nonshared_as): New.
	* testsuite/libgomp.c++/examples-4/e.53.2.C: Replace offload_device with
	offload_device_nonshared_as.
	* testsuite/libgomp.c/target-11.c: Ditto.

2015-07-29  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h (struct target_var_desc): Fix up comments
	about offset and length fields.
	* target.c (gomp_map_lookup): New function.
	(gomp_map_pointer): Use it.
	(gomp_map_vars): Handle GOMP_MAP_FIRSTPRIVATE_INT,
	GOMP_MAP_USE_DEVICE_PTR and GOMP_MAP_ZERO_LEN_ARRAY_SECTION.
	Add tgt->list[i].offset for mappings with non-NULL
	tgt->list[i].key.
	(GOMP_target_41): Handle GOMP_MAP_FIRSTPRIVATE even
	for host fallback.
	(omp_target_is_present): Use gomp_map_lookup.
	(omp_target_associate_ptr): Likewise.
	(omp_target_disassociate_ptr): Likewise.
	* testsuite/libgomp.c++/target-2.C (fn2): Add map(tofrom: s).
	* testsuite/libgomp.c++/target-7.C: New test.
	* testsuite/libgomp.c++/target-8.C: New test.
	* testsuite/libgomp.c++/target-9.C: New test.
	* testsuite/libgomp.c/target-1.c (fn2, fn3, fn4): Add
	map(tofrom:s).
	* testsuite/libgomp.c/target-2.c (fn2, fn3, fn4): Likewise.
	* testsuite/libgomp.c/target-7.c (foo): Add map(h) where needed.
	* testsuite/libgomp.c/target-15.c: New test.
	* testsuite/libgomp.c/target-16.c: New test.
	* testsuite/libgomp.c/target-17.c: New test.
	* testsuite/libgomp.c/target-18.c: New test.
	* testsuite/libgomp.c/target-19.c: New test.
	* testsuite/libgomp.c/examples-4/e.51.3.c (gramSchmidt): Add
	map(tofrom:tmp).
	* testsuite/libgomp.c/examples-4/e.53.1.c (fib_wrapper): Add
	map(from:x).
	* testsuite/libgomp.c/examples-4/e.53.4.c (accum): Add
	map(tofrom:tmp).
	* testsuite/libgomp.c/examples-4/e.53.5.c (accum): Likewise.
	* testsuite/libgomp.c/examples-4/e.54.2.c (dotprod): Add
	map(tofrom: sum).
	* testsuite/libgomp.c/examples-4/e.54.3.c (dotprod): Likewise.
	* testsuite/libgomp.c/examples-4/e.54.4.c (dotprod): Likewise.
	* testsuite/libgomp.c/examples-4/e.57.1.c (main): Add
	map(from: c) and map(from: b, d) where needed.
	* testsuite/libgomp.c/examples-4/e.57.3.c (main): Add
	map(from: res).

2015-07-21  Jakub Jelinek  <jakub@redhat.com>

	* target.c (gomp_map_vars): Handle GOMP_MAP_FIRSTPRIVATE.
	* testsuite/libgomp.c/target-13.c: New test.
	* testsuite/libgomp.c/target-14.c: New test.
	* testsuite/libgomp.c++/target-5.C: New test.
	* testsuite/libgomp.c++/target-6.C: New test.

2015-07-17  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/linear-2.c (verify): New function.
	(TEST): Use it.
	* testsuite/libgomp.c++/linear-2.C (verify): New function.
	(TEST): Use it.

2015-07-16  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/for-2.h (OMPTGT, OMPTO, OMPFROM): Define
	if not already defined.
	(N(f0), N(f1), N(f2), N(f3), N(f4), N(f5), N(f6), N(f7), N(f8),
	N(f9), N(f10), N(f11), N(f12), N(f13), N(f14)): Use OMPTGT macro.
	(N(test)): Use OMPTO and OMPFROM macros.
	* testsuite/libgomp.c/for-5.c: New test.
	* testsuite/libgomp.c/for-6.c: New test.
	* testsuite/libgomp.c++/for-13.C: New test.
	* testsuite/libgomp.c++/for-14.C: New test.

2015-07-14  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.h (struct gomp_device_descr): Add dev2dev_func.
	* target.c (omp_target_memcpy): Support device-to-device.
	(omp_target_memcpy_rect_worker): Likewise.
	(omp_target_memcpy_rect): Likewise.
	(gomp_load_plugin_for_device): Check for GOMP_OFFLOAD_dev2dev.
	* testsuite/libgomp.c/target-12.c (main): Extend for testing
	device-to-device memcpy.

2015-07-14  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h (REFCOUNT_INFINITY): Define.
	* target.c (gomp_map_vars_existing, gomp_map_vars, gomp_unmap_vars,
	gomp_offload_image_to_device, omp_target_associate_ptr,
	omp_target_disassociate_ptr): Use REFCOUNT_INFINITY instead of
	INT_MAX.

2015-07-13  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_get_initial_device,
	omp_target_alloc, omp_target_free, omp_target_is_present,
	omp_target_memcpy, omp_target_memcpy_rect, omp_target_associate_ptr,
	omp_target_disassociate_ptr): New prototypes.
	* omp_lib.f90.in (omp_get_initial_device): New interface.
	* omp_lib.h.in (omp_get_initial_device): New extern.
	* libgomp.map (OMP_4.1): Add omp_get_initial_device,
	omp_get_initial_device_, omp_target_alloc, omp_target_free,
	omp_target_is_present, omp_target_memcpy, omp_target_memcpy_rect,
	omp_target_associate_ptr and omp_target_disassociate_ptr symbols.
	* env.c (omp_get_initial_device): New function.  Add ialias.
	* fortran.c (omp_get_initial_device): Add iredirect.
	(omp_get_initial_device_): New function.
	* target.c (gomp_map_vars_existing, gomp_map_vars, gomp_unmap_vars):
	Handle refcount of INT_MAX as infinite.
	(gomp_offload_image_to_device): Set refcount to INT_MAX.
	(omp_target_alloc, omp_target_free, omp_target_is_present,
	omp_target_memcpy, omp_target_memcpy_rect_worker,
	omp_target_memcpy_rect, omp_target_associate_ptr,
	omp_target_disassociate_ptr): New functions.
	* testsuite/libgomp.c/target-12.c: New test.

2015-06-26  Aldy Hernandez  <aldyh@redhat.com>

	* libgomp.texi: Document omp_get_max_task_priority and
	OMP_MAX_TASK_PRIORITY.

2015-06-26  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/member-1.C: Remove dg-options.
	* testsuite/libgomp.c++/member-2.C: Remove dg-options.
	* testsuite/libgomp.c++/member-3.C: New test.
	* testsuite/libgomp.c++/member-4.C: New test.
	* testsuite/libgomp.c++/member-5.C: New test.

2015-06-25  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.h (struct target_var_desc): Add offset and length.
	* target.c (gomp_map_vars_existing): New argument tgt_var, fill it.
	(gomp_map_vars): Move filling of tgt->list[i] into
	gomp_map_vars_existing.  Add missed case GOMP_MAP_ALWAYS_FROM.
	(gomp_unmap_vars): Add list[i].offset to host and target addresses,
	use list[i].length instead of k->host_end - k->host_start.
	* testsuite/libgomp.c/target-11.c: Extend for testing array sections.

2015-06-24  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_get_num_places, omp_get_place_num_procs,
	omp_get_place_proc_ids, omp_get_place_num,
	omp_get_partition_num_places, omp_get_partition_place_nums): New
	prototypes.
	* omp_lib.f90.in (omp_get_num_places, omp_get_place_num_procs,
	omp_get_place_proc_ids, omp_get_place_num,
	omp_get_partition_num_places, omp_get_partition_place_nums): New
	interfaces.
	* omp_lib.h.in (omp_get_num_places, omp_get_place_num_procs,
	omp_get_place_proc_ids, omp_get_place_num,
	omp_get_partition_num_places, omp_get_partition_place_nums): New
	externs.
	* libgomp.map (OMP_4.1): Export omp_get_num_places,
	omp_get_place_num_procs, omp_get_place_proc_ids, omp_get_place_num,
	omp_get_partition_num_places, omp_get_partition_place_nums,
	omp_get_num_places_, omp_get_place_num_procs_,
	omp_get_place_num_procs_8_, omp_get_place_proc_ids_,
	omp_get_place_proc_ids_8_, omp_get_place_num_,
	omp_get_partition_num_places_, omp_get_partition_place_nums_
	and omp_get_partition_place_nums_8_.
	* libgomp.h (gomp_get_place_proc_ids_8): New prototype.
	* env.c (omp_get_num_places, omp_get_place_num,
	omp_get_partition_num_places, omp_get_partition_place_nums): New
	functions, add ialias for them.
	* fortran.c (omp_get_num_places, omp_get_place_num, 
	omp_get_partition_num_places, omp_get_partition_place_nums,
	omp_get_place_num_procs, omp_get_place_proc_ids): New
	ialias_redirects.
	(omp_get_num_places_, omp_get_place_num_procs_,
	omp_get_place_num_procs_8_, omp_get_place_proc_ids_,
	omp_get_place_proc_ids_8_, omp_get_place_num_,
	omp_get_partition_num_places_, omp_get_partition_place_nums_,
	omp_get_partition_place_nums_8_): New functions.
	* config/linux/affinity.c (omp_get_place_num_procs,
	omp_get_place_proc_ids, gomp_get_place_proc_ids_8): New functions.
	* config/posix/affinity.c (omp_get_place_num_procs,
	omp_get_place_proc_ids, gomp_get_place_proc_ids_8): New functions.
	* testsuite/libgomp.c/affinity-2.c: New test.
	* testsuite/libgomp.fortran/affinity1.f90: New test.
	* testsuite/libgomp.fortran/affinity2.f90: New test.

2015-06-23  Ilya Verbin  <ilya.verbin@intel.com>

	* testsuite/libgomp.c/target-11.c (main): Remove dd from target region.

2015-06-23  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/taskloop-6.C: New test.
	* testsuite/libgomp.c++/taskloop-7.C: New test.
	* testsuite/libgomp.c++/taskloop-8.C: New test.
	* testsuite/libgomp.c++/taskloop-9.C: New test.

2015-06-23  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.h (struct target_var_desc): New.
	(struct target_mem_desc): Replace array of splay_tree_key with array of
	target_var_desc.
	(struct splay_tree_key_s): Move copy_from to target_var_desc.
	* oacc-mem.c (gomp_acc_remove_pointer): Use copy_from from
	target_var_desc.
	* oacc-parallel.c (GOACC_parallel): Use copy_from from target_var_desc.
	* target.c (gomp_map_vars_existing): Copy data to device if map-type is
	'always to' or 'always tofrom'.
	(gomp_map_vars): Use key from target_var_desc.  Set copy_from and
	always_copy_from.
	(gomp_copy_from_async): Use key and copy_from from target_var_desc.
	(gomp_unmap_vars): Copy data from device if always_copy_from is set.
	(gomp_offload_image_to_device): Do not use copy_from.
	* testsuite/libgomp.c/target-11.c: New test.

2015-06-18  Jakub Jelinek  <jakub@redhat.com>

	* libgomp_g.h (GOMP_task): Add priority argument to the prototype.
	(GOMP_taskloop, GOMP_taskloop_ull): New prototypes.
	* task.c (GOMP_task): Add priority argument.
	* taskloop.c (GOMP_taskloop): Likewise.

	* testsuite/libgomp.c/pr66199-3.c: New test.
	* testsuite/libgomp.c/pr66199-4.c: New test.
	* testsuite/libgomp.c/linear-1.c: New test.
	* testsuite/libgomp.c/linear-2.c: New test.
	* testsuite/libgomp.c++/linear-1.C: New test.
	* testsuite/libgomp.c++/linear-2.C: New test.

2015-06-16  Ilya Verbin  <ilya.verbin@intel.com>

	* libgomp.map (GOMP_4.1): Add GOMP_target_41, GOMP_target_data_41,
	GOMP_target_enter_exit_data.
	* libgomp_g.h: Declare GOMP_target_41, GOMP_target_data_41,
	GOMP_target_enter_exit_data.
	* target.c (resolve_device): Call gomp_init_device here instead of
	GOMP_target*.
	(get_kind): Rename is_openacc to short_mapkind.
	(gomp_map_vars): Likewise.
	(gomp_unmap_vars): Likewise.
	(gomp_update): Likewise.
	(gomp_target_fallback): New static function.
	(gomp_get_target_fn_addr): New static function.
	(GOMP_target): Move host fallback and fn lookup to the new functions.
	(GOMP_target_41): New function.
	(gomp_target_data_fallback): New static function.
	(GOMP_target_data): Move host fallback to the new function.
	(GOMP_target_data_41): New function.
	(GOMP_target_update): Do not call gomp_init_device.
	(GOMP_target_enter_exit_data): New function.

2015-06-12  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_lock_hint_t): New type.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	prototypes.
	* omp_lib.f90.in (omp_lock_hint_kind): New kind parameter.
	(omp_lock_hint_none, omp_lock_hint_uncontended,
	omp_lock_hint_contended, omp_lock_hint_nonspeculative,
	omp_lock_hint_speculative): New parameters.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	interfaces.
	* omp_lib.h.in (omp_lock_hint_kind): New kind parameter.
	(omp_lock_hint_none, omp_lock_hint_uncontended,
	omp_lock_hint_contended, omp_lock_hint_nonspeculative,
	omp_lock_hint_speculative): New parameters.
	(omp_init_lock_with_hint, omp_init_nest_lock_with_hint): New
	external procedures.

2015-06-11  Jakub Jelinek  <jakub@redhat.com>

	* libgomp.h (struct gomp_task_icv): Rename
	run_sched_modifier field to run_sched_chunk_size.
	* env.c (gomp_global_icv): Adjust initializer.
	(parse_schedule): Adjust for the field renaming.
	(omp_set_schedule, omp_get_schedule): Likewise.
	Rename modifier argument to chunk_size.
	* omp_lib.f90.in (omp_set_schedule, omp_get_schedule):
	Rename modifier argument to chunk_size.
	* loop_ull.c (GOMP_loop_ull_runtime_start,
	GOMP_loop_ull_ordered_runtime_start): Adjust for the field renaming.
	* loop.c (GOMP_loop_runtime_start, GOMP_loop_ordered_runtime_start,
	GOMP_parallel_loop_runtime_start, GOMP_parallel_loop_runtime):
	Likewise.
	* fortran.c (omp_set_schedule_, omp_set_schedule_8_,
	omp_get_schedule_, omp_get_schedule_8_): Rename
	modifier argument to chunk_size.
	* libgomp.texi (omp_set_schedule, omp_get_schedule): Likewise.

2015-06-10  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/reduction-7.c: New test.
	* testsuite/libgomp.c/reduction-8.c: New test.
	* testsuite/libgomp.c/reduction-9.c: New test.
	* testsuite/libgomp.c/reduction-10.c: New test.
	* testsuite/libgomp.c++/taskloop-5.C (foo): Wrap #pragma omp
	parallel bodies into #pragma omp single.
	* testsuite/libgomp.c++/reduction-5.C: New test.
	* testsuite/libgomp.c++/reduction-6.C: New test.
	* testsuite/libgomp.c++/reduction-7.C: New test.
	* testsuite/libgomp.c++/reduction-8.C: New test.
	* testsuite/libgomp.c++/reduction-9.C: New test.
	* testsuite/libgomp.c++/reduction-10.C: New test.

2015-06-03  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/member-1.C (A::m1): Add tests for
	reductions.
	* testsuite/libgomp.c++/member-2.C (A<Q>::m1): Likewise.

2015-06-02  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/taskloop-5.C: New test.
	* testsuite/libgomp.c++/member-1.C: New test.
	* testsuite/libgomp.c++/member-2.C: New test.

2015-05-27  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/ctor-13.C: New test.
	* testsuite/libgomp.c++/simd14.C: New test.
	* testsuite/libgomp.c++/reference-1.C: New test.

2015-05-26  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c++/for-12.C: New test.
	* testsuite/libgomp.c++/taskloop-1.C: New test.
	* testsuite/libgomp.c++/taskloop-2.C: New test.
	* testsuite/libgomp.c++/taskloop-3.C: New test.
	* testsuite/libgomp.c++/taskloop-4.C: New test.

2015-05-21  Jakub Jelinek  <jakub@redhat.com>

	* testsuite/libgomp.c/taskloop-4.c: New test.

	* libgomp.map (GOMP_4.1): Export GOMP_taskloop and GOMP_taskloop_ull.
	* task.c: Include gomp-constants.h.  Include taskloop.c twice
	with appropriate macros.
	(GOMP_task): Use GOMP_TASK_FLAG_* defines instead of hardcoded
	constants.
	* taskloop.c: New file.
	* testsuite/libgomp.c/for-4.c: New test.
	* testsuite/libgomp.c/taskloop-1.c: New test.
	* testsuite/libgomp.c/taskloop-2.c: New test.
	* testsuite/libgomp.c/taskloop-3.c: New test.

2015-04-29  Jakub Jelinek  <jakub@redhat.com>

	* omp.h.in (omp_get_max_task_priority): New prototype.
	* omp_lib.h.in (omp_get_max_task_priority): New extern.
	* omp_lib.f90.in (omp_get_max_task_priority): New interface.
	* fortran.c (omp_get_max_task_priority_): New function.
	(omp_get_max_task_priority): Add ialias_redirect.
	* libgomp.map (OMP_4.1): Export omp_get_max_task_priority
	and omp_get_max_task_priority_.
	* env.c (gomp_max_task_priority_var): New variable.
	(handle_omp_display_env): Print OMP_MAX_TASK_PRIORITY.
	(initialize_env): Handle OMP_MAX_TASK_PRIORITY env var.
	(omp_get_max_task_priority): New function.

Copyright (C) 2015 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.
