2024-03-04  Tobias Burnus  <tburnus@baylibre.com>

	Backported from master:
	2024-03-01  Jakub Jelinek  <jakub@redhat.com>
		    Tobias Burnus  <tburnus@baylibre.com>

	PR c++/110347
	* testsuite/libgomp.c++/target-lambda-3.C: Moved from
	gcc/testsuite/g++.dg/gomp/ and fixed is-mapped handling.
	* testsuite/libgomp.c++/target-lambda-1.C: Modify to also
	also work without offloading.
	* testsuite/libgomp.c++/firstprivate-1.C: New test.
	* testsuite/libgomp.c++/firstprivate-2.C: New test.
	* testsuite/libgomp.c++/private-1.C: New test.
	* testsuite/libgomp.c++/private-2.C: New test.
	* testsuite/libgomp.c++/target-lambda-4.C: New test.
	* testsuite/libgomp.c++/use_device_ptr-1.C: New test.

2023-11-28  Andrew Stubbs  <ams@codesourcery.com>

	Backport from mainline:
	Andrew Stubbs  <ams@codesourcery.com>

	* plugin/plugin-gcn.c (max_isa_vgprs): New.
	(run_kernel): CDNA2 devices have more VGPRs.

2023-10-30  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/allocate-8a.f90: New test.

2023-10-26  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP Impl. Status): Document that 'omp allocate'
	is now supported for C++ stack/automatic variables.
	* testsuite/libgomp.c-c++-common/allocate-4.c: Renamed from ...
	* testsuite/libgomp.c/allocate-4.c: ... this.
	* testsuite/libgomp.c-c++-common/allocate-5.c: Renamed from ...
	* testsuite/libgomp.c/allocate-5.c: ... this.
	* testsuite/libgomp.c-c++-common/allocate-6.c: Renamed from ...
	* testsuite/libgomp.c/allocate-6.c: ... this.
	* testsuite/libgomp.c++/allocate-2.C: New test.

2023-10-26  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-10-14  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP Impl. Status): Mention that Fortran now
	supports the allocate directive for stack variables.
	* testsuite/libgomp.fortran/allocate-5a.f90: Renamed from
	testsuite/libgomp.fortran/allocate-5.f90.
	* testsuite/libgomp.fortran/allocate-5.f90: New test.
	* testsuite/libgomp.fortran/allocate-6.f90: New test.
	* testsuite/libgomp.fortran/allocate-7.f90: New test.
	* testsuite/libgomp.fortran/allocate-8.f90: New test.

2023-10-26  Tobias Burnus  <tobias@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.fortran/allocate-2a.f90: Add exec stmt.
	* testsuite/libgomp.fortran/allocate-4.f90: Update dg-error
	* testsuite/libgomp.fortran/allocate-5.f90: Likewise; add exec stmt.

2023-09-20  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-09-20  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP 5.1 Impl.): Mark 'omp allocate' as
	implemented for C only.
	* testsuite/libgomp.c/allocate-4.c: New test.
	* testsuite/libgomp.c/allocate-5.c: New test.
	* testsuite/libgomp.c/allocate-6.c: New test.

2023-09-19  Julian Brown  <julian@codesourcery.com>

	* plugin/plugin-gcn.c (hsa_runtime_fn_info): Add hsa_amd_memory_lock_fn,
	hsa_amd_memory_unlock_fn, hsa_amd_memory_async_copy_rect_fn function
	pointers.
	(init_hsa_runtime_functions): Add above functions, with DLSYM_OPT_FN.
	(GOMP_OFFLOAD_memcpy2d, GOMP_OFFLOAD_memcpy3d): New functions.
	* target.c (omp_target_memcpy_rect_worker): Add 1D strided transfer
	support.

2023-09-19  Julian Brown  <julian@codesourcery.com>

	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_memcpy2d): Adjust parameters to
	avoid out-of-bounds array checks in CUDA runtime.
	(GOMP_OFFLOAD_memcpy3d): Likewise.

2023-09-19  Tobias Burnus  <tobias@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	Backported from mainline:
	* libgomp-plugin.h (GOMP_OFFLOAD_memcpy2d,
	GOMP_OFFLOAD_memcpy3d): New prototypes.
	* libgomp.h (struct gomp_device_descr): Add memcpy2d_func
	and memcpy3d_func.
	* libgomp.texi (nvptx): Document when cuMemcpy2D/cuMemcpy3D is used.
	* oacc-host.c (memcpy2d_func, .memcpy3d_func): Init with NULL.
	* plugin/cuda-lib.def (cuMemcpy2D, cuMemcpy2DUnaligned,
	cuMemcpy3D): Invoke via CUDA_ONE_CALL.
	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_memcpy2d,
	GOMP_OFFLOAD_memcpy3d): New.
	* target.c (omp_target_memcpy_rect_worker): Update prototype.
	(omp_target_memcpy_rect_check, omp_target_memcpy_rect_copy):
	Permit all device-to-device copies; invoke new plugins for
	2D and 3D copying when available.
	(gomp_update): Update calls to omp_target_memcpy_rect_worker.  Ensure
	that tmp space is not allocated here.
	(gomp_load_plugin_for_device): DLSYM the new plugin functions.
	* testsuite/libgomp.c/target-12.c: Fix dimension bug.
	* testsuite/libgomp.fortran/target-12.f90: Likewise.
	* testsuite/libgomp.fortran/target-memcpy-rect-1.f90: New test.

2023-09-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-08-22  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP 5.2 status): Add depobj with
	destroy-var argument as 'N'. Mark defaultmap with
	'all' category as 'Y'.

2023-08-10  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c-c++-common/declare-mapper-18.c: New test.
	* testsuite/libgomp.fortran/declare-mapper-25.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-28.f90: New test.

2023-08-10  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.fortran/declare-mapper-30.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-4.f90: Adjust test for new
	lookup behaviour.

2023-07-27  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/metadirective-1.f90: Extend.
	* testsuite/libgomp.fortran/metadirective-6.f90: New test.

2023-07-26  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-07-26  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP 5.2 features): Add 'all' for 'defaultmap' as 'N'.
	(Tasking Routines): Document omp_in_explicit_task.
	(Implementation-defined ICV Initialization): Use @ref not @code.
2023-07-21  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-07-20  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP Runtime Library Routines):
	Split long list by adding sections and moving routines there.
	(OMP_ALLOCATORS): Fix typo.

2023-07-19  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/map-subarray-5.f90: Only expect
	libgomp dg-output for offload_device_nonshared_as.

2023-07-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-07-19  Tobias Burnus  <tobias@codesourcery.com>

	PR fortran/107424
	* libgomp.texi (Impl. Status 5.0): Add link to new PR110735.
	* testsuite/libgomp.fortran/non-rectangular-loop-1.f90: Enable
	commented tests.
	* testsuite/libgomp.fortran/non-rectangular-loop-1a.f90: Remove
	test file; tests are in non-rectangular-loop-1.f90.
	* testsuite/libgomp.fortran/non-rectangular-loop-5.f90: Change
	testcase to use a non-constant step to retain the 'sorry' test.
	* testsuite/libgomp.fortran/non-rectangular-loop-6.f90: New test.

2023-07-14  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c-c++-common/array-shaping-14.c: New test.

2023-07-12  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/implicit-mapping-1.c: Add
	expected warning.
	* testsuite/libgomp.oacc-fortran/declare-create-1.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/declare-create-2.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/declare-create-3.f90: Likewise.
	* testsuite/libgomp.oacc-fortran/nonlexical-assumed-size-1.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/nonlexical-assumed-size-2.f90:
	Likewise.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c/array-shaping-1.c: New test.
	* testsuite/libgomp.c/array-shaping-2.c: New test.
	* testsuite/libgomp.c/array-shaping-3.c: New test.
	* testsuite/libgomp.c/array-shaping-4.c: New test.
	* testsuite/libgomp.c/array-shaping-5.c: New test.
	* testsuite/libgomp.c/array-shaping-6.c: New test.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* libgomp.h (omp_noncontig_array_desc): Add span field.
	* target.c (omp_target_memcpy_rect_worker): Add span parameter. Update
	forward declaration. Handle span != element_size.
	(gomp_update): Handle bias in descriptor's size slot.  Update calls to
	omp_target_memcpy_rect_worker.
	* testsuite/libgomp.fortran/noncontig-updates-1.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-2.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-3.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-4.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-5.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-6.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-7.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-8.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-9.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-10.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-11.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-12.f90: New test.
	* testsuite/libgomp.fortran/noncontig-updates-13.f90: New test.

2023-07-03  Julian Brown  <julian@codesourcery.com>

	* libgomp.h (omp_noncontig_array_desc): New struct.
	* target.c (omp_target_memcpy_rect_worker): Add stride array
	parameter.  Forward declare.  Add STRIDES parameter and strided
	update support.
	(gomp_update): Add noncontiguous (strided/shaped) update support.
	* testsuite/libgomp.c++/array-shaping-1.C: New test.
	* testsuite/libgomp.c++/array-shaping-2.C: New test.
	* testsuite/libgomp.c++/array-shaping-3.C: New test.
	* testsuite/libgomp.c++/array-shaping-4.C: New test.
	* testsuite/libgomp.c++/array-shaping-5.C: New test.
	* testsuite/libgomp.c++/array-shaping-6.C: New test.
	* testsuite/libgomp.c++/array-shaping-7.C: New test.
	* testsuite/libgomp.c++/array-shaping-8.C: New test.
	* testsuite/libgomp.c++/array-shaping-9.C: New test.
	* testsuite/libgomp.c++/array-shaping-10.C: New test.
	* testsuite/libgomp.c++/array-shaping-11.C: New test.
	* testsuite/libgomp.c++/array-shaping-12.C: New test.
	* testsuite/libgomp.c++/array-shaping-13.C: New test.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.fortran/declare-mapper-2.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-3.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-4.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-6.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-7.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-8.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-9.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-10.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-11.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-12.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-13.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-15.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-17.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-18.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-19.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-20.f90: New test.
	* testsuite/libgomp.fortran/declare-mapper-21.f90: New test.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c-c++-common/declare-mapper-9.c: Enable for C.
	* testsuite/libgomp.c-c++-common/declare-mapper-10.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-11.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-12.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-13.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-14.c: Likewise.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c-c++-common/ind-base-4.c: New test.
	* testsuite/libgomp.c-c++-common/unary-ptr-1.c: New test.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c++/declare-mapper-1.C: New test.
	* testsuite/libgomp.c++/declare-mapper-2.C: New test.
	* testsuite/libgomp.c++/declare-mapper-3.C: New test.
	* testsuite/libgomp.c++/declare-mapper-4.C: New test.
	* testsuite/libgomp.c++/declare-mapper-5.C: New test.
	* testsuite/libgomp.c++/declare-mapper-6.C: New test.
	* testsuite/libgomp.c++/declare-mapper-7.C: New test.
	* testsuite/libgomp.c++/declare-mapper-8.C: New test.
	* testsuite/libgomp.c-c++-common/declare-mapper-9.c: New test (only
	enabled for C++ for now).
	* testsuite/libgomp.c-c++-common/declare-mapper-10.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-11.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-12.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-13.c: Likewise.
	* testsuite/libgomp.c-c++-common/declare-mapper-14.c: Likewise.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c++/baseptrs-4.C: Remove commented-out cases that
	now work.
	* testsuite/libgomp.c++/baseptrs-6.C: New test.
	* testsuite/libgomp.c++/ind-base-1.C: New test.
	* testsuite/libgomp.c++/ind-base-2.C: New test.
	* testsuite/libgomp.c++/lvalue-tofrom-1.C: New test.
	* testsuite/libgomp.c++/lvalue-tofrom-2.C: New test.
	* testsuite/libgomp.c++/map-comma-1.C: New test.
	* testsuite/libgomp.c++/map-rvalue-ref-1.C: New test.
	* testsuite/libgomp.c++/struct-ref-1.C: New test.
	* testsuite/libgomp.c-c++-common/array-field-1.c: New test.
	* testsuite/libgomp.c-c++-common/array-of-struct-1.c: New test.
	* testsuite/libgomp.c-c++-common/array-of-struct-2.c: New test.

2023-06-30  Julian Brown  <julian@codesourcery.com>

	* target.c (gomp_map_pointer): Modify zero-length array section
	pointer handling.
	(gomp_attach_pointer): Likewise.
	* testsuite/libgomp.c++/target-lambda-1.C: Update for OpenMP 5.2
	semantics.
	* testsuite/libgomp.c++/target-this-3.C: Likewise.
	* testsuite/libgomp.c++/target-this-4.C: Likewise.

2023-06-22  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-22  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi: Use @var for ICV vars.
	(OpenMP Environment Variables): Mention _ALL/_DEV/_DEV_<no> variants,
	document which ICV is set and which scope the ICV has; extend/cleanup
	some @ref.
	(Implementation-defined ICV Initialization): New.
	(nvptx): Document the implementation-defined used per-warp stack size.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/implicit-mapping-1.c: New test.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/nonlexical-assumed-size-1.f90: New
	test.
	* testsuite/libgomp.oacc-fortran/nonlexical-assumed-size-2.f90: New
	test.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-create-1.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-create-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-create-3.f90: New test.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/pr70828.c: Un-XFAIL.
	* testsuite/libgomp.oacc-c-c++-common/pr70828-2.c: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828.f90: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828-2.f90: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828-3.f90: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828-4.f90: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828-5.f90: Un-XFAIL.
	* testsuite/libgomp.oacc-fortran/pr70828-6.f90: Un-XFAIL.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* oacc-mem.c (find_group_last, goacc_enter_data_internal,
	goacc_exit_data_internal, GOACC_enter_exit_data): Add
	GOMP_MAP_STRUCT_UNORD support.
	* target.c (gomp_map_vars_internal): Add GOMP_MAP_STRUCT_UNORD support.
	Detect incorrect use of variable indexing of arrays of structs.
	(GOMP_target_enter_exit_data, gomp_target_task_fn): Add
	GOMP_MAP_STRUCT_UNORD support.
	* testsuite/libgomp.c-c++-common/map-arrayofstruct-1.c: New test.
	* testsuite/libgomp.c-c++-common/map-arrayofstruct-2.c: New test.
	* testsuite/libgomp.c-c++-common/map-arrayofstruct-3.c: New test.
	* testsuite/libgomp.fortran/map-subarray-5.f90: New test.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.fortran/map-subarray.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-2.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-3.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-4.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-6.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-7.f90: New test.
	* testsuite/libgomp.fortran/map-subarray-8.f90: New test.
	* testsuite/libgomp.fortran/map-subcomponents.f90: New test.
	* testsuite/libgomp.fortran/struct-elem-map-1.f90: Adjust for
	descriptor-mapping changes.  Remove XFAIL.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c-c++-common/target-implicit-map-2.c: Fix missing
	"free".
	* testsuite/libgomp.c-c++-common/target-implicit-map-3.c: New test.
	* testsuite/libgomp.c-c++-common/target-map-zlas-1.c: New test.
	* testsuite/libgomp.c/target-22.c: Remove explicit base pointer
	mappings.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* target.c (gomp_map_fields_existing): Use gomp_map_0len_lookup.
	(gomp_attach_pointer): Allow attaching null pointers (or Fortran
	"unassociated" pointers).
	(gomp_map_vars_internal): Handle zero-sized struct members.  Add
	diagnostic for unmapped struct pointer members.
	* testsuite/libgomp.c++/class-array-1.C: New test.
	* testsuite/libgomp.c-c++-common/baseptrs-1.c: New test.
	* testsuite/libgomp.c-c++-common/baseptrs-2.c: New test.
	* testsuite/libgomp.c-c++-common/ptr-attach-2.c: New test.
	* testsuite/libgomp.c++/baseptrs-3.C: New test.
	* testsuite/libgomp.c++/baseptrs-4.C: New test.
	* testsuite/libgomp.c++/baseptrs-5.C: New test.
	* testsuite/libgomp.c++/target-48.C: New test.
	* testsuite/libgomp.c++/target-49.C: New test.
	* testsuite/libgomp.c/target-22.c: Add necessary explicit base pointer
	mappings.
	* testsuite/libgomp.fortran/struct-elem-map-1.f90: Add XFAIL.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	Revert:
	2022-02-24  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.c-c++-common/ptr-attach-2.c: New test.

2023-06-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/pr70828.c: XFAIL test.
	* testsuite/libgomp.oacc-c-c++-common/pr70828-2.c: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828.f90: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828-2.f90: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828-3.f90: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828-4.f90: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828-5.f90: XFAIL test.
	* testsuite/libgomp.oacc-fortran/pr70828-6.f90: XFAIL test.

2023-06-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-19  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c/target-51.c: Fix DejaGnu directive syntax
	error.

2023-06-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-19  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.c/target-51.c: Accept more error msg variants
	as expected dg-output.

2023-06-19  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-19  Tobias Burnus  <tobias@codesourcery.com>

	PR middle-end/110270
	* target.c (gomp_map_vars_internal): Copy host value instead of NULL
	for  GOMP_MAP_ZERO_LEN_ARRAY_SECTION if not mapped.
	* libgomp.texi (OpenMP 5.2 Impl.): Mark as 'Y'.
	* testsuite/libgomp.c/target-19.c: Update expected value.
	* testsuite/libgomp.c++/target-18.C: Likewise.
	* testsuite/libgomp.c++/target-19.C: Likewise.
	* testsuite/libgomp.c-c++-common/requires-unified-addr-2.c: New test.
	* testsuite/libgomp.c-c++-common/target-implicit-map-3.c: New test.
	* testsuite/libgomp.c-c++-common/target-implicit-map-4.c: New test.

2023-06-16  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-16  Tobias Burnus  <tobias@codesourcery.com>

	* target.c (resolve_device): Call gomp_get_num_devices early to ensure
	gomp_init_targets_once was called before using default-device-var.
	* testsuite/libgomp.c/target-55.c: New test.
	* testsuite/libgomp.c/target-55a.c: New test.

2023-06-15  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-15  Tobias Burnus  <tobias@codesourcery.com>

	* env.c (gomp_def_allocator_envvar): New var.
	(parse_allocator): Handle OpenMP 5.1 syntax.
	(cleanup_env): New.
	(omp_display_env): Output gomp_def_allocator_envvar
	for an allocator with traits.
	* libgomp.texi (OMP_ALLOCATOR, OMP_AFFINITY_FORMAT,
	OMP_DISPLAY_AFFINITY): New.
	* testsuite/libgomp.c/allocator-1.c: New test.
	* testsuite/libgomp.c/allocator-2.c: New test.
	* testsuite/libgomp.c/allocator-3.c: New test.
	* testsuite/libgomp.c/allocator-4.c: New test.
	* testsuite/libgomp.c/allocator-5.c: New test.
	* testsuite/libgomp.c/allocator-6.c: New test.

2023-06-13  Sandra Loosemore  <sandra@codesourcery.com>

	* testsuite/libgomp.fortran/imperfect-destructor.f90: New.
	* testsuite/libgomp.fortran/imperfect-transform-1.f90: New.
	* testsuite/libgomp.fortran/imperfect-transform-2.f90: New.
	* testsuite/libgomp.fortran/imperfect1.f90: New.
	* testsuite/libgomp.fortran/imperfect2.f90: New.
	* testsuite/libgomp.fortran/imperfect3.f90: New.
	* testsuite/libgomp.fortran/imperfect4.f90: New.
	* testsuite/libgomp.fortran/target-imperfect-transform-1.f90: New.
	* testsuite/libgomp.fortran/target-imperfect-transform-2.f90: New.
	* testsuite/libgomp.fortran/target-imperfect1.f90: New.
	* testsuite/libgomp.fortran/target-imperfect2.f90: New.
	* testsuite/libgomp.fortran/target-imperfect3.f90: New.
	* testsuite/libgomp.fortran/target-imperfect4.f90: New.

2023-06-13  Sandra Loosemore  <sandra@codesourcery.com>

	* testsuite/libgomp.c-c++-common/imperfect-transform-1.c: New.
	* testsuite/libgomp.c-c++-common/imperfect-transform-2.c: New.
	* testsuite/libgomp.c-c++-common/imperfect1.c: New.
	* testsuite/libgomp.c-c++-common/imperfect2.c: New.
	* testsuite/libgomp.c-c++-common/imperfect3.c: New.
	* testsuite/libgomp.c-c++-common/imperfect4.c: New.
	* testsuite/libgomp.c-c++-common/imperfect5.c: New.
	* testsuite/libgomp.c-c++-common/imperfect6.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect-transform-1.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect-transform-2.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect1.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect2.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect3.c: New.
	* testsuite/libgomp.c-c++-common/target-imperfect4.c: New.

2023-06-13  Sandra Loosemore  <sandra@codesourcery.com>

	* testsuite/libgomp.c++/imperfect-class-1.C: New.
	* testsuite/libgomp.c++/imperfect-class-2.C: New.
	* testsuite/libgomp.c++/imperfect-class-3.C: New.
	* testsuite/libgomp.c++/imperfect-destructor.C: New.
	* testsuite/libgomp.c++/imperfect-template-1.C: New.
	* testsuite/libgomp.c++/imperfect-template-2.C: New.
	* testsuite/libgomp.c++/imperfect-template-3.C: New.

2023-06-13  Sandra Loosemore  <sandra@codesourcery.com>
	    Frederik Harwath <frederik@codesourcery.com>

	* testsuite/libgomp.fortran/loop-transforms/nested-fn.f90: New test.

2023-06-14  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-14  Thomas Schwinge  <thomas@codesourcery.com>

	* target.c (resolve_device): Align a
	'OMP_TARGET_OFFLOAD=mandatory' diagnostic with others.
	* testsuite/libgomp.c/target-51.c: Adjust.

2023-06-14  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-14  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c/target-51.c: Fix typo.

2023-06-14  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-14  Tobias Burnus  <tobias@codesourcery.com>

	* env.c (gomp_default_icv_values): Init default_device_var to
	an nonconforming value - INT_MIN.
	(initialize_env): After env-var parsing, set default_device_var to
	device 0 unless OMP_TARGET_OFFLOAD=mandatory.
	(omp_display_env): If default_device_var is INT_MIN, call
	gomp_init_targets_once.
	* icv-device.c (omp_get_default_device): Likewise.
	* libgomp.texi (OMP_DEFAULT_DEVICE): Update init description.
	(OpenMP 5.2 Impl. Status): Mark OMP_TARGET_OFFLOAD=mandatory as 'Y'.
	* target.c (resolve_device): Improve error message device-num < 0
	with 'mandatory' and no no-host devices available.
	(gomp_target_init): Set default-device-var if INT_MIN.
	* testsuite/libgomp.c/target-48.c: New test.
	* testsuite/libgomp.c/target-49.c: New test.
	* testsuite/libgomp.c/target-50.c: New test.
	* testsuite/libgomp.c/target-50a.c: New test.
	* testsuite/libgomp.c/target-51.c: New test.
	* testsuite/libgomp.c/target-52.c: New test.
	* testsuite/libgomp.c/target-53.c: New test.
	* testsuite/libgomp.c/target-54.c: New test.

2023-06-13  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-13  Tobias Burnus  <tobias@codesourcery.com>

	PR libgomp/109837
	* testsuite/libgomp.c-c++-common/requires-unified-addr-1.c: New test.
	* testsuite/libgomp.fortran/requires-unified-addr-1.f90: New test.

2023-06-12  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-12  Tobias Burnus  <tobias@codesourcery.com>

	* target.c (gomp_to_device_kind_p, gomp_map_vars_internal): Replace
	GOMP_MAP_PRESENT_{FROM,TO,TOFROM,ACLLOC} by GOMP_MAP_FORCE_PRESENT.
	(gomp_map_vars_internal, gomp_update): Likewise; unify and improve
	error message.
	* testsuite/libgomp.c-c++-common/target-present-2.c: Update for
	changed error message.
	* testsuite/libgomp.fortran/target-present-1.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-2.f90: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/present-1.c: Likewise.
	* testsuite/libgomp.c-c++-common/target-present-1.c: Likewise and
	extend testcase to check that data is copied when needed.
	* testsuite/libgomp.c-c++-common/target-present-3.c: Likewise.
	* testsuite/libgomp.fortran/target-present-3.f90: Likewise.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-07  Thomas Schwinge  <thomas@codesourcery.com>
		    Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.c-c++-common/target-present-1.c: Run code
	also for non-offload_device targets; check that it runs
	successfully for those and for all until a checkpoint for all
	* testsuite/libgomp.c-c++-common/target-present-2.c: Likewise.
	* testsuite/libgomp.c-c++-common/target-present-3.c: Likewise.
	* testsuite/libgomp.fortran/target-present-1.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-3.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-2.f90: Likewise;
	add missing vars to map clause.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Backported from mainline:
	2023-06-06  Kwok Cheung Yeung  <kcy@codesourcery.com>
		    Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP 5.1 Impl. status): Set 'present' support for
	defaultmap to 'Y', add 'Y' entry for 'present' on to/from/map clauses.
	* target.c (gomp_to_device_kind_p): Add map kinds with 'present'
	modifier.
	(gomp_map_vars_existing): Use new GOMP_MAP_FORCE_P macro.
	(gomp_map_vars_internal, gomp_update, gomp_target_rev):
	Emit runtime error if memory region not present.
	* testsuite/libgomp.c-c++-common/target-present-1.c: New test.
	* testsuite/libgomp.c-c++-common/target-present-2.c: New test.
	* testsuite/libgomp.c-c++-common/target-present-3.c: New test.
	* testsuite/libgomp.fortran/target-present-1.f90: New test.
	* testsuite/libgomp.fortran/target-present-2.f90: New test.
	* testsuite/libgomp.fortran/target-present-3.f90: New test.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Reverted:
	2023-02-01  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* target.c (gomp_to_device_kind_p): Add map kinds with 'present'
	modifier.
	(gomp_map_vars_existing): Use new GOMP_MAP_FORCE_P macro.
	(gomp_map_vars_internal): Emit runtime error if memory region not
	present.
	(gomp_update): Likewise.
	(gomp_target_rev): Likewise.
	* testsuite/libgomp.c-c++-common/target-present-1.c: New.
	* testsuite/libgomp.c-c++-common/target-present-2.c: New.
	* testsuite/libgomp.c-c++-common/target-present-3.c: New.
	* testsuite/libgomp.fortran/target-present-1.f90: New.
	* testsuite/libgomp.fortran/target-present-2.f90: New.
	* testsuite/libgomp.fortran/target-present-3.f90: New.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Revert:
	2023-02-15  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c-c++-common/target-present-1.c: Fix.
	* testsuite/libgomp.c-c++-common/target-present-2.c: Likewise.
	* testsuite/libgomp.c-c++-common/target-present-3.c: Likewise.
	* testsuite/libgomp.fortran/target-present-1.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-2.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-3.f90: Likewise.

2023-06-07  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-06-06  Tobias Burnus  <tobias@codesourcery.com>

	* plugin/plugin-gcn.c (GOMP_OFFLOAD_get_num_devices): Use
	mainline syntax for mark unified_address requirement as supported.
	* libgomp.texi (OpenMP 5.0, AMD Radeon, nvptx): Remove
	'unified_address' from the not-supported requirements.

2023-06-01  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-06-01  Tobias Burnus  <tobias@codesourcery.com>

	* libgomp.texi (OpenMP 5.2): Mark pure-directive handling as 'Y'.

2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-05-21  Tobias Burnus  <tobias@codesourcery.com>

	PR libgomp/109875
	* config/gcn/target.c (GOMP_teams4): Honor nteams-var ICV.
	* config/nvptx/target.c (GOMP_teams4): Likewise.
	* testsuite/libgomp.c-c++-common/teams-nteams-icv-1.c: New test.
	* testsuite/libgomp.c-c++-common/teams-nteams-icv-2.c: New test.
	* testsuite/libgomp.c-c++-common/teams-nteams-icv-3.c: New test.
	* testsuite/libgomp.c-c++-common/teams-nteams-icv-4.c: New test.

2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-05-19  Jakub Jelinek  <jakub@redhat.com>

	PR libgomp/109904
	* configure.ac (link_gomp): Include also $DL_LIBS.
	* configure: Regenerated.

2023-05-30  Tobias Burnus  <tobias@codesourcery.com>

	Backported from master:
	2023-04-25  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.c-c++-common/scan-1.c: New test.
	* testsuite/libgomp.c/scan-23.c: New test.
	* testsuite/libgomp.fortran/scan-2.f90: New test.

2023-05-12  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.c++/static-aggr-constructor-destructor-1.C: New
	test.
	* testsuite/libgomp.c++/static-aggr-constructor-destructor-2.C: New
	test.
	* testsuite/libgomp.c++/static-aggr-constructor-destructor-3.C: New
	test.

2023-05-04  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-no-directive-unroll-full-1.c:
	Use -Wall and add -Wno-unknown-pragmas to disable warnings about empty pragmas.
	Use -O2.
	* testsuite/libgomp.c++/loop-transforms/matrix-no-directive-unroll-full-1.C:
	Copy of testsuite/libgomp.c-c++-common/matrix-no-directive-unroll-full-1.c,
	but using -O0 which works only for C++.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-no-directive-1.c: Use -Wall
	and use -Wno-unknown-pragmas to disable warnings about empty pragmas.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-distribute-parallel-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-masked-taskloop-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-masked-taskloop-simd-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-target-parallel-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-target-teams-distribute-parallel-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-taskloop-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-teams-distribute-parallel-for-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-simd-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/unroll-non-rect-1.c:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/unroll-1.c:
	Likewise and fix broken function calls found by -Wall.

2023-04-25  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.fortran/loop-transforms/tile-2.f90: Add reduction clause.
	* testsuite/libgomp.fortran/loop-transforms/unroll-1.f90: Initialize var.
	* testsuite/libgomp.fortran/loop-transforms/unroll-simd-1.f90: Add reduction
	and initialization.

2023-04-20  Andrew Stubbs  <ams@codesourcery.com>

	* basic-allocator.c (basic_alloc_free): Use BASIC_ALLOC_YIELD.
	(basic_alloc_realloc): Use BASIC_ALLOC_YIELD.

2023-04-03  Thomas Schwinge  <thomas@codesourcery.com>

	* target.c (gomp_map_vars_internal)
	<non-contiguous array support>: Handle 'always_pinned_mode'.

	* libgomp-plugin.h (GOMP_OFFLOAD_page_locked_host_free): Add
	'struct goacc_asyncqueue *' formal parameter.
	(GOMP_OFFLOAD_page_locked_host_register)
	(GOMP_OFFLOAD_page_locked_host_unregister)
	(GOMP_OFFLOAD_page_locked_host_p): Add.
	* libgomp.h (always_pinned_mode)
	(gomp_page_locked_host_register_dev)
	(gomp_page_locked_host_unregister_dev): Add.
	(struct splay_tree_key_s): Add 'page_locked_host_p'.
	(struct gomp_device_descr): Add
	'GOMP_OFFLOAD_page_locked_host_register',
	'GOMP_OFFLOAD_page_locked_host_unregister',
	'GOMP_OFFLOAD_page_locked_host_p'.
	* libgomp.texi (-foffload-memory=pinned): Document.
	* plugin/cuda-lib.def (cuMemHostGetFlags, cuMemHostRegister_v2)
	(cuMemHostRegister, cuMemHostUnregister): Add.
	* plugin/plugin-nvptx.c (struct ptx_device): Add
	'read_only_host_register_supported'.
	(nvptx_open_device): Initialize it.
	(free_host_blocks, free_host_blocks_lock)
	(nvptx_run_deferred_page_locked_host_free)
	(nvptx_page_locked_host_free_callback, nvptx_page_locked_host_p)
	(GOMP_OFFLOAD_page_locked_host_register)
	(nvptx_page_locked_host_unregister_callback)
	(GOMP_OFFLOAD_page_locked_host_unregister)
	(GOMP_OFFLOAD_page_locked_host_p)
	(nvptx_run_deferred_page_locked_host_unregister)
	(nvptx_move_page_locked_host_unregister_blocks_aq1_aq2_callback):
	Add.
	(GOMP_OFFLOAD_fini_device, GOMP_OFFLOAD_page_locked_host_alloc)
	(GOMP_OFFLOAD_run): Call
	'nvptx_run_deferred_page_locked_host_free'.
	(struct goacc_asyncqueue): Add
	'page_locked_host_unregister_blocks_lock',
	'page_locked_host_unregister_blocks'.
	(nvptx_goacc_asyncqueue_construct)
	(nvptx_goacc_asyncqueue_destruct): Handle those.
	(GOMP_OFFLOAD_page_locked_host_free): Handle
	'struct goacc_asyncqueue *' formal parameter.
	(GOMP_OFFLOAD_openacc_async_test)
	(nvptx_goacc_asyncqueue_synchronize): Call
	'nvptx_run_deferred_page_locked_host_unregister'.
	(GOMP_OFFLOAD_openacc_async_serialize): Call
	'nvptx_move_page_locked_host_unregister_blocks_aq1_aq2_callback'.
	* config/linux/allocator.c (linux_memspace_alloc)
	(linux_memspace_calloc, linux_memspace_free)
	(linux_memspace_realloc): Remove 'always_pinned_mode' handling.
	(GOMP_enable_pinned_mode): Move...
	* target.c: ... here.
	(always_pinned_mode, verify_always_pinned_mode)
	(gomp_verify_always_pinned_mode, gomp_page_locked_host_alloc_dev)
	(gomp_page_locked_host_free_dev)
	(gomp_page_locked_host_aligned_alloc_dev)
	(gomp_page_locked_host_aligned_free_dev)
	(gomp_page_locked_host_register_dev)
	(gomp_page_locked_host_unregister_dev): Add.
	(gomp_copy_host2dev, gomp_map_vars_internal)
	(gomp_remove_var_internal, gomp_unmap_vars_internal)
	(get_gomp_offload_icvs, gomp_load_image_to_device)
	(gomp_target_rev, omp_target_memcpy_copy)
	(omp_target_memcpy_rect_worker): Handle 'always_pinned_mode'.
	(gomp_copy_host2dev, gomp_copy_dev2host): Handle
	'verify_always_pinned_mode'.
	(GOMP_target_ext): Add 'assert'.
	(gomp_page_locked_host_alloc): Use
	'gomp_page_locked_host_alloc_dev'.
	(gomp_page_locked_host_free): Use
	'gomp_page_locked_host_free_dev'.
	(omp_target_associate_ptr): Adjust.
	(gomp_load_plugin_for_device): Handle 'page_locked_host_register',
	'page_locked_host_unregister', 'page_locked_host_p'.
	* oacc-mem.c (memcpy_tofrom_device): Handle 'always_pinned_mode'.
	* libgomp_g.h (GOMP_enable_pinned_mode): Adjust.
	* testsuite/libgomp.c/alloc-pinned-7.c: Remove.

	PR other/76739
	* target.c (gomp_map_vars_internal): Pass pre-allocated 'ptrblock'
	to 'goacc_noncontig_array_create_ptrblock'.
	* oacc-parallel.c (goacc_noncontig_array_create_ptrblock): Adjust.
	* oacc-int.h (goacc_noncontig_array_create_ptrblock): Adjust.

	* libgomp.texi (AMD Radeon, nvptx): Document OpenMP 'pinned'
	memory.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.c++/loop-transforms/tile-1.C: Deleted, replaced by
	matrix-* tests.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-1.h:
	New header file for new tests.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-constant-iter.h:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-helper.h:
	Likewise.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-no-directive-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-no-directive-unroll-full-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-distribute-parallel-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-masked-taskloop-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-parallel-masked-taskloop-simd-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-target-parallel-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-target-teams-distribute-parallel-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-taskloop-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-omp-teams-distribute-parallel-for-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-simd-1.c:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/matrix-transform-variants-1.h:
	New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/unroll-non-rect-1.c:
	New test.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.fortran/loop-transforms/inner-1.f90: New test.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.c++/loop-transforms/tile-1.C: New test.
	* testsuite/libgomp.c++/loop-transforms/tile-2.C: New test.
	* testsuite/libgomp.c++/loop-transforms/tile-3.C: New test.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.fortran/loop-transforms/tile-1.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/tile-2.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/tile-unroll-1.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/tile-unroll-2.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/tile-unroll-3.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/tile-unroll-4.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-tile-1.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-tile-2.f90: New test.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.c++/loop-transforms/unroll-1.C: New test.
	* testsuite/libgomp.c++/loop-transforms/unroll-2.C: New test.
	* testsuite/libgomp.c-c++-common/loop-transforms/unroll-1.c: New test.

2023-03-24  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.fortran/loop-transforms/unroll-1.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-2.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-3.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-4.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-5.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-6.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-7.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-7a.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-7b.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-7c.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-8.f90: New test.
	* testsuite/libgomp.fortran/loop-transforms/unroll-simd-1.f90: New test.

2023-03-24  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c/alloc-ompx_host_mem_alloc-1.c: New.

	* config/gcn/allocator.c (gcn_memspace_free): Explicitly handle
	'memspace == ompx_host_mem_space'.

2023-03-24  Thomas Schwinge  <thomas@codesourcery.com>

	* target.c (gomp_target_rev): Instead of 'dev_to_host_cpy',
	'host_to_dev_cpy', 'token', take a single 'goacc_asyncqueue'.
	* libgomp.h (gomp_target_rev): Adjust.
	* libgomp-plugin.c (GOMP_PLUGIN_target_rev): Adjust.
	* libgomp-plugin.h (GOMP_PLUGIN_target_rev): Adjust.
	* plugin/plugin-gcn.c (process_reverse_offload): Adjust.
	* plugin/plugin-nvptx.c (rev_off_dev_to_host_cpy)
	(rev_off_host_to_dev_cpy): Remove.
	(GOMP_OFFLOAD_run): Adjust.

	* target.c (gomp_unmap_vars_internal): Queue splay-tree keys for
	removal after main loop.

	PR other/76739
	* oacc-parallel.c (GOACC_parallel_keyed): Given OpenACC 'async',
	defer 'free' of non-contiguous array support data structures.
	* target.c (gomp_map_vars_internal): Likewise.

2023-03-23  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/map-alloc-comp-8.f90: New test.

2023-03-10  Thomas Schwinge  <thomas@codesourcery.com>

	PR other/76739
	* libgomp.h (goacc_map_vars): Add 'struct goacc_ncarray_info *'
	formal parameter.
	(gomp_map_vars_openacc): Remove.
	* target.c (goacc_map_vars): Adjust.
	(gomp_map_vars_openacc): Remove.
	* oacc-mem.c (acc_map_data, goacc_enter_datum)
	(goacc_enter_data_internal): Adjust.
	* oacc-parallel.c (GOACC_parallel_keyed, GOACC_data_start):
	Adjust.

2023-02-23  Andrew Stubbs  <ams@codesourcery.com>

	* target.c (gomp_attach_pointer): Check for USM.
	* testsuite/libgomp.fortran/usm-3.f90: New test.

2023-02-22  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/target-enter-data-3.f90: Uncomment
	'target exit data'.
	* testsuite/libgomp.fortran/target-enter-data-4.f90: New test.
	* testsuite/libgomp.fortran/target-enter-data-5.f90: New test.
	* testsuite/libgomp.fortran/target-enter-data-6.f90: New test.
	* testsuite/libgomp.fortran/target-enter-data-7.f90: New test.

2023-02-20  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp_g.h (GOMP_enable_pinned_mode): New.

	* config/linux/allocator.c (linux_memspace_alloc): Add 'init0'
	formal parameter.  Adjust all users.
	(linux_memspace_alloc, linux_memspace_free): Attempt to allocate
	OpenMP pinned memory using a device instead of 'mmap' plus
	attempting to register using a device.
	* libgomp-plugin.h (GOMP_OFFLOAD_register_page_locked)
	(GOMP_OFFLOAD_unregister_page_locked): Remove.
	(GOMP_OFFLOAD_page_locked_host_alloc)
	(GOMP_OFFLOAD_page_locked_host_free): New.
	* libgomp.h (gomp_register_page_locked)
	(gomp_unregister_page_locked): Remove.
	(gomp_page_locked_host_alloc, gomp_page_locked_host_free): New.
	(struct gomp_device_descr): Remove 'register_page_locked_func',
	'unregister_page_locked_func'.  Add 'page_locked_host_alloc_func',
	'page_locked_host_free_func'.
	* plugin/cuda-lib.def (cuMemHostRegister_v2, cuMemHostRegister)
	(cuMemHostUnregister): Remove.
	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_register_page_locked)
	(GOMP_OFFLOAD_unregister_page_locked): Remove.
	(GOMP_OFFLOAD_page_locked_host_alloc)
	(GOMP_OFFLOAD_page_locked_host_free): New.
	* target.c (gomp_register_page_locked)
	(gomp_unregister_page_locked): Remove.
	(gomp_page_locked_host_alloc, gomp_page_locked_host_free): Add.
	(gomp_load_plugin_for_device): Don't handle
	'register_page_locked', 'unregister_page_locked'.  Handle
	'page_locked_host_alloc', 'page_locked_host_free'.

2023-02-16  Thomas Schwinge  <thomas@codesourcery.com>

	* config/linux/allocator.c (linux_memspace_alloc)
	(linux_memspace_free, linux_memspace_realloc): Attempt to register
	OpenMP pinned memory using a device instead of 'mlock'.
	* libgomp-plugin.h (GOMP_OFFLOAD_register_page_locked)
	(GOMP_OFFLOAD_unregister_page_locked): New.
	* libgomp.h (gomp_register_page_locked)
	(gomp_unregister_page_locked): New
	(struct gomp_device_descr): Add 'register_page_locked_func',
	'unregister_page_locked_func'.
	* plugin/cuda-lib.def (cuMemHostRegister_v2, cuMemHostRegister)
	(cuMemHostUnregister): New.
	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_register_page_locked)
	(GOMP_OFFLOAD_unregister_page_locked): New.
	* target.c (gomp_register_page_locked)
	(gomp_unregister_page_locked): New.
	(gomp_load_plugin_for_device): Handle 'register_page_locked',
	'unregister_page_locked'.
	* testsuite/libgomp.c/alloc-pinned-1.c: Adjust.
	* testsuite/libgomp.c/alloc-pinned-2.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-3.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-4.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-5.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-6.c: Likewise.

	* allocator.c (omp_realloc): Route 'free' through 'MEMSPACE_FREE'.

2023-02-16  Thomas Schwinge  <thomas@codesourcery.com>

	* config/linux/allocator.c (linux_memspace_alloc)
	(linux_memspace_calloc): Clarify zero-initialization for pinned
	memory.
	* testsuite/libgomp.c/alloc-pinned-1.c: Verify zero-initialization
	for pinned memory.
	* testsuite/libgomp.c/alloc-pinned-2.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-3.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-4.c: Likewise.
	* testsuite/libgomp.c/alloc-pinned-5.c: Likewise.

	* config/linux/allocator.c (linux_memspace_calloc): Elide
	(innocuous) duplicate 'if' condition.
	* config/nvptx/allocator.c (nvptx_memspace_free): Explicitly
	handle 'memspace == ompx_host_mem_space'.
	* libgomp.h (gomp_is_usm_ptr): Remove.

	* basic-allocator.c (BASIC_ALLOC_YIELD): instead of '#deine',
	'#define' it.

2023-02-16  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c/usm-1.c: Re-enable non-GCN offloading
	compilation.
	* testsuite/libgomp.c/usm-2.c: Likewise.
	* testsuite/libgomp.c/usm-3.c: Likewise.
	* testsuite/libgomp.c/usm-4.c: Likewise.

2023-02-16  Andrew Stubbs  <ams@codesourcery.com>

	* config/gcn/libgomp-gcn.h (TEAM_ARENA_START): Move to here.
	(TEAM_ARENA_FREE): Likewise.
	(TEAM_ARENA_END): Likewise.
	(GCN_LOWLAT_HEAP): New.
	* config/gcn/team.c (LITTLEENDIAN_CPU): New, and import hsa.h.
	(__gcn_lowlat_init): New prototype.
	(gomp_gcn_enter_kernel): Initialize the low-latency heap.
	* libgomp.h (TEAM_ARENA_START): Move to libgomp.h.
	(TEAM_ARENA_FREE): Likewise.
	(TEAM_ARENA_END): Likewise.
	* plugin/plugin-gcn.c (lowlat_size): New variable.
	(print_kernel_dispatch): Label the group_segment_size purpose.
	(init_environment_variables): Read GOMP_GCN_LOWLAT_POOL.
	(create_kernel_dispatch): Pass low-latency head allocation to kernel.
	(run_kernel): Use shadow; don't assume values.
	* testsuite/libgomp.c/allocators-7.c: Enable for amdgcn.

2023-02-16  Andrew Stubbs  <ams@codesourcery.com>

	* config/nvptx/allocator.c (BASIC_ALLOC_PREFIX): New define, and
	include basic-allocator.c.
	(__nvptx_lowlat_heap_root): Remove.
	(heapdesc): Remove.
	(nvptx_memspace_alloc): Move implementation to basic-allocator.c.
	(nvptx_memspace_calloc): Likewise.
	(nvptx_memspace_free): Likewise.
	(nvptx_memspace_realloc): Likewise.
	* config/nvptx/team.c (__nvptx_lowlat_heap_root): Remove.
	(gomp_nvptx_main): Call __nvptx_lowlat_init.
	* basic-allocator.c: New file.

2023-02-15  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.c-c++-common/target-present-1.c: Fix.
	* testsuite/libgomp.c-c++-common/target-present-2.c: Likewise.
	* testsuite/libgomp.c-c++-common/target-present-3.c: Likewise.
	* testsuite/libgomp.fortran/target-present-1.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-2.f90: Likewise.
	* testsuite/libgomp.fortran/target-present-3.f90: Likewise.

2023-02-01  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* target.c (gomp_to_device_kind_p): Add map kinds with 'present'
	modifier.
	(gomp_map_vars_existing): Use new GOMP_MAP_FORCE_P macro.
	(gomp_map_vars_internal): Emit runtime error if memory region not
	present.
	(gomp_update): Likewise.
	(gomp_target_rev): Likewise.
	* testsuite/libgomp.c-c++-common/target-present-1.c: New.
	* testsuite/libgomp.c-c++-common/target-present-2.c: New.
	* testsuite/libgomp.c-c++-common/target-present-3.c: New.
	* testsuite/libgomp.fortran/target-present-1.f90: New.
	* testsuite/libgomp.fortran/target-present-2.f90: New.
	* testsuite/libgomp.fortran/target-present-3.f90: New.

2023-02-09  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.fortran/allocate-5.f90: Paste.

	* testsuite/libgomp.c++/c++.exp (check_effective_target_c)
	(check_effective_target_c++): New.
	* testsuite/libgomp.c/c.exp (check_effective_target_c)
	(check_effective_target_c++): Likewise.
	* testsuite/libgomp.c-c++-common/uses_allocators-1.c: Paste.
	* testsuite/libgomp.c-c++-common/uses_allocators-2.c: Likewise.
	* testsuite/libgomp.c-c++-common/uses_allocators-3.c: Likewise.
	* testsuite/libgomp.fortran/uses_allocators-1.f90: Likewise.
	* testsuite/libgomp.fortran/uses_allocators-2.f90: Likewise.
	* testsuite/libgomp.fortran/uses_allocators-3.f90: Likewise.

	* testsuite/libgomp.c-c++-common/alloc-pinned-1.c: Paste.

2023-01-24  Thomas Schwinge  <thomas@codesourcery.com>

	* libgomp.texi (nvptx): Update for
	'nvptx, libgfortran: Switch out of "minimal" mode'.

2023-01-20  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.fortran/target-print-1.f90: Adjust.
	* testsuite/libgomp.fortran/target-print-1-nvptx.f90: Remove.
	* testsuite/libgomp.oacc-fortran/print-1.f90: Adjust.
	* testsuite/libgomp.oacc-fortran/print-1-nvptx.f90: Remove.
	* testsuite/libgomp.oacc-fortran/error_stop-2.f: Adjust.
	* testsuite/libgomp.oacc-fortran/stop-2.f: Likewise.

	* plugin/plugin-nvptx.c (nvptx_do_global_cdtors): New.
	(nvptx_close_device, GOMP_OFFLOAD_load_image)
	(GOMP_OFFLOAD_unload_image): Call it.

	* plugin/plugin-nvptx.c (nvptx_exec): Assert what we know about
	'blockDimX'.

	PR target/85463
	* config/nvptx/error.c (exit): Don't override.
	* testsuite/libgomp.oacc-fortran/error_stop-1.f: Update.
	* testsuite/libgomp.oacc-fortran/error_stop-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/error_stop-3.f: Likewise.
	* testsuite/libgomp.oacc-fortran/stop-1.f: Likewise.
	* testsuite/libgomp.oacc-fortran/stop-2.f: Likewise.
	* testsuite/libgomp.oacc-fortran/stop-3.f: Likewise.

2023-01-20  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/abort-3.c: Force
	'--param openacc-kernels=parloops'.

2023-01-13  Andrew Stubbs  <ams@codesourcery.com>

	* usm-allocator.c (ALIGN): Use 128-byte alignment.

2023-01-11  Andrew Stubbs  <ams@codesourcery.com>

	* plugin/plugin-gcn.c: Include sys/mman.h and unistd.h.
	(usm_heap_create): New function.
	(struct usm_splay_tree_key_s): Delete function.
	(usm_splay_compare): Delete function.
	(splay_tree_prefix): Delete define.
	(GOMP_OFFLOAD_usm_alloc): Use new allocator.
	(GOMP_OFFLOAD_usm_free): Likewise.
	(GOMP_OFFLOAD_is_usm_ptr): Likewise.
	(gomp_fatal): Delete macro.
	(splay_tree_c): Delete.
	* usm-allocator.c: New file.

2022-12-16  Andrew Stubbs  <ams@codesourcery.com>

	* libgomp.h (OFFSET_USM): New macro.
	* target.c (gomp_map_pointer): Handle USM mappings.
	(gomp_map_val): Handle OFFSET_USM.
	(gomp_map_vars_internal): Move USM check earlier, and use OFFSET_USM.
	Add OFFSET_USM check to the second mapping pass.
	* testsuite/libgomp.fortran/usm-1.f90: New test.
	* testsuite/libgomp.fortran/usm-2.f90: New test.

2022-12-13  Marcel Vollweiler  <marcel@codesourcery.com>

	* target.c (omp_target_is_accessible): Handle unified shared memory.
	* testsuite/libgomp.c-c++-common/target-is-accessible-1.c: Updated.
	* testsuite/libgomp.fortran/target-is-accessible-1.f90: Updated.
	* testsuite/libgomp.c-c++-common/target-is-accessible-2.c: New test.
	* testsuite/libgomp.fortran/target-is-accessible-2.f90: New test.

2022-12-06  Paul-Antoine Arras <pa@codesourcery.com>

	* config/gcn/selector.c (GOMP_evaluate_current_device): Recognise 'amdgcn'
	as arch, and '-march' values (as well as 'gfx803') as isa traits.
	* testsuite/libgomp.c-c++-common/metadirective-6.c: New test.

2022-11-02  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-directive.f90:
	Adjust.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-runtime.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1.f90:
	New.

	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-directive.f90:
	Adjust.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-runtime.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90:
	Likewise.

	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-directive.f90:
	XFAIL some OpenACC 'kernels' confusion.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-runtime.f90:
	Likewise.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90:
	Likewise.

	Backported from master:
	2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>

	PR libgomp/106643
	PR fortran/96668
	* oacc-mem.c (goacc_enter_data_internal): Support
	OpenACC 'declare create' with Fortran allocatable arrays, part II.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-directive.f90:
	Adjust.
	* testsuite/libgomp.oacc-fortran/pr106643-1.f90: New.

	Backported from master:
	2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>

	PR libgomp/106643
	* oacc-mem.c (goacc_enter_data_internal): Support
	OpenACC 'declare create' with Fortran allocatable arrays, part I.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-directive.f90:
	New.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-directive.f90:
	New.

	Backported from master:
	2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-allocatable-array_descriptor-1-runtime.f90:
	New.

	Backported from master:
	2022-11-02  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-allocatable-1-runtime.f90:
	New.

	Backported from master:
	2022-11-02  Cesar Philippidis  <cesar@codesourcery.com>
		    Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90: New.

2022-11-02  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/target-enter-data-3a.f90: New test.

2022-11-02  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/target-13.f90: Update test.

2022-10-25  Abid Qadeer  <abidh@codesourcery.com>

	* testsuite/libgomp.c++/usm-2.C: New test.

2022-10-20  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.c-c++-common/requires-4.c: dg-xfail-run-if on
	nvptx and gcn.

2022-06-20  Andrew Stubbs  <ams@codesourcery.com>

	* plugin/plugin-gcn.c (GOMP_OFFLOAD_get_num_devices): Allow
	GOMP_REQUIRES_UNIFIED_ADDRESS and GOMP_REQUIRES_UNIFIED_SHARED_MEMORY.
	(struct usm_splay_tree_key_s): New.
	(usm_splay_compare): New.
	(splay_tree_prefix): New.
	(GOMP_OFFLOAD_usm_alloc): New.
	(GOMP_OFFLOAD_usm_free): New.
	(GOMP_OFFLOAD_is_usm_ptr): New.
	(GOMP_OFFLOAD_supported_features): Move into the OpenMP API fold.
	Add GOMP_REQUIRES_UNIFIED_ADDRESS and
	GOMP_REQUIRES_UNIFIED_SHARED_MEMORY.
	(gomp_fatal): New.
	(splay_tree_c): New.
	* testsuite/lib/libgomp.exp (check_effective_target_omp_usm): New.
	* testsuite/libgomp.c++/usm-1.C: Use dg-require-effective-target.
	* testsuite/libgomp.c/usm-1.c: Likewise.
	* testsuite/libgomp.c/usm-2.c: Likewise.
	* testsuite/libgomp.c/usm-3.c: Likewise.
	* testsuite/libgomp.c/usm-4.c: Likewise.
	* testsuite/libgomp.c/usm-5.c: Likewise.
	* testsuite/libgomp.c/usm-6.c: Likewise.

2022-03-29  Andrew Stubbs  <ams@codesourcery.com>

	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_supported_features): Allow
	GOMP_REQUIRES_UNIFIED_ADDRESS and GOMP_REQUIRES_UNIFIED_SHARED_MEMORY.

2022-03-11  Andrew Stubbs  <ams@codesourcery.com>

	* config/linux/allocator.c (always_pinned_mode): New variable.
	(GOMP_enable_pinned_mode): New function.
	(linux_memspace_alloc): Disable pinning when always_pinned_mode set.
	(linux_memspace_calloc): Likewise.
	(linux_memspace_free): Likewise.
	(linux_memspace_realloc): Likewise.
	* libgomp.map: Add GOMP_enable_pinned_mode.
	* testsuite/libgomp.c/alloc-pinned-7.c: New test.

2022-03-11  Hafiz Abid Qadeer  <abidh@codesourcery.com>

	* testsuite/libgomp.c/usm-6.c: New test.
	* testsuite/libgomp.c++/usm-1.C: Likewise.

2022-03-11  Andrew Stubbs  <ams@codesourcery.com>

	* allocator.c (omp_max_predefined_alloc): Update.
	(omp_aligned_alloc): Don't fallback ompx_host_mem_alloc.
	(omp_aligned_calloc): Likewise.
	(omp_realloc): Likewise.
	* config/linux/allocator.c (linux_memspace_alloc): Handle USM.
	(linux_memspace_calloc): Handle USM.
	(linux_memspace_free): Handle USM.
	(linux_memspace_realloc): Handle USM.
	* config/nvptx/allocator.c (nvptx_memspace_alloc): Reject
	ompx_host_mem_alloc.
	(nvptx_memspace_calloc): Likewise.
	(nvptx_memspace_realloc): Likewise.
	* libgomp-plugin.h (GOMP_OFFLOAD_usm_alloc): New prototype.
	(GOMP_OFFLOAD_usm_free): New prototype.
	(GOMP_OFFLOAD_is_usm_ptr): New prototype.
	* libgomp.h (gomp_usm_alloc): New prototype.
	(gomp_usm_free): New prototype.
	(gomp_is_usm_ptr): New prototype.
	(struct gomp_device_descr): Add USM functions.
	* omp.h.in (omp_memspace_handle_t): Add ompx_unified_shared_mem_space
	and ompx_host_mem_space.
	(omp_allocator_handle_t): Add ompx_unified_shared_mem_alloc and
	ompx_host_mem_alloc.
	* omp_lib.f90.in: Likewise.
	* plugin/plugin-nvptx.c (nvptx_alloc): Add "usm" parameter.
	Call cuMemAllocManaged as appropriate.
	(GOMP_OFFLOAD_get_num_devices): Allow GOMP_REQUIRES_UNIFIED_ADDRESS
	and GOMP_REQUIRES_UNIFIED_SHARED_MEMORY.
	(GOMP_OFFLOAD_alloc): Move internals to ...
	(GOMP_OFFLOAD_alloc_1): ... this, and add usm parameter.
	(GOMP_OFFLOAD_usm_alloc): New function.
	(GOMP_OFFLOAD_usm_free): New function.
	(GOMP_OFFLOAD_is_usm_ptr): New function.
	* target.c (gomp_map_vars_internal): Add USM support.
	(gomp_usm_alloc): New function.
	(gomp_usm_free): New function.
	(gomp_load_plugin_for_device): New function.
	* testsuite/libgomp.c/usm-1.c: New test.
	* testsuite/libgomp.c/usm-2.c: New test.
	* testsuite/libgomp.c/usm-3.c: New test.
	* testsuite/libgomp.c/usm-4.c: New test.
	* testsuite/libgomp.c/usm-5.c: New test.

2022-03-11  Andrew Stubbs  <ams@codesourcery.com>

	* allocator.c (MEMSPACE_VALIDATE): New macro.
	(omp_aligned_alloc): Use MEMSPACE_VALIDATE.
	(omp_aligned_calloc): Likewise.
	(omp_realloc): Likewise.
	* config/nvptx/allocator.c (nvptx_memspace_validate): New function.
	(MEMSPACE_VALIDATE): New macro.
	* testsuite/libgomp.c/allocators-4.c (main): Add access trait.
	* testsuite/libgomp.c/allocators-6.c (main): Add access trait.
	* testsuite/libgomp.c/allocators-7.c: New test.

2022-03-11  Andrew Stubbs  <ams@codesourcery.com>

	* allocator.c (omp_max_predefined_alloc): Update.
	(omp_aligned_alloc): Support ompx_pinned_mem_alloc.
	(omp_free): Likewise.
	(omp_aligned_calloc): Likewise.
	(omp_realloc): Likewise.
	* omp.h.in (omp_allocator_handle_t): Add ompx_pinned_mem_alloc.
	* omp_lib.f90.in: Add ompx_pinned_mem_alloc.
	* testsuite/libgomp.c/alloc-pinned-5.c: New test.
	* testsuite/libgomp.c/alloc-pinned-6.c: New test.
	* testsuite/libgomp.fortran/alloc-pinned-1.f90: New test.

2022-03-11  Andrew Stubbs  <ams@codesourcery.com>

	* allocator.c (MEMSPACE_ALLOC): Add PIN.
	(MEMSPACE_CALLOC): Add PIN.
	(MEMSPACE_REALLOC): Add PIN.
	(MEMSPACE_FREE): Add PIN.
	(xmlock): New function.
	(omp_init_allocator): Don't disallow the pinned trait.
	(omp_aligned_alloc): Add pinning to all MEMSPACE_* calls.
	(omp_aligned_calloc): Likewise.
	(omp_realloc): Likewise.
	(omp_free): Likewise.
	* config/linux/allocator.c: New file.
	* config/nvptx/allocator.c (MEMSPACE_ALLOC): Add PIN.
	(MEMSPACE_CALLOC): Add PIN.
	(MEMSPACE_REALLOC): Add PIN.
	(MEMSPACE_FREE): Add PIN.
	* testsuite/libgomp.c/alloc-pinned-1.c: New test.
	* testsuite/libgomp.c/alloc-pinned-2.c: New test.
	* testsuite/libgomp.c/alloc-pinned-3.c: New test.
	* testsuite/libgomp.c/alloc-pinned-4.c: New test.

2022-03-09  Hafiz Abid Qadeer  <abidh@codesourcery.com>

	* testsuite/libgomp.fortran/allocate-2.f90: New test.

2022-03-01  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.fortran/allocatable-comp.f90: New test.
	* testsuite/libgomp.fortran/map-alloc-comp-3.f90: New test.
	* testsuite/libgomp.fortran/map-alloc-comp-4.f90: New test.
	* testsuite/libgomp.fortran/map-alloc-comp-5.f90: New test.
	* testsuite/libgomp.fortran/map-alloc-comp-6.f90: New test.
	* testsuite/libgomp.fortran/map-alloc-comp-7.f90: New test.

2022-02-24  Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.c-c++-common/ptr-attach-2.c: New test.

2022-01-28  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* testsuite/libgomp.c-c++-common/metadirective-2.c (main): Add
	expected warning.
	* testsuite/libgomp.fortran/metadirective-2.f90 (test): Likewise.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* Makefile.am (libgomp_la_SOURCES): Add selector.c.
	* Makefile.am: Regenerate.
	* config/gcn/selector.c: New.
	* config/linux/selector.c: New.
	* config/linux/x86/selector.c: New.
	* config/nvptx/selector.c: New.
	* libgomp-plugin.h (GOMP_OFFLOAD_evaluate_device): New.
	* libgomp.h (struct gomp_device_descr): Add evaluate_device_func field.
	* libgomp.map (GOMP_5.1): Add GOMP_evaluate_target_device.
	* libgomp_g.h (GOMP_evaluate_current_device): New.
	(GOMP_evaluate_target_device): New.
	* oacc-host.c (host_evaluate_device): New.
	(host_openacc_exec): Initialize evaluate_device_func field to
	host_evaluate_device.
	* plugin/plugin-gcn.c (GOMP_OFFLOAD_evaluate_device): New.
	* plugin/plugin-nvptx.c (struct ptx_device): Add compute_major and
	compute_minor fields.
	(nvptx_open_device): Read compute capability information from device.
	(CHECK_ISA): New macro.
	(GOMP_OFFLOAD_evaluate_device): New.
	* selector.c: New.
	* target.c (GOMP_evaluate_target_device): New.
	(gomp_load_plugin_for_device): Load evaulate_device plugin function.
	* testsuite/libgomp.c-c++-common/metadirective-5.c: New testcase.
	* testsuite/libgomp.fortran/metadirective-5.f90: New testcase.

2022-01-25  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* testsuite/libgomp.c-c++-common/metadirective-1.c: New.
	* testsuite/libgomp.c-c++-common/metadirective-2.c: New.
	* testsuite/libgomp.c-c++-common/metadirective-3.c: New.
	* testsuite/libgomp.c-c++-common/metadirective-4.c: New.
	* testsuite/libgomp.fortran/metadirective-1.f90: New.
	* testsuite/libgomp.fortran/metadirective-2.f90: New.
	* testsuite/libgomp.fortran/metadirective-3.f90: New.
	* testsuite/libgomp.fortran/metadirective-4.f90: New.

2021-12-03  Andrew Stubbs  <ams@codesourcery.com>

	* allocator.c (MEMSPACE_ALLOC): New macro.
	(MEMSPACE_CALLOC): New macro.
	(MEMSPACE_REALLOC): New macro.
	(MEMSPACE_FREE): New macro.
	(dynamic_smem_size): New constants.
	(omp_alloc): Use MEMSPACE_ALLOC.
	Implement fall-backs for predefined allocators.
	(omp_free): Use MEMSPACE_FREE.
	(omp_calloc): Use MEMSPACE_CALLOC.
	Implement fall-backs for predefined allocators.
	(omp_realloc): Use MEMSPACE_REALLOC and MEMSPACE_ALLOC..
	Implement fall-backs for predefined allocators.
	* config/nvptx/team.c (__nvptx_lowlat_heap_root): New variable.
	(__nvptx_lowlat_pool): New asm variable.
	(gomp_nvptx_main): Initialize the low-latency heap.
	* plugin/plugin-nvptx.c (lowlat_pool_size): New variable.
	(GOMP_OFFLOAD_init_device): Read the GOMP_NVPTX_LOWLAT_POOL envvar.
	(GOMP_OFFLOAD_run): Apply lowlat_pool_size.
	* config/nvptx/allocator.c: New file.
	* testsuite/libgomp.c/allocators-1.c: New test.
	* testsuite/libgomp.c/allocators-2.c: New test.
	* testsuite/libgomp.c/allocators-3.c: New test.
	* testsuite/libgomp.c/allocators-4.c: New test.
	* testsuite/libgomp.c/allocators-5.c: New test.
	* testsuite/libgomp.c/allocators-6.c: New test.

2022-06-21  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* plugin/cuda-lib.def (cuMemAllocManaged): Add new call.
	(cuPointerGetAttribute): Likewise.

2021-11-16  Frederik Harwath  <frederik@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr84955-1.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85381-2.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85381-3.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85381-4.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85486-2.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85486-3.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/pr85486.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-1.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-2.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-3.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-4.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-5.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-6.c: Adjust.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-7.c: Adjust.
	* testsuite/libgomp.oacc-fortran/kernels-acc-loop-reduction-2.f90: Adjust.
	* testsuite/libgomp.oacc-fortran/pr94358-1.f90: Adjust.
	* testsuite/libgomp.oacc-fortran/parallel-loop-auto-reduction-2.f90: Removed.

2021-11-16  Andrew Stubbs  <ams@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/runtime-alias-check-1.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/runtime-alias-check-2.c: New test.

2021-11-16  Andrew Stubbs  <ams@codesourcery.com>
	    Thomas Schwinge <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-decompose-1.c:
	Expect optimization messages.
	* testsuite/libgomp.oacc-fortran/pr94358-1.f90: Likewise.

2021-11-16  Frederik Harwath <frederik@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: Adjust
	expectations.

2021-11-16  Frederik Harwath <frederik@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/parallel-loop-auto-reduction-2.f90:
	New test.

2021-11-16  Frederik Harwath <frederik@codesourcery.com>
	    Thomas Schwinge <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Adjust.
	* testsuite/libgomp.oacc-fortran/kernels-independent.f90: Adjust.
	* testsuite/libgomp.oacc-fortran/kernels-loop-1.f90: Adjust.
	* testsuite/libgomp.oacc-fortran/pr94358-1.f90: Adjust.

2021-11-16  Frederik Harwath <frederik@codesourcery.com>
	    Thomas Schwinge <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/pr85486-2.c: Adjust
	expected output to pass name changes due to the pass
	reordering and cloning.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-4.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-5.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-6.c: Likewise
	* testsuite/libgomp.oacc-c-c++-common/vector-length-128-7.c: Likewise.

2021-10-21  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/declare-allocatable-1.f90: Compile
	with -Wopenacc-parallelism.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-3.f90: Likewise.

2021-08-03  Andrew Stubbs  <ams@codesourcery.com>

	* config/gcn/bar.h (gomp_barrier_init): Limit thread count to the
	actual physical number.
	* config/gcn/team.c (gomp_team_start): Don't attempt to set up
	threads that do not exist.

2021-03-01  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* testsuite/libgomp.c-c++-common/collapse-4.c: New.
	* testsuite/libgomp.fortran/collapse5.f90: New.

2021-02-23  Andrew Stubbs  <ams@codesourcery.com>

	* plugin/plugin-nvptx.c (GOMP_OFFLOAD_alloc): Remove early call to
	nvptx_stacks_free.

2021-01-13  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-gwv-1.c: Adjust for loop
	lowering changes.
	* testsuite/libgomp.oacc-c-c++-common/loop-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/loop-red-wv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-gwv-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/routine-wv-1.c: Likewise.

2020-07-16  Tobias Burnus  <tobias@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/firstprivate-int.f90: Use
	highest available integer kind instead of assuming that kind=16 exists.

2020-03-24  Kwok Cheung Yeung  <kcy@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/data-firstprivate-1.c: XFAIL
	execution test.

2019-09-17  Julian Brown  <julian@codesourcery.com>
	    Kwok Cheung Yeung  <kcy@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/deep-copy-10.c (main): Fix
	async-safety issue. Increase number of iterations.

2018-10-04  Cesar Philippidis  <cesar@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	* libgomp.h (gomp_acc_declare_allocate): Remove prototype.
	* oacc-mem.c (gomp_acc_declare_allocate): New function.
	* oacc-parallel.c (goacc_enter_data_internal): Handle
	GOMP_MAP_DECLARE_ALLOCATE.  Pass new pointer argument to
	gomp_acc_declare_allocate.
	(goacc_exit_data_internal): Handle GOMP_MAP_DECLARE_DEALLOCATE.
	Unlock device mutex around gomp_acc_declare_allocate call.  Pass
	new pointer argument.  Handle group pointer mapping for deallocate.
	(find_group_last): Handle GOMP_MAP_DECLARE_ALLOCATE and
	GOMP_MAP_DECLARE_DEALLOCATE groupings.
	* testsuite/libgomp.oacc-fortran/allocatable-scalar.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/declare-allocatable-4.f90: New test.

2019-09-05  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/lib-13.f90: End data region after
	wait API calls.

2019-08-08  Julian Brown  <julian@codesourcery.com>

	* plugin/plugin-gcn.c (GOMP_OFFLOAD_openacc_exec_params,
	GOMP_OFFLOAD_openacc_async_exec_params): New functions.

2019-07-31  Julian Brown  <julian@codesourcery.com>

	* config/nvptx/gomp_print.c (gomp_print_string, gomp_print_integer,
	gomp_print_double): New.

2019-01-23  Thomas Schwinge <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: Update.

2018-12-20  Maciej W. Rozycki  <macro@codesourcery.com>

	* oacc-init.c (get_property_any): Add profiling code.

2017-02-28  Thomas Schwinge  <thomas@codesourcery.com>

	* Makefile.am (libgomp_la_SOURCES): Add
	oacc-profiling-acc_register_library.c.
	* Makefile.in: Regenerate.
	* libgomp.texi: Remove paragraph about acc_register_library.
	* oacc-parallel.c (GOACC_parallel_keyed_internal): Set device_api for
	profiling.
	* oacc-profiling-acc_register_library.c: New file.
	* oacc-profiling.c (goacc_profiling_initialize): Call
	acc_register_library.  Avoid duplicate registration.
	(acc_register_library): Remove.
	* config/nvptx/oacc-profiling-acc_register_library.c:
	New empty file.
	* config/nvptx/oacc-profiling.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-dispatch-1.c: Remove
	call to acc_register_library.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-init-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-kernels-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-parallel-1.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-valid_bytes-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/acc_prof-version-1.c: Likewise.

2019-05-16  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-for-index-reuse-1.c: New
	test.

2019-01-09  Julian Brown  <julian@codesourcery.com>

	* libgomp.texi: Update mentions of OpenACC version to 2.6.  Update
	section numbers to match version 2.6 of the spec.

2019-01-30  Thomas Schwinge  <thomas@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-2.c:
	Add "--param=openacc-kernels=parloops".
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-alias-ipa-pta.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-empty.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-2.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-3.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-3.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-4.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-5.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq-6.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-and-seq.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-collapse.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit-2.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-enter-exit.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data-update.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-data.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-g.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-mod-not-zero.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-n.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop-nest.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-loop.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-parallel-loop-data-enter-exit.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-reduction-1.c:
	Likewise.
	* testsuite/libgomp.oacc-c-c++-common/kernels-reduction.c:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-2.f95: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-2.f95:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit-2.f95:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-enter-exit.f95:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data-update.f95:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop-data.f95: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-loop.f95: Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-parallel-loop-data-enter-exit.f95:
	Likewise.
	* testsuite/libgomp.oacc-fortran/kernels-reduction-1.f90:
	Likewise.

2019-03-19  Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/lib-93.c: Adjust target selector.

2018-09-05  Cesar Philippidis  <cesar@codesourcery.com>
	    Chung-Lin Tang  <cltang@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/privatize-reduction-1.c: New
	test.
	* testsuite/libgomp.oacc-c-c++-common/privatize-reduction-2.c: New
	test.

2018-09-20  Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-auto-1.c: Adjust test case
	to conform to the new behavior of the auto clause in OpenACC 2.5.

2018-12-22  Cesar Philippidis  <cesar@codesourcery.com>
            Julian Brown  <julian@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel_keyed): Handle
	GOMP_MAP_FIRSTPRIVATE_INT host addresses.
	* plugin/plugin-nvptx.c (nvptx_exec): Handle
	GOMP_MAP_FIRSTPRIVATE_INT host addresses.
	* testsuite/libgomp.oacc-c++/firstprivate-int.C: New test.
	* testsuite/libgomp.oacc-c-c++-common/firstprivate-int.c: New
	test.
	* testsuite/libgomp.oacc-fortran/firstprivate-int.f90: New test.

2018-08-28  Julian Brown  <julian@codesourcery.com>
            Cesar Philippidis  <cesar@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/pr70828.c: New test.
	* testsuite/libgomp.oacc-fortran/implicit_copy.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828-2.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828-3.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828-4.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828-5.f90: New test.
	* testsuite/libgomp.oacc-fortran/pr70828-6.f90: New test.

2018-10-05  Nathan Sidwell  <nathan@acm.org>
	    Tom de Vries  <tdevries@suse.de>
	    Thomas Schwinge  <thomas@codesourcery.com>
	    Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/loop-default-compile.c: New.
	* testsuite/libgomp.oacc-c-c++-common/loop-warn-1.c: New.
	* testsuite/libgomp.oacc-c-c++-common/parallel-dims.c: Likewise.

2018-10-22  James Norris  <jnorris@codesourcery.com>
	    Cesar Philippidis  <cesar@codesourcery.com>
	    Tom de Vries  <tom@codesourcery.com>

	* testsuite/libgomp.oacc-fortran/data-3.f90: Update parallel
	regions to denote variables copyied in via acc enter data as
	present.
	* testsuite/libgomp.oacc-c-c++-common/subr.h: Reimplement.
	* testsuite/libgomp.oacc-c-c++-common/subr.ptx: Regenerated PTX.
	* testsuite/libgomp.oacc-c-c++-common/timer.h: Removed.
	* testsuite/libgomp.oacc-c-c++-common/lib-69.c: Change async checks.
	* testsuite/libgomp.oacc-c-c++-common/lib-70.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-72.c: Rework kernel i/f and
	change async checks.
	* testsuite/libgomp.oacc-c-c++-common/lib-73.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-74.c: Rework kernel i/f and
	timing checks.
	* testsuite/libgomp.oacc-c-c++-common/lib-75.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-76.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-78.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-79.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-81.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-82.c: Likewise.
	* testsuite/libgomp.oacc-c-c++-common/lib-93.c: New test.

2018-12-13  Cesar Philippidis  <cesar@codesourcery.com>
	    Nathan Sidwell  <nathan@acm.org>
	    Julian Brown  <julian@codesourcery.com>

	* testsuite/libgomp.oacc-c-c++-common/par-reduction-3.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/reduction-cplx-flt-2.c: New test.
	* testsuite/libgomp.oacc-fortran/reduction-9.f90: New test.

2018-06-29  Cesar Philippidis  <cesar@codesourcery.com>
	    James Norris  <jnorris@codesourcery.com>

	* oacc-parallel.c (GOACC_parallel_keyed): Handle Fortran deviceptr
	clause.
	(GOACC_data_start): Likewise.
	* testsuite/libgomp.oacc-fortran/deviceptr-1.f90: New test.

2019-02-12  Julian Brown <julian@codesourcery.com>

	* oacc-cuda.c (acc_set_cuda_stream): Return 0 on error/invalid
	arguments.
	* testsuite/libgomp.oacc-c-c++-common/lib-84.c: Handle unnumbered
	async stream being an alias for a numbered async stream.
	* testsuite/libgomp.oacc-c-c++-common/lib-85.c: Likewise.

2020-04-19  Chung-Lin Tang  <cltang@codesourcery.com>

	PR other/76739

	* libgomp_g.h (GOACC_data_start): Add variadic '...' to declaration.
	* libgomp.h (gomp_map_vars_openacc): New function declaration.
	* oacc-int.h (struct goacc_ncarray_dim): New struct declaration.
	(struct goacc_ncarray_descr_type): Likewise.
	(struct goacc_ncarray): Likewise.
	(struct goacc_ncarray_info): Likewise.
	(goacc_noncontig_array_create_ptrblock): New function declaration.
	* oacc-parallel.c (goacc_noncontig_array_count_rows): New function.
	(goacc_noncontig_array_compute_sizes): Likewise.
	(goacc_noncontig_array_fill_rows_1): Likewise.
	(goacc_noncontig_array_fill_rows): Likewise.
	(goacc_process_noncontiguous_arrays): Likewise.
	(goacc_noncontig_array_create_ptrblock): Likewise.
	(GOACC_parallel_keyed): Use goacc_process_noncontiguous_arrays to
	handle non-contiguous array descriptors at end of varargs, adjust
	to use gomp_map_vars_openacc.
	(GOACC_data_start): Likewise. Adjust function type to accept varargs.
	* target.c (gomp_map_vars_internal): Add struct goacc_ncarray_info *
	nca_info parameter, add handling code for non-contiguous arrays.
	(gomp_map_vars_openacc): Add new function for specialization of
	gomp_map_vars_internal for OpenACC structured region usage.
	* testsuite/libgomp.oacc-c-c++-common/noncontig_array-1.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/noncontig_array-2.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/noncontig_array-3.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/noncontig_array-4.c: New test.
	* testsuite/libgomp.oacc-c-c++-common/noncontig_array-utils.h: Support
	header for new tests.

