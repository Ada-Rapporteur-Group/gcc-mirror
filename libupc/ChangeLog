2011-03-20  Gary Funck  <gary@intrepid.com>

	Move UPC start files, end files, and linker specs.
	into libupc.  This reduces the impact on common GCC
	configuration files, and ensures that these UPC-specific
	components are only built when the UPC language dialect is built.

	* upc-crtstuff.c: New file. Moved from gcc/upc/upc-crtstuff.c.

	* config/darwin/upc-crt-config.h: New file. Move defines for
	  UPC-related section begins/ends from gcc/config/darwin.h to here.

	* config/default/upc-crt-config.h: New file. Move defines for
	  UPC-related section begins/ends from gcc/config/upc-conf.h to here.

	* config/default/upc-crtstuff.mak: New file. Default makefile fragment for
	  building the upc-crtbegin and upc-crtend object files.
	  This logic was moved from libgcc/Makefile.in to here.

	* config.h.in: Regenerate with autoheader.  Rename HAVE_GUM_DEBUG
	  to GUPCR_HAVE_GUM_DEBUG.  Add define for HAVE_UPC_LINK_SCRIPT.

	* configure.ac, configure: Include new configure.tgt script
	  towards the end of the logic that configures the smp runtime.
	  Define substitutions for 'config_path', 'XCFLAGS',
	  'XLDFLAGS', 'link_upc_spec', 'upc_crtbegin_spec',
	  'upc_crtend_spec', 'upc_crtstuff_objs'. Add LIBUPC_CRTSTUFF
	  automake conditional.  Fix copyright date in AM_TOP() comment.
	  Define upc-crtbegin.spec libupc.spec upc-crtend.spec as
	  autoconf generated config. files.  Regenerate 'configure'.

	* configure.tgt: New. Target-specific configuration logic.
	  Defines 'config_path', 'upc_crtstuff', 'upc_crtbegin_spec',
	  'upc_crtend_spec', 'upc_crtstuff_objs' variables; these are used
	  to control the build of the UPC-related begin/end files
	  and associated target-specific compiler specification files.

	* libupc.spec.in, upc-crtbegin.spec.in, upc-crtend.spec.in: New.
	  Define target-specific compiler specifications for linking
	  and for inclusion of UPC-related start/end object files
	  when a UPC program is linked.  These files are used
	  to create resulting .spec files that are included via
	  GCC's link spec. when a UPC program is linked.

	* Makefile.am: Add rules to build and install upc-crtbegin.spec,
	  libupc.spec, and upc-crtend.spec from there .in files.
	  Add rules to build the UPC-specific start/end files if the
	  automake conditional LIBUPC_CRTSTUFF is enabled.
	  Fix references to make variables $(UPC_COLL_PREFIX_REDUCE_UPC)
	  and $(UPC_COLL_REDUCE_UPC) in MAINTAINER_MODE block.

        * Makefile.in, testsuite/Makefile.in: Regenerate with automake.
	  
	* smp/Make-defs, smp/Make-deps, smp/Make-rules: Remove.
	  These Makefile fragments have not been used since libupc
	  was re-worked to use automake (when the gupc branch
	  was first checked in).

	* smp/upc_config.h: Move the defintions of GUPCR_INIT_ARRAY_START
	  and GUPCR_INIT_ARRAY_END from smp/upc_main.c to here.

	* smp/upc_main.c: Rename HAVE_GUM_DEBUG to GUPCR_HAVE_GUM_DEBUG.
	  Move the defintions of GUPCR_INIT_ARRAY_START and
	  GUPCR_INIT_ARRAY_END to smp/upc_config.h.

2011-02-22  Gary Funck  <gary@intrepid.com>

	* include/gcc-upc.h (barrier, barrier_notify, barrier_wait,
	  forall, fence): Remove #define's that renamed these deprecated
	UPC keywords into their equivalents in the current UPC
	language specification.

2011-02-08  Gary Funck  <gary@intrepid.com>

	* acinclude.m4, configure.ac, include/gasp.h,
	  include/gasp_upc.h, include/gcc-upc.h, include/gcc-upc-lib.in,
	  include/pupc.h, include/upc_collective.h, include/upc.h,
	  include/upc_relaxed.h, include/upc_strict.h, libupc.texi,
	  smp/upc_access.c, smp/upc_accessg.c, smp/upc_access.h,
	  smp/upc_addr.c, smp/upc_affinity.c, smp/upc_affinity.h,
	  smp/upc_affinity_stub.c, smp/upc_allocg.upc,
	  smp/upc_alloc.upc, smp/upc_barrier.c, smp/upc_config.h,
	  smp/upc_debug.h, smp/upc_defs.h, smp/upc_gasp.c, smp/upc_gum.c,
	  smp/upc_libg.c, smp/upc_lib.h, smp/upc_lock.c, smp/upc_main.c,
	  smp/upc_mem.c, smp/upc_mem.h, smp/upc_numa.c, smp/upc_numa.h,
	  smp/upc_numa_stub.c, smp/upc_pgm_info.c, smp/upc_pts.h,
	  smp/upc_pupc.c, smp/upc_pupc.h, smp/upc_sup.h, smp/upc_sync.h,
	  smp/upc_sysdep.c, smp/upc_sysdep.h, smp/upc_vm.c:
	Update copyright notices.

2010-10-18  Gary Funck  <gary@intrepid.com>

	* smp/upc_alloc.upc: upc_alloc.upc: remove pointer arithmetic on
	  (shared void *) types.

	  Now that GCC/UPC prohibits arithmetic on "(shared void *)" types,
	  re-work the logic in upc_alloc.upc to avoid operating directly on
	  "(shared void *)" type.

2010-10-16  Gary Funck  <gary@intrepid.com>

	* smp/upc_main.c: Fix comment format.

2010-10-16  Gary Funck  <gary@intrepid.com>

	* smp/: upc_access.c, upc_access.h, upc_accessg.c: Implement fixes
	  for SGI/IRIX/MIPS port.

	  The gcc/Makefile.in rules for install-plugin had to be re-written to
	  break up a long list of header files that exceeded the command line
	  limitation imposed by Irix.

	  Access functions for TFmode types had to be implemented.
	  Apparently, this is the mode used for the SGI/MIPS port to represent
	  "long float".

	  See also: gcc/Makefile.in libupc/smp/upc_access.c
	  libupc/smp/upc_access.h libupc/smp/upc_accessg.c

2010-10-16  Nenad Vukicevic  <nenad@intrepid.com>

	* include/gcc-upc.h, smp/upc_main.c: Fix rand() implementation for
	  pthreads run-time.

	  For the pthreads implementation we keep a per-thread random seed number.
	  This way, calls to rand() function will return the same value on
	  each thread.

	  rand() and srand() functions are redefined as __upc_random and
	  __upc_srandom.

2010-10-10  Gary Funck  <gary@intrepid.com>

	* include/upc_collective.h, smp/gen-upc-coll-reduce.pl,
	  smp/upc_coll_prefix_reduce.upc, smp/upc_coll_reduce.upc:
	  Implement collectives on "long double" objects.

	  See also: libupc/include/upc_collective.h
	  libupc/smp/gen-upc-coll-reduce.pl
	  libupc/smp/upc_coll_prefix_reduce.upc libupc/smp/upc_coll_reduce.upc

2010-10-09  Gary Funck  <gary@intrepid.com>

	* smp/: upc_access.c, upc_access.h, upc_accessg.c: Implement shared
	  access to "long float" data type.

	  See also: libupc/smp/upc_access.c libupc/smp/upc_access.h
	  libupc/smp/upc_accessg.c

2010-09-24  Gary Funck  <gary@intrepid.com>

	* smp/upc_main.c: Fix bug: Failure to initialize per-thread
	  static variables that refer to shared addresses.

	  The shared data initialization routine created by the compiler needs
	  to be called on each threead, because in some cases it will
	  initialize per thread data.  At the moment, the compiler does not
	  generate code that will differentiate between initialization code
	  that should only occur on thread 0, so some additional work may get
	  done.  In the future, that aspect of initialization will be
	  corrected.

2010-09-22  Gary Funck  <gary@intrepid.com>

	* include/gcc-upc-lib.in, include/upc.h, smp/upc_main.c:
	  Fix bug: Nested upc_forall() semantics are not implemented

	  The checkforall test in the Berkeley harness test suite indicated
	  that GCC/UPC was not properly implementing nested upc_forall
	  semantics.  Nested upc_forall statements (both statically or
	  dynamically nested) must implement their affinity clause as if it
	  were "continue"; thus all steps in the loop must execute without
	  regard for affinity.  To implement these semantics a global depth
	  counter, __upc_forall_depth, is maintained by the generated code
	  that implements upc_forall.

	  See also: gcc/c-parser.c gcc/c-tree.h gcc/stub-upc.c
	  gcc/upc/upc-act.c gcc/upc/upc-act.h libupc/include/gcc-upc-lib.in
	  libupc/include/upc.h libupc/smp/upc_main.c

2010-09-18  Gary Funck  <gary@intrepid.com>

	* Makefile.in, config.h.in, configure, configure.ac, include/upc.h,
	  smp/Make-defs, smp/upc_accessg.c, smp/upc_allocg.upc,
	  smp/upc_defs.h, smp/upc_libg.c, smp/upc_main.c, smp/upc_sup.h:
	  Implement -fupc-debug switch.

2010-02-28  Gary Funck  <gary@intrepid.com>

	Initial implementation and checkin.

