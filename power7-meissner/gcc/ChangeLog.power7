2009-02-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* reload.c (subst_reloads): Change gcc_assert into a fatal_insn.

	* config/rs6000/vector.md (VEC_I): Reorder iterator.
	(VEC_L): Ditto.
	(VEC_C): New iterator field for vector comparisons.
	(VEC_base): New mode attribute that mapes the vector type to the
	base type.
	(all insns): Switch to use rs6000_vector_info to determine whether
	the insn is valid instead of using TARGET_VSX or TARGET_ALTIVEC.
	(vcond<mode>): Move here from altivec, and add VSX support.
	(vcondu<mode>): Ditto.
	(vector_eq<mode>): New expander for vector comparisons.
	(vector_gt<mode>): Ditto.
	(vector_ge<mode>): Ditto.
	(vector_gtu<mode>): Ditto.
	(vector_geu<mode>): Ditto.
	(vector_vsel<mode>): New expander for vector select.
	(vec_init<mode>): Move expander from altivec.md and generalize for
	VSX.
	(vec_set<mode>): Ditto.
	(vec_extract<mode>): Ditto.
	(vec_interleave_highv4sf): Ditto.
	(vec_interleave_lowv4sf): Ditto.
	(vec_interleave_highv2df): New expander for VSX.
	(vec_interleave_lowv2df): Ditto.

	* config/rs6000/contraints.md (toplevel): Add comment on the
	available constraint letters.
	("w" constraint): Delete, in favor of using "w" as a two letter
	constraint.
	("wd" constraint): New VSX constraint.
	("wf" constraint): Ditto.
	("wi" constraint): Ditto.
	("wl" constraint): Ditto.
	("ws" constraint): Ditto.
	("wa" constraint): Ditto.

	* config/rs6000/predicates.md (indexed_or_indirect_operand):
	Disable altivec support allowing AND of memory address if -mvsx.

	* config/rs6000/rs6000.opt (-mvsx-vector-move): New switches to
	allow finer control over whether VSX, Altivec, or the traditional
	instructions are used.
	(-mvsx-scalar-move): Ditto.
	(-mvsx-vector-float): Ditto.
	(-mvsx-vector-double): Ditto.
	(-mvsx-vector-logical): Ditto.
	(-mvsx-scalar-double): Ditto.

	* config/rs6000/rs6000.c (rs6000_vector_info): New global to hold
	various information about which vector instruction set to use, and
	the alignment of data.
	(rs6000_vsx_v4sf_regclass): New global to hold VSX register
	class.
	(rs6000_vsx_v2df_regclass): Ditto.
	(rs6000_vsx_df_regclass): Ditto.
	(rs6000_vsx_int_regclass): Ditto.
	(rs6000_vsx_logical_regclass): Ditto.
	(rs6000_vsx_any_regclass): Ditto.
	(rs6000_hard_regno_nregs_internal): Rewrite to fine tune
	VSX/Altivec register selection.
	(rs6000_hard_regno_mode_ok): Ditto.
	(rs6000_init_hard_regno_mode_ok): Set up the vector information
	globals based on the -mvsx-* switches.
	(rs6000_override_options): Add warnings for -mvsx and
	-mlittle-endian or -mavoid-indexed-addresses.
	(rs6000_builtin_vec_perm): Add V2DF/V2DI support.
	(rs6000_expand_vector_init): Add V2DF support.
	(rs6000_expand_vector_set): Ditto.
	(rs6000_expand_vector_extract): Ditto.
	(avoiding_indexed_address_p): Add VSX support.
	(rs6000_legitimize_address): Ditto.
	(rs6000_legitimize_reload_address): Ditto.
	(rs6000_legitimite_address): Ditto.
	(USE_ALTIVEC_FOR_ARG_P): Ditto.
	(function_arg_boundary): Ditto.
	(function_arg_advance): Ditto.
	(function_arg): Ditto.
	(get_vec_cmp_insn): Delete.
	(rs6000_emit_vector_vsx): New function for VSX vector compare.
	(rs6000_emit_vector_altivec): New function for Altivec vector
	compare.
	(get_vsel_insn): Delete.
	(rs6000_emit_vector_select): Ditto.
	(rs6000_override_options): If -mvsx, turn on -maltivec by
	default.
	(rs6000_builtin_vec_perm): Add support for V2DI, V2DF modes.
	(bdesc_3arg): Add vector select and vector permute builtins for
	V2DI and V2DF types.  Switch to using the vector_* expander
	instead of altivec_*.
	(rs6000_init_builtins): Initialize new type nodes for VSX.
	Initialize __vector double type.  Initialize common builtins for
	VSX.
	(rs6000_emit_vector_compare): Add VSX support.
	(rs6000_vector_mode_supported_p): If VSX, support V2DF.

	* config/rs6000/vsx.md (VSX_I): New iterator for integer modes.
	(VSX_L): Reorder iterator.
	(lx_<mode>_vsx): Delete, no longer needed.
	(stx_<mode>_vsx): Ditto.
	(all insns): Change to use vsx_<name> instead of <name>_vsx for
	consistancy with the other rs6000 md files.  Change to use the new
	"w" constraints for all insns.  Change to use rs6000_vector_info
	deciding whether to execute the instruction or not.
	(vsx_mov<mode>): Rewrite constraints so GPR registers are not
	chosen as reload targets.  Split integer vector loads into a
	separate insn, and favor the altivec register over the VSX fp
	registers.
	(vsx_fmadd<mode>4): Use <mode>, not <type>.
	(vsx_fmsub<mode>4): Ditto.
	(vsx_eq<mode>): New insns for V2DF/V4SF vector compare.
	(vsx_gt<mode>): Ditto.
	(vsx_ge<mode>): Ditto.
	(vsx_vsel<mode>): New insns for VSX vector select.
	(vsx_xxpermdi): New insn for DF permute.
	(vsx_splatv2df): New insn for DF splat support.
	(vsx_xxmrglw): New insns for DF interleave.
	(vsx_xxmrghw): Ditto.

	* config/rs6000/rs000.h (enum rs6000_vector): New enum to
	describe which vector unit is being used.
	(struct rs6000_vector_struct): New struct to describe the various
	aspects about the current vector instruction set.
	(rs6000_vector_info): New global to describe the current vector
	instruction set.
	(SLOW_UNALIGNED_ACCESS): If rs6000_vector_info has alignment
	information for a type, use that.
	(VSX_VECTOR_MOVE_MODE): New macro for all VSX vectors that are
	supported by move instructions.
	(VSX_MOVE_MODE): New macro for all VSX moves.
	(enum rs6000_builtins): Add V2DI/V2DF vector select and permute
	builtins.
	(rs6000_builtin_type_index): Add new types for VSX vectors.
	(rs6000_vsx_v4sf_regclass): New global to hold VSX register
	class.
	(rs6000_vsx_v2df_regclass): Ditto.
	(rs6000_vsx_df_regclass): Ditto.
	(rs6000_vsx_int_regclass): Ditto.
	(rs6000_vsx_logical_regclass): Ditto.
	(rs6000_vsx_any_regclass): Ditto.

	* config/rs6000/altivec.md (UNSPEC_VCMP*): Delete unspec
	constants no longer needed.
	(UNSPEC_VSEL*): Ditto.
	(altivec_lvx_<mode>): Delete, no longer needed.
	(altivec_stvx_<mode>): Ditto.
	(all insns): Rewrite to be consistant of altivec_<insn>.  Switch
	to use rs6000_vector_info to determine whether to issue to the
	altivec form of the instructions.
	(mov<mode>_altivec): Rewrite constraints so GPR registers are not
	chosen as reload targets.
	(altivec_eq<mode>): Rewrite vector conditionals, permute, select
	to use iterators, and work with VSX.
	(altivec_gt<mode>): Ditto.
	(altivec_ge<mode>): Ditto.
	(altivec_gtu<mode>): Ditto.
	(altivec_geu<mode>): Ditto.
	(altivec_vsel<mode>): Ditto.
	(altivec_vperm_<mode>): Ditto.
	(altivec_vcmp*): Rewrite to not use unspecs any more, and use mode
	iterators, add VSX support.
	(vcondv4si): Move to vector.md.
	(vconduv4si): Ditto.
	(vcondv8hi): Ditto.
	(vconduv8hi): Ditto.
	(vcondv16qi): Ditto.
	(vconduv16qi): Ditto.

	* config/rs6000/rs6000.md (negdf2_fpr): Add support for
	-mvsx-scalar-double.
	(absdf2_fpr): Ditto.
	(nabsdf2_fpr): Ditto.
	(adddf3_fpr): Ditto.
	(subdf3_fpr): Ditto.
	(muldf3_fpr): Ditto.
	(divdf3_fpr): Ditto.
	(DF multiply/add patterns): Ditto.
	(sqrtdf2): Ditto.
	(movdf_hardfloat32): Add VSX support.
	(movdf_hardfloat64_mfpgpr): Ditto.
	(movdf_hardfloat64): Ditto.

2009-02-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config.in: Update two comments.

	* config/rs6000/vector.md (VEC_L): Add V2DI type.
	(move<mode>): Use VEC_L to get all vector types, and delete the
	separate integer mode move definitions.
	(vector_load_<mode>): Ditto.
	(vector_store_<mode>): Ditto.
	(vector move splitters): Move GPR register splitters here from
	altivec.md.

	* config/rs6000/constraints.md ("j"): Add "j" constraint to match
	the mode's 0 value.

	* config/rs6000/rs6000.c (rs6000_hard_regno_nregs_internal): Only
	count the FPRs as being 128 bits if the mode is a VSX type.
	(rs6000_hard_regno_mode_ok): Ditto.
	(rs6000_emit_minmax): Use new VSX_MODE instead of separate tests.

	* config/rs6000/vsx.md (VSX_L): Add V2DImode.
	(VSm): Rename from VSX_mem, add modes for integer vectors.  Change
	all uses.
	(VSs): Rename from VSX_op, add modes for integer vectors.  Change
	all uses.
	(VSr): New mode address to give the register class.
	(mov<mode>_vsx): Use VSr to get the register preferences.  Add
	explicit 0 option.
	(scalar double precision patterns): Do not use v register
	constraint right now.
	(logical patterns): Use VSr mode attribute for register
	preferences.

	* config/rs6000/rs6000.h (VSX_SCALAR_MODE): New macro.
	(VSX_MODE): Ditto.

	* config/rs6000/altivec.md (VM): New mode iterator for memory
	operations.  Add V2DI mode.
	(mov_altivec_<mode>): Disable if -mvsx for all modes, not just
	V4SFmode.
	(gpr move splitters): Move to vector.md.
	(and<mode>3_altivec): Use VM mode iterator, not V.
	(ior<mode>3_altivec): Ditto.
	(xor<mode>3_altivec): Ditto.
	(one_cmpl<mode>2_altivec): Ditto.
	(nor<mode>3_altivec): Ditto.
	(andc<mode>3_altivec): Ditto.

	* config/rs6000/rs6000.md (movdf_hardfloat): Back out vsx changes.
	(movdf_hardfloat64_vsx): Delete.

2009-02-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vector.md: New file to abstract out the expanders
	for vector operations from alitvec.md.

	* config/rs6000/predicates.md (vsx_register_operand): New
	predicate to match VSX registers.
	(vfloat_operand): New predicate to match registers used for vector
	floating point operations.
	(vint_operand): New predicate to match registers used for vector
	integer operations.
	(vlogical_operand): New predicate to match registers used for
	vector logical operations.

	* config/rs6000/rs6000-protos.h (rs6000_hard_regno_nregs): Change
	from a function to an array.
	(rs6000_class_max_nregs): Add declaration.

	* config/rs6000/t-rs6000 (MD_INCLUDES): Define to include all of
	the .md files included by rs6000.md.

	* config/rs6000/rs6000.c (rs6000_class_max_nregs): New global
	array to pre-calculate CLASS_MAX_NREGS.
	(rs6000_hard_regno_nregs): Change from a function to an array to
	pre-calculate HARD_REGNO_NREGS.
	(rs6000_hard_regno_nregs_internal): Rename from
	rs6000_hard_regno_nregs and add VSX support.
	(rs6000_hard_regno_mode_ok): Add VSX support, and switch to use
	lookup table rs6000_hard_regno_nregs.
	(rs6000_init_hard_regno_mode_ok): Add initialization of
	rs6000_hard_regno_nregs, and rs6000_class_max_nregs global
	arrays.
	(rs6000_override_options): Add some warnings for things that are
	incompatible with -mvsx.
	(rs6000_legitimate_offset_address_p): Add V2DFmode.
	(rs6000_conditional_register_usage): Enable altivec registers if
	-mvsx.
	(bdesc_2arg): Change the name of the nor pattern.
	(altivec_expand_ld_builtin): Change the names of the load
	patterns to be the generic vector loads.
	(altivec_expand_st_builtin): Change the names of the store
	patterns to be the generic vector stores.
	(print_operand): Add 'x' to print out a VSX register properly.
	(rs6000_emit_minmax): Directly emit the min/max patterns for VSX
	and Altivec.

	* config/rs6000/vsx.md: New file to add all of the VSX specific
	instructions.  Add support for load, store, move, add, subtract,
	multiply, multiply/add, divide, negate, absolute value, maximum,
	minimum, sqrt, and, or, xor, and complent, xor, one's complement,
	and nor instructions.

	* config/rs6000/rs6000.h (UNITS_PER_VSX_WORD): Define.
	(VSX_REGNO_P): New macro for VSX registers.
	(VFLOAT_REGNO): New macro for vector floating point registers.
	(VINT_REGNO): New macro for vector integer registers.
	(VLOGICAL_REGNO): New macro for vector logical registers.
	(VSX_VECTOR_MODE): New macro for vector modes supported by VSX.
	(HARD_REGNO_NREGS): Switch to using pre-computed table.
	(CLASS_MAX_NREGS): Ditto.

	* config/rs6000/altivec.md (altivec_lvx_<mode>): Delete, repalced
	by expanders in vector.md.
	(altivec_stvx_<mode>): Ditto.
	(mov<mode>): Ditto.
	(mov_altivec_<mode>): Rename from mov<mode>_internal, and prefer
	using VSX if available.
	(addv4sf3_altivec): Rename from standard name, and prefer using
	VSX if available.
	(subv4sf3_altivec): Ditto.
	(mulv4sf3_altivec): Ditto.
	(smaxv4sf3_altivec): Ditto.
	(sminv4sf3_altivec): Ditto.
	(and<mode>3_altivec): Ditto.
	(ior<mode>3_altivec): Ditto.
	(xor<mode>3_altivec): Ditto.
	(one_cmpl<mode>2): Ditto.
	(nor<mode>3_altivec): Ditto.
	(andc<mode>3_altivec): Ditto.
	(absv4sf2_altivec): Ditto.
	(vcondv4sf): Move to vector.md.

	* config/rs6000/rs6000.md (negdf2_fpr): Add !TARGET_VSX to prefer
	the version in vsx.md if -mvsx is available.
	(absdf2_fpr): Ditto.
	(nabsdf2_fpr): Ditto.
	(adddf3_fpr): Ditto.
	(subdf3_fpr): Ditto.
	(muldf3_fpr): Ditto.
	(multiply/add patterns): Ditto.
	(movdf_hardfloat64): Disable if -mvsx.
	(movdf_hardfloat64_vsx): Clone from movdf_hardfloat64 and add VSX
	support.
	(vector.md): Include new .md file.
	(vsx.md): Ditto.

2009-02-11  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* doc/invoke.texi (-mvsx, -mno-vsx): Document new switches.

	* config/rs6000/linux64.opt (-mprofile-kernel): Move to being a
	variable to reduce the number of target flag bits.
	* config/rs6000/sysv4.opt (-mbit-align): Ditto.
	(-mbit-word): Ditto.
	(-mregnames): Ditto.
	* config/rs6000/rs6000.opt (-mupdate, -mno-update): Ditto.
	(-mvsx): New switch, enable VSX support.

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	__VSX__ if the vector/scalar instruction set is available.

	* config/rs6000/linux64.h (SUBSUBTARGET_OVERRIDE_OPTIONS): Change
	to allow -mprofile-kernel to be a variable.

	* config/rs6000/rs6000.c (processor_target_table): Set -mvsx for
	power7 cpus.
	(POWERPC_MASKS): Add -mvsx.

	* config/rs6000/rs6000.h (ADDITIONAL_REGISTER_NAMES): Add VSX
	register names for the registers that overlap with the floating
	point and altivec registers.

	* config/rs6000/sysv4.h (SUBTARGET_OVERRIDE_OPTIONS):
	TARGET_NO_BITFIELD_WORD is now a variable, not a target mask.

2009-02-11  Pat Haugen  <pthaugen@us.ibm.com>
	    Michael Meissner  <meissner@linux.vnet.ibm.com>

	* doc/invoke.texi (-mpopcntd, -mno-popcntd): Document new
	switches.

	* configure.ac (powerpc*-*-*): Test for the assembler having the
	popcntd instruction.
	* configure: Regenerate.
	* config.in (HAVE_AS_POPCNTD): Add default value for configure
	test.

	* config/rs6000/power7.md: New file.

	* config/rs6000/rs6000-c.c (rs6000_cpu_cpp_builtins): Define
	_ARCH_PWR7 if the popcntd instruction is available.

	* config/rs6000/rs6000.opt (-mpopcntd): New switch to
	enable/disable the use of the popcntd and popcntw instructions.
	(-mfused-madd, -mno-fused-madd): Move to being a separate variable
	because we are out of mask bits.

	* config/rs6000/rs6000.c (power7_cost): Define.
	(rs6000_override_options): Add Power7 support.
	(rs6000_issue_rate): Ditto.
	(insn_must_be_first_in_group): Ditto.
	(insn_must_be_last_in_group): Ditto.
	(rs6000_emit_popcount): Add support for using the popcntw and
	popcntd instructions.

	* config/rs6000/rs6000.h (ASM_CPU_POWER7_SPEC): Switch to using
	popcntd as the test for a power7 assembler instead of vector
	scalar instructions.
	* (TARGET_POPCNTD): If assembler does not support the popcntd
	instruction, disable using it.
	(processor_type): Add Power7 entry.

	* config/rs6000/rs6000.md (define_attr "cpu"):  Add power7.
	(power7.md): Include it.
	(andi./andis./nor. patterns): Change insn type to fast_compare.
	(popcntwsi2): Add popcntw support.
	(popcntddi2): Add popcntd support.

