2011-04-17  Lawrence Crowl  <crowl@google.com>

	* directives.c (too_many_directives_for_bitfield): Make static assert
	extern to avoid allocating any storage.

2011-04-18  Lawrence Crowl  <crowl@google.com>

	* init.c: Fix spelling in comment.

2011-04-14  Lawrence Crowl  <crowl@google.com>

	* include/cpplib.h (cpp_hashnode):  Use a macro for the number of bits
	in the directive_index bitfield.  Change the number of bits back to 7.
	* directives.c (DIRECTIVE_TABLE):  Add a gcc-build-time check that the
	index of the directive table fits within the number of bits above.
	* init.c (operator_array):  Separate the named operator table into a
	macro.  Use it in operator_array.  Test that the values fit within the
	number of bits above.

2011-04-12  Diego Novillo  <dnovillo@google.com>

	* directives.c (do_include_common): If the callback
	pfile->cb.include returns falose do not call
	_cpp_stack_include.
	* include/cpplib.h (struct cpp_callbacks): Change return
	type of field 'include' to bool.

2011-04-06  Lawrence Crowl <crowl@google.com>

        * include/cpplib.h (struct cpp_hashnode): Add used_by_directive and
	expanded_to_text attributes for macros.  Take their bits from
	directive_index, which does not need them.
        * include/symtab.h (struct cpp_idents_used): Split max_length into
	max_ident_len and max_value_len.  Reorder fields to avoid gaps.
	(struct cpp_ident_use): Add used_by_directive and expanded_to_text
	attributes for macros.
        * internal.h (struct cpp_lookaside): Split max_length into
        max_ident_len and max_value_len.
	* macro.c (enter_macro_context): Mark expanded_to_text macro attribute.
	* directives.c (DIRECTIVE_TABLE): Add sizing comment.
	(do_define): Mark used_by_directive macro attribute.
	(do_undef): Likewise.
	(do_ifdef): Likewise.
	* expr.c (parse_defined): Mark used_by_directive macro attribute.
        * symtab.c (cpp_lt_create): Split cpp_lookaside::max_length into
	max_ident_len and max_value_len.
	* (lt_macro_value): Likewise.
	* (lt_lookup): Likewise.
        * (cpp_lt_capture): Likewise.  Also save used_by_directive and
	expanded_to_text attributes of macros.
        * (cpp_lt_replay): Split cpp_idents_used::max_lenth into
        max_ident_len and max_value_len.  Allocate a buffer with the sum.


2011-03-04  Lawrence Crowl <crowl@google.com>

	* symtab.h (cpp_lt_verify_1): Temporary new function.
	* symtab.c (cpp_lt_verify_1): Temporary new function.
        * (cpp_lt_verify): Permit macro values to match after as well
	* (lt_query_macro): Remove name of macro from macro value.
	* (cpp_lt_define_syntax): Likewise, but needs another parameter.
	* (cpp_lt_replay): Likewise.
        as before on load of a PPH file.
	* (cpp_lt_idents_destroy): Delete the right thing.

2011-02-24  Lawrence Crowl  <crowl@google.com>

	* include/cpplib.h (cpp_main_missing_guard): Add declaration.
	* files.c (cpp_main_missing_guard): Add definition.
	(main_missing_guard): Add to support cpp_main_missing_guard.

2011-01-27  Diego Novillo  <dnovillo@google.com>

	* include/cpplib.h (cpp_reset_lexer_state,
	cpp_restore_lexer_state): Remove.
	* lex.c: Likewise.
	Update all users.

2010-12-17  Diego Novillo  <dnovillo@google.com>

	* internal.h (struct cpp_lookaside): Rename field
	flag_pth_debug to pth_debug_level.

2010-12-09  Lawrence Crowl  <crowl@google.com>

	* include/symtab.h (cpp_lt_exchange): Change parameter name.
	(cpp_lt_create): Clarify lead comment.
	(cpp_lt_destroy): Clarify lead comment.
	(cpp_lt_capture): Change parameter name.
	(cpp_lt_verify): Clarify lead comment.
	(cpp_lt_replay): Clarify lead comment.
	(cpp_lt_num_entries): Unused.  Removed.
	(cpp_lt_max_length): Unused.  Removed.
	(cpp_lt_take_strings): Unused.  Removed.
	(typedef cpp_lookback): Unused.  Removed.
	(cpp_lt_forall): Unused.  Removed.
	(cpp_lt_idents_destroy): New.
	(cpp_lt_statistics): Functionality move to internal.

        * symtab.c: Add comment on the lookaside table.
	(cpp_lt_exchange): Add lead comment.  Change parameter name.
	(lt_clear_stats): New.
	(cpp_lt_create): Add lead comment.  Save original table size order.
	Refactor clear stats.
	(lt_statistics): Rename from cpp_lt_statistics for use only internally.
	Add lead comment.  Change parameter type.  Refactor clear stats.
	(cpp_lt_destroy): Add lead comment.  Add statistics printing.
	(cpp_lt_num_entries): Unused.  Remove.
	(cpp_lt_max_length): Unused.  Remove.
	(cpp_lt_take_strings): Unused.  Remove.
	(cpp_lt_forall): Add lead comment.  Unused.  Disable.
	(lt_query_macro): Change parameter name.
	(lt_macro_value): Change parameter name.
	(cpp_lt_capture): Change parameter name.
	Reuse existing table if it is close enough to the existing size.
	Otherwise, allocate a new table.  Add internal comments.
	(cpp_lt_idents_destroy): New.
	(lt_resize): Add lead comment.
	(lt_lookup): Change parameter name.

	* internal.h (struct cpp_lookaside): Added sticky_order field.

	* initi.c (cpp_destroy): Add call to cpp_lt_destroy.

2010-11-02  Lawrence Crowl  <crowl@google.com>
	    Diego Novillo  <dnovillo@google.com>

	* symtab.c: Include internal.h
	(ht_calc_hash): Rename from calc_hash.  Declare extern.
	Adjust all users.
	(cpp_lt_exchange): New.
	(cpp_lt_create): New.
	(cpp_lt_statistics): New.
	(cpp_lt_destroy): New.
	(cpp_lt_num_entries): New.
	(cpp_lt_max_length): New.
	(cpp_lt_take_strings): New.
	(cpp_lt_forall): New.
	(lt_query_macro): New.
	(lt_macro_value): New.
	(cpp_lt_capture): New.
	(cpp_lt_verify): New.
	(cpp_lt_define_syntax): New.
	(cpp_lt_replay): New.
	(LT_MASK): Define.
	(LT_FIRST): Define.
	(LT_NEXT): Define.
	(lt_resize): New.
	(lt_lookup): New.
	* macro.c (_cpp_save_parameter): Re-write to use new
	param_buffer field to avoid clobbering macro_buffer.
	* include/cpplib.h (lexer_state): Define.
	(enum include_type): Define.
	(cpp_reset_lexer_state): Define.
	(cpp_restore_lexer_state): Define.
	(struct cpp_offset): Define.
	(cpp_buffer_start): Declare.
	(cpp_buffer_end): Declare.
	(cpp_lookup_with_hash): Declare.
	(cpp_peek_sym): Declare.
	(cpp_dump_identifier): Declare.
	(cpp_debug_identifier): Declare.
	(cpp_dump_identifiers): Declare.
	(cpp_debug_identifiers): Declare.
	(cpp_push_include_type): Declare.
	(cpp_get_pos): Declare.
	(cpp_set_pos): Declare.
	(cpp_return_at_eof): Declare.
	* include/symtab.h (cpp_lookaside): Define.
	(struct cpp_ident_use): Declare.
	(struct cpp_idents_used): Declare.
	(cpp_lt_exchange): Declare.
	(cpp_lt_create): Declare.
	(cpp_lt_destroy): Declare.
	(cpp_lt_capture): Declare.
	(cpp_lt_verify): Declare.
	(cpp_lt_replay): Declare.
	(cpp_lt_num_entries): Declare.
	(cpp_lt_max_length): Declare.
	(cpp_lt_take_strings): Declare.
	(*cpp_lookback): Declare.
	(cpp_lt_forall): Declare.
	(cpp_lt_statistics): Declare.
	* files.c (cpp_buffer_start): Define.
	(cpp_buffer_end): Define.
	(_cpp_stack_include): Add argument dname.  Adjust
	all users.
	(cpp_push_include_type): New.
	(cpp_get_pos): New.
	(cpp_set_pos): New.
	(cpp_return_at_eof): New.
	* init.c (cpp_create_reader): Initialize field
	lookaside_table.
	(cpp_destroy): Free field param_buffer, if needed.
	* identifiers.c (cpp_lookup_with_hash): New.
	(cpp_lookup): Call it.
	(cpp_peek_sym): New.
	(cpp_dump_identifier): New.
	(cpp_debug_identifier): New.
	(cpp_dump_identifiers_r): New.
	(cpp_dump_identifiers): New.
	(cpp_debug_identifiers): New.
	* internal.h	(revision 166136):
	(struct lae): Declare.
	(struct cpp_lookaside): Declare.
	(lt_lookup): Declare.
	(ht_calc_hash): Declare.
	(struct cpp_reader): Add fields param_buffer,
	param_buffer_len and lookaside_table.
	(_cpp_stack_include): Add new const char * argument.
	* lex.c (lex_identifier_intern): Call cpp_lookup_with_hash.
	(lex_identifier): Likewise.
	(_cpp_lex_token): Initialize result to NULL.
	(cpp_reset_lexer_state): New.
	(cpp_restore_lexer_state): New.
	* charset.c (_cpp_interpret_identifier): Call cpp_lookup.
