2016-08-05  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_concat_<mode>): Eliminate clobber that
	isn't currently used.  Use vecperm for MTVSRDD type.
	(vsx_splat_<mode>): Likewise.

2016-08-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 239106.
	* REVISION: Update subversion id.

2016-08-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Add check
	for -mvsx-timode on vector init for V4SImode.

	Merge up to 239098.
	* REVISION: Update subversion id.

2016-08-03  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_output_vec_concat):
	Delete.

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Go back to
	using gen_highpart/gen_lowpart to setup vector, rather than trying
	to use vsx_concat_vd2i.
	(rs6000_output_vec_concat): Delete.

	* config/rs6000/vsx.md (vsx_concat_<mode>): Go back to a single
	vsx_concat_<mode> insn, but add mtvsrdd on ISA 3.0.
	(vsx_concat_<mode>_nodm): Likewise.
	(vsx_concat_<mode>_dm): Likewise.

2016-08-02  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_output_vec_concat): New
	declaration.

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Rework
	support for initializing V4SImode in GPRs.
	(regno_or_subregno): New helper function to get the real register
	number of an insn.
	(rs6000_adjust_vec_address): Call regno_or_subregno.
	(rs6000_output_vec_concat): New function handle the output of the
	vector concatenation of two 64-bit elements.

	* config/rs6000/vsx.md (vsx_concat_<mode>, VSX_D iterator): Split
	concat into 2 insns, one without 64-bit/direct move, one with it.
	Add support moving to GPR registers and mtvsrdd.
	(vsx_concat_<mode>_nodm): Likewise.
	(vsx_concat_<mode>_dm): Likewise.

2016-08-01  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_expand_vector_init): Add support
	to initialize V4SImode in GPRs without doing 4 stores and a load.

	* config/rs6000/vsx.md (vsx_concat_<mode>): Add support for the
	ISA 3.0 MTVSRDD instruction.  Drop having separate alternatives
	for a favored register class and non-favored class.

2016-07-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238882.
	* REVISION: Update subversion id.

2016-07-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Change VEC_EXTRACT_OPTIMIZE_P -> TARGET_DIRECT_MOVE_64BIT.
	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Likewise.
	* config/rs6000/vsx.md (vsx_vslo_<mode>): Likewise.
	(vsx_extract_<mode>_var): Likewise.
	(vsx_extract_<mode>): Likewise.
	* config/rs6000/rs6000.h (TARGET_DIRECT_MOVE_64BIT): Likewise.

	* config/rs6000/vsx.md (vsx_extract_<P:mode>_<VSX_D:mode>_load):
	Add 32-bit support.
	(vsx_extract_v4sf_<mode>_load): Likewise.
	(vsx_extract_<mode>_store): Add support for ISA 3.0 d-form store.

2016-07-27  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rtx_is_swappable_p): Add UNSPEC_VSX_VSLO
	to insns that are not swappable.

2016-07-26  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238769.
	* REVISION: Update subversion id.

2016-07-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238675.
	* REVISION: Update subversion id.

2016-07-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<summary of previous changes>
	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Break a string that goes over one line.  Add support for V4SFmode,
	V4SImode, V8HImode, and V16QImode vec_extract's with constant
	element numbers.  Add support for V2DImode, V2DFmode, V4SFmode,
	V4SImode, V8HImode, and V16QImode vec_extract with variable
	element number if we are on a 64-bit power8 system or newer.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change
	calling signature to to element number as a RTX instead of an
	integer constant.  Add 64-bit ISA 2.07 support for V4SImode,
	V8HImode, and V16QImode vec_extract's with constant element.  Add
	support for V2DImode, V2DFmode, V4SFmode, V4SImode, V8HImode, and
	V16QImode vec_extract with variable element number if we are on a
	64-bit power8 system or newer.
	(rs6000_adjust_vec_address): New function to take a vector address
	and a base register temporary register and return the appropriate
	address to address a scalar element within the vector with an
	appropriate address mode for a given register type.
	(rs6000_split_vec_extract_var): New function to take a vec_extract
	with a variable element number and issue the appropriate
	instructions to extract the element.
	(altivec_expand_vec_ext_builtin): The function
	rs6000_expand_vector_extract now expects the element number to be
	an RTX instead of an integer constant.
	(rtx_is_swappable_p): Variable vec_extracts (UNSPEC_VSX_EXTRACT)
	are not swappable.

	* config/rs6000/vsx.md (UNSPEC_VSX_VSLO): New unspec.
	(UNSPEC_VSX_EXTRACT): Likewise.
	(vsx_extract_<mode>, VSX_D iterator): Add support for direct
	move.  Spell mfvsrld correctly.
	(vsx_extract_<mode>_load, VSX_D iterator): Add support ISA 3.0
	memory modes.  Add support for loading the 2nd element from
	memory.  Use rs6000_adjust_vec_address to adjust the memory
	address.
	(vsx_vslo_<mode>, VSX_D iterator): New VSLO insn that is generated
	for vec_extract with variable element number.
	(vsx_extract_<mode>_var, VSX_D iterator): Add vec_extract with
	variable element number insn/spiltter.
	(vsx_extract_v4sf): Elimate 0 offset alternative, which does not
	work on little endian systems.  Use 'n' constraint instead of 'i'
	for constants.  Add support for extracting a SFmode to an Altivec
	register.
	(vsx_extract_v4sf_load): New insn to optimize V4SFmode vec_extract
	with a constant element from memory.
	(vsx_extract_<mode>, VSX_EXTRACT_I iterator): Turn into a
	define_expand, to generate either ISA 2.07 or 3.0 code.  Rename
	exisitng insn to vsx_extract_<mode>_p9.
	(vsx_extract_<mode>_p9, VSX_EXTRACT_I iterator): Likewise.
	(vsx_extract_<mode>_p8, VSX_EXTRACT_I iterator): New insn for
	64-bit ISA 2.07 vec_extract support.
	(vsx_extract_<mode>_load, VSX_EXTRACT_I iterator): New insn to
	optimize V4SImode, V8HImode, and V16QI vec_extract with a constant
	element from memory.
	(vsx_extract_<mode>_var, VSX_EXTRACT_I iterator): New insn for
	V4SImode, V8HImode, and V16QImode vec_extract with a variable
	element number.

	* config/rs600/vector.md (vec_extract<mode>): The function
	rs6000_expand_vector_extract now expects the element number to be
	an RTX instead of an integer constant.

	* config/rs6000/rs6000-protos.h (rs6000_expand_vector_extract):
	The function rs6000_expand_vector_extract now expects the element
	number to be an RTX instead of an integer constant.
	(rs6000_split_vec_extract_var): New function declaration.
	(rs6000_adjust_vec_address): Likewise.

	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Remove
	-mupper-regs-df requirement.
	(VEC_EXTRACT_OPTIMIZE_P): New macro to say whether we can do
	optimized vec_extract built-in calls.

	* config/rs6000/altivec.md (reduc_plus_scal_<mode>): The function
	rs6000_expand_vector_extract now expects the element number to be
	an RTX instead of an integer constant.

2016-07-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): Fix issues
	from power9's d-form vector support.

2016-07-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Add V4SFmode support.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
	V4SFmode support.

	* config/rs6000/vsx.md (vsx_xscvspdp_scalar2): Allow conversion to
	SF values in Altivec registers.
	(vsx_extract_<mode>_load): Use operands[4] as the new address, not
	operands[3].
	(vsx_extract_v4sf): Remove special code for index 0.
	(vsx_extract_v4sf_load): Add support for vec_extract of V4SFmode
	from memory.
	(vsx_extract_v4sf_var): Add support for vec_extract of V4SFmode
	with a variable index.

2016-07-19  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_extract_<mode>): Use mfvsrld, not
	mfvsrdl.

	Merge up to 238490.
	* REVISION: Update subversion id.

2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238445.
	* REVISION: Update subversion id.

2016-07-18  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	In the vec_extract section, test for VEC_EXTRACT_OPTIMIZE_P
	instead of TARGET_VARIABLE_EXTRACT(mode).  Add support for
	optimizing V16QImode, V8HImode, and V4SImode built-ins functions.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change to
	use VEC_EXTRACT_OPTIMIZE_P instead of TARGET_VEXTRACTUB, to allow
	optimizing on 64-bit power8 systems as well.  Add support for
	variable extraction of V16QImode, V8HImode, and V4SImode.
	(rs6000_split_vec_extract_var): Assert that reload has allocated
	the temporary register.    Add support for variable extraction of
	V16QImode, V8HImode, and V4SImode.

	* config/rs6000/vsx.md (vsx_vslo_<mode>, VSX_D mode): Test for
	VEC_EXTRACT_OPTIMIZE_P instead of TARGET_VARIABLE_EXTRACT(mode).
	(vsx_extract_<mode>_var, VSX_D mode): Likewise.
	(vsx_extract_<mode>): Change to be a define_expand, and generate
	the scratch register of the appropriate mode for ISA 2.07 and ISA
	3.0 support.
	(vsx_extract_<mode>_p8): New insn and split to support V16QI,
	V8HI, V4SI extracts on 64-bit ISA 2.07 systems.
	(vsx_extract_<mode>_p9): Rename from vsx_extract_<mode>.
	(vsx_extract_<mode>_load): Rewrite to allow loading up any
	constant element of a vector, instead of just element 0.  Add
	support for ISA 3.0 new memory instructions.
	(vsx_extract_<mode>_var): New insn/split for variable extracts of
	V16QI, V8HI, and V4SI vectors.

	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Don't require
	-mupper-regs-df.
	(TARGET_VARIABLE_EXTRACT): Delete, in favor of
	VEC_EXTRACT_OPTIMIZE_P.
	(VEC_EXTRACT_OPTIMIZE_P): New macro to say whether we support
	optimizing vec_extract on 64-bit ISA 2.07 and above systems.

2016-07-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_adjust_vec_address): Add
	declaration.

	* config/rs6000/rs6000.c (rs6000_adjust_vec_address): New function
	to take a vector address, and convert it to an address of an
	element within the vector.
	(rs6000_split_vec_extract_var): Use rs6000_adjust_vec_address to
	handle memory addresses.

	* config/rs6000/vsx.md (vsx_extract_<mode>_load): Combine
	vsx_extract_<mode>_load0 and vsx_extract_<mode>_load1.  Use
	rs6000_adjust_vec_address to adjust the memory address.
	(vsx_extract_<mode>_var): Use 'm' memory constraint instead of
	'Z'.

2016-07-13  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_extract_<mode>_load1): Add
	gcc_unreachble () to silence variable might not be used warning.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_extract_<mode>_load0): Rename from
	vsx_extract_<mode>_load.
	(vsx_extract_<mode>_load1): Add insn to get the second element in
	a vector from memory.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.c (rs6000_split_vec_extract_var): Add
	support for variable exraction from indirect or indexed memory.
	* config/rs6000/vsx.md (vsx_extract_<mode>_var): Likewise.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): Remove #if 0
	code.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vec_extract_var):
	Add declaration.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Call
	vsx_extract_<mode>_var to handle variable extraction.
	(rs6000_split_vec_extract_var): New function to split variable
	extraction after reload.
	(rtx_is_swappable_p): Variable vector extracts are not swappable.

	* config/rs6000/vsx.md (UNSPEC_VSX_EXTRACT): New unspec.
	(vsx_extract_<mode>_var): New insn/split to handle variable
	vector extracts.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): #if out test
	against swap optimization.

2016-07-12  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238261.
	* REVISION: Update subversion id.

2016-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 238127.
	* REVISION: Update subversion id.

2016-07-07  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md: Undo 7/6 changes.
	* config/rs6000/rs6000-protos: Likewise.
	* config/rs6000/rs6000.c: Likewise.
	* config/rs6000/vsx.md: Likewise.
	* config/rs6000/rs6000.h: Likewise.

	* doc/md.text: Likewise.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Move code
	to do variable extract here from the vsx.md insn.  Add future
	support for extracting other vector types.

	* config/rs6000/vsx.md (vsx_extract_<mode>, VSX_D case):
	Reformat.  Fixup constraint cases so that direct move can be
	generated.
	(vsx_vslo_<mode>): Move to later in the file.
	(vsx_extract_<mode>_variable): Move insn to
	rs6000_expand_vector_extract.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): Do not require
	-mupper-regs-df unless mode is V2DFmode.  Turn off for now if
	-moptimize-swaps on power8.

2016-07-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/constraints.md (wA constraint): New constraint for
	vector extract that matches Altivec registers if -m64 and
	-mdirect-move.

	* config/rs6000/rs6000.c (rs6000_debug_reg_global): Set up and
	debug wA constraint.
	(rs6000_init_hard_regno_mode_ok): Likewise.
	(split_extract_reg_reg_var): Fix thinkos.  Add scalar store.
	(split_extract_memory): Likewise.
	(rs6000_split_vector_extract): Likewise.

	* config/rs6000/vsx.md (vsx_extract_<VSX_D:mode>_<P:mode>): Fix
	problems with constraints.  Add scalar store support.
	(vsx_extract_<mode>_const): Likewise.
	(vsx_vslo_<mode>): Likewise.
	(vsx_extract_<mode>_load): Delete, insn folded into the main
	vector extract support.
	(vsx_extract_<mode>_store): Likewise.

	* config/rs6000/rs6000.h (enum r6000_reg_class_enum): Add wA
	constraint.

	* doc/md.texi (PowerPC constraints): Document wA constraint.

2016-07-06  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-protos.h (rs6000_split_vector_extract): Add
	declaration.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Rework
	variable element extraction, and make it more general.
	(split_extract_reg_reg_const): Likewise.
	(split_extract_reg_reg_var): Likewise.
	(split_extract_memory): Likewise.
	(rs6000_split_vector_extract): Likewise.

	* config/rs6000/vsx.md (UNSPEC_VSX_EXTRACT): New unspec.
	(vsx_extract_<mode>, VSX_D case): Rewrite vector extraction code,
	to make it more general.
	(vsx_extract_<mode>_const): Likewise.
	(vsx_extract_<mode>_variable): Delete.

2016-07-01  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/rs6000-c.c (altivec_resolve_overloaded_builtin):
	Use the RTL extract built-in code for 64-bit power8 and above to
	extract DImode/DFmode with a variable element number.  Use string
	pasting for warnings, instead of spliting a string across multiple
	lines.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change
	calling signature to take a RTX instead of an integer constant for
	element number.  Add support for variable extract from V2DImode
	and V2DFmode.
	(altivec_expand_vec_ext_builtin): Likewise.

	* config/rs6000/rs6000.h (TARGET_VARIABLE_EXTRACT): New macro to
	say whether all of the conditions are met to allow for the element
	number of vec_extract to be a variable.

	* config/rs6000/altivec.md (reduc_plus_scal_<mode>): Deal wtih
	rs6000_expand_vector_extract calling signature changes.
	* config/rs6000/vector.md (vec_extract<mode>): Likewise.
	* config/rs6000/rs6000-protos.h (rs6000_expand_vector_extract):
	Likewise.

	* config/rs6000/vsx.md (UNSPEC_VSX_VSLO): New unspec.
	(vsx_vslo_<mode>): New insns to generate VSLO to isolate the
	correct element if vec_extract element number is variable.
	(vsx_extract_<mode>_variable): New expanders to generate the
	appropriate code to support vec_extract element number being
	variable.

2016-06-30  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237888.
	* REVISION: Update subversion id.

2016-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237864.
	* REVISION: Update subversion id.

2016-06-29  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (VSX_EXTRACT_INSN): Delete.
	(vsx_extract_<mode>_di): Return xxextractuw or vextractu<wd>
	rather than using VSX_EXTRACT_INSN.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Change
	TARGET_VEC_SELECT_ISA3 to TARGET_VEXTRACTUB.

	* config/rs6000/vsx.md (VSX_EXTRACT_PREDICATE): Rename from
	VSX_EXTRACT_ELEMENT.
	(VSX_EXTRACT_INSN): Mode attribute to give the instruction to use
	for the extracts.
	(VSX_EX): Mode attribute to give the constraint to use for vector
	extracts.
	(vsx_extract_<mode>, VSX_EXTRACT_I case): Add support to use
	XXEXTRACTUW for V4SI mode.  Fix subreg support.
	(vsx_extract_<mode>_di, VSX_EXTRACT_I case): Likewise.

	* config/rs6000/rs6000.h (TARGET_VEXTRACTUB): Rename from
	TARGET_VEC_SELECT_ISA3.

2016-06-28  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/predicates.md (const_0_7_operand): New predicate,
	match 0..7.

	* config/rs6000/rs6000.c (rs6000_expand_vector_extract): Add
	support for ISA 3.0 vector extract instructions.

	* config/rs6000/vsx.md (VSX_EXTRACT_I): New iterator for ISA 3.0
	vector extract instructions.
	(VSX_EXTRACT_ELEMENT): New mode attribrute for the predicate to
	validate the integer constant in a vector extract operation.
	(vsx_extract_<mode>, VSX_EXTRACT_I case): Add support for ISA 3.0
	vector extract instructions.
	(vsx_extract_<mode>_di): Likewise.

	* config/rs6000/rs6000.h (TARGET_VEC_SELECT_ISA3): New target
	macro to define when we can optimize to use ISA 3.0 vector extract
	instructions.

	* config/rs6000/rs6000.md (stfiwx): Add support to generate
	STXSIWX if the DImode was allocated to an Altivec register.

	Merge up to 237826.
	* REVISION: Update subversion id.

2016-06-24  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237765.
	* REVISION: Update subversion id.

2016-06-23  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (p9_stxsi<wd>x): Support non indexed
	addresses with a split and clobber.

2016-06-22  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md 	(p9_stxsi<wd>zx): New insns to support ISA
	3.0 store byte and half-word integers from vector registers.
	* config/rs6000/rs6000.md (fix_trunc<SFDF:mode><QHI:mode>2): New
	expanders to support converting floating point and storing it to
	byte/half-word integer directly from the vector registers.
	(fixuns_trunc<SFDF:mode><QHI:mode>2): Likewise.

	Merge up to 237716.
	* REVISION: Update subversion id.

2016-06-21  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237668.
	* REVISION: Update subversion id.

2016-06-20  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237608.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	Merge up to 237490.
	* REVISION: Update subversion id.

2016-06-15  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (vsx_sign_extend_hi_<mode>): Enable
	generator.

	* config/rs6000/rs6000.md (FP_ISA3): New iterator for ISA 3.0
	vector load byte/half-word instructions.
	(ISA 3.0 byte/half-word peephole): Delete earlier attempt.
	(float<QHI:mode><FP_ISA3:mode>2): New insns to support ISA 3.0
	vector load byte/half-word instructions.
	(float<QHI:mode><FP_ISA3:mode>2_internal): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2): Likewise.
	(floatuns<QHI:mode><FP_ISA3:mode>2_internal): Likewise.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	<dimode patch #3>
	* config/rs6000/vsx.md (VSINT_84): Add DImode to enable loading
	DImode constants with XXSPLTIB in vector registers.
	(vsx_extract_<mode>, V2DImode/V2DFmode): Combine both
	vsx_extract_<mode>_internal{1,2} into a single insn that handles
	direct move (both ISA 2.07 and ISA 3.0 versions), and optimizes
	extraction of the element at the top of the register as a scalar
	value.
	(vsx_extract_<mode>_internal1): Likewise.
	(vsx_extract_<mode>_internal2): Likewise.
	* config/rs6000/constraints.md (wi constraint): Remove a comment
	about DImode not being allowed in Altivec registers.
	(wB constraint): New constraint for constants that can be
	generated in Altivec registers with VSPLTISW/VUPKHSW.
	* config/rs6000/predicates.md (xxspltib_constant_split): Update
	comments.
	(xxspltib_constant_nosplit): Likewise.
	* config/rs6000/rs6000-cpus.def (ISA_2_6_MASKS_SERVER): Add
	support for -mupper-regs-di to enable DImode to go into Altivec
	registers.
	(POWERPC_MASKS): Likewise.
	(power7 cpu): Likewise.
	* config/rs6000/rs6000.opt (-mupper-regs-di): Likewise.
	* config/rs6000/rs6000.c (rs6000_hard_regno_mode_ok): Add support
	for DImode being allowed in Altivec registers.  Update wi/wj
	constraints.  Set scalar_in_vmx_p flag.
	(rs6000_option_override_internal): Add checks for -mupper-regs-di.
	(xxspltib_constant_p): Allow CONST_INT's with VOIDmode.  Don't
	return true if we could use VSPLTISW/VUPKHSW instead of XXSPLTIB.
	(rs6000_opt_masks): Add -mupper-regs-di.
	* config/rs6000/rs6000.md (lfiwax): Update clobbers that don't use
	direct move to use wi and not wj.
	(lfiwzx): Likewise.
	(floatsi<mode>2_lfiwax_mem): Combine alternatives into a single
	alternative.
	(floatunssi<mode>2_lfiwzx_mem): Likewise.
	(fix_trunc<mode>di2_fctidz): Change second alternative to allow
	any VSX register, instead of just Altivec registers, to allow
	either operand to be an Altivec register or both.
	(fixuns_trunc<mode>di2_fctiduz): Likewise.
	(movdi_internal32): Add support for -mupper-regs-di.  Add support
	to load constants via XXSPLTIB or VSPLTISW.  Add spacing to allow
	the alternatives and attributes to be lined up to be easier to
	read.
	(movdi_internal64): Likewise.
	(64-bit DImode splitters): Change predicates to only split loading
	up GPR registers.  Add splits for using XXSPLTIB or VSPLTISW to
	load constants in ISA 3.0 or ISA 2.07 respectively.
	* doc/invoke.texi (RS/6000 and PowerPC Options): Document
	-mupper-regs-di.  Update -mupper-regs-df and -mupper-regs-sf to
	mention -mcpu=power9 sets these options.
	* doc/md.texi (PowerPC and IBM RS6000 constraints): Document the
	wB constraint.

2016-06-14  Michael Meissner  <meissner@linux.vnet.ibm.com>

	* config/rs6000/vsx.md (UNSPEC_P9_MEMORY): New unspec.
	(p9_lxsi<wd>zx): New code to implement load bye/halfword to the
	vector registers on ISA 3.0.

	* config/rs6000/rs6000.md (ISA 3.0 peepholes): Add new peepholes
	to catch zero_extend of byte/half-word and converting it to
	floating point.

2016-06-14   Michael Meissner  <meissner@linux.vnet.ibm.com>

	Clone branch subversion id 237393

