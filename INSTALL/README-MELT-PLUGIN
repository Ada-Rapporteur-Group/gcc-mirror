Short installation instructions for MELT as a plugin to an installed
gcc-4.6 enabled for plugins.

See also http://gcc.gnu.org/wiki/MELT and http://gcc-melt.org/

If installing MELT as plugin to some existing gcc-4.6 installation
tree, with the support of plugins enabled.

################ step 1

First, ensure that GCC 4.6 is correctly installed and has been built
with plugins enabled, for example (on a Debian Unstable or
Experimental, package gcc-4.6):

 % gcc-4.6 -v
Using built-in specs.
COLLECT_GCC=/usr/bin/gcc-4.6
COLLECT_LTO_WRAPPER=/usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6.1/lto-wrapper
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Debian 4.6.1-2' --with-bugurl=file:///usr/share/doc/gcc-4.6/README.Bugs --enable-languages=c,c++,fortran,objc,obj-c++,go --prefix=/usr --program-suffix=-4.6 --enable-shared --enable-multiarch --with-multiarch-defaults=x86_64-linux-gnu --enable-linker-build-id --with-system-zlib --libexecdir=/usr/lib/x86_64-linux-gnu --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.6 --libdir=/usr/lib/x86_64-linux-gnu --enable-nls --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-plugin --enable-objc-gc --with-arch-32=i586 --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 4.6.1 (Debian 4.6.1-2) 

################ step 2

Then, be sure that the GCC plugin development support has been
installed. (On Debian, you'll need the gcc-4.6-plugin-dev package).

So you should have something like
% gcc-4.6 -print-file-name=plugin 
/usr/lib/gcc/x86_64-linux-gnu/4.6.1/plugin

Be sure that this plugin subdirectory is populated correctly since it
contains an include file.

% ls -l $(gcc-4.6 -print-file-name=plugin)
total 4
drwxr-xr-x 8 root root 4096 Mar 30 14:16 include

Be sure that this include subdirectory contains meaningful files for
GCC, like those for GIMPLE
% ls -l $(gcc-4.6 -print-file-name=plugin)/include/gimple.* 
-rw-r--r-- 1 root root  13735 Mar 30 04:02 /usr/lib/gcc/x86_64-linux-gnu/4.6.1/plugin/include/gimple.def
-rw-r--r-- 1 root root 123008 Mar 30 04:02 /usr/lib/gcc/x86_64-linux-gnu/4.6.1/plugin/include/gimple.h

Be sure that the gengtype executable and its gtype.state textual data
file is available somewhere. On Debian/Sid the package
gcc-4.6-plugin-dev provides: 
% ls -l /usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6/gengtype /usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6/gtype.state

-rwxr-xr-x 1 root root 163840 Jul  5 16:48 /usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6/gengtype
-rw-r--r-- 1 root root 614004 Jul  5 16:48 /usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6/gtype.state

and you get these files with 
  $(gcc-4.6 -print-file-name=gengtype) 
and 
  $(gcc-4.6 -print-file-name=gtype.state) 
respectively

Look with an editor, or just with the head command, that this gtype.state
file is indeed the one related to your gcc-4.6:
% head /usr/lib/x86_64-linux-gnu/gcc/x86_64-linux-gnu/4.6/gtype.state
;;;;@@@@ GCC gengtype state
;;; DON'T EDIT THIS FILE, since generated by GCC's gengtype
;;; The format of this file is tied to a particular version of GCC.
;;; Don't parse this file wihout knowing GCC gengtype internals.
;;; This file should be parsed by the same gengtype which wrote it.
;;; file gtype.state generated on Tue Jul  5 09:03:22 2011


(!version  "4.6.1")


################ step 3

   Read carefully the build-melt-plugin.sh perhaps in the MELT plugin
   source directory

   Read it again. I mean it! The script is not bullet-proof. It could
   perhaps harm your system if improperly used.

You might use that script from within your untarred MELT plugin source
directory with something like

# building the plugin
 ./build-melt-plugin.sh -v -b -s GCC=gcc-4.6 \
    -G $(gcc-4.6 -print-file-name=gengtype) \
    -T $(gcc-4.6 -print-file-name=gtype.state) \
    -M $PWD

# installing the plugin
 ./build-melt-plugin.sh -v -i -s DESTDIR=/tmp/meltplugindestdir -M $PWD
# or perhaps
 ./build-melt-plugin.sh -v -i -s HOSTADMINCMD=sudo -M $PWD


but don't run that command without understanding what that
build-melt-plugin.sh script is doing.

If you want to avoid going root thru sudo (e.g. if you are packaging
the MELT plugin), you could pass -s DESTDIR=/tmp/meltplugindestdir
instead of -s HOSTADMINCMD=sudo

################

To prepare a source tree of the MELT plugin form the GCC MELT branch,
read and run contrib/make-melt-source-tar.sh from the GCC MELT
branch. For instance, I am running it with something similar to

   /usr/src/Lang/gcc-melt-branch/contrib/make-melt-source-tar.sh \
       /usr/src/Lang/gcc-melt-branch \
       /tmp/gcc-melt-plugin  \
        $(gcc-4.6 -print-file-name=gengtype) \ 
        -v -r $(gcc-4.6 -print-file-name=gtype.state)

If all goes well, you get a /tmp/gcc-melt-plugin.tgz gnuzipped tar
archive for the MELT plugin. This is only needed to people making a
new MELT plugin source archive.

################ 

Comments about the MELT plugin (including its installation script) are
welcome by email to <basile@starynkevitch.net> [please mention MELT in
the subject line]

#######################################################################
NEWS for 0.8rc2 MELT plugin for gcc-4.6

July 07th, 2011: Release candidate 2 of melt-0.8rc1-plugin-for-gcc-4.6

New features:
 * support for pragmas for MELT

 * the MELT garbage collector is called less often, using the
   PLUGIN_GGC_START hook.

 * several new c-iterators and c-matchers.

 * added static analyzing pass gccframe, useful for melt-runtime.c

 * reject nested defun-s, you should use letrec or let...

 * the MELT plugin build-melt-plugin.sh has changed incompatibly
   (w.r.t. the previous 0.7 MELT plugin release).

 * debug_msg, assert_msg ... should work, thanks to MELT_HAVE_DEBUG
   preprocessor flag, even when melt.so is a plugin for a GCC without
   checks enabled.

 * melt-runtime.h has a melt_gcc_version integer variable and
   melt-runtime.c should be given MELT_GCC_VERSION preprocessor
   constant.

Many bugfixes
  (but some bugs remain)

#######################################################################
NEWS for 0.7 MELT plugin for gcc-4.6

April 29th, 2011: first release, melt-0.7-plugin-for-gcc-4.6
